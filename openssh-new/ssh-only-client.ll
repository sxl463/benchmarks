; ModuleID = 'ssh-only-client.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Options = type { i32, i32, i32, i32, i32, i8*, %struct.ForwardOptions, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32, i32, [32 x i8*], i32, [32 x i8*], i8*, i8*, i8*, i32, i32, [100 x i8*], [100 x i32], [100 x %struct.sshkey*], i32, [100 x i8*], [100 x i32], [100 x %struct.sshkey*], i32, i8*, i32, %struct.Forward*, i32, %struct.Forward*, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, [256 x i8*], i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, [32 x i8*], i32, i32, i32, i32, [32 x %struct.allowed_cname], i8*, i32, i32, i8*, i8*, i8*, i8*, i32, i8*, i8* }
%struct.ForwardOptions = type { i32, i32, i32 }
%struct.sshkey = type { i32, i32, %struct.rsa_st*, %struct.dsa_st*, i32, %struct.ec_key_st*, i8*, i8*, %struct.sshkey_cert* }
%struct.rsa_st = type { i32, i64, %struct.rsa_meth_st*, %struct.engine_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, i8*, %struct.bn_blinding_st*, %struct.bn_blinding_st* }
%struct.rsa_meth_st = type { i8*, i32 (i32, i8*, i8*, %struct.rsa_st*, i32)*, i32 (i32, i8*, i8*, %struct.rsa_st*, i32)*, i32 (i32, i8*, i8*, %struct.rsa_st*, i32)*, i32 (i32, i8*, i8*, %struct.rsa_st*, i32)*, i32 (%struct.bignum_st*, %struct.bignum_st*, %struct.rsa_st*, %struct.bignum_ctx*)*, i32 (%struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*)*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i32, i8*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i32, %struct.bignum_st*, %struct.bn_gencb_st*)* }
%struct.bignum_ctx = type opaque
%struct.bn_gencb_st = type { i32, i8*, %union.anon }
%union.anon = type { void (i32, i32, i8*)* }
%struct.engine_st = type opaque
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }
%struct.crypto_ex_data_st = type { %struct.stack_st_void*, i32 }
%struct.stack_st_void = type { %struct.stack_st }
%struct.stack_st = type { i32, i8**, i32, i32, i32 (i8*, i8*)* }
%struct.bn_mont_ctx_st = type { i32, %struct.bignum_st, %struct.bignum_st, %struct.bignum_st, [2 x i64], i32 }
%struct.bn_blinding_st = type opaque
%struct.dsa_st = type { i32, i64, i32, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_mont_ctx_st*, i32, %struct.crypto_ex_data_st, %struct.dsa_method*, %struct.engine_st* }
%struct.dsa_method = type { i8*, %struct.DSA_SIG_st* (i8*, i32, %struct.dsa_st*)*, i32 (%struct.dsa_st*, %struct.bignum_ctx*, %struct.bignum_st**, %struct.bignum_st**)*, i32 (i8*, i32, %struct.DSA_SIG_st*, %struct.dsa_st*)*, i32 (%struct.dsa_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*)*, i32 (%struct.dsa_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*)*, i32 (%struct.dsa_st*)*, i32 (%struct.dsa_st*)*, i32, i8*, i32 (%struct.dsa_st*, i32, i8*, i32, i32*, i64*, %struct.bn_gencb_st*)*, i32 (%struct.dsa_st*)* }
%struct.DSA_SIG_st = type { %struct.bignum_st*, %struct.bignum_st* }
%struct.ec_key_st = type opaque
%struct.sshkey_cert = type { %struct.sshbuf*, i32, i64, i8*, i32, i8**, i64, i64, %struct.sshbuf*, %struct.sshbuf*, %struct.sshkey* }
%struct.sshbuf = type { i8*, i8*, i64, i64, i64, i64, i32, i32, i32, %struct.sshbuf* }
%struct.Forward = type { i8*, i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.allowed_cname = type { i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.ssh = type { %struct.session_state*, %struct.kex*, i8*, i32, i8*, i32, [255 x i32 (i32, i32, i8*)*], i32, i32, %struct.anon, %struct.anon.1, i8* }
%struct.session_state = type opaque
%struct.kex = type { i8*, i64, [2 x %struct.newkeys*], i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, %struct.sshbuf*, %struct.sshbuf*, i32, i32, i32, i32, i8*, i8*, i8*, i32 (%struct.sshkey*, %struct.ssh*)*, %struct.sshkey* (i32, i32, %struct.ssh*)*, %struct.sshkey* (i32, i32, %struct.ssh*)*, i32 (%struct.sshkey*, i32, %struct.ssh*)*, i32 (%struct.sshkey*, %struct.sshkey*, i8**, i64*, i8*, i64, i8*, i32)*, [9 x i32 (%struct.ssh*)*], %struct.dh_st*, i32, i32, i32, %struct.ec_key_st*, %struct.ec_group_st*, [32 x i8], [32 x i8] }
%struct.newkeys = type { %struct.sshenc, %struct.sshmac, %struct.sshcomp }
%struct.sshenc = type { i8*, %struct.sshcipher*, i32, i32, i32, i32, i8*, i8* }
%struct.sshcipher = type opaque
%struct.sshmac = type { i8*, i32, i32, i8*, i32, i32, i32, %struct.ssh_hmac_ctx*, %struct.umac_ctx* }
%struct.ssh_hmac_ctx = type opaque
%struct.umac_ctx = type opaque
%struct.sshcomp = type { i32, i32, i8* }
%struct.dh_st = type { i32, i32, %struct.bignum_st*, %struct.bignum_st*, i64, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, i8*, i32, %struct.bignum_st*, i32, %struct.crypto_ex_data_st, %struct.dh_method*, %struct.engine_st* }
%struct.dh_method = type { i8*, i32 (%struct.dh_st*)*, i32 (i8*, %struct.bignum_st*, %struct.dh_st*)*, i32 (%struct.dh_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_ctx*, %struct.bn_mont_ctx_st*)*, i32 (%struct.dh_st*)*, i32 (%struct.dh_st*)*, i32, i8*, i32 (%struct.dh_st*, i32, i32, %struct.bn_gencb_st*)* }
%struct.ec_group_st = type opaque
%struct.anon = type { %struct.key_entry*, %struct.key_entry** }
%struct.key_entry = type { %struct.anon.0, %struct.sshkey* }
%struct.anon.0 = type { %struct.key_entry*, %struct.key_entry** }
%struct.anon.1 = type { %struct.key_entry*, %struct.key_entry** }
%struct.sockaddr_storage = type { i16, i64, [112 x i8] }
%struct.Sensitive = type { %struct.sshkey**, i32, i32 }
%struct.global_confirms = type { %struct.global_confirm*, %struct.global_confirm** }
%struct.global_confirm = type { %struct.anon.0.29, void (i32, i32, i8*)*, i8*, i32 }
%struct.anon.0.29 = type { %struct.global_confirm*, %struct.global_confirm** }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.cauthmethod = type { i8*, i32 (%struct.cauthctxt*)*, void (%struct.cauthctxt*)*, i32*, i32* }
%struct.cauthctxt = type { i8*, i8*, i8*, i8*, %struct.cauthmethod*, i32, i8*, i32, %struct.idlist, i32, %struct.Sensitive*, i8*, i8*, i8*, i32, i8* }
%struct.idlist = type { %struct.identity*, %struct.identity** }
%struct.identity = type { %struct.anon.2.172, i32, %struct.sshkey*, i8*, i32, i32, i32 }
%struct.anon.2.172 = type { %struct.identity*, %struct.identity** }
%struct.Channel = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sshbuf, %struct.sshbuf, %struct.sshbuf, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, void (i32, i32, i8*)*, i8*, void (i32, i8*)*, i32, %struct.channel_confirms, i32 (%struct.Channel*, i8*, i32)*, i8* (%struct.Channel*, i8**, i32*)*, i8*, void (i32, i8*)*, i32, %struct.channel_connect, i32 (%struct.Channel*)*, i8*, i32, i32 }
%struct.channel_confirms = type { %struct.channel_confirm*, %struct.channel_confirm** }
%struct.channel_confirm = type { %struct.anon.2, void (i32, %struct.Channel*, i8*)*, void (%struct.Channel*, i8*)*, i8* }
%struct.anon.2 = type { %struct.channel_confirm*, %struct.channel_confirm** }
%struct.channel_connect = type { i8*, i32, %struct.addrinfo*, %struct.addrinfo* }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.anon.1.214 = type { i32, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.ssh_digest_ctx = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.3 }
%union.anon.3 = type { [4 x i32] }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.servent = type { i8*, i8**, i32, i8* }
%struct.fwdarg = type { i8*, i32 }
%struct._ssh_compat_glob_t = type { i32, i32, i32, i32, i8**, %struct.stat**, i32 (i8*, i32)*, void (i8*)*, %struct.dirent* (i8*)*, i8* (i8*)*, i32 (i8*, %struct.stat*)*, i32 (i8*, %struct.stat*)* }
%struct.dirent = type opaque
%struct.multistate = type { i8*, i32 }
%struct.anon.28 = type { i8*, i32 }
%union.anon.0 = type { i32 }
%union.anon.1 = type { i32 }
%union.anon.2 = type { i32 }
%struct.channel_reply_ctx = type { i8*, i32, i32 }
%struct.Channel.80 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, %struct.sshbuf, %struct.sshbuf, %struct.sshbuf, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, void (i32, i32, i8*)*, i8*, void (i32, i8*)*, i32, %struct.channel_confirms.76, i32 (%struct.Channel.80*, i8*, i32)*, i8* (%struct.Channel.80*, i8**, i32*)*, i8*, void (i32, i8*)*, i32, %struct.channel_connect, i32 (%struct.Channel.80*)*, i8*, i32, i32 }
%struct.channel_confirms.76 = type { %struct.channel_confirm.75*, %struct.channel_confirm.75** }
%struct.channel_confirm.75 = type { %struct.anon.74, {}*, void (%struct.Channel.80*, i8*)*, i8* }
%struct.anon.74 = type { %struct.channel_confirm.75*, %struct.channel_confirm.75** }
%struct.escape_filter_ctx = type { i32, i32 }
%struct.fd_set = type { [16 x i64] }
%struct.ssh.68 = type { %struct.session_state*, %struct.kex.64*, i8*, i32, i8*, i32, [255 x i32 (i32, i32, i8*)*], i32, i32, %struct.anon.1, %struct.anon, i8* }
%struct.kex.64 = type { i8*, i64, [2 x %struct.newkeys*], i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, %struct.sshbuf*, %struct.sshbuf*, i32, i32, i32, i32, i8*, i8*, i8*, i32 (%struct.sshkey*, %struct.ssh.68*)*, %struct.sshkey* (i32, i32, %struct.ssh.68*)*, %struct.sshkey* (i32, i32, %struct.ssh.68*)*, i32 (%struct.sshkey*, i32, %struct.ssh.68*)*, i32 (%struct.sshkey*, %struct.sshkey*, i8**, i64*, i8*, i64, i8*, i32)*, [9 x {}*], %struct.dh_st*, i32, i32, i32, %struct.ec_key_st*, %struct.ec_group_st*, [32 x i8], [32 x i8] }
%struct.hostkey_foreach_line = type { i8*, i64, i32, i32, i8*, i32, i8*, i8*, i32, %struct.sshkey*, i8* }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.escape_help_text = type { i8*, i8*, i32 }
%struct.hostkeys_update_ctx = type { i8*, i8*, %struct.sshkey**, i32*, i64, i64, %struct.sshkey**, i64 }
%union.anon.3.125 = type { i32 }
%struct.hostkeys = type opaque
%struct.hostkey_entry = type { i8*, i8*, i64, %struct.sshkey*, i32 }
%union.__CONST_SOCKADDR_ARG = type { %struct.sockaddr* }
%struct.ssh_identitylist = type { i64, %struct.sshkey**, i8** }
%union.anon.3.180 = type { i32 }
%union.anon.4.181 = type { i32 }
%union.anon.5 = type { i32 }
%struct.sockaddr_un = type { i16, [108 x i8] }
%struct.pollfd = type { i32, i16, i16 }
%struct.mux_master_state = type { i32 }
%struct.mux_session_confirm_ctx = type { i32, i32, i32, i32, %struct.sshbuf, i8*, %struct.termios, i8**, i32 }
%struct.mux_channel_confirm_ctx = type { i32, i32, i32 }
%struct.mux_stdio_confirm_ctx = type { i32 }

@debug_flag = global i32 0, align 4
@tty_flag = global i32 0, align 4
@no_shell_flag = global i32 0, align 4
@stdin_null_flag = global i32 0, align 4
@need_controlpersist_detach = global i32 0, align 4
@fork_after_authentication_flag = global i32 0, align 4
@config = global i8* null, align 8
@subsystem_flag = global i32 0, align 4
@__progname = external global i8*
@saved_av = internal global i8** null, align 8
@original_real_uid = common global i32 0, align 4
@original_effective_uid = common global i32 0, align 4
@.str = private unnamed_addr constant [22 x i8] c"PRIV_END: seteuid: %s\00", align 1
@.str1 = private unnamed_addr constant [25 x i8] c"setrlimit failed: %.100s\00", align 1
@.str2 = private unnamed_addr constant [27 x i8] c"No user exists for uid %lu\00", align 1
@options = common global %struct.Options zeroinitializer, align 8
@host = common global i8* null, align 8
@.str3 = private unnamed_addr constant [67 x i8] c"1246ab:c:e:fgi:kl:m:no:p:qstvxACD:E:F:GI:J:KL:MNO:PQ:R:S:TVw:W:XYy\00", align 1
@BSDoptarg = external global i8*
@.str4 = private unnamed_addr constant [44 x i8] c"Cannot specify multiplexing command with -W\00", align 1
@.str5 = private unnamed_addr constant [39 x i8] c"Multiplexing command already specified\00", align 1
@.str6 = private unnamed_addr constant [6 x i8] c"check\00", align 1
@.str7 = private unnamed_addr constant [8 x i8] c"forward\00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str9 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str10 = private unnamed_addr constant [7 x i8] c"cancel\00", align 1
@.str11 = private unnamed_addr constant [6 x i8] c"proxy\00", align 1
@.str12 = private unnamed_addr constant [27 x i8] c"Invalid multiplex command.\00", align 1
@.str13 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str14 = private unnamed_addr constant [12 x i8] c"cipher-auth\00", align 1
@.str15 = private unnamed_addr constant [4 x i8] c"mac\00", align 1
@.str16 = private unnamed_addr constant [4 x i8] c"kex\00", align 1
@.str17 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str18 = private unnamed_addr constant [9 x i8] c"key-cert\00", align 1
@.str19 = private unnamed_addr constant [10 x i8] c"key-plain\00", align 1
@.str20 = private unnamed_addr constant [17 x i8] c"protocol-version\00", align 1
@.str21 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str22 = private unnamed_addr constant [23 x i8] c"Unsupported query \22%s\22\00", align 1
@.str23 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@stderr = external global %struct._IO_FILE*
@.str24 = private unnamed_addr constant [47 x i8] c"Warning: Identity file %s not accessible: %s.\0A\00", align 1
@.str25 = private unnamed_addr constant [34 x i8] c"Only a single -J option permitted\00", align 1
@.str26 = private unnamed_addr constant [36 x i8] c"Cannot specify -J with ProxyCommand\00", align 1
@.str27 = private unnamed_addr constant [20 x i8] c"Invalid -J argument\00", align 1
@.str28 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str29 = private unnamed_addr constant [8 x i8] c"%s, %s\0A\00", align 1
@.str30 = private unnamed_addr constant [14 x i8] c"OpenSSH_7.4p1\00", align 1
@.str31 = private unnamed_addr constant [21 x i8] c"Bad tun device '%s'\0A\00", align 1
@.str32 = private unnamed_addr constant [32 x i8] c"stdio forward already specified\00", align 1
@.str33 = private unnamed_addr constant [37 x i8] c"Cannot specify stdio forward with -O\00", align 1
@.str34 = private unnamed_addr constant [41 x i8] c"Bad stdio forwarding specification '%s'\0A\00", align 1
@.str35 = private unnamed_addr constant [28 x i8] c"Bad escape character '%s'.\0A\00", align 1
@.str36 = private unnamed_addr constant [26 x i8] c"Unknown cipher type '%s'\0A\00", align 1
@.str37 = private unnamed_addr constant [9 x i8] c"3des-cbc\00", align 1
@.str38 = private unnamed_addr constant [13 x i8] c"blowfish-cbc\00", align 1
@.str39 = private unnamed_addr constant [142 x i8] c"chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\00", align 1
@.str40 = private unnamed_addr constant [23 x i8] c"Unknown mac type '%s'\0A\00", align 1
@.str41 = private unnamed_addr constant [15 x i8] c"Bad port '%s'\0A\00", align 1
@.str42 = private unnamed_addr constant [41 x i8] c"Bad local forwarding specification '%s'\0A\00", align 1
@.str43 = private unnamed_addr constant [42 x i8] c"Bad remote forwarding specification '%s'\0A\00", align 1
@.str44 = private unnamed_addr constant [43 x i8] c"Bad dynamic forwarding specification '%s'\0A\00", align 1
@.str45 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str46 = private unnamed_addr constant [13 x i8] c"command-line\00", align 1
@BSDoptind = external global i32
@BSDoptreset = external global i32
@command = common global %struct.sshbuf zeroinitializer, align 8
@.str47 = private unnamed_addr constant [41 x i8] c"You must specify a subsystem to invoke.\0A\00", align 1
@.str48 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str49 = private unnamed_addr constant [58 x i8] c"Cannot fork into background without a command to execute.\00", align 1
@.str50 = private unnamed_addr constant [29 x i8] c"Can't specify both -y and -E\00", align 1
@.str51 = private unnamed_addr constant [7 x i8] c"%s, %s\00", align 1
@.str52 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str53 = private unnamed_addr constant [57 x i8] c"Re-reading configuration after hostname canonicalisation\00", align 1
@.str54 = private unnamed_addr constant [45 x i8] c"inconsistent options: ProxyCommand+ProxyJump\00", align 1
@.str55 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str56 = private unnamed_addr constant [40 x i8] c"ssh%s%s%s%s%s%s%s%s%s%.*s -W %%h:%%p %s\00", align 1
@.str57 = private unnamed_addr constant [5 x i8] c" -l \00", align 1
@.str58 = private unnamed_addr constant [5 x i8] c" -p \00", align 1
@.str59 = private unnamed_addr constant [5 x i8] c" -J \00", align 1
@.str60 = private unnamed_addr constant [5 x i8] c" -F \00", align 1
@.str61 = private unnamed_addr constant [3 x i8] c" -\00", align 1
@.str62 = private unnamed_addr constant [4 x i8] c"vvv\00", align 1
@.str63 = private unnamed_addr constant [49 x i8] c"Setting implicit ProxyCommand from ProxyJump: %s\00", align 1
@.str64 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str65 = private unnamed_addr constant [51 x i8] c"ProxyCommand=- and ProxyUseFDPass are incompatible\00", align 1
@.str66 = private unnamed_addr constant [66 x i8] c"UpdateHostKeys=ask is incompatible with ControlPersist; disabling\00", align 1
@.str67 = private unnamed_addr constant [37 x i8] c"Invalid number of ConnectionAttempts\00", align 1
@stdin = external global %struct._IO_FILE*
@.str68 = private unnamed_addr constant [71 x i8] c"Pseudo-terminal will not be allocated because stdin is not a terminal.\00", align 1
@.str69 = private unnamed_addr constant [16 x i8] c"gethostname: %s\00", align 1
@.str70 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str71 = private unnamed_addr constant [22 x i8] c"%s: mux digest failed\00", align 1
@__func__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str72 = private unnamed_addr constant [27 x i8] c"expanding LocalCommand: %s\00", align 1
@.str73 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str74 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str75 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str76 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str77 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str78 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str79 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str80 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str81 = private unnamed_addr constant [26 x i8] c"expanded LocalCommand: %s\00", align 1
@.str82 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str83 = private unnamed_addr constant [42 x i8] c"No ControlPath specified for \22-O\22 command\00", align 1
@active_state = external global %struct.ssh*
@.str84 = private unnamed_addr constant [23 x i8] c"resolving \22%s\22 port %d\00", align 1
@hostaddr = common global %struct.sockaddr_storage zeroinitializer, align 8
@.str85 = private unnamed_addr constant [36 x i8] c"timeout: %d ms remain after connect\00", align 1
@sensitive_data = common global %struct.Sensitive zeroinitializer, align 8
@.str86 = private unnamed_addr constant [24 x i8] c"PRIV_START: seteuid: %s\00", align 1
@.str87 = private unnamed_addr constant [34 x i8] c"/usr/local/etc/ssh_host_ecdsa_key\00", align 1
@.str88 = private unnamed_addr constant [36 x i8] c"/usr/local/etc/ssh_host_ed25519_key\00", align 1
@.str89 = private unnamed_addr constant [32 x i8] c"/usr/local/etc/ssh_host_rsa_key\00", align 1
@.str90 = private unnamed_addr constant [32 x i8] c"/usr/local/etc/ssh_host_dsa_key\00", align 1
@.str91 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str92 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str93 = private unnamed_addr constant [5 x i8] c".ssh\00", align 1
@.str94 = private unnamed_addr constant [37 x i8] c"Could not create directory '%.200s'.\00", align 1
@.str95 = private unnamed_addr constant [14 x i8] c"SSH_AUTH_SOCK\00", align 1
@.str96 = private unnamed_addr constant [31 x i8] c"Authenticated to %s ([%s]:%d).\00", align 1
@.str97 = private unnamed_addr constant [33 x i8] c"Authenticated to %s (via proxy).\00", align 1
@.str98 = private unnamed_addr constant [17 x i8] c"clear hostkey %d\00", align 1
@compat20 = external global i32
@shen_start = common global i64 0, align 8
@shen_end = common global i64 0, align 8
@cpu_time_used = common global double 0.000000e+00, align 8
@ostdin_null_flag = common global i32 0, align 4
@ono_shell_flag = common global i32 0, align 4
@otty_flag = common global i32 0, align 4
@orequest_tty = common global i32 0, align 4
@.str99 = private unnamed_addr constant [44 x i8] c"load_public_identity_files: getpwuid failed\00", align 1
@.str100 = private unnamed_addr constant [44 x i8] c"load_public_identity_files: gethostname: %s\00", align 1
@.str101 = private unnamed_addr constant [25 x i8] c"identity file %s type %d\00", align 1
@.str102 = private unnamed_addr constant [8 x i8] c"%s-cert\00", align 1
@.str103 = private unnamed_addr constant [40 x i8] c"%s: key %s type %s is not a certificate\00", align 1
@__func__.load_public_identity_files = private unnamed_addr constant [27 x i8] c"load_public_identity_files\00", align 1
@.str104 = private unnamed_addr constant [26 x i8] c"%s: too many certificates\00", align 1
@.str105 = private unnamed_addr constant [28 x i8] c"certificate file %s type %d\00", align 1
@datafellows = external global i32
@.str106 = private unnamed_addr constant [40 x i8] c"Requesting no-more-sessions@openssh.com\00", align 1
@.str107 = private unnamed_addr constant [29 x i8] c"no-more-sessions@openssh.com\00", align 1
@.str108 = private unnamed_addr constant [67 x i8] c"deferring postauth fork until remote forward confirmation received\00", align 1
@.str109 = private unnamed_addr constant [22 x i8] c"forking to background\00", align 1
@.str110 = private unnamed_addr constant [24 x i8] c"daemon() failed: %.200s\00", align 1
@.str111 = private unnamed_addr constant [33 x i8] c"%s: backgrounding master process\00", align 1
@__func__.control_persist_detach = private unnamed_addr constant [23 x i8] c"control_persist_detach\00", align 1
@.str112 = private unnamed_addr constant [13 x i8] c"%s: fork: %s\00", align 1
@.str113 = private unnamed_addr constant [30 x i8] c"%s: background process is %ld\00", align 1
@.str114 = private unnamed_addr constant [40 x i8] c"Failed to connect to new control master\00", align 1
@.str115 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str116 = private unnamed_addr constant [26 x i8] c"%s: open(\22/dev/null\22): %s\00", align 1
@.str117 = private unnamed_addr constant [13 x i8] c"%s: dup2: %s\00", align 1
@.str118 = private unnamed_addr constant [9 x i8] c"%s [mux]\00", align 1
@.str119 = private unnamed_addr constant [24 x i8] c"dup() in/out/err failed\00", align 1
@.str120 = private unnamed_addr constant [8 x i8] c"session\00", align 1
@.str121 = private unnamed_addr constant [15 x i8] c"client-session\00", align 1
@.str122 = private unnamed_addr constant [35 x i8] c"ssh_session2_open: channel_new: %d\00", align 1
@.str123 = private unnamed_addr constant [8 x i8] c"DISPLAY\00", align 1
@.str124 = private unnamed_addr constant [45 x i8] c"X11 forwarding requested but DISPLAY not set\00", align 1
@.str125 = private unnamed_addr constant [56 x i8] c"Requesting X11 forwarding with authentication spoofing.\00", align 1
@.str126 = private unnamed_addr constant [15 x i8] c"X11 forwarding\00", align 1
@.str127 = private unnamed_addr constant [44 x i8] c"Requesting authentication agent forwarding.\00", align 1
@.str128 = private unnamed_addr constant [27 x i8] c"auth-agent-req@openssh.com\00", align 1
@.str129 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@environ = external global i8**
@.str130 = private unnamed_addr constant [34 x i8] c"ssh_get_authentication_socket: %s\00", align 1
@.str131 = private unnamed_addr constant [69 x i8] c"Local connections to %.200s:%d forwarded to remote address %.200s:%d\00", align 1
@.str132 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str133 = private unnamed_addr constant [10 x i8] c"LOCALHOST\00", align 1
@.str134 = private unnamed_addr constant [36 x i8] c"Could not request local forwarding.\00", align 1
@.str135 = private unnamed_addr constant [71 x i8] c"Remote connections from %.200s:%d forwarded to local address %.200s:%d\00", align 1
@.str136 = private unnamed_addr constant [37 x i8] c"Could not request remote forwarding.\00", align 1
@.str137 = private unnamed_addr constant [46 x i8] c"Warning: Could not request remote forwarding.\00", align 1
@.str138 = private unnamed_addr constant [37 x i8] c"Could not request tunnel forwarding.\00", align 1
@.str139 = private unnamed_addr constant [52 x i8] c"remote forward %s for: listen %s%s%d, connect %s:%d\00", align 1
@.str140 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str141 = private unnamed_addr constant [8 x i8] c"failure\00", align 1
@.str142 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str143 = private unnamed_addr constant [46 x i8] c"Allocated port %u for remote forward to %s:%d\00", align 1
@.str144 = private unnamed_addr constant [56 x i8] c"Error: remote port forwarding failed for listen path %s\00", align 1
@.str145 = private unnamed_addr constant [56 x i8] c"Error: remote port forwarding failed for listen port %d\00", align 1
@.str146 = private unnamed_addr constant [58 x i8] c"Warning: remote port forwarding failed for listen path %s\00", align 1
@.str147 = private unnamed_addr constant [58 x i8] c"Warning: remote port forwarding failed for listen port %d\00", align 1
@remote_forward_confirms_received = internal global i32 0, align 4
@.str148 = private unnamed_addr constant [41 x i8] c"All remote forwarding requests processed\00", align 1
@.str149 = private unnamed_addr constant [36 x i8] c"stdio forwarding require Protocol 2\00", align 1
@.str150 = private unnamed_addr constant [10 x i8] c"%s: %s:%d\00", align 1
@__func__.ssh_init_stdio_forwarding = private unnamed_addr constant [26 x i8] c"ssh_init_stdio_forwarding\00", align 1
@.str151 = private unnamed_addr constant [47 x i8] c"channel_connect_stdio_fwd: dup() in/out failed\00", align 1
@.str152 = private unnamed_addr constant [37 x i8] c"%s: channel_connect_stdio_fwd failed\00", align 1
@.str153 = private unnamed_addr constant [24 x i8] c"stdio forwarding failed\00", align 1
@.str154 = private unnamed_addr constant [23 x i8] c"stdio forwarding: done\00", align 1
@.str155 = private unnamed_addr constant [36 x i8] c"Requesting compression at level %d.\00", align 1
@.str156 = private unnamed_addr constant [59 x i8] c"Compression level must be from 1 (fast) to 9 (slow, best).\00", align 1
@.str157 = private unnamed_addr constant [42 x i8] c"Warning: Remote host refused compression.\00", align 1
@.str158 = private unnamed_addr constant [49 x i8] c"Protocol error waiting for compression response.\00", align 1
@.str159 = private unnamed_addr constant [16 x i8] c"Requesting pty.\00", align 1
@.str160 = private unnamed_addr constant [65 x i8] c"Warning: Remote host failed or refused to allocate a pseudo tty.\00", align 1
@.str161 = private unnamed_addr constant [49 x i8] c"Protocol error waiting for pty request response.\00", align 1
@.str162 = private unnamed_addr constant [44 x i8] c"Warning: Remote host denied X11 forwarding.\00", align 1
@.str163 = private unnamed_addr constant [42 x i8] c"Protocol error waiting for X11 forwarding\00", align 1
@.str164 = private unnamed_addr constant [53 x i8] c"Packet integrity error (%d bytes remaining) at %s:%d\00", align 1
@.str165 = private unnamed_addr constant [6 x i8] c"ssh.c\00", align 1
@.str166 = private unnamed_addr constant [24 x i8] c"Packet integrity error.\00", align 1
@.str167 = private unnamed_addr constant [61 x i8] c"Warning: Remote host denied authentication agent forwarding.\00", align 1
@.str168 = private unnamed_addr constant [22 x i8] c"Sending command: %.*s\00", align 1
@.str169 = private unnamed_addr constant [18 x i8] c"Requesting shell.\00", align 1
@.str170 = private unnamed_addr constant [26 x i8] c"%s: check \22%s\22 CNAME \22%s\22\00", align 1
@__func__.check_follow_cname = private unnamed_addr constant [19 x i8] c"check_follow_cname\00", align 1
@.str171 = private unnamed_addr constant [48 x i8] c"Canonicalized DNS aliased hostname \22%s\22 => \22%s\22\00", align 1
@.str172 = private unnamed_addr constant [42 x i8] c"%s: Could not resolve hostname %.100s: %s\00", align 1
@.str173 = private unnamed_addr constant [44 x i8] c"%s: host \22%s\22 cname \22%s\22 too long (max %lu)\00", align 1
@__func__.resolve_host = private unnamed_addr constant [13 x i8] c"resolve_host\00", align 1
@.str174 = private unnamed_addr constant [31 x i8] c"%s: hostname %.100s is address\00", align 1
@__func__.resolve_canonicalize = private unnamed_addr constant [21 x i8] c"resolve_canonicalize\00", align 1
@.str175 = private unnamed_addr constant [39 x i8] c"%s: canonicalised address \22%s\22 => \22%s\22\00", align 1
@.str176 = private unnamed_addr constant [28 x i8] c"%s: name is fully qualified\00", align 1
@.str177 = private unnamed_addr constant [51 x i8] c"%s: not canonicalizing hostname \22%s\22 (max dots %d)\00", align 1
@.str178 = private unnamed_addr constant [7 x i8] c"%s.%s.\00", align 1
@.str179 = private unnamed_addr constant [28 x i8] c"%s: attempting \22%s\22 => \22%s\22\00", align 1
@.str180 = private unnamed_addr constant [36 x i8] c"Canonicalized hostname \22%s\22 => \22%s\22\00", align 1
@.str181 = private unnamed_addr constant [32 x i8] c"%s: Could not resolve host \22%s\22\00", align 1
@.str182 = private unnamed_addr constant [36 x i8] c"%s: host %s not found in any suffix\00", align 1
@.str183 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str184 = private unnamed_addr constant [49 x i8] c"%s: could not resolve name %.100s as address: %s\00", align 1
@__func__.resolve_addr = private unnamed_addr constant [13 x i8] c"resolve_addr\00", align 1
@.str185 = private unnamed_addr constant [45 x i8] c"%s: getaddrinfo %.100s returned no addresses\00", align 1
@.str186 = private unnamed_addr constant [51 x i8] c"%s: getaddrinfo %.100s returned multiple addresses\00", align 1
@.str187 = private unnamed_addr constant [49 x i8] c"%s: Could not format address for name %.100s: %s\00", align 1
@.str188 = private unnamed_addr constant [43 x i8] c"%s: host \22%s\22 addr \22%s\22 too long (max %lu)\00", align 1
@.str189 = private unnamed_addr constant [43 x i8] c"Can't open user config file %.100s: %.100s\00", align 1
@.str190 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str191 = private unnamed_addr constant [12 x i8] c".ssh/config\00", align 1
@.str192 = private unnamed_addr constant [26 x i8] c"/usr/local/etc/ssh_config\00", align 1
@.str193 = private unnamed_addr constant [461 x i8] c"usage: ssh [-1246AaCfGgKkMNnqsTtVvXxYy] [-b bind_address] [-c cipher_spec]\0A           [-D [bind_address:]port] [-E log_file] [-e escape_char]\0A           [-F configfile] [-I pkcs11] [-i identity_file]\0A           [-J [user@]host[:port]] [-L address] [-l login_name] [-m mac_spec]\0A           [-O ctl_cmd] [-o option] [-p port] [-Q query_option] [-R address]\0A           [-S ctl_path] [-W host:port] [-w local_tun[:remote_tun]]\0A           [user@]hostname [command]\0A\00", align 1
@.str194 = private unnamed_addr constant [48 x i8] c"Privileged ports can only be forwarded by root.\00", align 1
@.str1195 = private unnamed_addr constant [46 x i8] c"Too many certificate files specified (max %d)\00", align 1
@.str2196 = private unnamed_addr constant [30 x i8] c"%s: ignoring duplicate key %s\00", align 1
@__func__.add_certificate_file = private unnamed_addr constant [21 x i8] c"add_certificate_file\00", align 1
@.str3197 = private unnamed_addr constant [43 x i8] c"Too many identity files specified (max %d)\00", align 1
@.str4198 = private unnamed_addr constant [13 x i8] c"%.100s%.100s\00", align 1
@__func__.add_identity_file = private unnamed_addr constant [18 x i8] c"add_identity_file\00", align 1
@default_ssh_port.port = internal global i32 0, align 4
@.str5199 = private unnamed_addr constant [4 x i8] c"ssh\00", align 1
@.str6200 = private unnamed_addr constant [4 x i8] c"tcp\00", align 1
@.str7201 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str8202 = private unnamed_addr constant [15 x i8] c"/usr/bin/xauth\00", align 1
@.str9203 = private unnamed_addr constant [3 x i8] c"~/\00", align 1
@.str10204 = private unnamed_addr constant [14 x i8] c".ssh/identity\00", align 1
@.str11205 = private unnamed_addr constant [12 x i8] c".ssh/id_rsa\00", align 1
@.str12206 = private unnamed_addr constant [12 x i8] c".ssh/id_dsa\00", align 1
@.str13207 = private unnamed_addr constant [14 x i8] c".ssh/id_ecdsa\00", align 1
@.str14208 = private unnamed_addr constant [16 x i8] c".ssh/id_ed25519\00", align 1
@.str15209 = private unnamed_addr constant [31 x i8] c"/usr/local/etc/ssh_known_hosts\00", align 1
@.str16210 = private unnamed_addr constant [32 x i8] c"/usr/local/etc/ssh_known_hosts2\00", align 1
@.str17211 = private unnamed_addr constant [19 x i8] c"~/.ssh/known_hosts\00", align 1
@.str18212 = private unnamed_addr constant [20 x i8] c"~/.ssh/known_hosts2\00", align 1
@.str19213 = private unnamed_addr constant [142 x i8] c"chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\00", align 1
@.str20214 = private unnamed_addr constant [214 x i8] c"umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\00", align 1
@.str21215 = private unnamed_addr constant [294 x i8] c"curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\00", align 1
@.str22216 = private unnamed_addr constant [291 x i8] c"ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\00", align 1
@.str23217 = private unnamed_addr constant [30 x i8] c"%s: kex_assemble_names failed\00", align 1
@__func__.fill_default_options = private unnamed_addr constant [21 x i8] c"fill_default_options\00", align 1
@.str24218 = private unnamed_addr constant [6 x i8] c"socks\00", align 1
@__func__.dump_client_config = private unnamed_addr constant [19 x i8] c"dump_client_config\00", align 1
@.str25219 = private unnamed_addr constant [21 x i8] c"connecttimeout none\0A\00", align 1
@.str26220 = private unnamed_addr constant [13 x i8] c"tunneldevice\00", align 1
@.str27221 = private unnamed_addr constant [5 x i8] c" any\00", align 1
@.str28222 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str29223 = private unnamed_addr constant [5 x i8] c":any\00", align 1
@.str30224 = private unnamed_addr constant [4 x i8] c":%d\00", align 1
@.str31225 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str32226 = private unnamed_addr constant [28 x i8] c"canonicalizePermittedcnames\00", align 1
@.str33227 = private unnamed_addr constant [7 x i8] c" %s:%s\00", align 1
@.str34228 = private unnamed_addr constant [11 x i8] c"Cipher %s\0A\00", align 1
@.str35229 = private unnamed_addr constant [17 x i8] c"escapechar none\0A\00", align 1
@.str36230 = private unnamed_addr constant [15 x i8] c"escapechar %s\0A\00", align 1
@.str37231 = private unnamed_addr constant [10 x i8] c"ipqos %s \00", align 1
@.str38232 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str39233 = private unnamed_addr constant [20 x i8] c"rekeylimit %llu %d\0A\00", align 1
@.str40234 = private unnamed_addr constant [25 x i8] c"streamlocalbindmask 0%o\0A\00", align 1
@.str41235 = private unnamed_addr constant [12 x i8] c"1234567890.\00", align 1
@.str42236 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str43237 = private unnamed_addr constant [30 x i8] c"proxyjump %s%s%s%s%s%s%s%s%s\0A\00", align 1
@.str44238 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str45239 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str46240 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str47241 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str48242 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str49243 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str50244 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str51245 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str52246 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str53247 = private unnamed_addr constant [13 x i8] c"forwardagent\00", align 1
@.str54248 = private unnamed_addr constant [11 x i8] c"forwardx11\00", align 1
@.str55249 = private unnamed_addr constant [18 x i8] c"forwardx11trusted\00", align 1
@.str56250 = private unnamed_addr constant [18 x i8] c"forwardx11timeout\00", align 1
@.str57251 = private unnamed_addr constant [21 x i8] c"exitonforwardfailure\00", align 1
@.str58252 = private unnamed_addr constant [14 x i8] c"xauthlocation\00", align 1
@.str59253 = private unnamed_addr constant [13 x i8] c"gatewayports\00", align 1
@.str60254 = private unnamed_addr constant [18 x i8] c"useprivilegedport\00", align 1
@.str61255 = private unnamed_addr constant [21 x i8] c"rhostsauthentication\00", align 1
@.str62256 = private unnamed_addr constant [23 x i8] c"passwordauthentication\00", align 1
@.str63257 = private unnamed_addr constant [29 x i8] c"kbdinteractiveauthentication\00", align 1
@.str64258 = private unnamed_addr constant [22 x i8] c"kbdinteractivedevices\00", align 1
@.str65259 = private unnamed_addr constant [18 x i8] c"rsaauthentication\00", align 1
@.str66260 = private unnamed_addr constant [21 x i8] c"pubkeyauthentication\00", align 1
@.str67261 = private unnamed_addr constant [18 x i8] c"dsaauthentication\00", align 1
@.str68262 = private unnamed_addr constant [24 x i8] c"rhostsrsaauthentication\00", align 1
@.str69263 = private unnamed_addr constant [24 x i8] c"hostbasedauthentication\00", align 1
@.str70264 = private unnamed_addr constant [32 x i8] c"challengeresponseauthentication\00", align 1
@.str71265 = private unnamed_addr constant [19 x i8] c"skeyauthentication\00", align 1
@.str72266 = private unnamed_addr constant [18 x i8] c"tisauthentication\00", align 1
@.str73267 = private unnamed_addr constant [23 x i8] c"kerberosauthentication\00", align 1
@.str74268 = private unnamed_addr constant [19 x i8] c"kerberostgtpassing\00", align 1
@.str75269 = private unnamed_addr constant [16 x i8] c"afstokenpassing\00", align 1
@.str76270 = private unnamed_addr constant [21 x i8] c"gssapiauthentication\00", align 1
@.str77271 = private unnamed_addr constant [26 x i8] c"gssapidelegatecredentials\00", align 1
@.str78272 = private unnamed_addr constant [14 x i8] c"fallbacktorsh\00", align 1
@.str79273 = private unnamed_addr constant [7 x i8] c"usersh\00", align 1
@.str80274 = private unnamed_addr constant [13 x i8] c"identityfile\00", align 1
@.str81275 = private unnamed_addr constant [14 x i8] c"identityfile2\00", align 1
@.str82276 = private unnamed_addr constant [15 x i8] c"identitiesonly\00", align 1
@.str83277 = private unnamed_addr constant [16 x i8] c"certificatefile\00", align 1
@.str84278 = private unnamed_addr constant [15 x i8] c"addkeystoagent\00", align 1
@.str85279 = private unnamed_addr constant [14 x i8] c"identityagent\00", align 1
@.str86280 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str87281 = private unnamed_addr constant [13 x i8] c"hostkeyalias\00", align 1
@.str88282 = private unnamed_addr constant [13 x i8] c"proxycommand\00", align 1
@.str89283 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str90284 = private unnamed_addr constant [7 x i8] c"cipher\00", align 1
@.str91285 = private unnamed_addr constant [8 x i8] c"ciphers\00", align 1
@.str92286 = private unnamed_addr constant [5 x i8] c"macs\00", align 1
@.str93287 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str94288 = private unnamed_addr constant [14 x i8] c"remoteforward\00", align 1
@.str95289 = private unnamed_addr constant [13 x i8] c"localforward\00", align 1
@.str96290 = private unnamed_addr constant [5 x i8] c"user\00", align 1
@.str97291 = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str98292 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str99293 = private unnamed_addr constant [11 x i8] c"escapechar\00", align 1
@.str100294 = private unnamed_addr constant [21 x i8] c"globalknownhostsfile\00", align 1
@.str101295 = private unnamed_addr constant [22 x i8] c"globalknownhostsfile2\00", align 1
@.str102296 = private unnamed_addr constant [19 x i8] c"userknownhostsfile\00", align 1
@.str103297 = private unnamed_addr constant [20 x i8] c"userknownhostsfile2\00", align 1
@.str104298 = private unnamed_addr constant [19 x i8] c"connectionattempts\00", align 1
@.str105299 = private unnamed_addr constant [10 x i8] c"batchmode\00", align 1
@.str106300 = private unnamed_addr constant [12 x i8] c"checkhostip\00", align 1
@.str107301 = private unnamed_addr constant [22 x i8] c"stricthostkeychecking\00", align 1
@.str108302 = private unnamed_addr constant [12 x i8] c"compression\00", align 1
@.str109303 = private unnamed_addr constant [17 x i8] c"compressionlevel\00", align 1
@.str110304 = private unnamed_addr constant [13 x i8] c"tcpkeepalive\00", align 1
@.str111305 = private unnamed_addr constant [10 x i8] c"keepalive\00", align 1
@.str112306 = private unnamed_addr constant [24 x i8] c"numberofpasswordprompts\00", align 1
@.str113307 = private unnamed_addr constant [9 x i8] c"loglevel\00", align 1
@.str114308 = private unnamed_addr constant [15 x i8] c"dynamicforward\00", align 1
@.str115309 = private unnamed_addr constant [25 x i8] c"preferredauthentications\00", align 1
@.str116310 = private unnamed_addr constant [18 x i8] c"hostkeyalgorithms\00", align 1
@.str117311 = private unnamed_addr constant [12 x i8] c"bindaddress\00", align 1
@.str118312 = private unnamed_addr constant [16 x i8] c"smartcarddevice\00", align 1
@.str119313 = private unnamed_addr constant [15 x i8] c"pkcs11provider\00", align 1
@.str120314 = private unnamed_addr constant [20 x i8] c"clearallforwardings\00", align 1
@.str121315 = private unnamed_addr constant [17 x i8] c"enablesshkeysign\00", align 1
@.str122316 = private unnamed_addr constant [17 x i8] c"verifyhostkeydns\00", align 1
@.str123317 = private unnamed_addr constant [33 x i8] c"nohostauthenticationforlocalhost\00", align 1
@.str124318 = private unnamed_addr constant [11 x i8] c"rekeylimit\00", align 1
@.str125319 = private unnamed_addr constant [15 x i8] c"connecttimeout\00", align 1
@.str126320 = private unnamed_addr constant [14 x i8] c"addressfamily\00", align 1
@.str127321 = private unnamed_addr constant [20 x i8] c"serveraliveinterval\00", align 1
@.str128322 = private unnamed_addr constant [20 x i8] c"serveralivecountmax\00", align 1
@.str129323 = private unnamed_addr constant [8 x i8] c"sendenv\00", align 1
@.str130324 = private unnamed_addr constant [12 x i8] c"controlpath\00", align 1
@.str131325 = private unnamed_addr constant [14 x i8] c"controlmaster\00", align 1
@.str132326 = private unnamed_addr constant [15 x i8] c"controlpersist\00", align 1
@.str133327 = private unnamed_addr constant [15 x i8] c"hashknownhosts\00", align 1
@.str134328 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str135329 = private unnamed_addr constant [7 x i8] c"tunnel\00", align 1
@.str136330 = private unnamed_addr constant [13 x i8] c"localcommand\00", align 1
@.str137331 = private unnamed_addr constant [19 x i8] c"permitlocalcommand\00", align 1
@.str138332 = private unnamed_addr constant [14 x i8] c"visualhostkey\00", align 1
@.str139333 = private unnamed_addr constant [11 x i8] c"useroaming\00", align 1
@.str140334 = private unnamed_addr constant [14 x i8] c"kexalgorithms\00", align 1
@.str141335 = private unnamed_addr constant [6 x i8] c"ipqos\00", align 1
@.str142336 = private unnamed_addr constant [11 x i8] c"requesttty\00", align 1
@.str143337 = private unnamed_addr constant [15 x i8] c"proxyusefdpass\00", align 1
@.str144338 = private unnamed_addr constant [17 x i8] c"canonicaldomains\00", align 1
@.str145339 = private unnamed_addr constant [26 x i8] c"canonicalizefallbacklocal\00", align 1
@.str146340 = private unnamed_addr constant [21 x i8] c"canonicalizehostname\00", align 1
@.str147341 = private unnamed_addr constant [20 x i8] c"canonicalizemaxdots\00", align 1
@.str148342 = private unnamed_addr constant [28 x i8] c"canonicalizepermittedcnames\00", align 1
@.str149343 = private unnamed_addr constant [20 x i8] c"streamlocalbindmask\00", align 1
@.str150344 = private unnamed_addr constant [22 x i8] c"streamlocalbindunlink\00", align 1
@.str151345 = private unnamed_addr constant [16 x i8] c"revokedhostkeys\00", align 1
@.str152346 = private unnamed_addr constant [16 x i8] c"fingerprinthash\00", align 1
@.str153347 = private unnamed_addr constant [15 x i8] c"updatehostkeys\00", align 1
@.str154348 = private unnamed_addr constant [18 x i8] c"hostbasedkeytypes\00", align 1
@.str155349 = private unnamed_addr constant [23 x i8] c"pubkeyacceptedkeytypes\00", align 1
@.str156350 = private unnamed_addr constant [14 x i8] c"ignoreunknown\00", align 1
@.str157351 = private unnamed_addr constant [10 x i8] c"proxyjump\00", align 1
@keywords = internal global <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str53247, i32 0, i32 0), i32 4, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str54248, i32 0, i32 0), i32 5, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str55249, i32 0, i32 0), i32 6, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str56250, i32 0, i32 0), i32 7, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([21 x i8]* @.str57251, i32 0, i32 0), i32 9, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str58252, i32 0, i32 0), i32 13, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str59253, i32 0, i32 0), i32 8, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str60254, i32 0, i32 0), i32 37, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([21 x i8]* @.str61255, i32 0, i32 0), i32 93, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([23 x i8]* @.str62256, i32 0, i32 0), i32 10, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([29 x i8]* @.str63257, i32 0, i32 0), i32 43, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([22 x i8]* @.str64258, i32 0, i32 0), i32 44, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str65259, i32 0, i32 0), i32 11, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([21 x i8]* @.str66260, i32 0, i32 0), i32 42, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str67261, i32 0, i32 0), i32 42, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([24 x i8]* @.str68262, i32 0, i32 0), i32 25, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([24 x i8]* @.str69263, i32 0, i32 0), i32 48, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([32 x i8]* @.str70264, i32 0, i32 0), i32 12, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str71265, i32 0, i32 0), i32 12, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str72266, i32 0, i32 0), i32 12, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([23 x i8]* @.str73267, i32 0, i32 0), i32 94, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str74268, i32 0, i32 0), i32 94, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str75269, i32 0, i32 0), i32 94, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([21 x i8]* @.str76270, i32 0, i32 0), i32 94, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([26 x i8]* @.str77271, i32 0, i32 0), i32 94, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str78272, i32 0, i32 0), i32 93, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str79273, i32 0, i32 0), i32 93, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str80274, i32 0, i32 0), i32 14, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str81275, i32 0, i32 0), i32 14, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str82276, i32 0, i32 0), i32 63, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str83277, i32 0, i32 0), i32 20, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str84278, i32 0, i32 0), i32 21, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str85279, i32 0, i32 0), i32 22, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str86280, i32 0, i32 0), i32 15, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str87281, i32 0, i32 0), i32 45, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str88282, i32 0, i32 0), i32 26, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str89283, i32 0, i32 0), i32 16, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str90284, i32 0, i32 0), i32 17, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str91285, i32 0, i32 0), i32 39, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str92286, i32 0, i32 0), i32 41, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str93287, i32 0, i32 0), i32 40, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str94288, i32 0, i32 0), i32 18, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str95289, i32 0, i32 0), i32 19, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str96290, i32 0, i32 0), i32 23, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str97291, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str98292, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str99293, i32 0, i32 0), i32 24, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([21 x i8]* @.str100294, i32 0, i32 0), i32 27, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([22 x i8]* @.str101295, i32 0, i32 0), i32 93, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str102296, i32 0, i32 0), i32 28, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str103297, i32 0, i32 0), i32 93, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str104298, i32 0, i32 0), i32 29, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str105299, i32 0, i32 0), i32 30, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str106300, i32 0, i32 0), i32 31, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([22 x i8]* @.str107301, i32 0, i32 0), i32 32, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str108302, i32 0, i32 0), i32 33, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str109303, i32 0, i32 0), i32 34, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str110304, i32 0, i32 0), i32 35, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str111305, i32 0, i32 0), i32 35, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([24 x i8]* @.str112306, i32 0, i32 0), i32 36, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str113307, i32 0, i32 0), i32 38, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str114308, i32 0, i32 0), i32 46, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([25 x i8]* @.str115309, i32 0, i32 0), i32 47, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str116310, i32 0, i32 0), i32 49, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str117311, i32 0, i32 0), i32 50, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str118312, i32 0, i32 0), i32 51, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str119313, i32 0, i32 0), i32 51, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str120314, i32 0, i32 0), i32 52, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str121315, i32 0, i32 0), i32 54, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str122316, i32 0, i32 0), i32 56, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([33 x i8]* @.str123317, i32 0, i32 0), i32 53, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str124318, i32 0, i32 0), i32 55, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str125319, i32 0, i32 0), i32 57, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str126320, i32 0, i32 0), i32 58, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str127321, i32 0, i32 0), i32 61, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str128322, i32 0, i32 0), i32 62, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str129323, i32 0, i32 0), i32 64, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str130324, i32 0, i32 0), i32 65, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str131325, i32 0, i32 0), i32 66, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str132326, i32 0, i32 0), i32 67, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str133327, i32 0, i32 0), i32 68, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str134328, i32 0, i32 0), i32 3, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str135329, i32 0, i32 0), i32 69, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str26220, i32 0, i32 0), i32 70, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str136330, i32 0, i32 0), i32 71, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str137331, i32 0, i32 0), i32 72, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str138332, i32 0, i32 0), i32 73, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str139333, i32 0, i32 0), i32 93, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str140334, i32 0, i32 0), i32 74, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str141335, i32 0, i32 0), i32 75, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str142336, i32 0, i32 0), i32 76, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str143337, i32 0, i32 0), i32 78, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str144338, i32 0, i32 0), i32 79, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([26 x i8]* @.str145339, i32 0, i32 0), i32 82, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([21 x i8]* @.str146340, i32 0, i32 0), i32 80, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str147341, i32 0, i32 0), i32 81, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([28 x i8]* @.str148342, i32 0, i32 0), i32 83, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([20 x i8]* @.str149343, i32 0, i32 0), i32 84, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([22 x i8]* @.str150344, i32 0, i32 0), i32 85, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str151345, i32 0, i32 0), i32 86, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str152346, i32 0, i32 0), i32 87, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str153347, i32 0, i32 0), i32 88, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str154348, i32 0, i32 0), i32 89, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([23 x i8]* @.str155349, i32 0, i32 0), i32 90, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str156350, i32 0, i32 0), i32 77, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str157351, i32 0, i32 0), i32 91, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 0, [4 x i8] undef } }>, align 16
@.str158352 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str159353 = private unnamed_addr constant [9 x i8] c" [%s]:%d\00", align 1
@.str160354 = private unnamed_addr constant [6 x i8] c"unset\00", align 1
@.str161355 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str162356 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str163357 = private unnamed_addr constant [4 x i8] c"2,1\00", align 1
@.str164358 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str165359 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str166360 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str167361 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str168362 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@multistate_canonicalizehostname = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str168362, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str169363 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str170364 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@multistate_requesttty = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str169363, i32 0, i32 0), i32 3, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str170364, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str171365 = private unnamed_addr constant [9 x i8] c"ethernet\00", align 1
@.str172366 = private unnamed_addr constant [15 x i8] c"point-to-point\00", align 1
@multistate_tunnel = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str171365, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str172366, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str173367 = private unnamed_addr constant [4 x i8] c"ask\00", align 1
@.str174368 = private unnamed_addr constant [8 x i8] c"autoask\00", align 1
@multistate_controlmaster = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str170364, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str173367, i32 0, i32 0), i32 3, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str174368, i32 0, i32 0), i32 4, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@multistate_yesnoask = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str173367, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str175369 = private unnamed_addr constant [5 x i8] c"inet\00", align 1
@.str176370 = private unnamed_addr constant [6 x i8] c"inet6\00", align 1
@.str177371 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@multistate_addressfamily = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str175369, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str176370, i32 0, i32 0), i32 10, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str177371, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str178372 = private unnamed_addr constant [7 x i8] c"%s %d\0A\00", align 1
@.str179373 = private unnamed_addr constant [42 x i8] c"Too many recursive configuration includes\00", align 1
@.str180374 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str181375 = private unnamed_addr constant [13 x i8] c"fstat %s: %s\00", align 1
@.str182376 = private unnamed_addr constant [31 x i8] c"Bad owner or permissions on %s\00", align 1
@.str183377 = private unnamed_addr constant [34 x i8] c"Reading configuration data %.200s\00", align 1
@.str184378 = private unnamed_addr constant [46 x i8] c"%s: terminating, %d bad configuration options\00", align 1
@.str185379 = private unnamed_addr constant [5 x i8] c" \09\0D\0A\00", align 1
@.str186380 = private unnamed_addr constant [40 x i8] c"%s line %d: Ignored unknown option \22%s\22\00", align 1
@.str187381 = private unnamed_addr constant [32 x i8] c"%s line %d: missing time value.\00", align 1
@.str188382 = private unnamed_addr constant [32 x i8] c"%s line %d: invalid time value.\00", align 1
@.str189383 = private unnamed_addr constant [30 x i8] c"%s line %d: missing argument.\00", align 1
@.str190384 = private unnamed_addr constant [37 x i8] c"%s line %d: unsupported option \22%s\22.\00", align 1
@.str191385 = private unnamed_addr constant [34 x i8] c"%.200s line %d: Missing argument.\00", align 1
@.str192386 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str193387 = private unnamed_addr constant [36 x i8] c"%.200s line %d: Bad number '%s': %s\00", align 1
@.str194388 = private unnamed_addr constant [37 x i8] c"%.200s line %d: RekeyLimit too small\00", align 1
@.str195 = private unnamed_addr constant [60 x i8] c"%.200s line %d: Too many identity files specified (max %d).\00", align 1
@.str196 = private unnamed_addr constant [63 x i8] c"%.200s line %d: Too many certificate files specified (max %d).\00", align 1
@.str197 = private unnamed_addr constant [44 x i8] c"%s line %d: too many authorized keys files.\00", align 1
@.str198 = private unnamed_addr constant [6 x i8] c" \09\0D\0A=\00", align 1
@.str199 = private unnamed_addr constant [39 x i8] c"%.200s line %d: Invalid ProxyJump \22%s\22\00", align 1
@.str200 = private unnamed_addr constant [28 x i8] c"%.200s line %d: Bad number.\00", align 1
@.str201 = private unnamed_addr constant [33 x i8] c"%.200s line %d: Bad cipher '%s'.\00", align 1
@.str202 = private unnamed_addr constant [7 x i8] c"<NONE>\00", align 1
@.str203 = private unnamed_addr constant [43 x i8] c"%.200s line %d: Bad SSH2 cipher spec '%s'.\00", align 1
@.str204 = private unnamed_addr constant [40 x i8] c"%.200s line %d: Bad SSH2 Mac spec '%s'.\00", align 1
@.str205 = private unnamed_addr constant [45 x i8] c"%.200s line %d: Bad SSH2 KexAlgorithms '%s'.\00", align 1
@.str206 = private unnamed_addr constant [32 x i8] c"%s line %d: Bad key types '%s'.\00", align 1
@.str207 = private unnamed_addr constant [40 x i8] c"%.200s line %d: Bad protocol spec '%s'.\00", align 1
@.str208 = private unnamed_addr constant [43 x i8] c"%.200s line %d: unsupported log level '%s'\00", align 1
@.str209 = private unnamed_addr constant [39 x i8] c"%.200s line %d: Missing port argument.\00", align 1
@.str210 = private unnamed_addr constant [41 x i8] c"%.200s line %d: Missing target argument.\00", align 1
@.str211 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@.str212 = private unnamed_addr constant [46 x i8] c"%.200s line %d: Bad forwarding specification.\00", align 1
@.str213 = private unnamed_addr constant [54 x i8] c"Host directive not supported as a command-line option\00", align 1
@.str214 = private unnamed_addr constant [72 x i8] c"%.200s line %d: Skipping Host block because of negated match for %.100s\00", align 1
@.str215 = private unnamed_addr constant [44 x i8] c"%.200s line %d: Applying options for %.100s\00", align 1
@.str216 = private unnamed_addr constant [36 x i8] c"%.200s line %d: Bad Match condition\00", align 1
@.str217 = private unnamed_addr constant [38 x i8] c"%.200s line %d: Bad escape character.\00", align 1
@.str218 = private unnamed_addr constant [38 x i8] c"%s line %d: Invalid environment name.\00", align 1
@.str219 = private unnamed_addr constant [31 x i8] c"%s line %d: too many send env.\00", align 1
@.str220 = private unnamed_addr constant [49 x i8] c"%.200s line %d: Missing ControlPersist argument.\00", align 1
@.str221 = private unnamed_addr constant [45 x i8] c"%.200s line %d: Bad ControlPersist argument.\00", align 1
@.str222 = private unnamed_addr constant [32 x i8] c"%.200s line %d: Bad tun device.\00", align 1
@.str223 = private unnamed_addr constant [57 x i8] c"Include directive not supported as a command-line option\00", align 1
@.str224 = private unnamed_addr constant [37 x i8] c"%.200s line %d: bad include path %s.\00", align 1
@.str225 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str226 = private unnamed_addr constant [7 x i8] c"~/.ssh\00", align 1
@.str227 = private unnamed_addr constant [15 x i8] c"/usr/local/etc\00", align 1
@.str228 = private unnamed_addr constant [44 x i8] c"%.200s line %d: include %s matched no files\00", align 1
@.str229 = private unnamed_addr constant [36 x i8] c"%.200s line %d: glob failed for %s.\00", align 1
@.str230 = private unnamed_addr constant [45 x i8] c"%.200s line %d: Including file %s depth %d%s\00", align 1
@.str231 = private unnamed_addr constant [14 x i8] c" (parse only)\00", align 1
@.str232 = private unnamed_addr constant [32 x i8] c"%s line %d: Bad IPQoS value: %s\00", align 1
@.str233 = private unnamed_addr constant [40 x i8] c"%s line %d: too many hostname suffixes.\00", align 1
@.str234 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str235 = private unnamed_addr constant [41 x i8] c"%s line %d: Invalid permitted CNAME \22%s\22\00", align 1
@.str236 = private unnamed_addr constant [39 x i8] c"%s line %d: too many permitted CNAMEs.\00", align 1
@.str237 = private unnamed_addr constant [54 x i8] c"%.200s line %d: Missing StreamLocalBindMask argument.\00", align 1
@.str238 = private unnamed_addr constant [26 x i8] c"%.200s line %d: Bad mask.\00", align 1
@.str239 = private unnamed_addr constant [45 x i8] c"%.200s line %d: Invalid hash algorithm \22%s\22.\00", align 1
@.str240 = private unnamed_addr constant [35 x i8] c"%s line %d: Deprecated option \22%s\22\00", align 1
@.str241 = private unnamed_addr constant [36 x i8] c"%s line %d: Unsupported option \22%s\22\00", align 1
@.str242 = private unnamed_addr constant [28 x i8] c"%s: Unimplemented opcode %d\00", align 1
@__func__.process_config_line_depth = private unnamed_addr constant [26 x i8] c"process_config_line_depth\00", align 1
@.str243 = private unnamed_addr constant [50 x i8] c"%.200s line %d: garbage at end of line; \22%.200s\22.\00", align 1
@.str244 = private unnamed_addr constant [8 x i8] c"confirm\00", align 1
@multistate_yesnoaskconfirm = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str173367, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str244, i32 0, i32 0), i32 3, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str245 = private unnamed_addr constant [34 x i8] c"%s line %d: empty hostname suffix\00", align 1
@.str246 = private unnamed_addr constant [67 x i8] c"%s line %d: hostname suffix \22%.100s\22 starts with invalid character\00", align 1
@.str247 = private unnamed_addr constant [69 x i8] c"%s line %d: hostname suffix \22%.100s\22 contains consecutive separators\00", align 1
@.str248 = private unnamed_addr constant [65 x i8] c"%s line %d: hostname suffix \22%.100s\22 contains invalid characters\00", align 1
@.str249 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str250 = private unnamed_addr constant [46 x i8] c"checking match for '%s' host %s originally %s\00", align 1
@.str251 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str252 = private unnamed_addr constant [68 x i8] c"%.200s line %d: '%s' cannot be combined with other Match attributes\00", align 1
@.str253 = private unnamed_addr constant [10 x i8] c"canonical\00", align 1
@.str254 = private unnamed_addr constant [31 x i8] c"%.200s line %d: %smatched '%s'\00", align 1
@.str255 = private unnamed_addr constant [5 x i8] c"not \00", align 1
@.str256 = private unnamed_addr constant [30 x i8] c"Missing Match criteria for %s\00", align 1
@.str257 = private unnamed_addr constant [13 x i8] c"originalhost\00", align 1
@.str258 = private unnamed_addr constant [10 x i8] c"localuser\00", align 1
@.str259 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str260 = private unnamed_addr constant [16 x i8] c"gethostname: %s\00", align 1
@.str261 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str262 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str263 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str264 = private unnamed_addr constant [2 x i8] c"l\00", align 1
@.str265 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str266 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str267 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str268 = private unnamed_addr constant [38 x i8] c"%.200s line %d: skipped exec \22%.100s\22\00", align 1
@.str269 = private unnamed_addr constant [42 x i8] c"%.200s line %d: match exec '%.100s' error\00", align 1
@.str270 = private unnamed_addr constant [31 x i8] c"Unsupported Match attribute %s\00", align 1
@.str271 = private unnamed_addr constant [41 x i8] c"%.200s line %d: %smatched '%s \22%.100s\22' \00", align 1
@.str272 = private unnamed_addr constant [42 x i8] c"One or more attributes required for Match\00", align 1
@.str273 = private unnamed_addr constant [14 x i8] c"match %sfound\00", align 1
@.str274 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str275 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str276 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str277 = private unnamed_addr constant [20 x i8] c"open(/dev/null): %s\00", align 1
@.str278 = private unnamed_addr constant [28 x i8] c"Executing command: '%.500s'\00", align 1
@.str279 = private unnamed_addr constant [9 x i8] c"dup2: %s\00", align 1
@.str280 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str281 = private unnamed_addr constant [31 x i8] c"Unable to execute '%.100s': %s\00", align 1
@.str282 = private unnamed_addr constant [17 x i8] c"%s: fork: %.100s\00", align 1
@__func__.execute_in_shell = private unnamed_addr constant [17 x i8] c"execute_in_shell\00", align 1
@.str283 = private unnamed_addr constant [16 x i8] c"%s: waitpid: %s\00", align 1
@.str284 = private unnamed_addr constant [35 x i8] c"command '%.100s' exited abnormally\00", align 1
@.str285 = private unnamed_addr constant [27 x i8] c"command returned status %d\00", align 1
@multistate_flag = internal constant <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* null, i32 -1, [4 x i8] undef } }>, align 16
@.str286 = private unnamed_addr constant [42 x i8] c"%s: line %d: Bad configuration option: %s\00", align 1
@session_ident = global i32 -1, align 4
@client_x11_get_proto.proto = internal global [512 x i8] zeroinitializer, align 16
@client_x11_get_proto.data = internal global [512 x i8] zeroinitializer, align 16
@.str415 = private unnamed_addr constant [47 x i8] c"DISPLAY \22%s\22 invalid; disabling X11 forwarding\00", align 1
@.str1416 = private unnamed_addr constant [18 x i8] c"No xauth program.\00", align 1
@.str2417 = private unnamed_addr constant [11 x i8] c"localhost:\00", align 1
@.str3418 = private unnamed_addr constant [8 x i8] c"unix:%s\00", align 1
@.str4419 = private unnamed_addr constant [26 x i8] c"%s: display name too long\00", align 1
@__func__.client_x11_get_proto = private unnamed_addr constant [21 x i8] c"client_x11_get_proto\00", align 1
@.str5420 = private unnamed_addr constant [16 x i8] c"%s: mkdtemp: %s\00", align 1
@.str6421 = private unnamed_addr constant [13 x i8] c"%s/xauthfile\00", align 1
@.str7422 = private unnamed_addr constant [28 x i8] c"%s: xauthfile path too long\00", align 1
@.str8423 = private unnamed_addr constant [73 x i8] c"%s -f %s generate %s MIT-MAGIC-COOKIE-1 untrusted timeout %u 2>/dev/null\00", align 1
@.str9424 = private unnamed_addr constant [17 x i8] c"%s: cmd too long\00", align 1
@.str10425 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@x11_refuse_time = internal global i32 0, align 4
@.str11426 = private unnamed_addr constant [28 x i8] c"%s %s%s list %s 2>/dev/null\00", align 1
@.str12427 = private unnamed_addr constant [4 x i8] c"-f \00", align 1
@.str13428 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str14429 = private unnamed_addr constant [18 x i8] c"x11_get_proto: %s\00", align 1
@.str15430 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str16431 = private unnamed_addr constant [16 x i8] c"%*s %511s %511s\00", align 1
@.str17432 = private unnamed_addr constant [77 x i8] c"Warning: untrusted X11 forwarding setup failed: xauth key data not generated\00", align 1
@.str18433 = private unnamed_addr constant [75 x i8] c"Warning: No xauth data; using fake authentication data for X11 forwarding.\00", align 1
@.str19434 = private unnamed_addr constant [19 x i8] c"MIT-MAGIC-COOKIE-1\00", align 1
@.str20435 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@global_confirms = internal global %struct.global_confirms { %struct.global_confirm* null, %struct.global_confirm** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 0) }, align 8
@.str21436 = private unnamed_addr constant [28 x i8] c"%s: last_gc->ref_count = %d\00", align 1
@__func__.client_register_global_confirm = private unnamed_addr constant [31 x i8] c"client_register_global_confirm\00", align 1
@.str22437 = private unnamed_addr constant [30 x i8] c"Entering interactive session.\00", align 1
@.str23438 = private unnamed_addr constant [11 x i8] c"pledge: id\00", align 1
@.str24439 = private unnamed_addr constant [62 x i8] c"stdio rpath wpath cpath unix inet dns recvfd proc exec id tty\00", align 1
@.str25440 = private unnamed_addr constant [16 x i8] c"%s pledge(): %s\00", align 1
@__func__.client_loop = private unnamed_addr constant [12 x i8] c"client_loop\00", align 1
@.str26441 = private unnamed_addr constant [13 x i8] c"pledge: exec\00", align 1
@.str27442 = private unnamed_addr constant [52 x i8] c"stdio rpath wpath cpath unix inet dns proc exec tty\00", align 1
@.str28443 = private unnamed_addr constant [24 x i8] c"pledge: filesystem full\00", align 1
@.str29444 = private unnamed_addr constant [47 x i8] c"stdio rpath wpath cpath unix inet dns proc tty\00", align 1
@.str30445 = private unnamed_addr constant [13 x i8] c"pledge: proc\00", align 1
@.str31446 = private unnamed_addr constant [35 x i8] c"stdio cpath unix inet dns proc tty\00", align 1
@.str32447 = private unnamed_addr constant [16 x i8] c"pledge: network\00", align 1
@.str33448 = private unnamed_addr constant [24 x i8] c"stdio unix inet dns tty\00", align 1
@.str34449 = private unnamed_addr constant [31 x i8] c"***\0A Time used for login: %f\0A\0A\00", align 1
@escape_pending1 = internal global i32 0, align 4
@last_was_cr = internal global i32 0, align 4
@exit_status = internal global i32 0, align 4
@stdin_eof = internal global i32 0, align 4
@buffer_high = internal global i32 0, align 4
@connection_in = internal global i32 0, align 4
@connection_out = internal global i32 0, align 4
@stdout = external global %struct._IO_FILE*
@quit_pending = common global i32 0, align 4
@escape_char1 = internal global i32 0, align 4
@stdin_buffer = internal global %struct.sshbuf zeroinitializer, align 8
@stdout_buffer = internal global %struct.sshbuf zeroinitializer, align 8
@stderr_buffer = internal global %struct.sshbuf zeroinitializer, align 8
@session_closed = internal global i32 0, align 4
@.str35450 = private unnamed_addr constant [21 x i8] c"rekeying in progress\00", align 1
@need_rekeying = internal global i32 0, align 4
@.str36451 = private unnamed_addr constant [14 x i8] c"need rekeying\00", align 1
@.str37452 = private unnamed_addr constant [24 x i8] c"%s: kex_start_rekex: %s\00", align 1
@control_persist_exit_time = internal global i64 0, align 8
@.str38453 = private unnamed_addr constant [31 x i8] c"ControlPersist timeout expired\00", align 1
@.str39454 = private unnamed_addr constant [21 x i8] c"disconnected by user\00", align 1
@received_signal = internal global i32 0, align 4
@.str40455 = private unnamed_addr constant [21 x i8] c"Killed by signal %d.\00", align 1
@.str41456 = private unnamed_addr constant [30 x i8] c"Connection to %.64s closed.\0D\0A\00", align 1
@.str42457 = private unnamed_addr constant [37 x i8] c"Write failed flushing stdout buffer.\00", align 1
@.str43458 = private unnamed_addr constant [37 x i8] c"Write failed flushing stderr buffer.\00", align 1
@.str44459 = private unnamed_addr constant [61 x i8] c"Transferred: sent %llu, received %llu bytes, in %.1f seconds\00", align 1
@.str45460 = private unnamed_addr constant [43 x i8] c"Bytes per second: sent %.1f, received %.1f\00", align 1
@.str46461 = private unnamed_addr constant [15 x i8] c"Exit status %d\00", align 1
@.str47462 = private unnamed_addr constant [50 x i8] c"Tunnel forwarding is not supported for protocol 1\00", align 1
@.str48463 = private unnamed_addr constant [34 x i8] c"Requesting tun unit %d in mode %d\00", align 1
@.str49464 = private unnamed_addr constant [27 x i8] c"Tunnel device open failed.\00", align 1
@.str50465 = private unnamed_addr constant [4 x i8] c"tun\00", align 1
@.str51466 = private unnamed_addr constant [16 x i8] c"tun@openssh.com\00", align 1
@.str52467 = private unnamed_addr constant [10 x i8] c"%s: id %d\00", align 1
@__func__.client_session2_setup = private unnamed_addr constant [22 x i8] c"client_session2_setup\00", align 1
@.str53468 = private unnamed_addr constant [51 x i8] c"client_session2_setup: channel %d: unknown channel\00", align 1
@.str54469 = private unnamed_addr constant [8 x i8] c"pty-req\00", align 1
@.str55470 = private unnamed_addr constant [15 x i8] c"PTY allocation\00", align 1
@.str56471 = private unnamed_addr constant [21 x i8] c"Sending environment.\00", align 1
@.str57472 = private unnamed_addr constant [15 x i8] c"Ignored env %s\00", align 1
@.str58473 = private unnamed_addr constant [20 x i8] c"Sending env %s = %s\00", align 1
@.str59474 = private unnamed_addr constant [4 x i8] c"env\00", align 1
@.str60475 = private unnamed_addr constant [24 x i8] c"Sending subsystem: %.*s\00", align 1
@.str61476 = private unnamed_addr constant [10 x i8] c"subsystem\00", align 1
@.str62477 = private unnamed_addr constant [22 x i8] c"Sending command: %.*s\00", align 1
@.str63478 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str64479 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str65480 = private unnamed_addr constant [14 x i8] c"[stopped mux]\00", align 1
@in_non_blocking_mode = internal global i32 0, align 4
@compat13 = external global i32
@.str66481 = private unnamed_addr constant [53 x i8] c"Packet integrity error (%d bytes remaining) at %s:%d\00", align 1
@.str67482 = private unnamed_addr constant [13 x i8] c"clientloop.c\00", align 1
@.str68483 = private unnamed_addr constant [24 x i8] c"Packet integrity error.\00", align 1
@.str69484 = private unnamed_addr constant [38 x i8] c"%s: ssh_get_authentication_socket: %s\00", align 1
@__func__.client_input_agent_open = private unnamed_addr constant [24 x i8] c"client_input_agent_open\00", align 1
@.str70485 = private unnamed_addr constant [32 x i8] c"authentication agent connection\00", align 1
@.str71486 = private unnamed_addr constant [38 x i8] c"Forwarding authentication connection.\00", align 1
@.str72487 = private unnamed_addr constant [52 x i8] c"client_input_global_request: rtype %s want_reply %d\00", align 1
@.str73488 = private unnamed_addr constant [24 x i8] c"hostkeys-00@openssh.com\00", align 1
@client_input_hostkeys.hostkeys_seen = internal global i32 0, align 4
@.str74489 = private unnamed_addr constant [33 x i8] c"%s: server already sent hostkeys\00", align 1
@__func__.client_input_hostkeys = private unnamed_addr constant [22 x i8] c"client_input_hostkeys\00", align 1
@.str75490 = private unnamed_addr constant [31 x i8] c"%s: couldn't parse message: %s\00", align 1
@.str76491 = private unnamed_addr constant [18 x i8] c"%s: parse key: %s\00", align 1
@.str77492 = private unnamed_addr constant [23 x i8] c"%s: received %s key %s\00", align 1
@.str78493 = private unnamed_addr constant [291 x i8] c"ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\00", align 1
@.str79494 = private unnamed_addr constant [46 x i8] c"%s: %s key not permitted by HostkeyAlgorithms\00", align 1
@.str80495 = private unnamed_addr constant [38 x i8] c"%s: %s key is a certificate; skipping\00", align 1
@.str81496 = private unnamed_addr constant [36 x i8] c"%s: received duplicated %s host key\00", align 1
@.str82497 = private unnamed_addr constant [36 x i8] c"%s: reallocarray failed nkeys = %zu\00", align 1
@.str83498 = private unnamed_addr constant [28 x i8] c"%s: server sent no hostkeys\00", align 1
@.str84499 = private unnamed_addr constant [18 x i8] c"%s: calloc failed\00", align 1
@.str85500 = private unnamed_addr constant [32 x i8] c"%s: hostkeys_foreach failed: %s\00", align 1
@.str86501 = private unnamed_addr constant [63 x i8] c"%s: %zu keys from server: %zu new, %zu retained. %zu to remove\00", align 1
@.str87502 = private unnamed_addr constant [50 x i8] c"%s: asking server to prove ownership for %zu keys\00", align 1
@.str88503 = private unnamed_addr constant [30 x i8] c"hostkeys-prove-00@openssh.com\00", align 1
@.str89504 = private unnamed_addr constant [30 x i8] c"%s: cannot prepare packet: %s\00", align 1
@.str90505 = private unnamed_addr constant [15 x i8] c"%s: sshbuf_new\00", align 1
@.str91506 = private unnamed_addr constant [20 x i8] c"%s: sshkey_putb: %s\00", align 1
@.str92507 = private unnamed_addr constant [26 x i8] c"%s: sshpkt_put_string: %s\00", align 1
@.str93508 = private unnamed_addr constant [20 x i8] c"%s: sshpkt_send: %s\00", align 1
@.str94509 = private unnamed_addr constant [19 x i8] c"%s: ctx->nnew == 0\00", align 1
@__func__.client_global_hostkeys_private_confirm = private unnamed_addr constant [39 x i8] c"client_global_hostkeys_private_confirm\00", align 1
@.str95510 = private unnamed_addr constant [56 x i8] c"Server failed to confirm ownership of private host keys\00", align 1
@.str96511 = private unnamed_addr constant [22 x i8] c"%s: sshbuf_new failed\00", align 1
@.str97512 = private unnamed_addr constant [34 x i8] c"%s: ssh->kex->session_id_len == 0\00", align 1
@.str98513 = private unnamed_addr constant [36 x i8] c"%s: failed to prepare signature: %s\00", align 1
@.str99514 = private unnamed_addr constant [45 x i8] c"%s: server gave bad signature for %s key %zu\00", align 1
@.str100515 = private unnamed_addr constant [35 x i8] c"%s: ndone != ctx->nnew (%zu / %zu)\00", align 1
@.str101516 = private unnamed_addr constant [30 x i8] c"%s: sshkey_fingerprint failed\00", align 1
@__func__.update_known_hosts = private unnamed_addr constant [19 x i8] c"update_known_hosts\00", align 1
@.str102517 = private unnamed_addr constant [27 x i8] c"Learned new hostkey: %s %s\00", align 1
@.str103518 = private unnamed_addr constant [36 x i8] c"Deprecating obsolete hostkey: %s %s\00", align 1
@.str104519 = private unnamed_addr constant [36 x i8] c"Accept updated hostkeys? (yes/no): \00", align 1
@.str105520 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str106521 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str107522 = private unnamed_addr constant [27 x i8] c"Please enter \22yes\22 or \22no\22\00", align 1
@.str108523 = private unnamed_addr constant [40 x i8] c"%s: hostfile_replace_entries failed: %s\00", align 1
@.str109524 = private unnamed_addr constant [27 x i8] c"%s: found %s key at %s:%ld\00", align 1
@__func__.hostkeys_find = private unnamed_addr constant [14 x i8] c"hostkeys_find\00", align 1
@.str110525 = private unnamed_addr constant [32 x i8] c"%s: deprecated %s key at %s:%ld\00", align 1
@.str111526 = private unnamed_addr constant [35 x i8] c"%s: reallocarray failed nold = %zu\00", align 1
@.str112527 = private unnamed_addr constant [55 x i8] c"client_input_channel_req: channel %d rtype %s reply %d\00", align 1
@.str113528 = private unnamed_addr constant [49 x i8] c"client_input_channel_req: request for channel -1\00", align 1
@.str114529 = private unnamed_addr constant [54 x i8] c"client_input_channel_req: channel %d: unknown channel\00", align 1
@.str115530 = private unnamed_addr constant [16 x i8] c"eow@openssh.com\00", align 1
@.str116531 = private unnamed_addr constant [12 x i8] c"exit-status\00", align 1
@.str117532 = private unnamed_addr constant [42 x i8] c"%s: no sink for exit-status on channel %d\00", align 1
@__func__.client_input_channel_req = private unnamed_addr constant [25 x i8] c"client_input_channel_req\00", align 1
@.str118533 = private unnamed_addr constant [59 x i8] c"client_input_channel_open: ctype %s rchan %d win %d max %d\00", align 1
@.str119534 = private unnamed_addr constant [16 x i8] c"forwarded-tcpip\00", align 1
@.str120535 = private unnamed_addr constant [34 x i8] c"forwarded-streamlocal@openssh.com\00", align 1
@.str121536 = private unnamed_addr constant [4 x i8] c"x11\00", align 1
@.str122537 = private unnamed_addr constant [23 x i8] c"auth-agent@openssh.com\00", align 1
@.str123538 = private unnamed_addr constant [26 x i8] c"proxied to downstream: %s\00", align 1
@.str124539 = private unnamed_addr constant [11 x i8] c"confirm %s\00", align 1
@.str125540 = private unnamed_addr constant [11 x i8] c"failure %s\00", align 1
@.str126541 = private unnamed_addr constant [12 x i8] c"open failed\00", align 1
@.str127542 = private unnamed_addr constant [44 x i8] c"Warning: ssh server tried agent forwarding.\00", align 1
@.str128543 = private unnamed_addr constant [68 x i8] c"Warning: this is probably a break-in attempt by a malicious server.\00", align 1
@__func__.client_request_agent = private unnamed_addr constant [21 x i8] c"client_request_agent\00", align 1
@.str129544 = private unnamed_addr constant [42 x i8] c"Warning: ssh server tried X11 forwarding.\00", align 1
@.str130545 = private unnamed_addr constant [56 x i8] c"Rejected X11 connection after ForwardX11Timeout expired\00", align 1
@.str131546 = private unnamed_addr constant [46 x i8] c"buggy server: x11 request w/o originator_port\00", align 1
@.str132547 = private unnamed_addr constant [39 x i8] c"client_request_x11: request from %s %d\00", align 1
@.str133548 = private unnamed_addr constant [33 x i8] c"%s: packet_get_string_ptr failed\00", align 1
@__func__.client_request_forwarded_streamlocal = private unnamed_addr constant [37 x i8] c"client_request_forwarded_streamlocal\00", align 1
@.str134549 = private unnamed_addr constant [22 x i8] c"forwarded-streamlocal\00", align 1
@.str135550 = private unnamed_addr constant [45 x i8] c"%s: listen %s port %d, originator %s port %d\00", align 1
@__func__.client_request_forwarded_tcpip = private unnamed_addr constant [31 x i8] c"client_request_forwarded_tcpip\00", align 1
@.str136551 = private unnamed_addr constant [16 x i8] c"%s: alloc reply\00", align 1
@.str137552 = private unnamed_addr constant [29 x i8] c"%s: compose for muxclient %s\00", align 1
@.str138553 = private unnamed_addr constant [22 x i8] c"write stdout: %.50s\0D\0A\00", align 1
@.str139554 = private unnamed_addr constant [15 x i8] c"read: %.100s\0D\0A\00", align 1
@.str140555 = private unnamed_addr constant [46 x i8] c"Connection to %.300s closed by remote host.\0D\0A\00", align 1
@.str141556 = private unnamed_addr constant [39 x i8] c"Read from remote host %.300s: %.100s\0D\0A\00", align 1
@.str142557 = private unnamed_addr constant [13 x i8] c"select: %s\0D\0A\00", align 1
@.str143558 = private unnamed_addr constant [35 x i8] c"Timeout, server %s not responding.\00", align 1
@.str144559 = private unnamed_addr constant [22 x i8] c"keepalive@openssh.com\00", align 1
@.str145560 = private unnamed_addr constant [26 x i8] c"%s: cancel scheduled exit\00", align 1
@__func__.set_control_persist_exit_time = private unnamed_addr constant [30 x i8] c"set_control_persist_exit_time\00", align 1
@.str146561 = private unnamed_addr constant [32 x i8] c"%s: schedule exit in %d seconds\00", align 1
@received_window_change_signal = internal global i32 0, align 4
@.str147562 = private unnamed_addr constant [36 x i8] c"client_check_window_change: changed\00", align 1
@.str148563 = private unnamed_addr constant [13 x i8] c"Sending eof.\00", align 1
@.str149564 = private unnamed_addr constant [6 x i8] c"%c.\0D\0A\00", align 1
@.str150565 = private unnamed_addr constant [3 x i8] c"^Z\00", align 1
@.str151566 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str152567 = private unnamed_addr constant [52 x i8] c"%c%s escape not available to multiplexed sessions\0D\0A\00", align 1
@.str153568 = private unnamed_addr constant [21 x i8] c"%c^Z [suspend ssh]\0D\0A\00", align 1
@.str154569 = private unnamed_addr constant [6 x i8] c"%cB\0D\0A\00", align 1
@.str155570 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str156571 = private unnamed_addr constant [34 x i8] c"Server does not support re-keying\00", align 1
@.str157572 = private unnamed_addr constant [27 x i8] c"%c%c [Logging to syslog]\0D\0A\00", align 1
@.str158573 = private unnamed_addr constant [21 x i8] c"%c%c [LogLevel %s]\0D\0A\00", align 1
@.str159574 = private unnamed_addr constant [20 x i8] c"%c& [backgrounded]\0A\00", align 1
@.str160575 = private unnamed_addr constant [13 x i8] c"fork: %.100s\00", align 1
@.str161576 = private unnamed_addr constant [2 x i8] c"\04\00", align 1
@.str162577 = private unnamed_addr constant [6 x i8] c"%c#\0D\0A\00", align 1
@.str163578 = private unnamed_addr constant [8 x i8] c"\0D\0Assh> \00", align 1
@.str164579 = private unnamed_addr constant [10 x i8] c"Commands:\00", align 1
@.str165580 = private unnamed_addr constant [67 x i8] c"      -L[bind_address:]port:host:hostport    Request local forward\00", align 1
@.str166581 = private unnamed_addr constant [68 x i8] c"      -R[bind_address:]port:host:hostport    Request remote forward\00", align 1
@.str167582 = private unnamed_addr constant [69 x i8] c"      -D[bind_address:]port                  Request dynamic forward\00", align 1
@.str168583 = private unnamed_addr constant [66 x i8] c"      -KL[bind_address:]port                 Cancel local forward\00", align 1
@.str169584 = private unnamed_addr constant [67 x i8] c"      -KR[bind_address:]port                 Cancel remote forward\00", align 1
@.str170585 = private unnamed_addr constant [68 x i8] c"      -KD[bind_address:]port                 Cancel dynamic forward\00", align 1
@.str171586 = private unnamed_addr constant [67 x i8] c"      !args                                  Execute local command\00", align 1
@.str172587 = private unnamed_addr constant [17 x i8] c"Invalid command.\00", align 1
@.str173588 = private unnamed_addr constant [42 x i8] c"Not supported for SSH protocol version 1.\00", align 1
@.str174589 = private unnamed_addr constant [36 x i8] c"Bad forwarding close specification.\00", align 1
@.str175590 = private unnamed_addr constant [24 x i8] c"Unkown port forwarding.\00", align 1
@.str176591 = private unnamed_addr constant [21 x i8] c"Canceled forwarding.\00", align 1
@.str177592 = private unnamed_addr constant [30 x i8] c"Bad forwarding specification.\00", align 1
@.str178593 = private unnamed_addr constant [24 x i8] c"Port forwarding failed.\00", align 1
@.str179594 = private unnamed_addr constant [17 x i8] c"Forwarding port.\00", align 1
@.str180595 = private unnamed_addr constant [35 x i8] c"%c?\0D\0ASupported escape sequences:\0D\0A\00", align 1
@.str181596 = private unnamed_addr constant [15 x i8] c" %c%-3s - %s\0D\0A\00", align 1
@.str182597 = private unnamed_addr constant [125 x i8] c" %c%c   - send the escape character by typing it twice\0D\0A(Note that escapes are only recognized immediately after newline.)\0D\0A\00", align 1
@.str183598 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str184599 = private unnamed_addr constant [18 x i8] c"terminate session\00", align 1
@.str185600 = private unnamed_addr constant [52 x i8] c"terminate connection (and any multiplexed sessions)\00", align 1
@.str186601 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str187602 = private unnamed_addr constant [34 x i8] c"send a BREAK to the remote system\00", align 1
@.str188603 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str189604 = private unnamed_addr constant [20 x i8] c"open a command line\00", align 1
@.str190605 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str191606 = private unnamed_addr constant [14 x i8] c"request rekey\00", align 1
@.str192607 = private unnamed_addr constant [4 x i8] c"V/v\00", align 1
@.str193608 = private unnamed_addr constant [39 x i8] c"decrease/increase verbosity (LogLevel)\00", align 1
@.str194609 = private unnamed_addr constant [12 x i8] c"suspend ssh\00", align 1
@.str195610 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str196611 = private unnamed_addr constant [27 x i8] c"list forwarded connections\00", align 1
@.str197612 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str198613 = private unnamed_addr constant [59 x i8] c"background ssh (when waiting for connections to terminate)\00", align 1
@.str199614 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str200615 = private unnamed_addr constant [13 x i8] c"this message\00", align 1
@esc_txt = internal global <{ { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] } }> <{ { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str183598, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str184599, i32 0, i32 0), i32 4, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str183598, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8]* @.str185600, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str186601, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @.str187602, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str188603, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str189604, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str190605, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str191606, i32 0, i32 0), i32 1, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([4 x i8]* @.str192607, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @.str193608, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([3 x i8]* @.str150565, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str194609, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str195610, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str196611, i32 0, i32 0), i32 0, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str197612, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8]* @.str198613, i32 0, i32 0), i32 2, [4 x i8] undef }, { i8*, i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([2 x i8]* @.str199614, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str200615, i32 0, i32 0), i32 0, [4 x i8] undef } }>, align 16
@.str201616 = private unnamed_addr constant [34 x i8] c"%s request accepted on channel %d\00", align 1
@.str202617 = private unnamed_addr constant [20 x i8] c"%s request failed\0D\0A\00", align 1
@.str203618 = private unnamed_addr constant [32 x i8] c"%s request failed on channel %d\00", align 1
@.str204619 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str205620 = private unnamed_addr constant [6 x i8] c":/.-_\00", align 1
@.str206621 = private unnamed_addr constant [34 x i8] c"Invalid character '%c' in DISPLAY\00", align 1
@_in_raw_mode = internal global i32 0, align 4
@_saved_tio = internal global %struct.termios zeroinitializer, align 4
@.str636 = private unnamed_addr constant [10 x i8] c"tcsetattr\00", align 1
@.str1637 = private unnamed_addr constant [10 x i8] c"tcgetattr\00", align 1
@client_version_string = global i8* null, align 8
@server_version_string = global i8* null, align 8
@previous_host_key = global %struct.sshkey* null, align 8
@proxy_command_pid = internal global i32 0, align 4
@.str644 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str1645 = private unnamed_addr constant [44 x i8] c"Connection timed out during banner exchange\00", align 1
@.str2646 = private unnamed_addr constant [40 x i8] c"ssh_exchange_identification: select: %s\00", align 1
@.str3647 = private unnamed_addr constant [62 x i8] c"ssh_exchange_identification: Connection closed by remote host\00", align 1
@.str4648 = private unnamed_addr constant [42 x i8] c"ssh_exchange_identification: read: %.100s\00", align 1
@.str5649 = private unnamed_addr constant [48 x i8] c"ssh_exchange_identification: No banner received\00", align 1
@.str6650 = private unnamed_addr constant [5 x i8] c"SSH-\00", align 1
@.str7651 = private unnamed_addr constant [32 x i8] c"ssh_exchange_identification: %s\00", align 1
@.str8652 = private unnamed_addr constant [17 x i8] c"SSH-%d.%d-%[^\0A]\0A\00", align 1
@.str9653 = private unnamed_addr constant [53 x i8] c"Bad remote protocol version identification: '%.100s'\00", align 1
@.str10654 = private unnamed_addr constant [62 x i8] c"Remote protocol version %d.%d, remote software version %.100s\00", align 1
@.str11655 = private unnamed_addr constant [49 x i8] c"Remote machine has too old SSH software version.\00", align 1
@.str12656 = private unnamed_addr constant [43 x i8] c"Agent forwarding disabled for protocol 1.3\00", align 1
@.str13657 = private unnamed_addr constant [42 x i8] c"Protocol major versions differ: %d vs. %d\00", align 1
@.str14658 = private unnamed_addr constant [71 x i8] c"Server version \22%.100s\22 uses unsafe key agreement; refusing connection\00", align 1
@.str15659 = private unnamed_addr constant [84 x i8] c"Server version \22%.100s\22 uses unsafe RSA signature scheme; disabling use of RSA keys\00", align 1
@.str16660 = private unnamed_addr constant [23 x i8] c"%s: getnameinfo failed\00", align 1
@__func__.get_hostfile_hostname_ipaddr = private unnamed_addr constant [29 x i8] c"get_hostfile_hostname_ipaddr\00", align 1
@.str17661 = private unnamed_addr constant [30 x i8] c"<no hostip for proxy command>\00", align 1
@.str18662 = private unnamed_addr constant [23 x i8] c"using hostkeyalias: %s\00", align 1
@.str19663 = private unnamed_addr constant [29 x i8] c"%s: fingerprint host key: %s\00", align 1
@__func__.verify_host_key = private unnamed_addr constant [16 x i8] c"verify_host_key\00", align 1
@.str20664 = private unnamed_addr constant [27 x i8] c"%s: fingerprint CA key: %s\00", align 1
@.str21665 = private unnamed_addr constant [70 x i8] c"Server host certificate: %s %s, serial %llu ID \22%s\22 CA %s %s valid %s\00", align 1
@.str22666 = private unnamed_addr constant [37 x i8] c"Server host certificate hostname: %s\00", align 1
@.str23667 = private unnamed_addr constant [23 x i8] c"Server host key: %s %s\00", align 1
@.str24668 = private unnamed_addr constant [45 x i8] c"%s: server host key %s %s matches cached key\00", align 1
@.str25669 = private unnamed_addr constant [34 x i8] c"Host key %s %s revoked by file %s\00", align 1
@.str26670 = private unnamed_addr constant [58 x i8] c"Error checking host key %s %s in revoked keys file %s: %s\00", align 1
@matching_host_key_dns = internal global i32 0, align 4
@.str27671 = private unnamed_addr constant [77 x i8] c"Update the SSHFP RR in DNS with the new host key to get rid of this message.\00", align 1
@.str28672 = private unnamed_addr constant [32 x i8] c"Authenticating to %s:%d as '%s'\00", align 1
@.str29673 = private unnamed_addr constant [22 x i8] c"ssh1 is not supported\00", align 1
@.str30674 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str31675 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str32676 = private unnamed_addr constant [21 x i8] c"Executing %s -c \22%s\22\00", align 1
@.str33677 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str34678 = private unnamed_addr constant [32 x i8] c"Couldn't execute %s -c \22%s\22: %s\00", align 1
@.str35679 = private unnamed_addr constant [20 x i8] c"fork failed: %.100s\00", align 1
@.str36680 = private unnamed_addr constant [28 x i8] c"Couldn't wait for child: %s\00", align 1
@.str37681 = private unnamed_addr constant [40 x i8] c"no authentication agent, not adding key\00", align 1
@.str38682 = private unnamed_addr constant [26 x i8] c"Add key %s (%s) to agent?\00", align 1
@.str39683 = private unnamed_addr constant [28 x i8] c"user denied adding this key\00", align 1
@.str40684 = private unnamed_addr constant [28 x i8] c"identity added to agent: %s\00", align 1
@.str41685 = private unnamed_addr constant [41 x i8] c"could not add identity to agent: %s (%d)\00", align 1
@.str42686 = private unnamed_addr constant [28 x i8] c"%s: sshkey_fingerprint fail\00", align 1
@__func__.warn_changed_key = private unnamed_addr constant [17 x i8] c"warn_changed_key\00", align 1
@.str43687 = private unnamed_addr constant [60 x i8] c"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\00", align 1
@.str44688 = private unnamed_addr constant [60 x i8] c"@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\00", align 1
@.str45689 = private unnamed_addr constant [54 x i8] c"IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\00", align 1
@.str46690 = private unnamed_addr constant [76 x i8] c"Someone could be eavesdropping on you right now (man-in-the-middle attack)!\00", align 1
@.str47691 = private unnamed_addr constant [59 x i8] c"It is also possible that a host key has just been changed.\00", align 1
@.str48692 = private unnamed_addr constant [62 x i8] c"The fingerprint for the %s key sent by the remote host is\0A%s.\00", align 1
@.str49693 = private unnamed_addr constant [42 x i8] c"Please contact your system administrator.\00", align 1
@.str50694 = private unnamed_addr constant [54 x i8] c"Forcing accepting of host key for loopback/localhost.\00", align 1
@.str51695 = private unnamed_addr constant [51 x i8] c"Host '%.200s' is known and matches the %s host %s.\00", align 1
@.str52696 = private unnamed_addr constant [12 x i8] c"certificate\00", align 1
@.str53697 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str54698 = private unnamed_addr constant [19 x i8] c"Found %s in %s:%lu\00", align 1
@.str55699 = private unnamed_addr constant [7 x i8] c"CA key\00", align 1
@.str56700 = private unnamed_addr constant [64 x i8] c"%s host key for IP address '%.128s' not in list of known hosts.\00", align 1
@.str57701 = private unnamed_addr constant [91 x i8] c"Failed to add the %s host key for IP address '%.128s' to the list of known hosts (%.500s).\00", align 1
@.str58702 = private unnamed_addr constant [95 x i8] c"Warning: Permanently added the %s host key for IP address '%.128s' to the list of known hosts.\00", align 1
@__func__.check_host_key = private unnamed_addr constant [15 x i8] c"check_host_key\00", align 1
@.str59703 = private unnamed_addr constant [30 x i8] c"Host key fingerprint is %s\0A%s\00", align 1
@.str60704 = private unnamed_addr constant [33 x i8] c"checking without port identifier\00", align 1
@.str61705 = private unnamed_addr constant [30 x i8] c"found matching key w/out port\00", align 1
@.str62706 = private unnamed_addr constant [75 x i8] c"No %s host key is known for %.200s and you have requested strict checking.\00", align 1
@.str63707 = private unnamed_addr constant [61 x i8] c"\0Abut keys of different type are already known for this host.\00", align 1
@.str64708 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str65709 = private unnamed_addr constant [45 x i8] c"Matching host key fingerprint found in DNS.\0A\00", align 1
@.str66710 = private unnamed_addr constant [48 x i8] c"No matching host key fingerprint found in DNS.\0A\00", align 1
@.str67711 = private unnamed_addr constant [150 x i8] c"The authenticity of host '%.200s (%s)' can't be established%s\0A%s key fingerprint is %s.%s%s\0A%sAre you sure you want to continue connecting (yes/no)? \00", align 1
@.str68712 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str69713 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str70714 = private unnamed_addr constant [6 x i8] c"%s,%s\00", align 1
@.str71715 = private unnamed_addr constant [60 x i8] c"Failed to add the host to the list of known hosts (%.500s).\00", align 1
@.str72716 = private unnamed_addr constant [69 x i8] c"Warning: Permanently added '%.200s' (%s) to the list of known hosts.\00", align 1
@.str73717 = private unnamed_addr constant [60 x i8] c"@       WARNING: REVOKED HOST KEY DETECTED!               @\00", align 1
@.str74718 = private unnamed_addr constant [45 x i8] c"The %s host key for %s is marked as revoked.\00", align 1
@.str75719 = private unnamed_addr constant [51 x i8] c"This could mean that a stolen key is being used to\00", align 1
@.str76720 = private unnamed_addr constant [23 x i8] c"impersonate this host.\00", align 1
@.str77721 = private unnamed_addr constant [75 x i8] c"%s host key for %.200s was revoked and you have requested strict checking.\00", align 1
@.str78722 = private unnamed_addr constant [55 x i8] c"Host certificate authority does not match %s in %s:%lu\00", align 1
@.str79723 = private unnamed_addr constant [16 x i8] c"@cert-authority\00", align 1
@.str80724 = private unnamed_addr constant [11 x i8] c"is unknown\00", align 1
@.str81725 = private unnamed_addr constant [13 x i8] c"is unchanged\00", align 1
@.str82726 = private unnamed_addr constant [22 x i8] c"has a different value\00", align 1
@.str83727 = private unnamed_addr constant [60 x i8] c"@       WARNING: POSSIBLE DNS SPOOFING DETECTED!          @\00", align 1
@.str84728 = private unnamed_addr constant [36 x i8] c"The %s host key for %s has changed,\00", align 1
@.str85729 = private unnamed_addr constant [48 x i8] c"and the key for the corresponding IP address %s\00", align 1
@.str86730 = private unnamed_addr constant [32 x i8] c"%s. This could either mean that\00", align 1
@.str87731 = private unnamed_addr constant [57 x i8] c"DNS SPOOFING is happening or the IP address for the host\00", align 1
@.str88732 = private unnamed_addr constant [48 x i8] c"and its host key have changed at the same time.\00", align 1
@.str89733 = private unnamed_addr constant [31 x i8] c"Offending key for IP in %s:%lu\00", align 1
@.str90734 = private unnamed_addr constant [59 x i8] c"Add correct host key in %.100s to get rid of this message.\00", align 1
@.str91735 = private unnamed_addr constant [27 x i8] c"Offending %s key in %s:%lu\00", align 1
@.str92736 = private unnamed_addr constant [75 x i8] c"%s host key for %.200s has changed and you have requested strict checking.\00", align 1
@.str93737 = private unnamed_addr constant [72 x i8] c"Password authentication is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str94738 = private unnamed_addr constant [84 x i8] c"Keyboard-interactive authentication is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str95739 = private unnamed_addr constant [82 x i8] c"Challenge/response authentication is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str96740 = private unnamed_addr constant [65 x i8] c"Agent forwarding is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str97741 = private unnamed_addr constant [63 x i8] c"X11 forwarding is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str98742 = private unnamed_addr constant [64 x i8] c"Port forwarding is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str99743 = private unnamed_addr constant [66 x i8] c"Tunnel forwarding is disabled to avoid man-in-the-middle attacks.\00", align 1
@.str100744 = private unnamed_addr constant [57 x i8] c"Error: forwarding disabled due to host key check failure\00", align 1
@.str101745 = private unnamed_addr constant [15 x i8] c"internal error\00", align 1
@.str102746 = private unnamed_addr constant [118 x i8] c"Warning: the %s host key for '%.200s' differs from the key for the IP address '%.128s'\0AOffending key for IP in %s:%lu\00", align 1
@.str103747 = private unnamed_addr constant [29 x i8] c"\0AMatching host key in %s:%lu\00", align 1
@.str104748 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str105749 = private unnamed_addr constant [45 x i8] c"Exiting, you have requested strict checking.\00", align 1
@.str106750 = private unnamed_addr constant [57 x i8] c"\0AAre you sure you want to continue connecting (yes/no)? \00", align 1
@.str107751 = private unnamed_addr constant [70 x i8] c"%s: hostkey not known or explicitly trusted: disabling UpdateHostkeys\00", align 1
@.str108752 = private unnamed_addr constant [43 x i8] c"No matching CA found. Retry with plain key\00", align 1
@.str109753 = private unnamed_addr constant [26 x i8] c"Couldn't drop certificate\00", align 1
@.str110754 = private unnamed_addr constant [28 x i8] c"Please type 'yes' or 'no': \00", align 1
@.str111755 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str112756 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@show_other_keys.type = private unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 -1], align 16
@__func__.show_other_keys = private unnamed_addr constant [16 x i8] c"show_other_keys\00", align 1
@.str113757 = private unnamed_addr constant [67 x i8] c"WARNING: %s key found for host %s\0Ain %s:%lu\0A%s key fingerprint %s.\00", align 1
@.str114758 = private unnamed_addr constant [60 x i8] c"Certificate for %s contains unsupported critical options(s)\00", align 1
@.str115759 = private unnamed_addr constant [19 x i8] c"SSH-%d.%d-%.100s\0D\0A\00", align 1
@.str116760 = private unnamed_addr constant [12 x i8] c"OpenSSH_7.4\00", align 1
@.str117761 = private unnamed_addr constant [18 x i8] c"SSH-%d.%d-%.100s\0A\00", align 1
@.str118762 = private unnamed_addr constant [14 x i8] c"write: %.100s\00", align 1
@.str119763 = private unnamed_addr constant [28 x i8] c"Local version string %.100s\00", align 1
@.str120764 = private unnamed_addr constant [61 x i8] c"Could not create pipes to communicate with the proxy: %.100s\00", align 1
@.str121765 = private unnamed_addr constant [32 x i8] c"Executing proxy command: %.500s\00", align 1
@.str122766 = private unnamed_addr constant [11 x i8] c"dup2 stdin\00", align 1
@.str123767 = private unnamed_addr constant [12 x i8] c"dup2 stdout\00", align 1
@.str124768 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str125769 = private unnamed_addr constant [8 x i8] c"exec %s\00", align 1
@.str126770 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str127771 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str128772 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str129773 = private unnamed_addr constant [69 x i8] c"Could not create socketpair to communicate with proxy dialer: %.100s\00", align 1
@.str130774 = private unnamed_addr constant [39 x i8] c"Executing proxy dialer command: %.500s\00", align 1
@.str131775 = private unnamed_addr constant [44 x i8] c"proxy dialer did not pass back a connection\00", align 1
@.str132776 = private unnamed_addr constant [16 x i8] c"%s: needpriv %d\00", align 1
@__func__.ssh_connect_direct = private unnamed_addr constant [19 x i8] c"ssh_connect_direct\00", align 1
@.str133777 = private unnamed_addr constant [16 x i8] c"Trying again...\00", align 1
@.str134778 = private unnamed_addr constant [39 x i8] c"Connecting to %.200s [%.100s] port %s.\00", align 1
@.str135779 = private unnamed_addr constant [57 x i8] c"****\0A sshconnect.c Line 462, shen login time begin: ***\0A\00", align 1
@.str136780 = private unnamed_addr constant [34 x i8] c"connect to address %s port %s: %s\00", align 1
@.str137781 = private unnamed_addr constant [36 x i8] c"ssh: connect to host %s port %s: %s\00", align 1
@.str138782 = private unnamed_addr constant [24 x i8] c"Connection established.\00", align 1
@.str139783 = private unnamed_addr constant [32 x i8] c"setsockopt SO_KEEPALIVE: %.100s\00", align 1
@.str140784 = private unnamed_addr constant [11 x i8] c"select: %s\00", align 1
@.str141785 = private unnamed_addr constant [15 x i8] c"getsockopt: %s\00", align 1
@.str142786 = private unnamed_addr constant [32 x i8] c"Bogus return (%d) from select()\00", align 1
@.str143787 = private unnamed_addr constant [11 x i8] c"socket: %s\00", align 1
@.str144788 = private unnamed_addr constant [20 x i8] c"getaddrinfo: %s: %s\00", align 1
@.str145789 = private unnamed_addr constant [24 x i8] c"PRIV_START: seteuid: %s\00", align 1
@.str146790 = private unnamed_addr constant [22 x i8] c"PRIV_END: seteuid: %s\00", align 1
@.str147791 = private unnamed_addr constant [26 x i8] c"bindresvport_sa: af=%d %s\00", align 1
@.str148792 = private unnamed_addr constant [13 x i8] c"bind: %s: %s\00", align 1
@session_id2 = global i8* null, align 8
@session_id2_len = global i32 0, align 4
@.str803 = private unnamed_addr constant [294 x i8] c"curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha256,diffie-hellman-group14-sha1\00", align 1
@.str1804 = private unnamed_addr constant [291 x i8] c"ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp521-cert-v01@openssh.com,ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa\00", align 1
@.str2805 = private unnamed_addr constant [142 x i8] c"chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,aes128-cbc,aes192-cbc,aes256-cbc\00", align 1
@.str3806 = private unnamed_addr constant [214 x i8] c"umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-256,hmac-sha2-512,hmac-sha1\00", align 1
@.str4807 = private unnamed_addr constant [22 x i8] c"none,zlib@openssh.com\00", align 1
@.str5808 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@ssh_kex2.myproposal = private unnamed_addr constant [10 x i8*] [i8* getelementptr inbounds ([294 x i8]* @.str803, i32 0, i32 0), i8* getelementptr inbounds ([291 x i8]* @.str1804, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8]* @.str2805, i32 0, i32 0), i8* getelementptr inbounds ([142 x i8]* @.str2805, i32 0, i32 0), i8* getelementptr inbounds ([214 x i8]* @.str3806, i32 0, i32 0), i8* getelementptr inbounds ([214 x i8]* @.str3806, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str4807, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str4807, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0)], align 16
@xxx_host = common global i8* null, align 8
@xxx_hostaddr = common global %struct.sockaddr* null, align 8
@.str6809 = private unnamed_addr constant [11 x i8] c"ext-info-c\00", align 1
@.str7810 = private unnamed_addr constant [18 x i8] c"%s: kex_names_cat\00", align 1
@__func__.ssh_kex2 = private unnamed_addr constant [9 x i8] c"ssh_kex2\00", align 1
@.str8811 = private unnamed_addr constant [27 x i8] c"zlib@openssh.com,zlib,none\00", align 1
@.str9812 = private unnamed_addr constant [27 x i8] c"none,zlib@openssh.com,zlib\00", align 1
@.str10813 = private unnamed_addr constant [26 x i8] c"%s: kex_assemble_namelist\00", align 1
@.str11814 = private unnamed_addr constant [14 x i8] c"kex_setup: %s\00", align 1
@.str12815 = private unnamed_addr constant [17 x i8] c"kex_prop2buf: %s\00", align 1
@.str13816 = private unnamed_addr constant [10 x i8] c"hostbased\00", align 1
@.str14817 = private unnamed_addr constant [10 x i8] c"publickey\00", align 1
@.str15818 = private unnamed_addr constant [21 x i8] c"keyboard-interactive\00", align 1
@.str16819 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@.str17820 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@authmethods = global [6 x %struct.cauthmethod] [%struct.cauthmethod { i8* getelementptr inbounds ([10 x i8]* @.str13816, i32 0, i32 0), i32 (%struct.cauthctxt*)* @userauth_hostbased, void (%struct.cauthctxt*)* null, i32* bitcast (i8* getelementptr (i8* bitcast (%struct.Options* @options to i8*), i64 60) to i32*), i32* null }, %struct.cauthmethod { i8* getelementptr inbounds ([10 x i8]* @.str14817, i32 0, i32 0), i32 (%struct.cauthctxt*)* @userauth_pubkey, void (%struct.cauthctxt*)* null, i32* bitcast (i8* getelementptr (i8* bitcast (%struct.Options* @options to i8*), i64 56) to i32*), i32* null }, %struct.cauthmethod { i8* getelementptr inbounds ([21 x i8]* @.str15818, i32 0, i32 0), i32 (%struct.cauthctxt*)* @userauth_kbdint, void (%struct.cauthctxt*)* null, i32* bitcast (i8* getelementptr (i8* bitcast (%struct.Options* @options to i8*), i64 80) to i32*), i32* bitcast (i8* getelementptr (i8* bitcast (%struct.Options* @options to i8*), i64 96) to i32*) }, %struct.cauthmethod { i8* getelementptr inbounds ([9 x i8]* @.str16819, i32 0, i32 0), i32 (%struct.cauthctxt*)* @userauth_passwd, void (%struct.cauthctxt*)* null, i32* bitcast (i8* getelementptr (i8* bitcast (%struct.Options* @options to i8*), i64 76) to i32*), i32* bitcast (i8* getelementptr (i8* bitcast (%struct.Options* @options to i8*), i64 96) to i32*) }, %struct.cauthmethod { i8* getelementptr inbounds ([5 x i8]* @.str17820, i32 0, i32 0), i32 (%struct.cauthctxt*)* @userauth_none, void (%struct.cauthctxt*)* null, i32* null, i32* null }, %struct.cauthmethod zeroinitializer], align 16
@.str18821 = private unnamed_addr constant [15 x i8] c"ssh-connection\00", align 1
@.str19822 = private unnamed_addr constant [65 x i8] c"ssh_userauth2: internal error: cannot send userauth none request\00", align 1
@.str20823 = private unnamed_addr constant [13 x i8] c"ssh-userauth\00", align 1
@.str21824 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@__func__.ssh_userauth2 = private unnamed_addr constant [14 x i8] c"ssh_userauth2\00", align 1
@.str22825 = private unnamed_addr constant [23 x i8] c"Authentication failed.\00", align 1
@.str23826 = private unnamed_addr constant [31 x i8] c"Authentication succeeded (%s).\00", align 1
@.str24827 = private unnamed_addr constant [19 x i8] c"service_accept: %s\00", align 1
@.str25828 = private unnamed_addr constant [41 x i8] c"buggy server: service_accept w/o service\00", align 1
@.str26829 = private unnamed_addr constant [33 x i8] c"SSH2_MSG_SERVICE_ACCEPT received\00", align 1
@.str27830 = private unnamed_addr constant [24 x i8] c"Permission denied (%s).\00", align 1
@.str28831 = private unnamed_addr constant [36 x i8] c"we sent a %s packet, wait for reply\00", align 1
@.str29832 = private unnamed_addr constant [41 x i8] c"we did not send a packet, disable method\00", align 1
@.str30833 = private unnamed_addr constant [65 x i8] c"input_userauth_error: bad message during authentication: type %d\00", align 1
@.str31834 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@__func__.input_userauth_banner = private unnamed_addr constant [22 x i8] c"input_userauth_banner\00", align 1
@.str32835 = private unnamed_addr constant [50 x i8] c"input_userauth_success: no authentication context\00", align 1
@.str33836 = private unnamed_addr constant [30 x i8] c"%s: no authentication context\00", align 1
@__func__.input_userauth_success_unexpected = private unnamed_addr constant [34 x i8] c"input_userauth_success_unexpected\00", align 1
@.str34837 = private unnamed_addr constant [45 x i8] c"Unexpected authentication success during %s.\00", align 1
@.str35838 = private unnamed_addr constant [50 x i8] c"input_userauth_failure: no authentication context\00", align 1
@.str36839 = private unnamed_addr constant [53 x i8] c"Packet integrity error (%d bytes remaining) at %s:%d\00", align 1
@.str37840 = private unnamed_addr constant [14 x i8] c"sshconnect2.c\00", align 1
@.str38841 = private unnamed_addr constant [24 x i8] c"Packet integrity error.\00", align 1
@.str39842 = private unnamed_addr constant [36 x i8] c"Authenticated with partial success.\00", align 1
@.str40843 = private unnamed_addr constant [38 x i8] c"Authentications that can continue: %s\00", align 1
@.str41844 = private unnamed_addr constant [48 x i8] c"input_userauth_pk_ok: no authentication context\00", align 1
@.str42845 = private unnamed_addr constant [35 x i8] c"input_userauth_pk_ok: SSH_BUG_PKOK\00", align 1
@.str43846 = private unnamed_addr constant [37 x i8] c"Server accepts key: pkalg %s blen %u\00", align 1
@.str44847 = private unnamed_addr constant [17 x i8] c"unknown pkalg %s\00", align 1
@.str45848 = private unnamed_addr constant [27 x i8] c"no key from blob. pkalg %s\00", align 1
@.str46849 = private unnamed_addr constant [79 x i8] c"input_userauth_pk_ok: type mismatch for decoded key (received %d, expected %d)\00", align 1
@.str47850 = private unnamed_addr constant [28 x i8] c"input_userauth_pk_ok: fp %s\00", align 1
@userauth_passwd.attempt = internal global i32 0, align 4
@.str48851 = private unnamed_addr constant [37 x i8] c"Permission denied, please try again.\00", align 1
@.str49852 = private unnamed_addr constant [26 x i8] c"%.30s@%.128s's password: \00", align 1
@.str50853 = private unnamed_addr constant [32 x i8] c"input_userauth_passwd_changereq\00", align 1
@.str51854 = private unnamed_addr constant [59 x i8] c"input_userauth_passwd_changereq: no authentication context\00", align 1
@.str52855 = private unnamed_addr constant [36 x i8] c"Enter %.30s@%.128s's old password: \00", align 1
@.str53856 = private unnamed_addr constant [36 x i8] c"Enter %.30s@%.128s's new password: \00", align 1
@.str54857 = private unnamed_addr constant [37 x i8] c"Retype %.30s@%.128s's new password: \00", align 1
@.str55858 = private unnamed_addr constant [34 x i8] c"Mismatch; try again, EOF to quit.\00", align 1
@.str56859 = private unnamed_addr constant [27 x i8] c"Offering %s public key: %s\00", align 1
@.str57860 = private unnamed_addr constant [23 x i8] c"Trying private key: %s\00", align 1
@userauth_kbdint.attempt = internal global i32 0, align 4
@.str58861 = private unnamed_addr constant [43 x i8] c"userauth_kbdint: disable: no info_req_seen\00", align 1
@.str59862 = private unnamed_addr constant [16 x i8] c"userauth_kbdint\00", align 1
@.str60863 = private unnamed_addr constant [24 x i8] c"input_userauth_info_req\00", align 1
@.str61864 = private unnamed_addr constant [51 x i8] c"input_userauth_info_req: no authentication context\00", align 1
@.str62865 = private unnamed_addr constant [40 x i8] c"input_userauth_info_req: num_prompts %d\00", align 1
@.str63866 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str64867 = private unnamed_addr constant [23 x i8] c"%s: trying key type %s\00", align 1
@__func__.userauth_hostbased = private unnamed_addr constant [19 x i8] c"userauth_hostbased\00", align 1
@.str65868 = private unnamed_addr constant [54 x i8] c"No more client hostkeys for hostbased authentication.\00", align 1
@.str66869 = private unnamed_addr constant [30 x i8] c"%s: sshkey_fingerprint failed\00", align 1
@.str67870 = private unnamed_addr constant [25 x i8] c"%s: trying hostkey %s %s\00", align 1
@.str68871 = private unnamed_addr constant [33 x i8] c"%s: cannot get local ipaddr/name\00", align 1
@.str69872 = private unnamed_addr constant [4 x i8] c"%s.\00", align 1
@.str70873 = private unnamed_addr constant [13 x i8] c"%s: chost %s\00", align 1
@.str71874 = private unnamed_addr constant [22 x i8] c"%s: sshbuf_new failed\00", align 1
@.str72875 = private unnamed_addr constant [23 x i8] c"%s: sshkey_to_blob: %s\00", align 1
@.str73876 = private unnamed_addr constant [21 x i8] c"%s: buffer error: %s\00", align 1
@.str74877 = private unnamed_addr constant [20 x i8] c"%s: sshkey_sign: %s\00", align 1
@.str75878 = private unnamed_addr constant [32 x i8] c"sign using hostkey %s %s failed\00", align 1
@.str76879 = private unnamed_addr constant [21 x i8] c"%s: packet error: %s\00", align 1
@.str77880 = private unnamed_addr constant [29 x i8] c"%s: sshbuf_dup_string failed\00", align 1
@__func__.authmethods_get = private unnamed_addr constant [16 x i8] c"authmethods_get\00", align 1
@supported = internal global i8* null, align 8
@.str78881 = private unnamed_addr constant [39 x i8] c"start over, passed a different list %s\00", align 1
@preferred = internal global i8* null, align 8
@.str79882 = private unnamed_addr constant [13 x i8] c"preferred %s\00", align 1
@current = internal global %struct.cauthmethod* null, align 8
@.str80883 = private unnamed_addr constant [39 x i8] c"No more authentication methods to try.\00", align 1
@.str81884 = private unnamed_addr constant [21 x i8] c"authmethod_lookup %s\00", align 1
@.str82885 = private unnamed_addr constant [24 x i8] c"remaining preferred: %s\00", align 1
@.str83886 = private unnamed_addr constant [25 x i8] c"authmethod_is_enabled %s\00", align 1
@.str84887 = private unnamed_addr constant [31 x i8] c"Next authentication method: %s\00", align 1
@.str85888 = private unnamed_addr constant [44 x i8] c"Unrecognized authentication method name: %s\00", align 1
@.str86889 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str87890 = private unnamed_addr constant [31 x i8] c"/usr/local/libexec/ssh-keysign\00", align 1
@.str88891 = private unnamed_addr constant [22 x i8] c"%s: not installed: %s\00", align 1
@__func__.ssh_keysign = private unnamed_addr constant [12 x i8] c"ssh_keysign\00", align 1
@.str89892 = private unnamed_addr constant [15 x i8] c"%s: fflush: %s\00", align 1
@.str90893 = private unnamed_addr constant [13 x i8] c"%s: pipe: %s\00", align 1
@.str91894 = private unnamed_addr constant [13 x i8] c"%s: fork: %s\00", align 1
@.str92895 = private unnamed_addr constant [13 x i8] c"%s: dup2: %s\00", align 1
@.str93896 = private unnamed_addr constant [29 x i8] c"%s: [child] pid=%ld, exec %s\00", align 1
@.str94897 = private unnamed_addr constant [17 x i8] c"%s: exec(%s): %s\00", align 1
@.str95898 = private unnamed_addr constant [26 x i8] c"%s: couldn't send request\00", align 1
@.str96899 = private unnamed_addr constant [13 x i8] c"%s: no reply\00", align 1
@.str97900 = private unnamed_addr constant [20 x i8] c"%s: waitpid %ld: %s\00", align 1
@.str98901 = private unnamed_addr constant [22 x i8] c"%s: exited abnormally\00", align 1
@.str99902 = private unnamed_addr constant [26 x i8] c"%s: exited with status %d\00", align 1
@.str100903 = private unnamed_addr constant [16 x i8] c"%s: bad version\00", align 1
@.str101904 = private unnamed_addr constant [10 x i8] c"sensitive\00", section "llvm.metadata"
@.str102905 = private unnamed_addr constant [14 x i8] c"sshconnect2.c\00", section "llvm.metadata"
@.str103906 = private unnamed_addr constant [25 x i8] c"no such identity: %s: %s\00", align 1
@.str104907 = private unnamed_addr constant [36 x i8] c"Enter passphrase for key '%.100s': \00", align 1
@.str105908 = private unnamed_addr constant [34 x i8] c"no passphrase given, try next key\00", align 1
@.str106909 = private unnamed_addr constant [35 x i8] c"bad passphrase given, try again...\00", align 1
@.str107910 = private unnamed_addr constant [18 x i8] c"Load key \22%s\22: %s\00", align 1
@.str108911 = private unnamed_addr constant [17 x i8] c"send_pubkey_test\00", align 1
@.str109912 = private unnamed_addr constant [36 x i8] c"send_pubkey_test: cannot handle key\00", align 1
@.str110913 = private unnamed_addr constant [13 x i8] c"rsa-sha2-256\00", align 1
@.str111914 = private unnamed_addr constant [13 x i8] c"rsa-sha2-512\00", align 1
@.str112915 = private unnamed_addr constant [37 x i8] c"Skipped %s key %s for RSA/MD5 server\00", align 1
@.str113916 = private unnamed_addr constant [38 x i8] c"%s: ssh_get_authentication_socket: %s\00", align 1
@__func__.pubkey_prepare = private unnamed_addr constant [15 x i8] c"pubkey_prepare\00", align 1
@.str114917 = private unnamed_addr constant [31 x i8] c"%s: ssh_fetch_identitylist: %s\00", align 1
@.str115918 = private unnamed_addr constant [51 x i8] c"Skipping %s key %s - not in PubkeyAcceptedKeyTypes\00", align 1
@.str116919 = private unnamed_addr constant [17 x i8] c"key: %s (%p)%s%s\00", align 1
@.str117920 = private unnamed_addr constant [11 x i8] c", explicit\00", align 1
@.str118921 = private unnamed_addr constant [8 x i8] c", agent\00", align 1
@.str119922 = private unnamed_addr constant [10 x i8] c"%s: %s %s\00", align 1
@__func__.sign_and_send_pubkey = private unnamed_addr constant [21 x i8] c"sign_and_send_pubkey\00", align 1
@.str120923 = private unnamed_addr constant [40 x i8] c"sign_and_send_pubkey: cannot handle key\00", align 1
@.str121924 = private unnamed_addr constant [45 x i8] c"%s: using private key \22%s\22%s for certificate\00", align 1
@.str122925 = private unnamed_addr constant [12 x i8] c" from agent\00", align 1
@.str123926 = private unnamed_addr constant [49 x i8] c"%s: no separate private key for certificate \22%s\22\00", align 1
@.str124927 = private unnamed_addr constant [23 x i8] c"%s: signing failed: %s\00", align 1
@.str125928 = private unnamed_addr constant [32 x i8] c"userauth_pubkey: internal error\00", align 1
@.str126929 = private unnamed_addr constant [30 x i8] c"Host key verification failed.\00", align 1
@.str127930 = private unnamed_addr constant [19 x i8] c"%s: unknown alg %s\00", align 1
@__func__.order_hostkeyalgs = private unnamed_addr constant [18 x i8] c"order_hostkeyalgs\00", align 1
@.str128931 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str129932 = private unnamed_addr constant [27 x i8] c"%s: prefer hostkeyalgs: %s\00", align 1
@muxserver_sock = global i32 -1, align 4
@muxclient_request_id = global i32 0, align 4
@muxclient_command = global i32 0, align 4
@.str941 = private unnamed_addr constant [41 x i8] c"%s: channel %d: exit message, exitval %d\00", align 1
@__func__.mux_exit_message = private unnamed_addr constant [17 x i8] c"mux_exit_message\00", align 1
@.str1942 = private unnamed_addr constant [38 x i8] c"%s: channel %d missing mux channel %d\00", align 1
@.str2943 = private unnamed_addr constant [33 x i8] c"%s: channel %d: TTY alloc failed\00", align 1
@__func__.mux_tty_alloc_failed = private unnamed_addr constant [21 x i8] c"mux_tty_alloc_failed\00", align 1
@.str3944 = private unnamed_addr constant [35 x i8] c"setting up multiplex master socket\00", align 1
@.str4945 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@.str5946 = private unnamed_addr constant [30 x i8] c"%s: temporary control path %s\00", align 1
@__func__.muxserver_listen = private unnamed_addr constant [17 x i8] c"muxserver_listen\00", align 1
@.str6947 = private unnamed_addr constant [56 x i8] c"ControlSocket %s already exists, disabling multiplexing\00", align 1
@.str7948 = private unnamed_addr constant [35 x i8] c"%s: link mux listener %s => %s: %s\00", align 1
@.str8949 = private unnamed_addr constant [13 x i8] c"mux listener\00", align 1
@mux_listener_channel = internal global %struct.Channel* null, align 8
@.str9950 = private unnamed_addr constant [34 x i8] c"%s: mux listener channel %d fd %d\00", align 1
@.str10951 = private unnamed_addr constant [33 x i8] c"auto-mux: Trying existing master\00", align 1
@.str11952 = private unnamed_addr constant [40 x i8] c"ControlPath too long ('%s' >= %u bytes)\00", align 1
@.str12953 = private unnamed_addr constant [16 x i8] c"%s socket(): %s\00", align 1
@__func__.muxclient = private unnamed_addr constant [10 x i8] c"muxclient\00", align 1
@.str13954 = private unnamed_addr constant [35 x i8] c"Control socket connect(%.100s): %s\00", align 1
@.str14955 = private unnamed_addr constant [39 x i8] c"Stale control socket %.100s, unlinking\00", align 1
@.str15956 = private unnamed_addr constant [39 x i8] c"Control socket \22%.100s\22 does not exist\00", align 1
@.str16957 = private unnamed_addr constant [33 x i8] c"%s: master hello exchange failed\00", align 1
@.str17958 = private unnamed_addr constant [30 x i8] c"%s: master alive check failed\00", align 1
@.str18959 = private unnamed_addr constant [26 x i8] c"Master running (pid=%u)\0D\0A\00", align 1
@.str19960 = private unnamed_addr constant [21 x i8] c"Exit request sent.\0D\0A\00", align 1
@.str20961 = private unnamed_addr constant [34 x i8] c"%s: master forward request failed\00", align 1
@.str21962 = private unnamed_addr constant [31 x i8] c"Stop listening request sent.\0D\0A\00", align 1
@.str22963 = private unnamed_addr constant [41 x i8] c"%s: master cancel forward request failed\00", align 1
@.str23964 = private unnamed_addr constant [34 x i8] c"unrecognised muxclient_command %d\00", align 1
@.str24965 = private unnamed_addr constant [21 x i8] c"%s: write packet: %s\00", align 1
@__func__.mux_client_proxy = private unnamed_addr constant [17 x i8] c"mux_client_proxy\00", align 1
@.str25966 = private unnamed_addr constant [30 x i8] c"%s: master returned error: %s\00", align 1
@.str26967 = private unnamed_addr constant [46 x i8] c"%s: out of sequence reply: my id %u theirs %u\00", align 1
@.str27968 = private unnamed_addr constant [9 x i8] c"%s: done\00", align 1
@.str28969 = private unnamed_addr constant [27 x i8] c"%s: read header failed: %s\00", align 1
@__func__.mux_client_read_packet = private unnamed_addr constant [23 x i8] c"mux_client_read_packet\00", align 1
@.str29970 = private unnamed_addr constant [25 x i8] c"%s: read body failed: %s\00", align 1
@muxclient_terminate = internal global i32 0, align 4
@.str30971 = private unnamed_addr constant [13 x i8] c"%s: entering\00", align 1
@__func__.mux_client_request_stop_listening = private unnamed_addr constant [34 x i8] c"mux_client_request_stop_listening\00", align 1
@.str31972 = private unnamed_addr constant [32 x i8] c"%s: read from master failed: %s\00", align 1
@.str32973 = private unnamed_addr constant [42 x i8] c"Master refused stop listening request: %s\00", align 1
@.str33974 = private unnamed_addr constant [38 x i8] c"%s: stop listening request failed: %s\00", align 1
@.str34975 = private unnamed_addr constant [43 x i8] c"%s: unexpected response from master 0x%08x\00", align 1
@__func__.mux_client_request_stdio_fwd = private unnamed_addr constant [29 x i8] c"mux_client_request_stdio_fwd\00", align 1
@muxserver_pid = internal global i32 0, align 4
@.str35976 = private unnamed_addr constant [32 x i8] c"%s: master alive request failed\00", align 1
@.str36977 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str37978 = private unnamed_addr constant [20 x i8] c"open(/dev/null): %s\00", align 1
@.str38979 = private unnamed_addr constant [9 x i8] c"dup2: %s\00", align 1
@.str39980 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str40981 = private unnamed_addr constant [20 x i8] c"%s: send fds failed\00", align 1
@.str41982 = private unnamed_addr constant [15 x i8] c"stdio proc tty\00", align 1
@.str42983 = private unnamed_addr constant [16 x i8] c"%s pledge(): %s\00", align 1
@.str43984 = private unnamed_addr constant [31 x i8] c"%s: stdio forward request sent\00", align 1
@.str44985 = private unnamed_addr constant [26 x i8] c"%s: master session id: %u\00", align 1
@.str45986 = private unnamed_addr constant [44 x i8] c"Master refused stdio forwarding request: %s\00", align 1
@.str46987 = private unnamed_addr constant [36 x i8] c"Stdio forwarding request failed: %s\00", align 1
@.str47988 = private unnamed_addr constant [31 x i8] c"%s: mux_client_read_packet: %s\00", align 1
@.str48989 = private unnamed_addr constant [42 x i8] c"%s: master returned unexpected message %u\00", align 1
@__func__.mux_client_request_session = private unnamed_addr constant [27 x i8] c"mux_client_request_session\00", align 1
@.str49990 = private unnamed_addr constant [5 x i8] c"TERM\00", align 1
@.str50991 = private unnamed_addr constant [25 x i8] c"%s: session request sent\00", align 1
@.str51992 = private unnamed_addr constant [35 x i8] c"Master refused session request: %s\00", align 1
@.str52993 = private unnamed_addr constant [31 x i8] c"%s: session request failed: %s\00", align 1
@.str53994 = private unnamed_addr constant [58 x i8] c"%s: tty alloc fail on unknown session: my id %u theirs %u\00", align 1
@.str54995 = private unnamed_addr constant [48 x i8] c"%s: exit on unknown session: my id %u theirs %u\00", align 1
@.str55996 = private unnamed_addr constant [23 x i8] c"%s: exitval sent twice\00", align 1
@.str56997 = private unnamed_addr constant [21 x i8] c"Exiting on signal %d\00", align 1
@.str57998 = private unnamed_addr constant [39 x i8] c"Control master terminated unexpectedly\00", align 1
@.str58999 = private unnamed_addr constant [36 x i8] c"Received exit status from master %d\00", align 1
@.str591000 = private unnamed_addr constant [34 x i8] c"Shared connection to %s closed.\0D\0A\00", align 1
@.str601001 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str611002 = private unnamed_addr constant [41 x i8] c"env_permitted: name '%.100s...' too long\00", align 1
@.str621003 = private unnamed_addr constant [40 x i8] c"%s: %s forwardings: %d local, %d remote\00", align 1
@__func__.mux_client_forwards = private unnamed_addr constant [20 x i8] c"mux_client_forwards\00", align 1
@.str631004 = private unnamed_addr constant [7 x i8] c"cancel\00", align 1
@.str641005 = private unnamed_addr constant [8 x i8] c"request\00", align 1
@.str651006 = private unnamed_addr constant [17 x i8] c"Requesting %s %s\00", align 1
@.str661007 = private unnamed_addr constant [16 x i8] c"cancellation of\00", align 1
@.str671008 = private unnamed_addr constant [14 x i8] c"forwarding of\00", align 1
@.str681009 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@__func__.mux_client_forward = private unnamed_addr constant [19 x i8] c"mux_client_forward\00", align 1
@.str691010 = private unnamed_addr constant [37 x i8] c"%s: got MUX_S_REMOTE_PORT for cancel\00", align 1
@.str701011 = private unnamed_addr constant [46 x i8] c"Allocated port %u for remote forward to %s:%d\00", align 1
@.str711012 = private unnamed_addr constant [4 x i8] c"%i\0A\00", align 1
@.str721013 = private unnamed_addr constant [38 x i8] c"Master refused forwarding request: %s\00", align 1
@.str731014 = private unnamed_addr constant [34 x i8] c"%s: forwarding request failed: %s\00", align 1
@.str741015 = private unnamed_addr constant [37 x i8] c"local forward %.200s:%d -> %.200s:%d\00", align 1
@.str751016 = private unnamed_addr constant [10 x i8] c"LOCALHOST\00", align 1
@.str761017 = private unnamed_addr constant [31 x i8] c"dynamic forward %.200s:%d -> *\00", align 1
@.str771018 = private unnamed_addr constant [38 x i8] c"remote forward %.200s:%d -> %.200s:%d\00", align 1
@.str781019 = private unnamed_addr constant [28 x i8] c"%s: unknown forward type %u\00", align 1
@__func__.format_forward = private unnamed_addr constant [15 x i8] c"format_forward\00", align 1
@__func__.mux_client_request_terminate = private unnamed_addr constant [29 x i8] c"mux_client_request_terminate\00", align 1
@.str791020 = private unnamed_addr constant [39 x i8] c"Master refused termination request: %s\00", align 1
@.str801021 = private unnamed_addr constant [35 x i8] c"%s: termination request failed: %s\00", align 1
@__func__.mux_client_request_alive = private unnamed_addr constant [25 x i8] c"mux_client_request_alive\00", align 1
@.str811022 = private unnamed_addr constant [18 x i8] c"%s: done pid = %u\00", align 1
@__func__.mux_client_hello_exchange = private unnamed_addr constant [26 x i8] c"mux_client_hello_exchange\00", align 1
@.str821023 = private unnamed_addr constant [36 x i8] c"%s: expected HELLO (%u) received %u\00", align 1
@.str831024 = private unnamed_addr constant [59 x i8] c"Unsupported multiplexing protocol version %d (expected %d)\00", align 1
@.str841025 = private unnamed_addr constant [22 x i8] c"%s: master version %u\00", align 1
@.str851026 = private unnamed_addr constant [35 x i8] c"Unrecognised master extension \22%s\22\00", align 1
@.str861027 = private unnamed_addr constant [27 x i8] c"%s: channel %d: hello sent\00", align 1
@__func__.mux_master_read_cb = private unnamed_addr constant [19 x i8] c"mux_master_read_cb\00", align 1
@.str871028 = private unnamed_addr constant [22 x i8] c"%s: malformed message\00", align 1
@.str881029 = private unnamed_addr constant [41 x i8] c"%s: channel %d packet type 0x%08x len %u\00", align 1
@.str891030 = private unnamed_addr constant [52 x i8] c"%s: expected MUX_MSG_HELLO(0x%08x), received 0x%08x\00", align 1
@mux_master_handlers = internal constant [10 x %struct.anon.1.214] [%struct.anon.1.214 { i32 1, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_master_hello }, %struct.anon.1.214 { i32 268435458, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_new_session }, %struct.anon.1.214 { i32 268435460, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_alive_check }, %struct.anon.1.214 { i32 268435461, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_terminate }, %struct.anon.1.214 { i32 268435462, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_open_fwd }, %struct.anon.1.214 { i32 268435463, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_close_fwd }, %struct.anon.1.214 { i32 268435464, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_stdio_fwd }, %struct.anon.1.214 { i32 268435465, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_stop_listening }, %struct.anon.1.214 { i32 268435471, i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* @process_mux_proxy }, %struct.anon.1.214 zeroinitializer], align 16
@.str901031 = private unnamed_addr constant [35 x i8] c"%s: unsupported mux message 0x%08x\00", align 1
@.str911032 = private unnamed_addr constant [20 x i8] c"unsupported request\00", align 1
@.str921033 = private unnamed_addr constant [30 x i8] c"%s: channel %d: proxy request\00", align 1
@__func__.process_mux_proxy = private unnamed_addr constant [18 x i8] c"process_mux_proxy\00", align 1
@.str931034 = private unnamed_addr constant [31 x i8] c"%s: channel %d: stop listening\00", align 1
@__func__.process_mux_stop_listening = private unnamed_addr constant [27 x i8] c"process_mux_stop_listening\00", align 1
@.str941035 = private unnamed_addr constant [58 x i8] c"Disable further multiplexing on shared connection to %s? \00", align 1
@.str951036 = private unnamed_addr constant [32 x i8] c"%s: stop listen refused by user\00", align 1
@.str961037 = private unnamed_addr constant [18 x i8] c"Permission denied\00", align 1
@__func__.process_mux_stdio_fwd = private unnamed_addr constant [22 x i8] c"process_mux_stdio_fwd\00", align 1
@.str971038 = private unnamed_addr constant [43 x i8] c"%s: channel %d: request stdio fwd to %s:%u\00", align 1
@.str981039 = private unnamed_addr constant [39 x i8] c"%s: failed to receive fd %d from slave\00", align 1
@.str991040 = private unnamed_addr constant [33 x i8] c"did not receive file descriptors\00", align 1
@.str1001041 = private unnamed_addr constant [32 x i8] c"%s: got fds stdin %d, stdout %d\00", align 1
@.str1011042 = private unnamed_addr constant [25 x i8] c"%s: session already open\00", align 1
@.str1021043 = private unnamed_addr constant [32 x i8] c"Multiple sessions not supported\00", align 1
@.str1031044 = private unnamed_addr constant [25 x i8] c"Allow forward to %s:%u? \00", align 1
@.str1041045 = private unnamed_addr constant [30 x i8] c"%s: stdio fwd refused by user\00", align 1
@.str1051046 = private unnamed_addr constant [49 x i8] c"%s: channel_new: %d linked to control channel %d\00", align 1
@.str1061047 = private unnamed_addr constant [17 x i8] c"%s: cctx == NULL\00", align 1
@__func__.mux_stdio_confirm = private unnamed_addr constant [18 x i8] c"mux_stdio_confirm\00", align 1
@.str1071048 = private unnamed_addr constant [25 x i8] c"%s: no channel for id %d\00", align 1
@.str1081049 = private unnamed_addr constant [40 x i8] c"%s: channel %d lacks control channel %d\00", align 1
@.str1091050 = private unnamed_addr constant [26 x i8] c"%s: sending failure reply\00", align 1
@.str1101051 = private unnamed_addr constant [29 x i8] c"Session open refused by peer\00", align 1
@.str1111052 = private unnamed_addr constant [26 x i8] c"%s: sending success reply\00", align 1
@.str1121053 = private unnamed_addr constant [17 x i8] c"%s: mux_pause %d\00", align 1
@.str1131054 = private unnamed_addr constant [28 x i8] c"%s: entering for channel %d\00", align 1
@__func__.mux_master_session_cleanup_cb = private unnamed_addr constant [30 x i8] c"mux_master_session_cleanup_cb\00", align 1
@.str1141055 = private unnamed_addr constant [30 x i8] c"%s: channel_by_id(%i) == NULL\00", align 1
@.str1151056 = private unnamed_addr constant [42 x i8] c"%s: channel %d missing control channel %d\00", align 1
@__func__.process_mux_close_fwd = private unnamed_addr constant [22 x i8] c"process_mux_close_fwd\00", align 1
@.str1161057 = private unnamed_addr constant [34 x i8] c"%s: channel %d: request cancel %s\00", align 1
@.str1171058 = private unnamed_addr constant [19 x i8] c"port not forwarded\00", align 1
@.str1181059 = private unnamed_addr constant [28 x i8] c"port not in permitted opens\00", align 1
@.str1191060 = private unnamed_addr constant [15 x i8] c"port not found\00", align 1
@__func__.process_mux_open_fwd = private unnamed_addr constant [21 x i8] c"process_mux_open_fwd\00", align 1
@.str1201061 = private unnamed_addr constant [27 x i8] c"%s: channel %d: request %s\00", align 1
@.str1211062 = private unnamed_addr constant [31 x i8] c"%s: invalid forwarding type %u\00", align 1
@.str1221063 = private unnamed_addr constant [27 x i8] c"Invalid forwarding request\00", align 1
@.str1231064 = private unnamed_addr constant [60 x i8] c"%s: streamlocal and dynamic forwards are mutually exclusive\00", align 1
@.str1241065 = private unnamed_addr constant [27 x i8] c"%s: invalid listen port %u\00", align 1
@.str1251066 = private unnamed_addr constant [28 x i8] c"%s: invalid connect port %u\00", align 1
@.str1261067 = private unnamed_addr constant [25 x i8] c"%s: missing connect host\00", align 1
@.str1271068 = private unnamed_addr constant [30 x i8] c"%s: found existing forwarding\00", align 1
@.str1281069 = private unnamed_addr constant [25 x i8] c"%s: found allocated port\00", align 1
@.str1291070 = private unnamed_addr constant [15 x i8] c"Open %s on %s?\00", align 1
@.str1301071 = private unnamed_addr constant [31 x i8] c"%s: forwarding refused by user\00", align 1
@.str1311072 = private unnamed_addr constant [26 x i8] c"slave-requested %s failed\00", align 1
@.str1321073 = private unnamed_addr constant [23 x i8] c"Port forwarding failed\00", align 1
@.str1331074 = private unnamed_addr constant [20 x i8] c"%s: unknown channel\00", align 1
@__func__.mux_confirm_remote_forward = private unnamed_addr constant [27 x i8] c"mux_confirm_remote_forward\00", align 1
@.str1341075 = private unnamed_addr constant [25 x i8] c"unknown forwarding id %d\00", align 1
@.str1351076 = private unnamed_addr constant [37 x i8] c"%s: %s for: listen %d, connect %s:%d\00", align 1
@.str1361077 = private unnamed_addr constant [8 x i8] c"success\00", align 1
@.str1371078 = private unnamed_addr constant [8 x i8] c"failure\00", align 1
@.str1381079 = private unnamed_addr constant [50 x i8] c"Allocated port %u for mux remote forward to %s:%d\00", align 1
@.str1391080 = private unnamed_addr constant [49 x i8] c"remote port forwarding failed for listen path %s\00", align 1
@.str1401081 = private unnamed_addr constant [49 x i8] c"remote port forwarding failed for listen port %d\00", align 1
@.str1411082 = private unnamed_addr constant [64 x i8] c"%s: clearing registered forwarding for listen %d, connect %s:%d\00", align 1
@.str1421083 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str1431084 = private unnamed_addr constant [34 x i8] c"%s: channel %d: terminate request\00", align 1
@__func__.process_mux_terminate = private unnamed_addr constant [22 x i8] c"process_mux_terminate\00", align 1
@.str1441085 = private unnamed_addr constant [36 x i8] c"Terminate shared connection to %s? \00", align 1
@.str1451086 = private unnamed_addr constant [32 x i8] c"%s: termination refused by user\00", align 1
@.str1461087 = private unnamed_addr constant [28 x i8] c"%s: channel %d: alive check\00", align 1
@__func__.process_mux_alive_check = private unnamed_addr constant [24 x i8] c"process_mux_alive_check\00", align 1
@__func__.process_mux_new_session = private unnamed_addr constant [24 x i8] c"process_mux_new_session\00", align 1
@.str1471088 = private unnamed_addr constant [56 x i8] c">%d environment variables received, ignoring additional\00", align 1
@.str1481089 = private unnamed_addr constant [87 x i8] c"%s: channel %d: request tty %d, X %d, agent %d, subsys %d, term \22%s\22, cmd \22%s\22, env %u\00", align 1
@.str1491090 = private unnamed_addr constant [43 x i8] c"%s: got fds stdin %d, stdout %d, stderr %d\00", align 1
@.str1501091 = private unnamed_addr constant [32 x i8] c"Allow shared connection to %s? \00", align 1
@.str1511092 = private unnamed_addr constant [28 x i8] c"%s: session refused by user\00", align 1
@.str1521093 = private unnamed_addr constant [18 x i8] c"%s: tcgetattr: %s\00", align 1
@.str1531094 = private unnamed_addr constant [8 x i8] c"session\00", align 1
@.str1541095 = private unnamed_addr constant [15 x i8] c"client-session\00", align 1
@__func__.mux_session_confirm = private unnamed_addr constant [20 x i8] c"mux_session_confirm\00", align 1
@.str1551096 = private unnamed_addr constant [8 x i8] c"DISPLAY\00", align 1
@.str1561097 = private unnamed_addr constant [56 x i8] c"Requesting X11 forwarding with authentication spoofing.\00", align 1
@.str1571098 = private unnamed_addr constant [15 x i8] c"X11 forwarding\00", align 1
@.str1581099 = private unnamed_addr constant [44 x i8] c"Requesting authentication agent forwarding.\00", align 1
@.str1591100 = private unnamed_addr constant [27 x i8] c"auth-agent-req@openssh.com\00", align 1
@.str1601101 = private unnamed_addr constant [35 x i8] c"%s: channel %d: c->mux_ctx == NULL\00", align 1
@__func__.process_mux_master_hello = private unnamed_addr constant [25 x i8] c"process_mux_master_hello\00", align 1
@.str1611102 = private unnamed_addr constant [25 x i8] c"%s: HELLO received twice\00", align 1
@.str1621103 = private unnamed_addr constant [32 x i8] c"%s: channel %d slave version %u\00", align 1
@.str1631104 = private unnamed_addr constant [34 x i8] c"Unrecognised slave extension \22%s\22\00", align 1
@__func__.mux_master_control_cleanup_cb = private unnamed_addr constant [30 x i8] c"mux_master_control_cleanup_cb\00", align 1
@.str1641105 = private unnamed_addr constant [42 x i8] c"%s: channel %d missing session channel %d\00", align 1
@.str1651106 = private unnamed_addr constant [25 x i8] c"%s: channel %d: not open\00", align 1

; Function Attrs: nounwind sspreq uwtable
define i32 @main(i32 %ac, i8** %av) #0 {
entry:
  %retval = alloca i32, align 4
  %ac.addr = alloca i32, align 4
  %av.addr = alloca i8**, align 8
  %ssh = alloca %struct.ssh*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %opt = alloca i32, align 4
  %exit_status = alloca i32, align 4
  %use_syslog = alloca i32, align 4
  %direct = alloca i32, align 4
  %config_test = alloca i32, align 4
  %p = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %line = alloca i8*, align 8
  %argv0 = alloca i8*, align 8
  %buf = alloca [4096 x i8], align 16
  %host_arg = alloca i8*, align 8
  %logfile = alloca i8*, align 8
  %thishost = alloca [1025 x i8], align 16
  %shorthost = alloca [1025 x i8], align 16
  %portstr = alloca [32 x i8], align 16
  %cname = alloca [1025 x i8], align 16
  %uidstr = alloca [32 x i8], align 16
  %conn_hash_hex = alloca i8*, align 8
  %st = alloca %struct.stat, align 8
  %pw = alloca %struct.passwd*, align 8
  %timeout_ms = alloca i32, align 4
  %fwd = alloca %struct.Forward, align 8
  %addrs = alloca %struct.addrinfo*, align 8
  %md = alloca %struct.ssh_digest_ctx*, align 8
  %conn_hash = alloca [64 x i8], align 16
  %save_errno = alloca i32, align 4
  %rlim = alloca %struct.rlimit, align 8
  %port_s = alloca [8 x i8], align 1
  %sock = alloca i32, align 4
  %save_errno812 = alloca i32, align 4
  %save_errno840 = alloca i32, align 4
  %save_errno896 = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 %ac, i32* %ac.addr, align 4
  store i8** %av, i8*** %av.addr, align 8
  store %struct.ssh* null, %struct.ssh** %ssh, align 8
  store i32 0, i32* %config_test, align 4
  store %struct.addrinfo* null, %struct.addrinfo** %addrs, align 8
  call void @ssh_malloc_init()
  call void @sanitise_stdfd()
  %0 = load i8*** %av.addr, align 8
  %arrayidx = getelementptr inbounds i8** %0, i64 0
  %1 = load i8** %arrayidx, align 8
  %call = call i8* @ssh_get_progname(i8* %1)
  store i8* %call, i8** @__progname, align 8
  %2 = load i32* %ac.addr, align 4
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %conv = sext i32 %4 to i64
  %call1 = call i8* @xcalloc(i64 %conv, i64 8)
  %7 = bitcast i8* %call1 to i8**
  store i8** %7, i8*** @saved_av, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont8, %cont
  %8 = load i32* %i, align 4
  %9 = load i32* %ac.addr, align 4
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32* %i, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load i8*** %av.addr, align 8
  %arrayidx3 = getelementptr inbounds i8** %11, i64 %idxprom
  %12 = load i8** %arrayidx3, align 8
  %call4 = call i8* @xstrdup(i8* %12)
  %13 = load i32* %i, align 4
  %idxprom5 = sext i32 %13 to i64
  %14 = load i8*** @saved_av, align 8
  %arrayidx6 = getelementptr inbounds i8** %14, i64 %idxprom5
  store i8* %call4, i8** %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32* %i, align 4
  %16 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont8, label %trap7

trap7:                                            ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont8:                                            ; preds = %for.inc
  store i32 %17, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32* %i, align 4
  %idxprom9 = sext i32 %20 to i64
  %21 = load i8*** @saved_av, align 8
  %arrayidx10 = getelementptr inbounds i8** %21, i64 %idxprom9
  store i8* null, i8** %arrayidx10, align 8
  %22 = load i32* %ac.addr, align 4
  %23 = load i8*** %av.addr, align 8
  call void @compat_init_setproctitle(i32 %22, i8** %23)
  %24 = load i8*** @saved_av, align 8
  store i8** %24, i8*** %av.addr, align 8
  %25 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 2, i32 1)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont12, label %trap11

trap11:                                           ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont12:                                           ; preds = %for.end
  call void @closefrom(i32 %26)
  %call13 = call i32 @getuid() #9
  store i32 %call13, i32* @original_real_uid, align 4
  %call14 = call i32 @geteuid() #9
  store i32 %call14, i32* @original_effective_uid, align 4
  br label %do.body

do.body:                                          ; preds = %cont12
  %call15 = call i32* @__errno_location() #2
  %29 = load i32* %call15, align 4
  store i32 %29, i32* %save_errno, align 4
  %30 = load i32* @original_real_uid, align 4
  %call16 = call i32 @seteuid(i32 %30) #9
  %cmp17 = icmp ne i32 %call16, 0
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %call19 = call i32* @__errno_location() #2
  %31 = load i32* %call19, align 4
  %call20 = call i8* @strerror(i32 %31) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str, i32 0, i32 0), i8* %call20) #11
  unreachable

if.end:                                           ; preds = %do.body
  %32 = load i32* %save_errno, align 4
  %call21 = call i32* @__errno_location() #2
  store i32 %32, i32* %call21, align 4
  br label %do.end

do.end:                                           ; preds = %if.end
  %33 = load i32* @original_real_uid, align 4
  %34 = load i32* @original_effective_uid, align 4
  %cmp22 = icmp ne i32 %33, %34
  br i1 %cmp22, label %if.then24, label %if.end32

if.then24:                                        ; preds = %do.end
  %rlim_max = getelementptr inbounds %struct.rlimit* %rlim, i32 0, i32 1
  store i64 0, i64* %rlim_max, align 8
  %rlim_cur = getelementptr inbounds %struct.rlimit* %rlim, i32 0, i32 0
  store i64 0, i64* %rlim_cur, align 8
  %call25 = call i32 @setrlimit(i32 4, %struct.rlimit* %rlim) #9
  %cmp26 = icmp slt i32 %call25, 0
  br i1 %cmp26, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.then24
  %call29 = call i32* @__errno_location() #2
  %35 = load i32* %call29, align 4
  %call30 = call i8* @strerror(i32 %35) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([25 x i8]* @.str1, i32 0, i32 0), i8* %call30) #11
  unreachable

if.end31:                                         ; preds = %if.then24
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %do.end
  %36 = load i32* @original_real_uid, align 4
  %call33 = call %struct.passwd* @getpwuid(i32 %36)
  store %struct.passwd* %call33, %struct.passwd** %pw, align 8
  %37 = load %struct.passwd** %pw, align 8
  %tobool = icmp ne %struct.passwd* %37, null
  br i1 %tobool, label %if.end36, label %if.then34

if.then34:                                        ; preds = %if.end32
  %38 = load i32* @original_real_uid, align 4
  %conv35 = zext i32 %38 to i64
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([27 x i8]* @.str2, i32 0, i32 0), i64 %conv35)
  call void @exit(i32 255) #3
  unreachable

if.end36:                                         ; preds = %if.end32
  %39 = load %struct.passwd** %pw, align 8
  %call37 = call %struct.passwd* @pwcopy(%struct.passwd* %39)
  store %struct.passwd* %call37, %struct.passwd** %pw, align 8
  %call38 = call i32 @umask(i32 18) #9
  call void @msetlocale()
  call void @initialize_options(%struct.Options* @options)
  store i8* null, i8** @host, align 8
  store i32 0, i32* %use_syslog, align 4
  store i8* null, i8** %logfile, align 8
  %40 = load i8*** %av.addr, align 8
  %arrayidx39 = getelementptr inbounds i8** %40, i64 0
  %41 = load i8** %arrayidx39, align 8
  store i8* %41, i8** %argv0, align 8
  br label %again

again:                                            ; preds = %if.then422, %if.end36
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %again
  %42 = load i32* %ac.addr, align 4
  %43 = load i8*** %av.addr, align 8
  %call40 = call i32 @BSDgetopt(i32 %42, i8** %43, i8* getelementptr inbounds ([67 x i8]* @.str3, i32 0, i32 0)) #9
  store i32 %call40, i32* %opt, align 4
  %44 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %45 = extractvalue { i32, i1 } %44, 0
  %46 = extractvalue { i32, i1 } %44, 1
  %47 = xor i1 %46, true
  br i1 %47, label %cont42, label %trap41

trap41:                                           ; preds = %while.cond
  call void @llvm.trap() #3
  unreachable

cont42:                                           ; preds = %while.cond
  %cmp43 = icmp ne i32 %call40, %45
  br i1 %cmp43, label %while.body, label %while.end

while.body:                                       ; preds = %cont42
  %48 = load i32* %opt, align 4
  switch i32 %48, label %sw.default [
    i32 49, label %sw.bb
    i32 50, label %sw.bb45
    i32 52, label %sw.bb46
    i32 54, label %sw.bb47
    i32 110, label %sw.bb48
    i32 102, label %sw.bb49
    i32 120, label %sw.bb50
    i32 88, label %sw.bb51
    i32 121, label %sw.bb52
    i32 69, label %sw.bb53
    i32 71, label %sw.bb54
    i32 89, label %sw.bb55
    i32 103, label %sw.bb56
    i32 79, label %sw.bb57
    i32 80, label %sw.bb102
    i32 81, label %sw.bb103
    i32 97, label %sw.bb164
    i32 65, label %sw.bb165
    i32 107, label %sw.bb166
    i32 75, label %sw.bb167
    i32 105, label %sw.bb168
    i32 73, label %sw.bb179
    i32 74, label %sw.bb181
    i32 116, label %sw.bb198
    i32 118, label %sw.bb204
    i32 86, label %sw.bb218
    i32 119, label %sw.bb225
    i32 87, label %sw.bb240
    i32 113, label %sw.bb255
    i32 101, label %sw.bb256
    i32 99, label %sw.bb297
    i32 109, label %sw.bb329
    i32 77, label %sw.bb337
    i32 112, label %sw.bb343
    i32 108, label %sw.bb350
    i32 76, label %sw.bb351
    i32 82, label %sw.bb358
    i32 68, label %sw.bb365
    i32 67, label %sw.bb372
    i32 78, label %sw.bb373
    i32 84, label %sw.bb374
    i32 111, label %sw.bb375
    i32 115, label %sw.bb392
    i32 83, label %sw.bb393
    i32 98, label %sw.bb395
    i32 70, label %sw.bb396
  ]

sw.bb:                                            ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  br label %sw.epilog

sw.bb45:                                          ; preds = %while.body
  store i32 4, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  br label %sw.epilog

sw.bb46:                                          ; preds = %while.body
  store i32 2, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  br label %sw.epilog

sw.bb47:                                          ; preds = %while.body
  store i32 10, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  br label %sw.epilog

sw.bb48:                                          ; preds = %while.body
  store i32 1, i32* @stdin_null_flag, align 4
  br label %sw.epilog

sw.bb49:                                          ; preds = %while.body
  store i32 1, i32* @fork_after_authentication_flag, align 4
  store i32 1, i32* @stdin_null_flag, align 4
  br label %sw.epilog

sw.bb50:                                          ; preds = %while.body
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  br label %sw.epilog

sw.bb51:                                          ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  br label %sw.epilog

sw.bb52:                                          ; preds = %while.body
  store i32 1, i32* %use_syslog, align 4
  br label %sw.epilog

sw.bb53:                                          ; preds = %while.body
  %49 = load i8** @BSDoptarg, align 8
  store i8* %49, i8** %logfile, align 8
  br label %sw.epilog

sw.bb54:                                          ; preds = %while.body
  store i32 1, i32* %config_test, align 4
  br label %sw.epilog

sw.bb55:                                          ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 3), align 4
  br label %sw.epilog

sw.bb56:                                          ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6, i32 0), align 4
  br label %sw.epilog

sw.bb57:                                          ; preds = %while.body
  %50 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %cmp58 = icmp ne i8* %50, null
  br i1 %cmp58, label %if.then60, label %if.else

if.then60:                                        ; preds = %sw.bb57
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str4, i32 0, i32 0)) #11
  unreachable

if.else:                                          ; preds = %sw.bb57
  %51 = load i32* @muxclient_command, align 4
  %cmp61 = icmp ne i32 %51, 0
  br i1 %cmp61, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.else
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([39 x i8]* @.str5, i32 0, i32 0)) #11
  unreachable

if.end64:                                         ; preds = %if.else
  br label %if.end65

if.end65:                                         ; preds = %if.end64
  %52 = load i8** @BSDoptarg, align 8
  %call66 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([6 x i8]* @.str6, i32 0, i32 0)) #12
  %cmp67 = icmp eq i32 %call66, 0
  br i1 %cmp67, label %if.then69, label %if.else70

if.then69:                                        ; preds = %if.end65
  store i32 2, i32* @muxclient_command, align 4
  br label %if.end101

if.else70:                                        ; preds = %if.end65
  %53 = load i8** @BSDoptarg, align 8
  %call71 = call i32 @strcmp(i8* %53, i8* getelementptr inbounds ([8 x i8]* @.str7, i32 0, i32 0)) #12
  %cmp72 = icmp eq i32 %call71, 0
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else70
  store i32 5, i32* @muxclient_command, align 4
  br label %if.end100

if.else75:                                        ; preds = %if.else70
  %54 = load i8** @BSDoptarg, align 8
  %call76 = call i32 @strcmp(i8* %54, i8* getelementptr inbounds ([5 x i8]* @.str8, i32 0, i32 0)) #12
  %cmp77 = icmp eq i32 %call76, 0
  br i1 %cmp77, label %if.then79, label %if.else80

if.then79:                                        ; preds = %if.else75
  store i32 3, i32* @muxclient_command, align 4
  br label %if.end99

if.else80:                                        ; preds = %if.else75
  %55 = load i8** @BSDoptarg, align 8
  %call81 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([5 x i8]* @.str9, i32 0, i32 0)) #12
  %cmp82 = icmp eq i32 %call81, 0
  br i1 %cmp82, label %if.then84, label %if.else85

if.then84:                                        ; preds = %if.else80
  store i32 6, i32* @muxclient_command, align 4
  br label %if.end98

if.else85:                                        ; preds = %if.else80
  %56 = load i8** @BSDoptarg, align 8
  %call86 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([7 x i8]* @.str10, i32 0, i32 0)) #12
  %cmp87 = icmp eq i32 %call86, 0
  br i1 %cmp87, label %if.then89, label %if.else90

if.then89:                                        ; preds = %if.else85
  store i32 7, i32* @muxclient_command, align 4
  br label %if.end97

if.else90:                                        ; preds = %if.else85
  %57 = load i8** @BSDoptarg, align 8
  %call91 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([6 x i8]* @.str11, i32 0, i32 0)) #12
  %cmp92 = icmp eq i32 %call91, 0
  br i1 %cmp92, label %if.then94, label %if.else95

if.then94:                                        ; preds = %if.else90
  store i32 8, i32* @muxclient_command, align 4
  br label %if.end96

if.else95:                                        ; preds = %if.else90
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([27 x i8]* @.str12, i32 0, i32 0)) #11
  unreachable

if.end96:                                         ; preds = %if.then94
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then89
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then84
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then79
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then74
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then69
  br label %sw.epilog

sw.bb102:                                         ; preds = %while.body
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 7), align 4
  br label %sw.epilog

sw.bb103:                                         ; preds = %while.body
  store i8* null, i8** %cp, align 8
  %58 = load i8** @BSDoptarg, align 8
  %call104 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([7 x i8]* @.str13, i32 0, i32 0)) #12
  %cmp105 = icmp eq i32 %call104, 0
  br i1 %cmp105, label %if.then107, label %if.else109

if.then107:                                       ; preds = %sw.bb103
  %call108 = call i8* @cipher_alg_list(i8 signext 10, i32 0)
  store i8* %call108, i8** %cp, align 8
  br label %if.end158

if.else109:                                       ; preds = %sw.bb103
  %59 = load i8** @BSDoptarg, align 8
  %call110 = call i32 @strcmp(i8* %59, i8* getelementptr inbounds ([12 x i8]* @.str14, i32 0, i32 0)) #12
  %cmp111 = icmp eq i32 %call110, 0
  br i1 %cmp111, label %if.then113, label %if.else115

if.then113:                                       ; preds = %if.else109
  %call114 = call i8* @cipher_alg_list(i8 signext 10, i32 1)
  store i8* %call114, i8** %cp, align 8
  br label %if.end157

if.else115:                                       ; preds = %if.else109
  %60 = load i8** @BSDoptarg, align 8
  %call116 = call i32 @strcmp(i8* %60, i8* getelementptr inbounds ([4 x i8]* @.str15, i32 0, i32 0)) #12
  %cmp117 = icmp eq i32 %call116, 0
  br i1 %cmp117, label %if.then119, label %if.else121

if.then119:                                       ; preds = %if.else115
  %call120 = call i8* @mac_alg_list(i8 signext 10)
  store i8* %call120, i8** %cp, align 8
  br label %if.end156

if.else121:                                       ; preds = %if.else115
  %61 = load i8** @BSDoptarg, align 8
  %call122 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([4 x i8]* @.str16, i32 0, i32 0)) #12
  %cmp123 = icmp eq i32 %call122, 0
  br i1 %cmp123, label %if.then125, label %if.else127

if.then125:                                       ; preds = %if.else121
  %call126 = call i8* @kex_alg_list(i8 signext 10)
  store i8* %call126, i8** %cp, align 8
  br label %if.end155

if.else127:                                       ; preds = %if.else121
  %62 = load i8** @BSDoptarg, align 8
  %call128 = call i32 @strcmp(i8* %62, i8* getelementptr inbounds ([4 x i8]* @.str17, i32 0, i32 0)) #12
  %cmp129 = icmp eq i32 %call128, 0
  br i1 %cmp129, label %if.then131, label %if.else133

if.then131:                                       ; preds = %if.else127
  %call132 = call i8* @sshkey_alg_list(i32 0, i32 0, i8 signext 10)
  store i8* %call132, i8** %cp, align 8
  br label %if.end154

if.else133:                                       ; preds = %if.else127
  %63 = load i8** @BSDoptarg, align 8
  %call134 = call i32 @strcmp(i8* %63, i8* getelementptr inbounds ([9 x i8]* @.str18, i32 0, i32 0)) #12
  %cmp135 = icmp eq i32 %call134, 0
  br i1 %cmp135, label %if.then137, label %if.else139

if.then137:                                       ; preds = %if.else133
  %call138 = call i8* @sshkey_alg_list(i32 1, i32 0, i8 signext 10)
  store i8* %call138, i8** %cp, align 8
  br label %if.end153

if.else139:                                       ; preds = %if.else133
  %64 = load i8** @BSDoptarg, align 8
  %call140 = call i32 @strcmp(i8* %64, i8* getelementptr inbounds ([10 x i8]* @.str19, i32 0, i32 0)) #12
  %cmp141 = icmp eq i32 %call140, 0
  br i1 %cmp141, label %if.then143, label %if.else145

if.then143:                                       ; preds = %if.else139
  %call144 = call i8* @sshkey_alg_list(i32 0, i32 1, i8 signext 10)
  store i8* %call144, i8** %cp, align 8
  br label %if.end152

if.else145:                                       ; preds = %if.else139
  %65 = load i8** @BSDoptarg, align 8
  %call146 = call i32 @strcmp(i8* %65, i8* getelementptr inbounds ([17 x i8]* @.str20, i32 0, i32 0)) #12
  %cmp147 = icmp eq i32 %call146, 0
  br i1 %cmp147, label %if.then149, label %if.end151

if.then149:                                       ; preds = %if.else145
  %call150 = call i8* @xstrdup(i8* getelementptr inbounds ([2 x i8]* @.str21, i32 0, i32 0))
  store i8* %call150, i8** %cp, align 8
  br label %if.end151

if.end151:                                        ; preds = %if.then149, %if.else145
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then137
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then131
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then125
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.then119
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.then113
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then107
  %66 = load i8** %cp, align 8
  %cmp159 = icmp eq i8* %66, null
  br i1 %cmp159, label %if.then161, label %if.end162

if.then161:                                       ; preds = %if.end158
  %67 = load i8** @BSDoptarg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([23 x i8]* @.str22, i32 0, i32 0), i8* %67) #11
  unreachable

if.end162:                                        ; preds = %if.end158
  %68 = load i8** %cp, align 8
  %call163 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str23, i32 0, i32 0), i8* %68)
  %69 = load i8** %cp, align 8
  call void @free(i8* %69) #9
  call void @exit(i32 0) #3
  unreachable

sw.bb164:                                         ; preds = %while.body
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  br label %sw.epilog

sw.bb165:                                         ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  br label %sw.epilog

sw.bb166:                                         ; preds = %while.body
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 14), align 4
  br label %sw.epilog

sw.bb167:                                         ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 13), align 4
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 14), align 4
  br label %sw.epilog

sw.bb168:                                         ; preds = %while.body
  %70 = load i8** @BSDoptarg, align 8
  %71 = load i32* @original_real_uid, align 4
  %call169 = call i8* @tilde_expand_filename(i8* %70, i32 %71)
  store i8* %call169, i8** %p, align 8
  %72 = load i8** %p, align 8
  %call170 = call i32 @stat(i8* %72, %struct.stat* %st) #9
  %cmp171 = icmp slt i32 %call170, 0
  br i1 %cmp171, label %if.then173, label %if.else177

if.then173:                                       ; preds = %sw.bb168
  %73 = load %struct._IO_FILE** @stderr, align 8
  %74 = load i8** %p, align 8
  %call174 = call i32* @__errno_location() #2
  %75 = load i32* %call174, align 4
  %call175 = call i8* @strerror(i32 %75) #9
  %call176 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %73, i8* getelementptr inbounds ([47 x i8]* @.str24, i32 0, i32 0), i8* %74, i8* %call175)
  br label %if.end178

if.else177:                                       ; preds = %sw.bb168
  %76 = load i8** %p, align 8
  call void @add_identity_file(%struct.Options* @options, i8* null, i8* %76, i32 1)
  br label %if.end178

if.end178:                                        ; preds = %if.else177, %if.then173
  %77 = load i8** %p, align 8
  call void @free(i8* %77) #9
  br label %sw.epilog

sw.bb179:                                         ; preds = %while.body
  %78 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 49), align 8
  call void @free(i8* %78) #9
  %79 = load i8** @BSDoptarg, align 8
  %call180 = call i8* @xstrdup(i8* %79)
  store i8* %call180, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 49), align 8
  br label %sw.epilog

sw.bb181:                                         ; preds = %while.body
  %80 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 103), align 8
  %cmp182 = icmp ne i8* %80, null
  br i1 %cmp182, label %if.then184, label %if.end185

if.then184:                                       ; preds = %sw.bb181
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str25, i32 0, i32 0)) #11
  unreachable

if.end185:                                        ; preds = %sw.bb181
  %81 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp186 = icmp ne i8* %81, null
  br i1 %cmp186, label %if.then188, label %if.end189

if.then188:                                       ; preds = %if.end185
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str26, i32 0, i32 0)) #11
  unreachable

if.end189:                                        ; preds = %if.end185
  %82 = load i8** @BSDoptarg, align 8
  %call190 = call i32 @parse_jump(i8* %82, %struct.Options* @options, i32 1)
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %84 = extractvalue { i32, i1 } %83, 0
  %85 = extractvalue { i32, i1 } %83, 1
  %86 = xor i1 %85, true
  br i1 %86, label %cont192, label %trap191

trap191:                                          ; preds = %if.end189
  call void @llvm.trap() #3
  unreachable

cont192:                                          ; preds = %if.end189
  %cmp193 = icmp eq i32 %call190, %84
  br i1 %cmp193, label %if.then195, label %if.end196

if.then195:                                       ; preds = %cont192
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str27, i32 0, i32 0)) #11
  unreachable

if.end196:                                        ; preds = %cont192
  %call197 = call i8* @xstrdup(i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0))
  store i8* %call197, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  br label %sw.epilog

sw.bb198:                                         ; preds = %while.body
  %87 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp199 = icmp eq i32 %87, 2
  br i1 %cmp199, label %if.then201, label %if.else202

if.then201:                                       ; preds = %sw.bb198
  store i32 3, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  br label %if.end203

if.else202:                                       ; preds = %sw.bb198
  store i32 2, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  br label %if.end203

if.end203:                                        ; preds = %if.else202, %if.then201
  br label %sw.epilog

sw.bb204:                                         ; preds = %while.body
  %88 = load i32* @debug_flag, align 4
  %cmp205 = icmp eq i32 %88, 0
  br i1 %cmp205, label %if.then207, label %if.else208

if.then207:                                       ; preds = %sw.bb204
  store i32 1, i32* @debug_flag, align 4
  store i32 5, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  br label %if.end217

if.else208:                                       ; preds = %sw.bb204
  %89 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp209 = icmp slt i32 %89, 7
  br i1 %cmp209, label %if.then211, label %if.end216

if.then211:                                       ; preds = %if.else208
  %90 = load i32* @debug_flag, align 4
  %91 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 1)
  %92 = extractvalue { i32, i1 } %91, 0
  %93 = extractvalue { i32, i1 } %91, 1
  %94 = xor i1 %93, true
  br i1 %94, label %cont213, label %trap212

trap212:                                          ; preds = %if.then211
  call void @llvm.trap() #3
  unreachable

cont213:                                          ; preds = %if.then211
  store i32 %92, i32* @debug_flag, align 4
  %95 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %96 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 1)
  %97 = extractvalue { i32, i1 } %96, 0
  %98 = extractvalue { i32, i1 } %96, 1
  %99 = xor i1 %98, true
  br i1 %99, label %cont215, label %trap214

trap214:                                          ; preds = %cont213
  call void @llvm.trap() #3
  unreachable

cont215:                                          ; preds = %cont213
  store i32 %97, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  br label %if.end216

if.end216:                                        ; preds = %cont215, %if.else208
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then207
  br label %sw.epilog

sw.bb218:                                         ; preds = %while.body
  %100 = load %struct._IO_FILE** @stderr, align 8
  %call219 = call i8* @SSLeay_version(i32 0)
  %call220 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([8 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str30, i32 0, i32 0), i8* %call219)
  %101 = load i32* %opt, align 4
  %cmp221 = icmp eq i32 %101, 86
  br i1 %cmp221, label %if.then223, label %if.end224

if.then223:                                       ; preds = %sw.bb218
  call void @exit(i32 0) #3
  unreachable

if.end224:                                        ; preds = %sw.bb218
  br label %sw.epilog

sw.bb225:                                         ; preds = %while.body
  %102 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  %103 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %104 = extractvalue { i32, i1 } %103, 0
  %105 = extractvalue { i32, i1 } %103, 1
  %106 = xor i1 %105, true
  br i1 %106, label %cont227, label %trap226

trap226:                                          ; preds = %sw.bb225
  call void @llvm.trap() #3
  unreachable

cont227:                                          ; preds = %sw.bb225
  %cmp228 = icmp eq i32 %102, %104
  br i1 %cmp228, label %if.then230, label %if.end231

if.then230:                                       ; preds = %cont227
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  br label %if.end231

if.end231:                                        ; preds = %if.then230, %cont227
  %107 = load i8** @BSDoptarg, align 8
  %call232 = call i32 @a2tun(i8* %107, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 84))
  store i32 %call232, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 83), align 4
  %108 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 83), align 4
  %109 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 2147483647, i32 1)
  %110 = extractvalue { i32, i1 } %109, 0
  %111 = extractvalue { i32, i1 } %109, 1
  %112 = xor i1 %111, true
  br i1 %112, label %cont234, label %trap233

trap233:                                          ; preds = %if.end231
  call void @llvm.trap() #3
  unreachable

cont234:                                          ; preds = %if.end231
  %cmp235 = icmp eq i32 %108, %110
  br i1 %cmp235, label %if.then237, label %if.end239

if.then237:                                       ; preds = %cont234
  %113 = load %struct._IO_FILE** @stderr, align 8
  %114 = load i8** @BSDoptarg, align 8
  %call238 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([21 x i8]* @.str31, i32 0, i32 0), i8* %114)
  call void @exit(i32 255) #3
  unreachable

if.end239:                                        ; preds = %cont234
  br label %sw.epilog

sw.bb240:                                         ; preds = %while.body
  %115 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %cmp241 = icmp ne i8* %115, null
  br i1 %cmp241, label %if.then243, label %if.end244

if.then243:                                       ; preds = %sw.bb240
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str32, i32 0, i32 0)) #11
  unreachable

if.end244:                                        ; preds = %sw.bb240
  %116 = load i32* @muxclient_command, align 4
  %cmp245 = icmp ne i32 %116, 0
  br i1 %cmp245, label %if.then247, label %if.end248

if.then247:                                       ; preds = %if.end244
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str33, i32 0, i32 0)) #11
  unreachable

if.end248:                                        ; preds = %if.end244
  %117 = load i8** @BSDoptarg, align 8
  %call249 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %117, i32 1, i32 0)
  %tobool250 = icmp ne i32 %call249, 0
  br i1 %tobool250, label %if.then251, label %if.else252

if.then251:                                       ; preds = %if.end248
  %listen_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 0
  %118 = load i8** %listen_host, align 8
  store i8* %118, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %listen_port = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %119 = load i32* %listen_port, align 4
  store i32 %119, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 67), align 4
  %connect_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 3
  %120 = load i8** %connect_host, align 8
  call void @free(i8* %120) #9
  br label %if.end254

if.else252:                                       ; preds = %if.end248
  %121 = load %struct._IO_FILE** @stderr, align 8
  %122 = load i8** @BSDoptarg, align 8
  %call253 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %121, i8* getelementptr inbounds ([41 x i8]* @.str34, i32 0, i32 0), i8* %122)
  call void @exit(i32 255) #3
  unreachable

if.end254:                                        ; preds = %if.then251
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  store i32 1, i32* @no_shell_flag, align 4
  br label %sw.epilog

sw.bb255:                                         ; preds = %while.body
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  br label %sw.epilog

sw.bb256:                                         ; preds = %while.body
  %123 = load i8** @BSDoptarg, align 8
  %arrayidx257 = getelementptr inbounds i8* %123, i64 0
  %124 = load i8* %arrayidx257, align 1
  %conv258 = sext i8 %124 to i32
  %cmp259 = icmp eq i32 %conv258, 94
  br i1 %cmp259, label %land.lhs.true, label %if.else278

land.lhs.true:                                    ; preds = %sw.bb256
  %125 = load i8** @BSDoptarg, align 8
  %arrayidx261 = getelementptr inbounds i8* %125, i64 2
  %126 = load i8* %arrayidx261, align 1
  %conv262 = sext i8 %126 to i32
  %cmp263 = icmp eq i32 %conv262, 0
  br i1 %cmp263, label %land.lhs.true265, label %if.else278

land.lhs.true265:                                 ; preds = %land.lhs.true
  %127 = load i8** @BSDoptarg, align 8
  %arrayidx266 = getelementptr inbounds i8* %127, i64 1
  %128 = load i8* %arrayidx266, align 1
  %conv267 = zext i8 %128 to i32
  %cmp268 = icmp sge i32 %conv267, 64
  br i1 %cmp268, label %land.lhs.true270, label %if.else278

land.lhs.true270:                                 ; preds = %land.lhs.true265
  %129 = load i8** @BSDoptarg, align 8
  %arrayidx271 = getelementptr inbounds i8* %129, i64 1
  %130 = load i8* %arrayidx271, align 1
  %conv272 = zext i8 %130 to i32
  %cmp273 = icmp slt i32 %conv272, 128
  br i1 %cmp273, label %if.then275, label %if.else278

if.then275:                                       ; preds = %land.lhs.true270
  %131 = load i8** @BSDoptarg, align 8
  %arrayidx276 = getelementptr inbounds i8* %131, i64 1
  %132 = load i8* %arrayidx276, align 1
  %conv277 = zext i8 %132 to i32
  %and = and i32 %conv277, 31
  store i32 %and, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  br label %if.end296

if.else278:                                       ; preds = %land.lhs.true270, %land.lhs.true265, %land.lhs.true, %sw.bb256
  %133 = load i8** @BSDoptarg, align 8
  %call279 = call i64 @strlen(i8* %133) #12
  %cmp280 = icmp eq i64 %call279, 1
  br i1 %cmp280, label %if.then282, label %if.else285

if.then282:                                       ; preds = %if.else278
  %134 = load i8** @BSDoptarg, align 8
  %arrayidx283 = getelementptr inbounds i8* %134, i64 0
  %135 = load i8* %arrayidx283, align 1
  %conv284 = zext i8 %135 to i32
  store i32 %conv284, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  br label %if.end295

if.else285:                                       ; preds = %if.else278
  %136 = load i8** @BSDoptarg, align 8
  %call286 = call i32 @strcmp(i8* %136, i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0)) #12
  %cmp287 = icmp eq i32 %call286, 0
  br i1 %cmp287, label %if.then289, label %if.else292

if.then289:                                       ; preds = %if.else285
  %137 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %138 = extractvalue { i32, i1 } %137, 0
  %139 = extractvalue { i32, i1 } %137, 1
  %140 = xor i1 %139, true
  br i1 %140, label %cont291, label %trap290

trap290:                                          ; preds = %if.then289
  call void @llvm.trap() #3
  unreachable

cont291:                                          ; preds = %if.then289
  store i32 %138, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  br label %if.end294

if.else292:                                       ; preds = %if.else285
  %141 = load %struct._IO_FILE** @stderr, align 8
  %142 = load i8** @BSDoptarg, align 8
  %call293 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([28 x i8]* @.str35, i32 0, i32 0), i8* %142)
  call void @exit(i32 255) #3
  unreachable

if.end294:                                        ; preds = %cont291
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.then282
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.then275
  br label %sw.epilog

sw.bb297:                                         ; preds = %while.body
  %143 = load i8** @BSDoptarg, align 8
  %144 = load i8* %143, align 1
  %conv298 = sext i8 %144 to i32
  %cmp299 = icmp eq i32 %conv298, 43
  br i1 %cmp299, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb297
  %145 = load i8** @BSDoptarg, align 8
  %add.ptr = getelementptr inbounds i8* %145, i64 1
  br label %cond.end

cond.false:                                       ; preds = %sw.bb297
  %146 = load i8** @BSDoptarg, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %146, %cond.false ]
  %call301 = call i32 @ciphers_valid(i8* %cond)
  %tobool302 = icmp ne i32 %call301, 0
  br i1 %tobool302, label %if.then303, label %if.end307

if.then303:                                       ; preds = %cond.end
  %147 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8
  call void @free(i8* %147) #9
  %148 = load i8** @BSDoptarg, align 8
  %call304 = call i8* @xstrdup(i8* %148)
  store i8* %call304, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8
  %149 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %150 = extractvalue { i32, i1 } %149, 0
  %151 = extractvalue { i32, i1 } %149, 1
  %152 = xor i1 %151, true
  br i1 %152, label %cont306, label %trap305

trap305:                                          ; preds = %if.then303
  call void @llvm.trap() #3
  unreachable

cont306:                                          ; preds = %if.then303
  store i32 %150, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 32), align 4
  br label %sw.epilog

if.end307:                                        ; preds = %cond.end
  %153 = load i8** @BSDoptarg, align 8
  %call308 = call i32 @cipher_number(i8* %153)
  store i32 %call308, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 32), align 4
  %154 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 32), align 4
  %155 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %156 = extractvalue { i32, i1 } %155, 0
  %157 = extractvalue { i32, i1 } %155, 1
  %158 = xor i1 %157, true
  br i1 %158, label %cont310, label %trap309

trap309:                                          ; preds = %if.end307
  call void @llvm.trap() #3
  unreachable

cont310:                                          ; preds = %if.end307
  %cmp311 = icmp eq i32 %154, %156
  br i1 %cmp311, label %if.then313, label %if.end315

if.then313:                                       ; preds = %cont310
  %159 = load %struct._IO_FILE** @stderr, align 8
  %160 = load i8** @BSDoptarg, align 8
  %call314 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %159, i8* getelementptr inbounds ([26 x i8]* @.str36, i32 0, i32 0), i8* %160)
  call void @exit(i32 255) #3
  unreachable

if.end315:                                        ; preds = %cont310
  %161 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 32), align 4
  %cmp316 = icmp eq i32 %161, 3
  br i1 %cmp316, label %if.then318, label %if.else320

if.then318:                                       ; preds = %if.end315
  %call319 = call i8* @xstrdup(i8* getelementptr inbounds ([9 x i8]* @.str37, i32 0, i32 0))
  store i8* %call319, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8
  br label %if.end328

if.else320:                                       ; preds = %if.end315
  %162 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 32), align 4
  %cmp321 = icmp eq i32 %162, 6
  br i1 %cmp321, label %if.then323, label %if.else325

if.then323:                                       ; preds = %if.else320
  %call324 = call i8* @xstrdup(i8* getelementptr inbounds ([13 x i8]* @.str38, i32 0, i32 0))
  store i8* %call324, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8
  br label %if.end327

if.else325:                                       ; preds = %if.else320
  %call326 = call i8* @xstrdup(i8* getelementptr inbounds ([142 x i8]* @.str39, i32 0, i32 0))
  store i8* %call326, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8
  br label %if.end327

if.end327:                                        ; preds = %if.else325, %if.then323
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then318
  br label %sw.epilog

sw.bb329:                                         ; preds = %while.body
  %163 = load i8** @BSDoptarg, align 8
  %call330 = call i32 @mac_valid(i8* %163)
  %tobool331 = icmp ne i32 %call330, 0
  br i1 %tobool331, label %if.then332, label %if.else334

if.then332:                                       ; preds = %sw.bb329
  %164 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 34), align 8
  call void @free(i8* %164) #9
  %165 = load i8** @BSDoptarg, align 8
  %call333 = call i8* @xstrdup(i8* %165)
  store i8* %call333, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 34), align 8
  br label %if.end336

if.else334:                                       ; preds = %sw.bb329
  %166 = load %struct._IO_FILE** @stderr, align 8
  %167 = load i8** @BSDoptarg, align 8
  %call335 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %166, i8* getelementptr inbounds ([23 x i8]* @.str40, i32 0, i32 0), i8* %167)
  call void @exit(i32 255) #3
  unreachable

if.end336:                                        ; preds = %if.then332
  br label %sw.epilog

sw.bb337:                                         ; preds = %while.body
  %168 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp338 = icmp eq i32 %168, 1
  br i1 %cmp338, label %if.then340, label %if.else341

if.then340:                                       ; preds = %sw.bb337
  store i32 3, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  br label %if.end342

if.else341:                                       ; preds = %sw.bb337
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  br label %if.end342

if.end342:                                        ; preds = %if.else341, %if.then340
  br label %sw.epilog

sw.bb343:                                         ; preds = %while.body
  %169 = load i8** @BSDoptarg, align 8
  %call344 = call i32 @a2port(i8* %169)
  store i32 %call344, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %170 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %cmp345 = icmp sle i32 %170, 0
  br i1 %cmp345, label %if.then347, label %if.end349

if.then347:                                       ; preds = %sw.bb343
  %171 = load %struct._IO_FILE** @stderr, align 8
  %172 = load i8** @BSDoptarg, align 8
  %call348 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([15 x i8]* @.str41, i32 0, i32 0), i8* %172)
  call void @exit(i32 255) #3
  unreachable

if.end349:                                        ; preds = %sw.bb343
  br label %sw.epilog

sw.bb350:                                         ; preds = %while.body
  %173 = load i8** @BSDoptarg, align 8
  store i8* %173, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  br label %sw.epilog

sw.bb351:                                         ; preds = %while.body
  %174 = load i8** @BSDoptarg, align 8
  %call352 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %174, i32 0, i32 0)
  %tobool353 = icmp ne i32 %call352, 0
  br i1 %tobool353, label %if.then354, label %if.else355

if.then354:                                       ; preds = %sw.bb351
  call void @add_local_forward(%struct.Options* @options, %struct.Forward* %fwd)
  br label %if.end357

if.else355:                                       ; preds = %sw.bb351
  %175 = load %struct._IO_FILE** @stderr, align 8
  %176 = load i8** @BSDoptarg, align 8
  %call356 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %175, i8* getelementptr inbounds ([41 x i8]* @.str42, i32 0, i32 0), i8* %176)
  call void @exit(i32 255) #3
  unreachable

if.end357:                                        ; preds = %if.then354
  br label %sw.epilog

sw.bb358:                                         ; preds = %while.body
  %177 = load i8** @BSDoptarg, align 8
  %call359 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %177, i32 0, i32 1)
  %tobool360 = icmp ne i32 %call359, 0
  br i1 %tobool360, label %if.then361, label %if.else362

if.then361:                                       ; preds = %sw.bb358
  call void @add_remote_forward(%struct.Options* @options, %struct.Forward* %fwd)
  br label %if.end364

if.else362:                                       ; preds = %sw.bb358
  %178 = load %struct._IO_FILE** @stderr, align 8
  %179 = load i8** @BSDoptarg, align 8
  %call363 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %178, i8* getelementptr inbounds ([42 x i8]* @.str43, i32 0, i32 0), i8* %179)
  call void @exit(i32 255) #3
  unreachable

if.end364:                                        ; preds = %if.then361
  br label %sw.epilog

sw.bb365:                                         ; preds = %while.body
  %180 = load i8** @BSDoptarg, align 8
  %call366 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %180, i32 1, i32 0)
  %tobool367 = icmp ne i32 %call366, 0
  br i1 %tobool367, label %if.then368, label %if.else369

if.then368:                                       ; preds = %sw.bb365
  call void @add_local_forward(%struct.Options* @options, %struct.Forward* %fwd)
  br label %if.end371

if.else369:                                       ; preds = %sw.bb365
  %181 = load %struct._IO_FILE** @stderr, align 8
  %182 = load i8** @BSDoptarg, align 8
  %call370 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %181, i8* getelementptr inbounds ([43 x i8]* @.str44, i32 0, i32 0), i8* %182)
  call void @exit(i32 255) #3
  unreachable

if.end371:                                        ; preds = %if.then368
  br label %sw.epilog

sw.bb372:                                         ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 21), align 4
  br label %sw.epilog

sw.bb373:                                         ; preds = %while.body
  store i32 1, i32* @no_shell_flag, align 4
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  br label %sw.epilog

sw.bb374:                                         ; preds = %while.body
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  br label %sw.epilog

sw.bb375:                                         ; preds = %while.body
  %183 = load i8** @BSDoptarg, align 8
  %call376 = call i8* @xstrdup(i8* %183)
  store i8* %call376, i8** %line, align 8
  %184 = load %struct.passwd** %pw, align 8
  %185 = load i8** @host, align 8
  %tobool377 = icmp ne i8* %185, null
  br i1 %tobool377, label %cond.true378, label %cond.false379

cond.true378:                                     ; preds = %sw.bb375
  %186 = load i8** @host, align 8
  br label %cond.end380

cond.false379:                                    ; preds = %sw.bb375
  br label %cond.end380

cond.end380:                                      ; preds = %cond.false379, %cond.true378
  %cond381 = phi i8* [ %186, %cond.true378 ], [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.false379 ]
  %187 = load i8** @host, align 8
  %tobool382 = icmp ne i8* %187, null
  br i1 %tobool382, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end380
  %188 = load i8** @host, align 8
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end380
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i8* [ %188, %cond.true383 ], [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.false384 ]
  %189 = load i8** %line, align 8
  %call387 = call i32 @process_config_line(%struct.Options* @options, %struct.passwd* %184, i8* %cond381, i8* %cond386, i8* %189, i8* getelementptr inbounds ([13 x i8]* @.str46, i32 0, i32 0), i32 0, i32* null, i32 2)
  %cmp388 = icmp ne i32 %call387, 0
  br i1 %cmp388, label %if.then390, label %if.end391

if.then390:                                       ; preds = %cond.end385
  call void @exit(i32 255) #3
  unreachable

if.end391:                                        ; preds = %cond.end385
  %190 = load i8** %line, align 8
  call void @free(i8* %190) #9
  br label %sw.epilog

sw.bb392:                                         ; preds = %while.body
  store i32 1, i32* @subsystem_flag, align 4
  br label %sw.epilog

sw.bb393:                                         ; preds = %while.body
  %191 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void @free(i8* %191) #9
  %192 = load i8** @BSDoptarg, align 8
  %call394 = call i8* @xstrdup(i8* %192)
  store i8* %call394, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  br label %sw.epilog

sw.bb395:                                         ; preds = %while.body
  %193 = load i8** @BSDoptarg, align 8
  store i8* %193, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 48), align 8
  br label %sw.epilog

sw.bb396:                                         ; preds = %while.body
  %194 = load i8** @BSDoptarg, align 8
  store i8* %194, i8** @config, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  call void @usage()
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb396, %sw.bb395, %sw.bb393, %sw.bb392, %if.end391, %sw.bb374, %sw.bb373, %sw.bb372, %if.end371, %if.end364, %if.end357, %sw.bb350, %if.end349, %if.end342, %if.end336, %if.end328, %cont306, %if.end296, %sw.bb255, %if.end254, %if.end239, %if.end224, %if.end217, %if.end203, %if.end196, %sw.bb179, %if.end178, %sw.bb167, %sw.bb166, %sw.bb165, %sw.bb164, %sw.bb102, %if.end101, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %sw.bb45, %sw.bb
  br label %while.cond

while.end:                                        ; preds = %cont42
  %195 = load i32* @BSDoptind, align 4
  %196 = load i32* %ac.addr, align 4
  %197 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %196, i32 %195)
  %198 = extractvalue { i32, i1 } %197, 0
  %199 = extractvalue { i32, i1 } %197, 1
  %200 = xor i1 %199, true
  br i1 %200, label %cont398, label %trap397

trap397:                                          ; preds = %while.end
  call void @llvm.trap() #3
  unreachable

cont398:                                          ; preds = %while.end
  store i32 %198, i32* %ac.addr, align 4
  %201 = load i32* @BSDoptind, align 4
  %202 = load i8*** %av.addr, align 8
  %idx.ext = sext i32 %201 to i64
  %add.ptr399 = getelementptr inbounds i8** %202, i64 %idx.ext
  store i8** %add.ptr399, i8*** %av.addr, align 8
  %203 = load i32* %ac.addr, align 4
  %cmp400 = icmp sgt i32 %203, 0
  br i1 %cmp400, label %land.lhs.true402, label %if.end427

land.lhs.true402:                                 ; preds = %cont398
  %204 = load i8** @host, align 8
  %tobool403 = icmp ne i8* %204, null
  br i1 %tobool403, label %if.end427, label %if.then404

if.then404:                                       ; preds = %land.lhs.true402
  %205 = load i8*** %av.addr, align 8
  %206 = load i8** %205, align 8
  %call405 = call i8* @strrchr(i8* %206, i32 64) #12
  %tobool406 = icmp ne i8* %call405, null
  br i1 %tobool406, label %if.then407, label %if.else417

if.then407:                                       ; preds = %if.then404
  %207 = load i8*** %av.addr, align 8
  %208 = load i8** %207, align 8
  %call408 = call i8* @xstrdup(i8* %208)
  store i8* %call408, i8** %p, align 8
  %209 = load i8** %p, align 8
  %call409 = call i8* @strrchr(i8* %209, i32 64) #12
  store i8* %call409, i8** %cp, align 8
  %210 = load i8** %cp, align 8
  %cmp410 = icmp eq i8* %210, null
  br i1 %cmp410, label %if.then414, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then407
  %211 = load i8** %cp, align 8
  %212 = load i8** %p, align 8
  %cmp412 = icmp eq i8* %211, %212
  br i1 %cmp412, label %if.then414, label %if.end415

if.then414:                                       ; preds = %lor.lhs.false, %if.then407
  call void @usage()
  br label %if.end415

if.end415:                                        ; preds = %if.then414, %lor.lhs.false
  %213 = load i8** %p, align 8
  store i8* %213, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %214 = load i8** %cp, align 8
  store i8 0, i8* %214, align 1
  %215 = load i8** %cp, align 8
  %incdec.ptr = getelementptr inbounds i8* %215, i32 1
  store i8* %incdec.ptr, i8** %cp, align 8
  %call416 = call i8* @xstrdup(i8* %incdec.ptr)
  store i8* %call416, i8** @host, align 8
  br label %if.end419

if.else417:                                       ; preds = %if.then404
  %216 = load i8*** %av.addr, align 8
  %217 = load i8** %216, align 8
  %call418 = call i8* @xstrdup(i8* %217)
  store i8* %call418, i8** @host, align 8
  br label %if.end419

if.end419:                                        ; preds = %if.else417, %if.end415
  %218 = load i32* %ac.addr, align 4
  %cmp420 = icmp sgt i32 %218, 1
  br i1 %cmp420, label %if.then422, label %if.end423

if.then422:                                       ; preds = %if.end419
  store i32 1, i32* @BSDoptreset, align 4
  store i32 1, i32* @BSDoptind, align 4
  br label %again

if.end423:                                        ; preds = %if.end419
  %219 = load i32* %ac.addr, align 4
  %220 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %219, i32 -1)
  %221 = extractvalue { i32, i1 } %220, 0
  %222 = extractvalue { i32, i1 } %220, 1
  %223 = xor i1 %222, true
  br i1 %223, label %cont425, label %trap424

trap424:                                          ; preds = %if.end423
  call void @llvm.trap() #3
  unreachable

cont425:                                          ; preds = %if.end423
  store i32 %221, i32* %ac.addr, align 4
  %224 = load i8*** %av.addr, align 8
  %incdec.ptr426 = getelementptr inbounds i8** %224, i32 1
  store i8** %incdec.ptr426, i8*** %av.addr, align 8
  br label %if.end427

if.end427:                                        ; preds = %cont425, %land.lhs.true402, %cont398
  %225 = load i8** @host, align 8
  %tobool428 = icmp ne i8* %225, null
  br i1 %tobool428, label %if.end430, label %if.then429

if.then429:                                       ; preds = %if.end427
  call void @usage()
  br label %if.end430

if.end430:                                        ; preds = %if.then429, %if.end427
  %226 = load i8** @host, align 8
  %call431 = call i8* @xstrdup(i8* %226)
  store i8* %call431, i8** %host_arg, align 8
  call void @OPENSSL_add_all_algorithms_noconf()
  call void @ERR_load_crypto_strings()
  call void @sshbuf_init(%struct.sshbuf* @command)
  %227 = load i32* %ac.addr, align 4
  %tobool432 = icmp ne i32 %227, 0
  br i1 %tobool432, label %if.else438, label %if.then433

if.then433:                                       ; preds = %if.end430
  %228 = load i32* @subsystem_flag, align 4
  %tobool434 = icmp ne i32 %228, 0
  br i1 %tobool434, label %if.then435, label %if.end437

if.then435:                                       ; preds = %if.then433
  %229 = load %struct._IO_FILE** @stderr, align 8
  %call436 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %229, i8* getelementptr inbounds ([41 x i8]* @.str47, i32 0, i32 0))
  call void @usage()
  br label %if.end437

if.end437:                                        ; preds = %if.then435, %if.then433
  br label %if.end456

if.else438:                                       ; preds = %if.end430
  store i32 0, i32* %i, align 4
  br label %for.cond439

for.cond439:                                      ; preds = %cont454, %if.else438
  %230 = load i32* %i, align 4
  %231 = load i32* %ac.addr, align 4
  %cmp440 = icmp slt i32 %230, %231
  br i1 %cmp440, label %for.body442, label %for.end455

for.body442:                                      ; preds = %for.cond439
  %232 = load i32* %i, align 4
  %tobool443 = icmp ne i32 %232, 0
  br i1 %tobool443, label %if.then444, label %if.end445

if.then444:                                       ; preds = %for.body442
  call void @buffer_append(%struct.sshbuf* @command, i8* getelementptr inbounds ([2 x i8]* @.str48, i32 0, i32 0), i32 1)
  br label %if.end445

if.end445:                                        ; preds = %if.then444, %for.body442
  %233 = load i32* %i, align 4
  %idxprom446 = sext i32 %233 to i64
  %234 = load i8*** %av.addr, align 8
  %arrayidx447 = getelementptr inbounds i8** %234, i64 %idxprom446
  %235 = load i8** %arrayidx447, align 8
  %236 = load i32* %i, align 4
  %idxprom448 = sext i32 %236 to i64
  %237 = load i8*** %av.addr, align 8
  %arrayidx449 = getelementptr inbounds i8** %237, i64 %idxprom448
  %238 = load i8** %arrayidx449, align 8
  %call450 = call i64 @strlen(i8* %238) #12
  %conv451 = trunc i64 %call450 to i32
  call void @buffer_append(%struct.sshbuf* @command, i8* %235, i32 %conv451)
  br label %for.inc452

for.inc452:                                       ; preds = %if.end445
  %239 = load i32* %i, align 4
  %240 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %239, i32 1)
  %241 = extractvalue { i32, i1 } %240, 0
  %242 = extractvalue { i32, i1 } %240, 1
  %243 = xor i1 %242, true
  br i1 %243, label %cont454, label %trap453

trap453:                                          ; preds = %for.inc452
  call void @llvm.trap() #3
  unreachable

cont454:                                          ; preds = %for.inc452
  store i32 %241, i32* %i, align 4
  br label %for.cond439

for.end455:                                       ; preds = %for.cond439
  br label %if.end456

if.end456:                                        ; preds = %for.end455, %if.end437
  %244 = load i32* @fork_after_authentication_flag, align 4
  %tobool457 = icmp ne i32 %244, 0
  br i1 %tobool457, label %land.lhs.true458, label %if.end466

land.lhs.true458:                                 ; preds = %if.end456
  %call459 = call i64 @sshbuf_len(%struct.sshbuf* @command)
  %conv460 = trunc i64 %call459 to i32
  %cmp461 = icmp eq i32 %conv460, 0
  br i1 %cmp461, label %land.lhs.true463, label %if.end466

land.lhs.true463:                                 ; preds = %land.lhs.true458
  %245 = load i32* @no_shell_flag, align 4
  %tobool464 = icmp ne i32 %245, 0
  br i1 %tobool464, label %if.end466, label %if.then465

if.then465:                                       ; preds = %land.lhs.true463
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([58 x i8]* @.str49, i32 0, i32 0)) #11
  unreachable

if.end466:                                        ; preds = %land.lhs.true463, %land.lhs.true458, %if.end456
  %246 = load i32* %use_syslog, align 4
  %tobool467 = icmp ne i32 %246, 0
  br i1 %tobool467, label %land.lhs.true468, label %if.end472

land.lhs.true468:                                 ; preds = %if.end466
  %247 = load i8** %logfile, align 8
  %cmp469 = icmp ne i8* %247, null
  br i1 %cmp469, label %if.then471, label %if.end472

if.then471:                                       ; preds = %land.lhs.true468
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([29 x i8]* @.str50, i32 0, i32 0)) #11
  unreachable

if.end472:                                        ; preds = %land.lhs.true468, %if.end466
  %248 = load i8** %logfile, align 8
  %cmp473 = icmp ne i8* %248, null
  br i1 %cmp473, label %if.then475, label %if.end476

if.then475:                                       ; preds = %if.end472
  %249 = load i8** %logfile, align 8
  call void @log_redirect_stderr_to(i8* %249)
  br label %if.end476

if.end476:                                        ; preds = %if.then475, %if.end472
  %250 = load i8** %argv0, align 8
  %251 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %252 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %253 = extractvalue { i32, i1 } %252, 0
  %254 = extractvalue { i32, i1 } %252, 1
  %255 = xor i1 %254, true
  br i1 %255, label %cont478, label %trap477

trap477:                                          ; preds = %if.end476
  call void @llvm.trap() #3
  unreachable

cont478:                                          ; preds = %if.end476
  %cmp479 = icmp eq i32 %251, %253
  br i1 %cmp479, label %cond.true481, label %cond.false482

cond.true481:                                     ; preds = %cont478
  br label %cond.end483

cond.false482:                                    ; preds = %cont478
  %256 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  br label %cond.end483

cond.end483:                                      ; preds = %cond.false482, %cond.true481
  %cond484 = phi i32 [ 3, %cond.true481 ], [ %256, %cond.false482 ]
  %257 = load i32* %use_syslog, align 4
  %tobool485 = icmp ne i32 %257, 0
  %lnot = xor i1 %tobool485, true
  %lnot.ext = zext i1 %lnot to i32
  call void @log_init(i8* %250, i32 %cond484, i32 1, i32 %lnot.ext)
  %258 = load i32* @debug_flag, align 4
  %tobool486 = icmp ne i32 %258, 0
  br i1 %tobool486, label %if.then487, label %if.end489

if.then487:                                       ; preds = %cond.end483
  %call488 = call i8* @SSLeay_version(i32 0)
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([7 x i8]* @.str51, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str30, i32 0, i32 0), i8* %call488)
  br label %if.end489

if.end489:                                        ; preds = %if.then487, %cond.end483
  %259 = load i8** %host_arg, align 8
  %260 = load %struct.passwd** %pw, align 8
  call void @process_config_files(i8* %259, %struct.passwd* %260, i32 0)
  call void @fill_default_options_for_canonicalization(%struct.Options* @options)
  %261 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 38), align 8
  %cmp490 = icmp ne i8* %261, null
  br i1 %cmp490, label %if.then492, label %if.end495

if.then492:                                       ; preds = %if.end489
  %262 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 38), align 8
  %263 = load i8** @host, align 8
  %call493 = call i8* (i8*, ...)* @percent_expand(i8* %262, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i8* %263, i8* null)
  store i8* %call493, i8** %cp, align 8
  %264 = load i8** @host, align 8
  call void @free(i8* %264) #9
  %265 = load i8** %cp, align 8
  store i8* %265, i8** @host, align 8
  %266 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 38), align 8
  call void @free(i8* %266) #9
  %267 = load i8** @host, align 8
  %call494 = call i8* @xstrdup(i8* %267)
  store i8* %call494, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 38), align 8
  br label %if.end495

if.end495:                                        ; preds = %if.then492, %if.end489
  %268 = load i8** @host, align 8
  call void @lowercase(i8* %268)
  %269 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp496 = icmp ne i32 %269, 0
  br i1 %cmp496, label %if.then498, label %if.end500

if.then498:                                       ; preds = %if.end495
  %270 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %call499 = call %struct.addrinfo* @resolve_canonicalize(i8** @host, i32 %270)
  store %struct.addrinfo* %call499, %struct.addrinfo** %addrs, align 8
  br label %if.end500

if.end500:                                        ; preds = %if.then498, %if.end495
  %271 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call501 = call i32 @option_clear_or_none(i8* %271)
  %tobool502 = icmp ne i32 %call501, 0
  br i1 %tobool502, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end500
  %272 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 103), align 8
  %cmp503 = icmp eq i8* %272, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end500
  %273 = phi i1 [ false, %if.end500 ], [ %cmp503, %land.rhs ]
  %land.ext = zext i1 %273 to i32
  store i32 %land.ext, i32* %direct, align 4
  %274 = load %struct.addrinfo** %addrs, align 8
  %cmp505 = icmp eq %struct.addrinfo* %274, null
  br i1 %cmp505, label %land.lhs.true507, label %if.end529

land.lhs.true507:                                 ; preds = %land.end
  %275 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 95), align 4
  %cmp508 = icmp ne i32 %275, 0
  br i1 %cmp508, label %land.lhs.true510, label %if.end529

land.lhs.true510:                                 ; preds = %land.lhs.true507
  %276 = load i32* %direct, align 4
  %tobool511 = icmp ne i32 %276, 0
  br i1 %tobool511, label %if.then515, label %lor.lhs.false512

lor.lhs.false512:                                 ; preds = %land.lhs.true510
  %277 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp513 = icmp eq i32 %277, 2
  br i1 %cmp513, label %if.then515, label %if.end529

if.then515:                                       ; preds = %lor.lhs.false512, %land.lhs.true510
  %278 = load i8** @host, align 8
  %279 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %280 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call516 = call i32 @option_clear_or_none(i8* %280)
  %arraydecay = getelementptr inbounds [1025 x i8]* %cname, i32 0, i32 0
  %call517 = call %struct.addrinfo* @resolve_host(i8* %278, i32 %279, i32 %call516, i8* %arraydecay, i64 1025)
  store %struct.addrinfo* %call517, %struct.addrinfo** %addrs, align 8
  %cmp518 = icmp eq %struct.addrinfo* %call517, null
  br i1 %cmp518, label %if.then520, label %if.else525

if.then520:                                       ; preds = %if.then515
  %281 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call521 = call i32 @option_clear_or_none(i8* %281)
  %tobool522 = icmp ne i32 %call521, 0
  br i1 %tobool522, label %if.then523, label %if.end524

if.then523:                                       ; preds = %if.then520
  call void @cleanup_exit(i32 255) #11
  unreachable

if.end524:                                        ; preds = %if.then520
  br label %if.end528

if.else525:                                       ; preds = %if.then515
  %282 = load i32* %direct, align 4
  %arraydecay526 = getelementptr inbounds [1025 x i8]* %cname, i32 0, i32 0
  %call527 = call i32 @check_follow_cname(i32 %282, i8** @host, i8* %arraydecay526)
  br label %if.end528

if.end528:                                        ; preds = %if.else525, %if.end524
  br label %if.end529

if.end529:                                        ; preds = %if.end528, %lor.lhs.false512, %land.lhs.true507, %land.end
  %283 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp530 = icmp ne i32 %283, 0
  br i1 %cmp530, label %if.then532, label %if.end541

if.then532:                                       ; preds = %if.end529
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([57 x i8]* @.str53, i32 0, i32 0))
  %284 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 38), align 8
  call void @free(i8* %284) #9
  %285 = load i8** @host, align 8
  %call533 = call i8* @xstrdup(i8* %285)
  store i8* %call533, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 38), align 8
  %286 = load i8** %host_arg, align 8
  %287 = load %struct.passwd** %pw, align 8
  call void @process_config_files(i8* %286, %struct.passwd* %287, i32 1)
  %288 = load %struct.addrinfo** %addrs, align 8
  %cmp534 = icmp ne %struct.addrinfo* %288, null
  br i1 %cmp534, label %land.lhs.true536, label %if.end540

land.lhs.true536:                                 ; preds = %if.then532
  %289 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %cmp537 = icmp sgt i32 %289, 0
  br i1 %cmp537, label %if.then539, label %if.end540

if.then539:                                       ; preds = %land.lhs.true536
  %290 = load %struct.addrinfo** %addrs, align 8
  %291 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  call void @set_addrinfo_port(%struct.addrinfo* %290, i32 %291)
  br label %if.end540

if.end540:                                        ; preds = %if.then539, %land.lhs.true536, %if.then532
  br label %if.end541

if.end541:                                        ; preds = %if.end540, %if.end529
  call void @fill_default_options(%struct.Options* @options)
  %292 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 103), align 8
  %cmp542 = icmp ne i8* %292, null
  br i1 %cmp542, label %if.then544, label %if.end591

if.then544:                                       ; preds = %if.end541
  %293 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp545 = icmp ne i8* %293, null
  br i1 %cmp545, label %if.then547, label %if.end548

if.then547:                                       ; preds = %if.then544
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([45 x i8]* @.str54, i32 0, i32 0)) #11
  unreachable

if.end548:                                        ; preds = %if.then544
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 89), align 4
  %arraydecay549 = getelementptr inbounds [8 x i8]* %port_s, i32 0, i32 0
  %294 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 104), align 4
  %call550 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay549, i64 8, i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0), i32 %294) #9
  %295 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 102), align 8
  %cmp551 = icmp eq i8* %295, null
  %cond553 = select i1 %cmp551, i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str57, i32 0, i32 0)
  %296 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 102), align 8
  %cmp554 = icmp eq i8* %296, null
  br i1 %cmp554, label %cond.true556, label %cond.false557

cond.true556:                                     ; preds = %if.end548
  br label %cond.end558

cond.false557:                                    ; preds = %if.end548
  %297 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 102), align 8
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false557, %cond.true556
  %cond559 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.true556 ], [ %297, %cond.false557 ]
  %298 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 104), align 4
  %cmp560 = icmp sle i32 %298, 0
  %cond562 = select i1 %cmp560, i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str58, i32 0, i32 0)
  %299 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 104), align 4
  %cmp563 = icmp sle i32 %299, 0
  br i1 %cmp563, label %cond.true565, label %cond.false566

cond.true565:                                     ; preds = %cond.end558
  br label %cond.end568

cond.false566:                                    ; preds = %cond.end558
  %arraydecay567 = getelementptr inbounds [8 x i8]* %port_s, i32 0, i32 0
  br label %cond.end568

cond.end568:                                      ; preds = %cond.false566, %cond.true565
  %cond569 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.true565 ], [ %arraydecay567, %cond.false566 ]
  %300 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 105), align 8
  %cmp570 = icmp eq i8* %300, null
  %cond572 = select i1 %cmp570, i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str59, i32 0, i32 0)
  %301 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 105), align 8
  %cmp573 = icmp eq i8* %301, null
  br i1 %cmp573, label %cond.true575, label %cond.false576

cond.true575:                                     ; preds = %cond.end568
  br label %cond.end577

cond.false576:                                    ; preds = %cond.end568
  %302 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 105), align 8
  br label %cond.end577

cond.end577:                                      ; preds = %cond.false576, %cond.true575
  %cond578 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.true575 ], [ %302, %cond.false576 ]
  %303 = load i8** @config, align 8
  %cmp579 = icmp eq i8* %303, null
  %cond581 = select i1 %cmp579, i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str60, i32 0, i32 0)
  %304 = load i8** @config, align 8
  %cmp582 = icmp eq i8* %304, null
  br i1 %cmp582, label %cond.true584, label %cond.false585

cond.true584:                                     ; preds = %cond.end577
  br label %cond.end586

cond.false585:                                    ; preds = %cond.end577
  %305 = load i8** @config, align 8
  br label %cond.end586

cond.end586:                                      ; preds = %cond.false585, %cond.true584
  %cond587 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.true584 ], [ %305, %cond.false585 ]
  %306 = load i32* @debug_flag, align 4
  %tobool588 = icmp ne i32 %306, 0
  %cond589 = select i1 %tobool588, i8* getelementptr inbounds ([3 x i8]* @.str61, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0)
  %307 = load i32* @debug_flag, align 4
  %308 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 103), align 8
  %call590 = call i32 (i8**, i8*, ...)* @xasprintf(i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), i8* getelementptr inbounds ([40 x i8]* @.str56, i32 0, i32 0), i8* %cond553, i8* %cond559, i8* %cond562, i8* %cond569, i8* %cond572, i8* %cond578, i8* %cond581, i8* %cond587, i8* %cond589, i32 %307, i8* getelementptr inbounds ([4 x i8]* @.str62, i32 0, i32 0), i8* %308)
  %309 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([49 x i8]* @.str63, i32 0, i32 0), i8* %309)
  br label %if.end591

if.end591:                                        ; preds = %cond.end586, %if.end541
  %310 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %cmp592 = icmp eq i32 %310, 0
  br i1 %cmp592, label %if.then594, label %if.end596

if.then594:                                       ; preds = %if.end591
  %call595 = call i32 @default_ssh_port()
  store i32 %call595, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  br label %if.end596

if.end596:                                        ; preds = %if.then594, %if.end591
  %311 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  call void @channel_set_af(i32 %311)
  %312 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8
  %cmp597 = icmp ne i8* %312, null
  br i1 %cmp597, label %if.then599, label %if.end600

if.then599:                                       ; preds = %if.end596
  %313 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8
  call void @lowercase(i8* %313)
  br label %if.end600

if.end600:                                        ; preds = %if.then599, %if.end596
  %314 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp601 = icmp ne i8* %314, null
  br i1 %cmp601, label %land.lhs.true603, label %if.end610

land.lhs.true603:                                 ; preds = %if.end600
  %315 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call604 = call i32 @strcmp(i8* %315, i8* getelementptr inbounds ([2 x i8]* @.str64, i32 0, i32 0)) #12
  %cmp605 = icmp eq i32 %call604, 0
  br i1 %cmp605, label %land.lhs.true607, label %if.end610

land.lhs.true607:                                 ; preds = %land.lhs.true603
  %316 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 89), align 4
  %tobool608 = icmp ne i32 %316, 0
  br i1 %tobool608, label %if.then609, label %if.end610

if.then609:                                       ; preds = %land.lhs.true607
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([51 x i8]* @.str65, i32 0, i32 0)) #11
  unreachable

if.end610:                                        ; preds = %land.lhs.true607, %land.lhs.true603, %if.end600
  %317 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 79), align 4
  %tobool611 = icmp ne i32 %317, 0
  br i1 %tobool611, label %land.lhs.true612, label %if.end616

land.lhs.true612:                                 ; preds = %if.end610
  %318 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %cmp613 = icmp eq i32 %318, 2
  br i1 %cmp613, label %if.then615, label %if.end616

if.then615:                                       ; preds = %land.lhs.true612
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([66 x i8]* @.str66, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  br label %if.end616

if.end616:                                        ; preds = %if.then615, %land.lhs.true612, %if.end610
  %319 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 29), align 4
  %cmp617 = icmp sle i32 %319, 0
  br i1 %cmp617, label %if.then619, label %if.end620

if.then619:                                       ; preds = %if.end616
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str67, i32 0, i32 0)) #11
  unreachable

if.end620:                                        ; preds = %if.end616
  %320 = load i32* @original_effective_uid, align 4
  %cmp621 = icmp ne i32 %320, 0
  br i1 %cmp621, label %if.then623, label %if.end624

if.then623:                                       ; preds = %if.end620
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 7), align 4
  br label %if.end624

if.end624:                                        ; preds = %if.then623, %if.end620
  %321 = load i8** %argv0, align 8
  %322 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %323 = load i32* %use_syslog, align 4
  %tobool625 = icmp ne i32 %323, 0
  %lnot626 = xor i1 %tobool625, true
  %lnot.ext627 = zext i1 %lnot626 to i32
  call void @log_init(i8* %321, i32 %322, i32 1, i32 %lnot.ext627)
  %324 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp628 = icmp eq i32 %324, 2
  br i1 %cmp628, label %if.then633, label %lor.lhs.false630

lor.lhs.false630:                                 ; preds = %if.end624
  %325 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp631 = icmp eq i32 %325, 3
  br i1 %cmp631, label %if.then633, label %if.end634

if.then633:                                       ; preds = %lor.lhs.false630, %if.end624
  store i32 1, i32* @tty_flag, align 4
  br label %if.end634

if.end634:                                        ; preds = %if.then633, %lor.lhs.false630
  %call635 = call i64 @sshbuf_len(%struct.sshbuf* @command)
  %conv636 = trunc i64 %call635 to i32
  %cmp637 = icmp eq i32 %conv636, 0
  br i1 %cmp637, label %if.then639, label %if.end642

if.then639:                                       ; preds = %if.end634
  %326 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp640 = icmp ne i32 %326, 1
  %conv641 = zext i1 %cmp640 to i32
  store i32 %conv641, i32* @tty_flag, align 4
  br label %if.end642

if.end642:                                        ; preds = %if.then639, %if.end634
  %327 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp643 = icmp eq i32 %327, 1
  br i1 %cmp643, label %if.then650, label %lor.lhs.false645

lor.lhs.false645:                                 ; preds = %if.end642
  %328 = load i32* @muxclient_command, align 4
  %tobool646 = icmp ne i32 %328, 0
  br i1 %tobool646, label %land.lhs.true647, label %if.end651

land.lhs.true647:                                 ; preds = %lor.lhs.false645
  %329 = load i32* @muxclient_command, align 4
  %cmp648 = icmp ne i32 %329, 8
  br i1 %cmp648, label %if.then650, label %if.end651

if.then650:                                       ; preds = %land.lhs.true647, %if.end642
  store i32 0, i32* @tty_flag, align 4
  br label %if.end651

if.end651:                                        ; preds = %if.then650, %land.lhs.true647, %lor.lhs.false645
  %330 = load %struct._IO_FILE** @stdin, align 8
  %call652 = call i32 @fileno(%struct._IO_FILE* %330) #9
  %call653 = call i32 @isatty(i32 %call652) #9
  %tobool654 = icmp ne i32 %call653, 0
  br i1 %tobool654, label %lor.lhs.false655, label %land.lhs.true657

lor.lhs.false655:                                 ; preds = %if.end651
  %331 = load i32* @stdin_null_flag, align 4
  %tobool656 = icmp ne i32 %331, 0
  br i1 %tobool656, label %land.lhs.true657, label %if.end664

land.lhs.true657:                                 ; preds = %lor.lhs.false655, %if.end651
  %332 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp658 = icmp ne i32 %332, 3
  br i1 %cmp658, label %if.then660, label %if.end664

if.then660:                                       ; preds = %land.lhs.true657
  %333 = load i32* @tty_flag, align 4
  %tobool661 = icmp ne i32 %333, 0
  br i1 %tobool661, label %if.then662, label %if.end663

if.then662:                                       ; preds = %if.then660
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([71 x i8]* @.str68, i32 0, i32 0))
  br label %if.end663

if.end663:                                        ; preds = %if.then662, %if.then660
  store i32 0, i32* @tty_flag, align 4
  br label %if.end664

if.end664:                                        ; preds = %if.end663, %land.lhs.true657, %lor.lhs.false655
  call void @seed_rng()
  %334 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %cmp665 = icmp eq i8* %334, null
  br i1 %cmp665, label %if.then667, label %if.end669

if.then667:                                       ; preds = %if.end664
  %335 = load %struct.passwd** %pw, align 8
  %pw_name = getelementptr inbounds %struct.passwd* %335, i32 0, i32 0
  %336 = load i8** %pw_name, align 8
  %call668 = call i8* @xstrdup(i8* %336)
  store i8* %call668, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  br label %if.end669

if.end669:                                        ; preds = %if.then667, %if.end664
  %arraydecay670 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call671 = call i32 @gethostname(i8* %arraydecay670, i64 1025) #9
  %337 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %338 = extractvalue { i32, i1 } %337, 0
  %339 = extractvalue { i32, i1 } %337, 1
  %340 = xor i1 %339, true
  br i1 %340, label %cont673, label %trap672

trap672:                                          ; preds = %if.end669
  call void @llvm.trap() #3
  unreachable

cont673:                                          ; preds = %if.end669
  %cmp674 = icmp eq i32 %call671, %338
  br i1 %cmp674, label %if.then676, label %if.end679

if.then676:                                       ; preds = %cont673
  %call677 = call i32* @__errno_location() #2
  %341 = load i32* %call677, align 4
  %call678 = call i8* @strerror(i32 %341) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str69, i32 0, i32 0), i8* %call678) #11
  unreachable

if.end679:                                        ; preds = %cont673
  %arraydecay680 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i32 0
  %arraydecay681 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call682 = call i64 @strlcpy(i8* %arraydecay680, i8* %arraydecay681, i64 1025)
  %arraydecay683 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call684 = call i64 @strcspn(i8* %arraydecay683, i8* getelementptr inbounds ([2 x i8]* @.str70, i32 0, i32 0)) #12
  %arrayidx685 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i64 %call684
  store i8 0, i8* %arrayidx685, align 1
  %arraydecay686 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %342 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %call687 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay686, i64 32, i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0), i32 %342) #9
  %arraydecay688 = getelementptr inbounds [32 x i8]* %uidstr, i32 0, i32 0
  %343 = load %struct.passwd** %pw, align 8
  %pw_uid = getelementptr inbounds %struct.passwd* %343, i32 0, i32 2
  %344 = load i32* %pw_uid, align 4
  %call689 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay688, i64 32, i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0), i32 %344) #9
  %call690 = call %struct.ssh_digest_ctx* @ssh_digest_start(i32 2)
  store %struct.ssh_digest_ctx* %call690, %struct.ssh_digest_ctx** %md, align 8
  %cmp691 = icmp eq %struct.ssh_digest_ctx* %call690, null
  br i1 %cmp691, label %if.then722, label %lor.lhs.false693

lor.lhs.false693:                                 ; preds = %if.end679
  %345 = load %struct.ssh_digest_ctx** %md, align 8
  %arraydecay694 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %arraydecay695 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call696 = call i64 @strlen(i8* %arraydecay695) #12
  %call697 = call i32 @ssh_digest_update(%struct.ssh_digest_ctx* %345, i8* %arraydecay694, i64 %call696)
  %cmp698 = icmp slt i32 %call697, 0
  br i1 %cmp698, label %if.then722, label %lor.lhs.false700

lor.lhs.false700:                                 ; preds = %lor.lhs.false693
  %346 = load %struct.ssh_digest_ctx** %md, align 8
  %347 = load i8** @host, align 8
  %348 = load i8** @host, align 8
  %call701 = call i64 @strlen(i8* %348) #12
  %call702 = call i32 @ssh_digest_update(%struct.ssh_digest_ctx* %346, i8* %347, i64 %call701)
  %cmp703 = icmp slt i32 %call702, 0
  br i1 %cmp703, label %if.then722, label %lor.lhs.false705

lor.lhs.false705:                                 ; preds = %lor.lhs.false700
  %349 = load %struct.ssh_digest_ctx** %md, align 8
  %arraydecay706 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %arraydecay707 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %call708 = call i64 @strlen(i8* %arraydecay707) #12
  %call709 = call i32 @ssh_digest_update(%struct.ssh_digest_ctx* %349, i8* %arraydecay706, i64 %call708)
  %cmp710 = icmp slt i32 %call709, 0
  br i1 %cmp710, label %if.then722, label %lor.lhs.false712

lor.lhs.false712:                                 ; preds = %lor.lhs.false705
  %350 = load %struct.ssh_digest_ctx** %md, align 8
  %351 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %352 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %call713 = call i64 @strlen(i8* %352) #12
  %call714 = call i32 @ssh_digest_update(%struct.ssh_digest_ctx* %350, i8* %351, i64 %call713)
  %cmp715 = icmp slt i32 %call714, 0
  br i1 %cmp715, label %if.then722, label %lor.lhs.false717

lor.lhs.false717:                                 ; preds = %lor.lhs.false712
  %353 = load %struct.ssh_digest_ctx** %md, align 8
  %arraydecay718 = getelementptr inbounds [64 x i8]* %conn_hash, i32 0, i32 0
  %call719 = call i32 @ssh_digest_final(%struct.ssh_digest_ctx* %353, i8* %arraydecay718, i64 64)
  %cmp720 = icmp slt i32 %call719, 0
  br i1 %cmp720, label %if.then722, label %if.end723

if.then722:                                       ; preds = %lor.lhs.false717, %lor.lhs.false712, %lor.lhs.false705, %lor.lhs.false700, %lor.lhs.false693, %if.end679
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str71, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @__func__.main, i32 0, i32 0)) #11
  unreachable

if.end723:                                        ; preds = %lor.lhs.false717
  %354 = load %struct.ssh_digest_ctx** %md, align 8
  call void @ssh_digest_free(%struct.ssh_digest_ctx* %354)
  %arraydecay724 = getelementptr inbounds [64 x i8]* %conn_hash, i32 0, i32 0
  %call725 = call i64 @ssh_digest_bytes(i32 2)
  %call726 = call i8* @tohex(i8* %arraydecay724, i64 %call725)
  store i8* %call726, i8** %conn_hash_hex, align 8
  %355 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  %cmp727 = icmp ne i8* %355, null
  br i1 %cmp727, label %if.then729, label %if.end735

if.then729:                                       ; preds = %if.end723
  %356 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([27 x i8]* @.str72, i32 0, i32 0), i8* %356)
  %357 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  store i8* %357, i8** %cp, align 8
  %358 = load i8** %cp, align 8
  %359 = load i8** %conn_hash_hex, align 8
  %arraydecay730 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i32 0
  %360 = load %struct.passwd** %pw, align 8
  %pw_dir = getelementptr inbounds %struct.passwd* %360, i32 0, i32 5
  %361 = load i8** %pw_dir, align 8
  %362 = load i8** @host, align 8
  %arraydecay731 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %363 = load i8** %host_arg, align 8
  %arraydecay732 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %364 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %365 = load %struct.passwd** %pw, align 8
  %pw_name733 = getelementptr inbounds %struct.passwd* %365, i32 0, i32 0
  %366 = load i8** %pw_name733, align 8
  %call734 = call i8* (i8*, ...)* @percent_expand(i8* %358, i8* getelementptr inbounds ([2 x i8]* @.str73, i32 0, i32 0), i8* %359, i8* getelementptr inbounds ([2 x i8]* @.str74, i32 0, i32 0), i8* %arraydecay730, i8* getelementptr inbounds ([2 x i8]* @.str75, i32 0, i32 0), i8* %361, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i8* %362, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i8* %arraydecay731, i8* getelementptr inbounds ([2 x i8]* @.str77, i32 0, i32 0), i8* %363, i8* getelementptr inbounds ([2 x i8]* @.str78, i32 0, i32 0), i8* %arraydecay732, i8* getelementptr inbounds ([2 x i8]* @.str79, i32 0, i32 0), i8* %364, i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i8* %366, i8* null)
  store i8* %call734, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  %367 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str81, i32 0, i32 0), i8* %367)
  %368 = load i8** %cp, align 8
  call void @free(i8* %368) #9
  br label %if.end735

if.end735:                                        ; preds = %if.then729, %if.end723
  %369 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp736 = icmp ne i8* %369, null
  br i1 %cmp736, label %if.then738, label %if.end746

if.then738:                                       ; preds = %if.end735
  %370 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %371 = load i32* @original_real_uid, align 4
  %call739 = call i8* @tilde_expand_filename(i8* %370, i32 %371)
  store i8* %call739, i8** %cp, align 8
  %372 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void @free(i8* %372) #9
  %373 = load i8** %cp, align 8
  %374 = load i8** %conn_hash_hex, align 8
  %arraydecay740 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i32 0
  %375 = load i8** @host, align 8
  %arraydecay741 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %376 = load i8** %host_arg, align 8
  %arraydecay742 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %377 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %378 = load %struct.passwd** %pw, align 8
  %pw_name743 = getelementptr inbounds %struct.passwd* %378, i32 0, i32 0
  %379 = load i8** %pw_name743, align 8
  %arraydecay744 = getelementptr inbounds [32 x i8]* %uidstr, i32 0, i32 0
  %call745 = call i8* (i8*, ...)* @percent_expand(i8* %373, i8* getelementptr inbounds ([2 x i8]* @.str73, i32 0, i32 0), i8* %374, i8* getelementptr inbounds ([2 x i8]* @.str74, i32 0, i32 0), i8* %arraydecay740, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i8* %375, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i8* %arraydecay741, i8* getelementptr inbounds ([2 x i8]* @.str77, i32 0, i32 0), i8* %376, i8* getelementptr inbounds ([2 x i8]* @.str78, i32 0, i32 0), i8* %arraydecay742, i8* getelementptr inbounds ([2 x i8]* @.str79, i32 0, i32 0), i8* %377, i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i8* %379, i8* getelementptr inbounds ([2 x i8]* @.str82, i32 0, i32 0), i8* %arraydecay744, i8* null)
  store i8* %call745, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %380 = load i8** %cp, align 8
  call void @free(i8* %380) #9
  br label %if.end746

if.end746:                                        ; preds = %if.then738, %if.end735
  %381 = load i8** %conn_hash_hex, align 8
  call void @free(i8* %381) #9
  %382 = load i32* %config_test, align 4
  %tobool747 = icmp ne i32 %382, 0
  br i1 %tobool747, label %if.then748, label %if.end749

if.then748:                                       ; preds = %if.end746
  %383 = load i8** @host, align 8
  call void @dump_client_config(%struct.Options* @options, i8* %383)
  call void @exit(i32 0) #3
  unreachable

if.end749:                                        ; preds = %if.end746
  %384 = load i32* @muxclient_command, align 4
  %cmp750 = icmp ne i32 %384, 0
  br i1 %cmp750, label %land.lhs.true752, label %if.end756

land.lhs.true752:                                 ; preds = %if.end749
  %385 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp753 = icmp eq i8* %385, null
  br i1 %cmp753, label %if.then755, label %if.end756

if.then755:                                       ; preds = %land.lhs.true752
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str83, i32 0, i32 0)) #11
  unreachable

if.end756:                                        ; preds = %land.lhs.true752, %if.end749
  %386 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp757 = icmp ne i8* %386, null
  br i1 %cmp757, label %if.then759, label %if.end765

if.then759:                                       ; preds = %if.end756
  %387 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call760 = call i32 @muxclient(i8* %387)
  store i32 %call760, i32* %sock, align 4
  %cmp761 = icmp sge i32 %call760, 0
  br i1 %cmp761, label %if.then763, label %if.end764

if.then763:                                       ; preds = %if.then759
  %388 = load i32* %sock, align 4
  %389 = load i32* %sock, align 4
  call void @packet_set_connection(i32 %388, i32 %389)
  %390 = load %struct.ssh** @active_state, align 8
  store %struct.ssh* %390, %struct.ssh** %ssh, align 8
  call void @enable_compat20()
  %391 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_set_mux(%struct.ssh* %391)
  br label %skip_connect

if.end764:                                        ; preds = %if.then759
  br label %if.end765

if.end765:                                        ; preds = %if.end764, %if.end756
  %392 = load %struct.addrinfo** %addrs, align 8
  %cmp766 = icmp eq %struct.addrinfo* %392, null
  br i1 %cmp766, label %land.lhs.true768, label %if.end778

land.lhs.true768:                                 ; preds = %if.end765
  %393 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp769 = icmp eq i8* %393, null
  br i1 %cmp769, label %if.then771, label %if.end778

if.then771:                                       ; preds = %land.lhs.true768
  %394 = load i8** @host, align 8
  %395 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([23 x i8]* @.str84, i32 0, i32 0), i8* %394, i32 %395)
  %396 = load i8** @host, align 8
  %397 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %arraydecay772 = getelementptr inbounds [1025 x i8]* %cname, i32 0, i32 0
  %call773 = call %struct.addrinfo* @resolve_host(i8* %396, i32 %397, i32 1, i8* %arraydecay772, i64 1025)
  store %struct.addrinfo* %call773, %struct.addrinfo** %addrs, align 8
  %cmp774 = icmp eq %struct.addrinfo* %call773, null
  br i1 %cmp774, label %if.then776, label %if.end777

if.then776:                                       ; preds = %if.then771
  call void @cleanup_exit(i32 255) #11
  unreachable

if.end777:                                        ; preds = %if.then771
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %land.lhs.true768, %if.end765
  %398 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 30), align 4
  %399 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %398, i32 1000)
  %400 = extractvalue { i32, i1 } %399, 0
  %401 = extractvalue { i32, i1 } %399, 1
  %402 = xor i1 %401, true
  br i1 %402, label %cont780, label %trap779

trap779:                                          ; preds = %if.end778
  call void @llvm.trap() #3
  unreachable

cont780:                                          ; preds = %if.end778
  store i32 %400, i32* %timeout_ms, align 4
  %403 = load i8** @host, align 8
  %404 = load %struct.addrinfo** %addrs, align 8
  %405 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %conv781 = trunc i32 %405 to i16
  %406 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  %407 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 29), align 4
  %408 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 23), align 4
  %409 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 7), align 4
  %call782 = call i32 @ssh_connect(i8* %403, %struct.addrinfo* %404, %struct.sockaddr_storage* @hostaddr, i16 zeroext %conv781, i32 %406, i32 %407, i32* %timeout_ms, i32 %408, i32 %409)
  %cmp783 = icmp ne i32 %call782, 0
  br i1 %cmp783, label %if.then785, label %if.end786

if.then785:                                       ; preds = %cont780
  call void @exit(i32 255) #3
  unreachable

if.end786:                                        ; preds = %cont780
  %410 = load %struct.addrinfo** %addrs, align 8
  %cmp787 = icmp ne %struct.addrinfo* %410, null
  br i1 %cmp787, label %if.then789, label %if.end790

if.then789:                                       ; preds = %if.end786
  %411 = load %struct.addrinfo** %addrs, align 8
  call void @freeaddrinfo(%struct.addrinfo* %411) #9
  br label %if.end790

if.end790:                                        ; preds = %if.then789, %if.end786
  %412 = load %struct.ssh** @active_state, align 8
  %413 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 73), align 4
  %414 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 74), align 4
  call void @ssh_packet_set_timeout(%struct.ssh* %412, i32 %413, i32 %414)
  %415 = load %struct.ssh** @active_state, align 8
  store %struct.ssh* %415, %struct.ssh** %ssh, align 8
  %416 = load i32* %timeout_ms, align 4
  %cmp791 = icmp sgt i32 %416, 0
  br i1 %cmp791, label %if.then793, label %if.end794

if.then793:                                       ; preds = %if.end790
  %417 = load i32* %timeout_ms, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([36 x i8]* @.str85, i32 0, i32 0), i32 %417)
  br label %if.end794

if.end794:                                        ; preds = %if.then793, %if.end790
  store i32 0, i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 1), align 4
  store %struct.sshkey** null, %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 2), align 4
  %418 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 8), align 4
  %tobool795 = icmp ne i32 %418, 0
  br i1 %tobool795, label %if.then798, label %lor.lhs.false796

lor.lhs.false796:                                 ; preds = %if.end794
  %419 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 11), align 4
  %tobool797 = icmp ne i32 %419, 0
  br i1 %tobool797, label %if.then798, label %if.end891

if.then798:                                       ; preds = %lor.lhs.false796, %if.end794
  store i32 9, i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 1), align 4
  %420 = load i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 1), align 4
  %conv799 = sext i32 %420 to i64
  %call800 = call i8* @xcalloc(i64 %conv799, i64 64)
  %421 = bitcast i8* %call800 to %struct.sshkey**
  store %struct.sshkey** %421, %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  store i32 0, i32* %i, align 4
  br label %for.cond801

for.cond801:                                      ; preds = %cont809, %if.then798
  %422 = load i32* %i, align 4
  %423 = load i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 1), align 4
  %cmp802 = icmp slt i32 %422, %423
  br i1 %cmp802, label %for.body804, label %for.end810

for.body804:                                      ; preds = %for.cond801
  %424 = load i32* %i, align 4
  %idxprom805 = sext i32 %424 to i64
  %425 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx806 = getelementptr inbounds %struct.sshkey** %425, i64 %idxprom805
  store %struct.sshkey* null, %struct.sshkey** %arrayidx806, align 8
  br label %for.inc807

for.inc807:                                       ; preds = %for.body804
  %426 = load i32* %i, align 4
  %427 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %426, i32 1)
  %428 = extractvalue { i32, i1 } %427, 0
  %429 = extractvalue { i32, i1 } %427, 1
  %430 = xor i1 %429, true
  br i1 %430, label %cont809, label %trap808

trap808:                                          ; preds = %for.inc807
  call void @llvm.trap() #3
  unreachable

cont809:                                          ; preds = %for.inc807
  store i32 %428, i32* %i, align 4
  br label %for.cond801

for.end810:                                       ; preds = %for.cond801
  br label %do.body811

do.body811:                                       ; preds = %for.end810
  %call813 = call i32* @__errno_location() #2
  %431 = load i32* %call813, align 4
  store i32 %431, i32* %save_errno812, align 4
  %432 = load i32* @original_effective_uid, align 4
  %call814 = call i32 @seteuid(i32 %432) #9
  %cmp815 = icmp ne i32 %call814, 0
  br i1 %cmp815, label %if.then817, label %if.end820

if.then817:                                       ; preds = %do.body811
  %call818 = call i32* @__errno_location() #2
  %433 = load i32* %call818, align 4
  %call819 = call i8* @strerror(i32 %433) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str86, i32 0, i32 0), i8* %call819) #11
  unreachable

if.end820:                                        ; preds = %do.body811
  %434 = load i32* %save_errno812, align 4
  %call821 = call i32* @__errno_location() #2
  store i32 %434, i32* %call821, align 4
  br label %do.end822

do.end822:                                        ; preds = %if.end820
  %call823 = call %struct.sshkey* @key_load_private_cert(i32 3, i8* getelementptr inbounds ([34 x i8]* @.str87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i32* null)
  %435 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx824 = getelementptr inbounds %struct.sshkey** %435, i64 1
  store %struct.sshkey* %call823, %struct.sshkey** %arrayidx824, align 8
  %call825 = call %struct.sshkey* @key_load_private_cert(i32 4, i8* getelementptr inbounds ([36 x i8]* @.str88, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i32* null)
  %436 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx826 = getelementptr inbounds %struct.sshkey** %436, i64 2
  store %struct.sshkey* %call825, %struct.sshkey** %arrayidx826, align 8
  %call827 = call %struct.sshkey* @key_load_private_cert(i32 1, i8* getelementptr inbounds ([32 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i32* null)
  %437 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx828 = getelementptr inbounds %struct.sshkey** %437, i64 3
  store %struct.sshkey* %call827, %struct.sshkey** %arrayidx828, align 8
  %call829 = call %struct.sshkey* @key_load_private_cert(i32 2, i8* getelementptr inbounds ([32 x i8]* @.str90, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i32* null)
  %438 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx830 = getelementptr inbounds %struct.sshkey** %438, i64 4
  store %struct.sshkey* %call829, %struct.sshkey** %arrayidx830, align 8
  %call831 = call %struct.sshkey* @key_load_private_type(i32 3, i8* getelementptr inbounds ([34 x i8]* @.str87, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8** null, i32* null)
  %439 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx832 = getelementptr inbounds %struct.sshkey** %439, i64 5
  store %struct.sshkey* %call831, %struct.sshkey** %arrayidx832, align 8
  %call833 = call %struct.sshkey* @key_load_private_type(i32 4, i8* getelementptr inbounds ([36 x i8]* @.str88, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8** null, i32* null)
  %440 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx834 = getelementptr inbounds %struct.sshkey** %440, i64 6
  store %struct.sshkey* %call833, %struct.sshkey** %arrayidx834, align 8
  %call835 = call %struct.sshkey* @key_load_private_type(i32 1, i8* getelementptr inbounds ([32 x i8]* @.str89, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8** null, i32* null)
  %441 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx836 = getelementptr inbounds %struct.sshkey** %441, i64 7
  store %struct.sshkey* %call835, %struct.sshkey** %arrayidx836, align 8
  %call837 = call %struct.sshkey* @key_load_private_type(i32 2, i8* getelementptr inbounds ([32 x i8]* @.str90, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8** null, i32* null)
  %442 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx838 = getelementptr inbounds %struct.sshkey** %442, i64 8
  store %struct.sshkey* %call837, %struct.sshkey** %arrayidx838, align 8
  br label %do.body839

do.body839:                                       ; preds = %do.end822
  %call841 = call i32* @__errno_location() #2
  %443 = load i32* %call841, align 4
  store i32 %443, i32* %save_errno840, align 4
  %444 = load i32* @original_real_uid, align 4
  %call842 = call i32 @seteuid(i32 %444) #9
  %cmp843 = icmp ne i32 %call842, 0
  br i1 %cmp843, label %if.then845, label %if.end848

if.then845:                                       ; preds = %do.body839
  %call846 = call i32* @__errno_location() #2
  %445 = load i32* %call846, align 4
  %call847 = call i8* @strerror(i32 %445) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str, i32 0, i32 0), i8* %call847) #11
  unreachable

if.end848:                                        ; preds = %do.body839
  %446 = load i32* %save_errno840, align 4
  %call849 = call i32* @__errno_location() #2
  store i32 %446, i32* %call849, align 4
  br label %do.end850

do.end850:                                        ; preds = %if.end848
  %447 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 11), align 4
  %cmp851 = icmp eq i32 %447, 1
  br i1 %cmp851, label %land.lhs.true853, label %if.end890

land.lhs.true853:                                 ; preds = %do.end850
  %448 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx854 = getelementptr inbounds %struct.sshkey** %448, i64 0
  %449 = load %struct.sshkey** %arrayidx854, align 8
  %cmp855 = icmp eq %struct.sshkey* %449, null
  br i1 %cmp855, label %land.lhs.true857, label %if.end890

land.lhs.true857:                                 ; preds = %land.lhs.true853
  %450 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx858 = getelementptr inbounds %struct.sshkey** %450, i64 5
  %451 = load %struct.sshkey** %arrayidx858, align 8
  %cmp859 = icmp eq %struct.sshkey* %451, null
  br i1 %cmp859, label %land.lhs.true861, label %if.end890

land.lhs.true861:                                 ; preds = %land.lhs.true857
  %452 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx862 = getelementptr inbounds %struct.sshkey** %452, i64 6
  %453 = load %struct.sshkey** %arrayidx862, align 8
  %cmp863 = icmp eq %struct.sshkey* %453, null
  br i1 %cmp863, label %land.lhs.true865, label %if.end890

land.lhs.true865:                                 ; preds = %land.lhs.true861
  %454 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx866 = getelementptr inbounds %struct.sshkey** %454, i64 7
  %455 = load %struct.sshkey** %arrayidx866, align 8
  %cmp867 = icmp eq %struct.sshkey* %455, null
  br i1 %cmp867, label %land.lhs.true869, label %if.end890

land.lhs.true869:                                 ; preds = %land.lhs.true865
  %456 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx870 = getelementptr inbounds %struct.sshkey** %456, i64 8
  %457 = load %struct.sshkey** %arrayidx870, align 8
  %cmp871 = icmp eq %struct.sshkey* %457, null
  br i1 %cmp871, label %if.then873, label %if.end890

if.then873:                                       ; preds = %land.lhs.true869
  %call874 = call %struct.sshkey* @key_load_cert(i8* getelementptr inbounds ([34 x i8]* @.str87, i32 0, i32 0))
  %458 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx875 = getelementptr inbounds %struct.sshkey** %458, i64 1
  store %struct.sshkey* %call874, %struct.sshkey** %arrayidx875, align 8
  %call876 = call %struct.sshkey* @key_load_cert(i8* getelementptr inbounds ([36 x i8]* @.str88, i32 0, i32 0))
  %459 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx877 = getelementptr inbounds %struct.sshkey** %459, i64 2
  store %struct.sshkey* %call876, %struct.sshkey** %arrayidx877, align 8
  %call878 = call %struct.sshkey* @key_load_cert(i8* getelementptr inbounds ([32 x i8]* @.str89, i32 0, i32 0))
  %460 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx879 = getelementptr inbounds %struct.sshkey** %460, i64 3
  store %struct.sshkey* %call878, %struct.sshkey** %arrayidx879, align 8
  %call880 = call %struct.sshkey* @key_load_cert(i8* getelementptr inbounds ([32 x i8]* @.str90, i32 0, i32 0))
  %461 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx881 = getelementptr inbounds %struct.sshkey** %461, i64 4
  store %struct.sshkey* %call880, %struct.sshkey** %arrayidx881, align 8
  %call882 = call %struct.sshkey* @key_load_public(i8* getelementptr inbounds ([34 x i8]* @.str87, i32 0, i32 0), i8** null)
  %462 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx883 = getelementptr inbounds %struct.sshkey** %462, i64 5
  store %struct.sshkey* %call882, %struct.sshkey** %arrayidx883, align 8
  %call884 = call %struct.sshkey* @key_load_public(i8* getelementptr inbounds ([36 x i8]* @.str88, i32 0, i32 0), i8** null)
  %463 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx885 = getelementptr inbounds %struct.sshkey** %463, i64 6
  store %struct.sshkey* %call884, %struct.sshkey** %arrayidx885, align 8
  %call886 = call %struct.sshkey* @key_load_public(i8* getelementptr inbounds ([32 x i8]* @.str89, i32 0, i32 0), i8** null)
  %464 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx887 = getelementptr inbounds %struct.sshkey** %464, i64 7
  store %struct.sshkey* %call886, %struct.sshkey** %arrayidx887, align 8
  %call888 = call %struct.sshkey* @key_load_public(i8* getelementptr inbounds ([32 x i8]* @.str90, i32 0, i32 0), i8** null)
  %465 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx889 = getelementptr inbounds %struct.sshkey** %465, i64 8
  store %struct.sshkey* %call888, %struct.sshkey** %arrayidx889, align 8
  store i32 1, i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 2), align 4
  br label %if.end890

if.end890:                                        ; preds = %if.then873, %land.lhs.true869, %land.lhs.true865, %land.lhs.true861, %land.lhs.true857, %land.lhs.true853, %do.end850
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %lor.lhs.false796
  %466 = load i32* @original_effective_uid, align 4
  %cmp892 = icmp eq i32 %466, 0
  br i1 %cmp892, label %if.then894, label %if.end907

if.then894:                                       ; preds = %if.end891
  br label %do.body895

do.body895:                                       ; preds = %if.then894
  %call897 = call i32* @__errno_location() #2
  %467 = load i32* %call897, align 4
  store i32 %467, i32* %save_errno896, align 4
  %468 = load i32* @original_effective_uid, align 4
  %call898 = call i32 @seteuid(i32 %468) #9
  %cmp899 = icmp ne i32 %call898, 0
  br i1 %cmp899, label %if.then901, label %if.end904

if.then901:                                       ; preds = %do.body895
  %call902 = call i32* @__errno_location() #2
  %469 = load i32* %call902, align 4
  %call903 = call i8* @strerror(i32 %469) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str86, i32 0, i32 0), i8* %call903) #11
  unreachable

if.end904:                                        ; preds = %do.body895
  %470 = load i32* %save_errno896, align 4
  %call905 = call i32* @__errno_location() #2
  store i32 %470, i32* %call905, align 4
  br label %do.end906

do.end906:                                        ; preds = %if.end904
  %471 = load %struct.passwd** %pw, align 8
  call void @permanently_set_uid(%struct.passwd* %471)
  br label %if.end907

if.end907:                                        ; preds = %do.end906, %if.end891
  %472 = load i8** @config, align 8
  %cmp908 = icmp eq i8* %472, null
  br i1 %cmp908, label %if.then910, label %if.end938

if.then910:                                       ; preds = %if.end907
  %arraydecay911 = getelementptr inbounds [4096 x i8]* %buf, i32 0, i32 0
  %473 = load %struct.passwd** %pw, align 8
  %pw_dir912 = getelementptr inbounds %struct.passwd* %473, i32 0, i32 5
  %474 = load i8** %pw_dir912, align 8
  %475 = load %struct.passwd** %pw, align 8
  %pw_dir913 = getelementptr inbounds %struct.passwd* %475, i32 0, i32 5
  %476 = load i8** %pw_dir913, align 8
  %call914 = call i32 @strcmp(i8* %476, i8* getelementptr inbounds ([2 x i8]* @.str92, i32 0, i32 0)) #12
  %tobool915 = icmp ne i32 %call914, 0
  %cond916 = select i1 %tobool915, i8* getelementptr inbounds ([2 x i8]* @.str92, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0)
  %call917 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay911, i64 4096, i8* getelementptr inbounds ([7 x i8]* @.str91, i32 0, i32 0), i8* %474, i8* %cond916, i8* getelementptr inbounds ([5 x i8]* @.str93, i32 0, i32 0)) #9
  store i32 %call917, i32* %r, align 4
  %477 = load i32* %r, align 4
  %cmp918 = icmp sgt i32 %477, 0
  br i1 %cmp918, label %land.lhs.true920, label %if.end937

land.lhs.true920:                                 ; preds = %if.then910
  %478 = load i32* %r, align 4
  %conv921 = sext i32 %478 to i64
  %cmp922 = icmp ult i64 %conv921, 4096
  br i1 %cmp922, label %land.lhs.true924, label %if.end937

land.lhs.true924:                                 ; preds = %land.lhs.true920
  %arraydecay925 = getelementptr inbounds [4096 x i8]* %buf, i32 0, i32 0
  %call926 = call i32 @stat(i8* %arraydecay925, %struct.stat* %st) #9
  %cmp927 = icmp slt i32 %call926, 0
  br i1 %cmp927, label %if.then929, label %if.end937

if.then929:                                       ; preds = %land.lhs.true924
  %arraydecay930 = getelementptr inbounds [4096 x i8]* %buf, i32 0, i32 0
  %call931 = call i32 @mkdir(i8* %arraydecay930, i32 448) #9
  %cmp932 = icmp slt i32 %call931, 0
  br i1 %cmp932, label %if.then934, label %if.end936

if.then934:                                       ; preds = %if.then929
  %arraydecay935 = getelementptr inbounds [4096 x i8]* %buf, i32 0, i32 0
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str94, i32 0, i32 0), i8* %arraydecay935)
  br label %if.end936

if.end936:                                        ; preds = %if.then934, %if.then929
  br label %if.end937

if.end937:                                        ; preds = %if.end936, %land.lhs.true924, %land.lhs.true920, %if.then910
  br label %if.end938

if.end938:                                        ; preds = %if.end937, %if.end907
  call void @load_public_identity_files()
  %479 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 60), align 8
  %tobool939 = icmp ne i8* %479, null
  br i1 %tobool939, label %land.lhs.true940, label %if.end958

land.lhs.true940:                                 ; preds = %if.end938
  %480 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 60), align 8
  %call941 = call i32 @strcmp(i8* %480, i8* getelementptr inbounds ([14 x i8]* @.str95, i32 0, i32 0)) #12
  %cmp942 = icmp ne i32 %call941, 0
  br i1 %cmp942, label %if.then944, label %if.end958

if.then944:                                       ; preds = %land.lhs.true940
  %481 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 60), align 8
  %call945 = call i32 @strcmp(i8* %481, i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0)) #12
  %cmp946 = icmp eq i32 %call945, 0
  br i1 %cmp946, label %if.then948, label %if.else950

if.then948:                                       ; preds = %if.then944
  %call949 = call i32 @unsetenv(i8* getelementptr inbounds ([14 x i8]* @.str95, i32 0, i32 0)) #9
  br label %if.end957

if.else950:                                       ; preds = %if.then944
  %482 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 60), align 8
  %483 = load i32* @original_real_uid, align 4
  %call951 = call i8* @tilde_expand_filename(i8* %482, i32 %483)
  store i8* %call951, i8** %p, align 8
  %484 = load i8** %p, align 8
  %485 = load %struct.passwd** %pw, align 8
  %pw_dir952 = getelementptr inbounds %struct.passwd* %485, i32 0, i32 5
  %486 = load i8** %pw_dir952, align 8
  %487 = load %struct.passwd** %pw, align 8
  %pw_name953 = getelementptr inbounds %struct.passwd* %487, i32 0, i32 0
  %488 = load i8** %pw_name953, align 8
  %arraydecay954 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %489 = load i8** @host, align 8
  %490 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %call955 = call i8* (i8*, ...)* @percent_expand(i8* %484, i8* getelementptr inbounds ([2 x i8]* @.str75, i32 0, i32 0), i8* %486, i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i8* %488, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i8* %arraydecay954, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i8* %489, i8* getelementptr inbounds ([2 x i8]* @.str79, i32 0, i32 0), i8* %490, i8* null)
  store i8* %call955, i8** %cp, align 8
  %491 = load i8** %cp, align 8
  %call956 = call i32 @setenv(i8* getelementptr inbounds ([14 x i8]* @.str95, i32 0, i32 0), i8* %491, i32 1) #9
  %492 = load i8** %cp, align 8
  call void @free(i8* %492) #9
  %493 = load i8** %p, align 8
  call void @free(i8* %493) #9
  br label %if.end957

if.end957:                                        ; preds = %if.else950, %if.then948
  br label %if.end958

if.end958:                                        ; preds = %if.end957, %land.lhs.true940, %if.end938
  %494 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 43), align 4
  call void @tilde_expand_paths(i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 44, i32 0), i32 %494)
  %495 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 45), align 4
  call void @tilde_expand_paths(i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 46, i32 0), i32 %495)
  %call959 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*))
  %call960 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 17, void (i32)* @main_sigchld_handler)
  %496 = load i8** @host, align 8
  %497 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %conv961 = trunc i32 %497 to i16
  %498 = load %struct.passwd** %pw, align 8
  %499 = load i32* %timeout_ms, align 4
  call void @ssh_login(%struct.Sensitive* @sensitive_data, i8* %496, %struct.sockaddr* bitcast (%struct.sockaddr_storage* @hostaddr to %struct.sockaddr*), i16 zeroext %conv961, %struct.passwd* %498, i32 %499)
  %500 = load %struct.ssh** @active_state, align 8
  %call962 = call i32 @ssh_packet_connection_is_on_socket(%struct.ssh* %500)
  %tobool963 = icmp ne i32 %call962, 0
  br i1 %tobool963, label %if.then964, label %if.else967

if.then964:                                       ; preds = %if.end958
  %501 = load i8** @host, align 8
  %502 = load %struct.ssh** %ssh, align 8
  %call965 = call i8* @ssh_remote_ipaddr(%struct.ssh* %502)
  %503 = load %struct.ssh** %ssh, align 8
  %call966 = call i32 @ssh_remote_port(%struct.ssh* %503)
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([31 x i8]* @.str96, i32 0, i32 0), i8* %501, i8* %call965, i32 %call966)
  br label %if.end968

if.else967:                                       ; preds = %if.end958
  %504 = load i8** @host, align 8
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([33 x i8]* @.str97, i32 0, i32 0), i8* %504)
  br label %if.end968

if.end968:                                        ; preds = %if.else967, %if.then964
  %505 = load i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 1), align 4
  %cmp969 = icmp ne i32 %505, 0
  br i1 %cmp969, label %if.then971, label %if.end990

if.then971:                                       ; preds = %if.end968
  store i32 0, i32* %i, align 4
  br label %for.cond972

for.cond972:                                      ; preds = %cont988, %if.then971
  %506 = load i32* %i, align 4
  %507 = load i32* getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 1), align 4
  %cmp973 = icmp slt i32 %506, %507
  br i1 %cmp973, label %for.body975, label %for.end989

for.body975:                                      ; preds = %for.cond972
  %508 = load i32* %i, align 4
  %idxprom976 = sext i32 %508 to i64
  %509 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx977 = getelementptr inbounds %struct.sshkey** %509, i64 %idxprom976
  %510 = load %struct.sshkey** %arrayidx977, align 8
  %cmp978 = icmp ne %struct.sshkey* %510, null
  br i1 %cmp978, label %if.then980, label %if.end985

if.then980:                                       ; preds = %for.body975
  %511 = load i32* %i, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([17 x i8]* @.str98, i32 0, i32 0), i32 %511)
  %512 = load i32* %i, align 4
  %idxprom981 = sext i32 %512 to i64
  %513 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx982 = getelementptr inbounds %struct.sshkey** %513, i64 %idxprom981
  %514 = load %struct.sshkey** %arrayidx982, align 8
  call void @sshkey_free(%struct.sshkey* %514)
  %515 = load i32* %i, align 4
  %idxprom983 = sext i32 %515 to i64
  %516 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %arrayidx984 = getelementptr inbounds %struct.sshkey** %516, i64 %idxprom983
  store %struct.sshkey* null, %struct.sshkey** %arrayidx984, align 8
  br label %if.end985

if.end985:                                        ; preds = %if.then980, %for.body975
  br label %for.inc986

for.inc986:                                       ; preds = %if.end985
  %517 = load i32* %i, align 4
  %518 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %517, i32 1)
  %519 = extractvalue { i32, i1 } %518, 0
  %520 = extractvalue { i32, i1 } %518, 1
  %521 = xor i1 %520, true
  br i1 %521, label %cont988, label %trap987

trap987:                                          ; preds = %for.inc986
  call void @llvm.trap() #3
  unreachable

cont988:                                          ; preds = %for.inc986
  store i32 %519, i32* %i, align 4
  br label %for.cond972

for.end989:                                       ; preds = %for.cond972
  %522 = load %struct.sshkey*** getelementptr inbounds (%struct.Sensitive* @sensitive_data, i32 0, i32 0), align 8
  %523 = bitcast %struct.sshkey** %522 to i8*
  call void @free(i8* %523) #9
  br label %if.end990

if.end990:                                        ; preds = %for.end989, %if.end968
  store i32 0, i32* %i, align 4
  br label %for.cond991

for.cond991:                                      ; preds = %cont1010, %if.end990
  %524 = load i32* %i, align 4
  %525 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 51), align 4
  %cmp992 = icmp slt i32 %524, %525
  br i1 %cmp992, label %for.body994, label %for.end1011

for.body994:                                      ; preds = %for.cond991
  %526 = load i32* %i, align 4
  %idxprom995 = sext i32 %526 to i64
  %arrayidx996 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom995
  %527 = load i8** %arrayidx996, align 8
  call void @free(i8* %527) #9
  %528 = load i32* %i, align 4
  %idxprom997 = sext i32 %528 to i64
  %arrayidx998 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom997
  store i8* null, i8** %arrayidx998, align 8
  %529 = load i32* %i, align 4
  %idxprom999 = sext i32 %529 to i64
  %arrayidx1000 = getelementptr inbounds [100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 54), i32 0, i64 %idxprom999
  %530 = load %struct.sshkey** %arrayidx1000, align 8
  %tobool1001 = icmp ne %struct.sshkey* %530, null
  br i1 %tobool1001, label %if.then1002, label %if.end1007

if.then1002:                                      ; preds = %for.body994
  %531 = load i32* %i, align 4
  %idxprom1003 = sext i32 %531 to i64
  %arrayidx1004 = getelementptr inbounds [100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 54), i32 0, i64 %idxprom1003
  %532 = load %struct.sshkey** %arrayidx1004, align 8
  call void @sshkey_free(%struct.sshkey* %532)
  %533 = load i32* %i, align 4
  %idxprom1005 = sext i32 %533 to i64
  %arrayidx1006 = getelementptr inbounds [100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 54), i32 0, i64 %idxprom1005
  store %struct.sshkey* null, %struct.sshkey** %arrayidx1006, align 8
  br label %if.end1007

if.end1007:                                       ; preds = %if.then1002, %for.body994
  br label %for.inc1008

for.inc1008:                                      ; preds = %if.end1007
  %534 = load i32* %i, align 4
  %535 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %534, i32 1)
  %536 = extractvalue { i32, i1 } %535, 0
  %537 = extractvalue { i32, i1 } %535, 1
  %538 = xor i1 %537, true
  br i1 %538, label %cont1010, label %trap1009

trap1009:                                         ; preds = %for.inc1008
  call void @llvm.trap() #3
  unreachable

cont1010:                                         ; preds = %for.inc1008
  store i32 %536, i32* %i, align 4
  br label %for.cond991

for.end1011:                                      ; preds = %for.cond991
  store i32 0, i32* %i, align 4
  br label %for.cond1012

for.cond1012:                                     ; preds = %cont1022, %for.end1011
  %539 = load i32* %i, align 4
  %540 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 55), align 4
  %cmp1013 = icmp slt i32 %539, %540
  br i1 %cmp1013, label %for.body1015, label %for.end1023

for.body1015:                                     ; preds = %for.cond1012
  %541 = load i32* %i, align 4
  %idxprom1016 = sext i32 %541 to i64
  %arrayidx1017 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56), i32 0, i64 %idxprom1016
  %542 = load i8** %arrayidx1017, align 8
  call void @free(i8* %542) #9
  %543 = load i32* %i, align 4
  %idxprom1018 = sext i32 %543 to i64
  %arrayidx1019 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56), i32 0, i64 %idxprom1018
  store i8* null, i8** %arrayidx1019, align 8
  br label %for.inc1020

for.inc1020:                                      ; preds = %for.body1015
  %544 = load i32* %i, align 4
  %545 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %544, i32 1)
  %546 = extractvalue { i32, i1 } %545, 0
  %547 = extractvalue { i32, i1 } %545, 1
  %548 = xor i1 %547, true
  br i1 %548, label %cont1022, label %trap1021

trap1021:                                         ; preds = %for.inc1020
  call void @llvm.trap() #3
  unreachable

cont1022:                                         ; preds = %for.inc1020
  store i32 %546, i32* %i, align 4
  br label %for.cond1012

for.end1023:                                      ; preds = %for.cond1012
  br label %skip_connect

skip_connect:                                     ; preds = %for.end1023, %if.then763
  %549 = load i32* @compat20, align 4
  %tobool1024 = icmp ne i32 %549, 0
  br i1 %tobool1024, label %cond.true1025, label %cond.false1027

cond.true1025:                                    ; preds = %skip_connect
  %call1026 = call i32 @ssh_session2()
  br label %cond.end1029

cond.false1027:                                   ; preds = %skip_connect
  %call1028 = call i32 @ssh_session()
  br label %cond.end1029

cond.end1029:                                     ; preds = %cond.false1027, %cond.true1025
  %cond1030 = phi i32 [ %call1026, %cond.true1025 ], [ %call1028, %cond.false1027 ]
  store i32 %cond1030, i32* %exit_status, align 4
  call void @packet_close()
  %550 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp1031 = icmp ne i8* %550, null
  br i1 %cmp1031, label %land.lhs.true1033, label %if.end1040

land.lhs.true1033:                                ; preds = %cond.end1029
  %551 = load i32* @muxserver_sock, align 4
  %552 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %553 = extractvalue { i32, i1 } %552, 0
  %554 = extractvalue { i32, i1 } %552, 1
  %555 = xor i1 %554, true
  br i1 %555, label %cont1035, label %trap1034

trap1034:                                         ; preds = %land.lhs.true1033
  call void @llvm.trap() #3
  unreachable

cont1035:                                         ; preds = %land.lhs.true1033
  %cmp1036 = icmp ne i32 %551, %553
  br i1 %cmp1036, label %if.then1038, label %if.end1040

if.then1038:                                      ; preds = %cont1035
  %556 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call1039 = call i32 @unlink(i8* %556) #9
  br label %if.end1040

if.end1040:                                       ; preds = %if.then1038, %cont1035, %cond.end1029
  call void @ssh_kill_proxy_command()
  %557 = load i32* %exit_status, align 4
  ret i32 %557
}

declare void @ssh_malloc_init() #1

declare void @sanitise_stdfd() #1

declare i8* @ssh_get_progname(i8*) #1

declare i8* @xcalloc(i64, i64) #1

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #2

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #3

declare i8* @xstrdup(i8*) #1

declare void @compat_init_setproctitle(i32, i8**) #1

declare void @closefrom(i32) #1

; Function Attrs: nounwind
declare i32 @getuid() #4

; Function Attrs: nounwind
declare i32 @geteuid() #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: nounwind
declare i32 @seteuid(i32) #4

; Function Attrs: noreturn
declare void @fatal(i8*, ...) #6

; Function Attrs: nounwind
declare i8* @strerror(i32) #4

; Function Attrs: nounwind
declare i32 @setrlimit(i32, %struct.rlimit*) #4

declare %struct.passwd* @getpwuid(i32) #1

declare void @logit(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

declare %struct.passwd* @pwcopy(%struct.passwd*) #1

; Function Attrs: nounwind
declare i32 @umask(i32) #4

declare void @msetlocale() #1

; Function Attrs: nounwind
declare i32 @BSDgetopt(i32, i8**, i8*) #4

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #8

declare i8* @cipher_alg_list(i8 signext, i32) #1

declare i8* @mac_alg_list(i8 signext) #1

declare i8* @kex_alg_list(i8 signext) #1

declare i8* @sshkey_alg_list(i32, i32, i8 signext) #1

declare i32 @printf(i8*, ...) #1

; Function Attrs: nounwind
declare void @free(i8*) #4

declare i8* @tilde_expand_filename(i8*, i32) #1

; Function Attrs: nounwind
declare i32 @stat(i8*, %struct.stat*) #4

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare i8* @SSLeay_version(i32) #1

declare i32 @a2tun(i8*, i32*) #1

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #8

declare i32 @ciphers_valid(i8*) #1

declare i32 @cipher_number(i8*) #1

declare i32 @mac_valid(i8*) #1

declare i32 @a2port(i8*) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @usage() #0 {
entry:
  %0 = load %struct._IO_FILE** @stderr, align 8
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([461 x i8]* @.str193, i32 0, i32 0))
  call void @exit(i32 255) #3
  unreachable

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #8

declare void @OPENSSL_add_all_algorithms_noconf() #1

declare void @ERR_load_crypto_strings() #1

declare void @sshbuf_init(%struct.sshbuf*) #1

declare void @buffer_append(%struct.sshbuf*, i8*, i32) #1

declare i64 @sshbuf_len(%struct.sshbuf*) #1

declare void @log_redirect_stderr_to(i8*) #1

declare void @log_init(i8*, i32, i32, i32) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @process_config_files(i8* %host_arg, %struct.passwd* %pw, i32 %post_canon) #0 {
entry:
  %host_arg.addr = alloca i8*, align 8
  %pw.addr = alloca %struct.passwd*, align 8
  %post_canon.addr = alloca i32, align 4
  %buf = alloca [4096 x i8], align 16
  %r = alloca i32, align 4
  store i8* %host_arg, i8** %host_arg.addr, align 8
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i32 %post_canon, i32* %post_canon.addr, align 4
  %0 = load i8** @config, align 8
  %cmp = icmp ne i8* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8** @config, align 8
  %call = call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0)) #12
  %cmp1 = icmp ne i32 %call, 0
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %2 = load i8** @config, align 8
  %3 = load %struct.passwd** %pw.addr, align 8
  %4 = load i8** @host, align 8
  %5 = load i8** %host_arg.addr, align 8
  %6 = load i32* %post_canon.addr, align 4
  %tobool = icmp ne i32 %6, 0
  %cond = select i1 %tobool, i32 4, i32 0
  %or = or i32 2, %cond
  %call2 = call i32 @read_config_file(i8* %2, %struct.passwd* %3, i8* %4, i8* %5, %struct.Options* @options, i32 %or)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end, label %if.then4

if.then4:                                         ; preds = %land.lhs.true
  %7 = load i8** @config, align 8
  %call5 = call i32* @__errno_location() #2
  %8 = load i32* %call5, align 4
  %call6 = call i8* @strerror(i32 %8) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str189, i32 0, i32 0), i8* %7, i8* %call6) #11
  unreachable

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end22

if.else:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8]* %buf, i32 0, i32 0
  %9 = load %struct.passwd** %pw.addr, align 8
  %pw_dir = getelementptr inbounds %struct.passwd* %9, i32 0, i32 5
  %10 = load i8** %pw_dir, align 8
  %call7 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8]* @.str190, i32 0, i32 0), i8* %10, i8* getelementptr inbounds ([12 x i8]* @.str191, i32 0, i32 0)) #9
  store i32 %call7, i32* %r, align 4
  %11 = load i32* %r, align 4
  %cmp8 = icmp sgt i32 %11, 0
  br i1 %cmp8, label %land.lhs.true9, label %if.end18

land.lhs.true9:                                   ; preds = %if.else
  %12 = load i32* %r, align 4
  %conv = sext i32 %12 to i64
  %cmp10 = icmp ult i64 %conv, 4096
  br i1 %cmp10, label %if.then12, label %if.end18

if.then12:                                        ; preds = %land.lhs.true9
  %arraydecay13 = getelementptr inbounds [4096 x i8]* %buf, i32 0, i32 0
  %13 = load %struct.passwd** %pw.addr, align 8
  %14 = load i8** @host, align 8
  %15 = load i8** %host_arg.addr, align 8
  %16 = load i32* %post_canon.addr, align 4
  %tobool14 = icmp ne i32 %16, 0
  %cond15 = select i1 %tobool14, i32 4, i32 0
  %or16 = or i32 3, %cond15
  %call17 = call i32 @read_config_file(i8* %arraydecay13, %struct.passwd* %13, i8* %14, i8* %15, %struct.Options* @options, i32 %or16)
  br label %if.end18

if.end18:                                         ; preds = %if.then12, %land.lhs.true9, %if.else
  %17 = load %struct.passwd** %pw.addr, align 8
  %18 = load i8** @host, align 8
  %19 = load i8** %host_arg.addr, align 8
  %20 = load i32* %post_canon.addr, align 4
  %tobool19 = icmp ne i32 %20, 0
  %cond20 = select i1 %tobool19, i32 4, i32 0
  %call21 = call i32 @read_config_file(i8* getelementptr inbounds ([26 x i8]* @.str192, i32 0, i32 0), %struct.passwd* %17, i8* %18, i8* %19, %struct.Options* @options, i32 %cond20)
  br label %if.end22

if.end22:                                         ; preds = %if.end18, %if.end
  ret void
}

declare i8* @percent_expand(i8*, ...) #1

declare void @lowercase(i8*) #1

; Function Attrs: nounwind sspreq uwtable
define internal %struct.addrinfo* @resolve_canonicalize(i8** %hostp, i32 %port) #0 {
entry:
  %retval = alloca %struct.addrinfo*, align 8
  %hostp.addr = alloca i8**, align 8
  %port.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %direct = alloca i32, align 4
  %ndots = alloca i32, align 4
  %cp = alloca i8*, align 8
  %fullhost = alloca i8*, align 8
  %newname = alloca [1025 x i8], align 16
  %addrs = alloca %struct.addrinfo*, align 8
  store i8** %hostp, i8*** %hostp.addr, align 8
  store i32 %port, i32* %port.addr, align 4
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call = call i32 @option_clear_or_none(i8* %1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.end
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 103), align 8
  %cmp1 = icmp eq i8* %2, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %3 = phi i1 [ false, %if.end ], [ %cmp1, %land.rhs ]
  %land.ext = zext i1 %3 to i32
  store i32 %land.ext, i32* %direct, align 4
  %4 = load i32* %direct, align 4
  %tobool2 = icmp ne i32 %4, 0
  br i1 %tobool2, label %if.end5, label %land.lhs.true

land.lhs.true:                                    ; preds = %land.end
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp3 = icmp ne i32 %5, 2
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %land.end
  %6 = load i8*** %hostp.addr, align 8
  %7 = load i8** %6, align 8
  %8 = load i32* %port.addr, align 4
  %arraydecay = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  %call6 = call %struct.addrinfo* @resolve_addr(i8* %7, i32 %8, i8* %arraydecay, i64 1025)
  store %struct.addrinfo* %call6, %struct.addrinfo** %addrs, align 8
  %cmp7 = icmp ne %struct.addrinfo* %call6, null
  br i1 %cmp7, label %if.then8, label %if.end17

if.then8:                                         ; preds = %if.end5
  %9 = load i8*** %hostp.addr, align 8
  %10 = load i8** %9, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([31 x i8]* @.str174, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.resolve_canonicalize, i32 0, i32 0), i8* %10)
  %11 = load i8*** %hostp.addr, align 8
  %12 = load i8** %11, align 8
  %arraydecay9 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  %call10 = call i32 @strcasecmp(i8* %12, i8* %arraydecay9) #12
  %cmp11 = icmp ne i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.end16

if.then12:                                        ; preds = %if.then8
  %13 = load i8*** %hostp.addr, align 8
  %14 = load i8** %13, align 8
  %arraydecay13 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([39 x i8]* @.str175, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.resolve_canonicalize, i32 0, i32 0), i8* %14, i8* %arraydecay13)
  %15 = load i8*** %hostp.addr, align 8
  %16 = load i8** %15, align 8
  call void @free(i8* %16) #9
  %arraydecay14 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  %call15 = call i8* @xstrdup(i8* %arraydecay14)
  %17 = load i8*** %hostp.addr, align 8
  store i8* %call15, i8** %17, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.then8
  %18 = load %struct.addrinfo** %addrs, align 8
  store %struct.addrinfo* %18, %struct.addrinfo** %retval
  br label %return

if.end17:                                         ; preds = %if.end5
  %19 = load i8*** %hostp.addr, align 8
  %20 = load i8** %19, align 8
  %call18 = call i64 @strlen(i8* %20) #12
  %sub = sub i64 %call18, 1
  %21 = load i8*** %hostp.addr, align 8
  %22 = load i8** %21, align 8
  %arrayidx = getelementptr inbounds i8* %22, i64 %sub
  %23 = load i8* %arrayidx, align 1
  %conv = sext i8 %23 to i32
  %cmp19 = icmp eq i32 %conv, 46
  br i1 %cmp19, label %if.then21, label %if.end29

if.then21:                                        ; preds = %if.end17
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([28 x i8]* @.str176, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.resolve_canonicalize, i32 0, i32 0))
  %24 = load i8*** %hostp.addr, align 8
  %25 = load i8** %24, align 8
  %call22 = call i8* @xstrdup(i8* %25)
  store i8* %call22, i8** %fullhost, align 8
  %26 = load i8** %fullhost, align 8
  %27 = load i32* %port.addr, align 4
  %arraydecay23 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  %call24 = call %struct.addrinfo* @resolve_host(i8* %26, i32 %27, i32 0, i8* %arraydecay23, i64 1025)
  store %struct.addrinfo* %call24, %struct.addrinfo** %addrs, align 8
  %cmp25 = icmp ne %struct.addrinfo* %call24, null
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then21
  br label %found

if.end28:                                         ; preds = %if.then21
  %28 = load i8** %fullhost, align 8
  call void @free(i8* %28) #9
  br label %notfound

if.end29:                                         ; preds = %if.end17
  store i32 0, i32* %ndots, align 4
  %29 = load i8*** %hostp.addr, align 8
  %30 = load i8** %29, align 8
  store i8* %30, i8** %cp, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end29
  %31 = load i8** %cp, align 8
  %32 = load i8* %31, align 1
  %conv30 = sext i8 %32 to i32
  %cmp31 = icmp ne i32 %conv30, 0
  br i1 %cmp31, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %33 = load i8** %cp, align 8
  %34 = load i8* %33, align 1
  %conv33 = sext i8 %34 to i32
  %cmp34 = icmp eq i32 %conv33, 46
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %for.body
  %35 = load i32* %ndots, align 4
  %36 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 1)
  %37 = extractvalue { i32, i1 } %36, 0
  %38 = extractvalue { i32, i1 } %36, 1
  %39 = xor i1 %38, true
  br i1 %39, label %cont, label %trap

trap:                                             ; preds = %if.then36
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then36
  store i32 %37, i32* %ndots, align 4
  br label %if.end37

if.end37:                                         ; preds = %cont, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end37
  %40 = load i8** %cp, align 8
  %incdec.ptr = getelementptr inbounds i8* %40, i32 1
  store i8* %incdec.ptr, i8** %cp, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %41 = load i32* %ndots, align 4
  %42 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 93), align 4
  %cmp38 = icmp sgt i32 %41, %42
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %for.end
  %43 = load i8*** %hostp.addr, align 8
  %44 = load i8** %43, align 8
  %45 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 93), align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([51 x i8]* @.str177, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.resolve_canonicalize, i32 0, i32 0), i8* %44, i32 %45)
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end41:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %cont65, %if.end41
  %46 = load i32* %i, align 4
  %47 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 90), align 4
  %cmp43 = icmp slt i32 %46, %47
  br i1 %cmp43, label %for.body45, label %for.end66

for.body45:                                       ; preds = %for.cond42
  %arraydecay46 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  store i8 0, i8* %arraydecay46, align 1
  %48 = load i8*** %hostp.addr, align 8
  %49 = load i8** %48, align 8
  %50 = load i32* %i, align 4
  %idxprom = sext i32 %50 to i64
  %arrayidx47 = getelementptr inbounds [32 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 91), i32 0, i64 %idxprom
  %51 = load i8** %arrayidx47, align 8
  %call48 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %fullhost, i8* getelementptr inbounds ([7 x i8]* @.str178, i32 0, i32 0), i8* %49, i8* %51)
  %52 = load i8*** %hostp.addr, align 8
  %53 = load i8** %52, align 8
  %54 = load i8** %fullhost, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([28 x i8]* @.str179, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.resolve_canonicalize, i32 0, i32 0), i8* %53, i8* %54)
  %55 = load i8** %fullhost, align 8
  %56 = load i32* %port.addr, align 4
  %arraydecay49 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  %call50 = call %struct.addrinfo* @resolve_host(i8* %55, i32 %56, i32 0, i8* %arraydecay49, i64 1025)
  store %struct.addrinfo* %call50, %struct.addrinfo** %addrs, align 8
  %cmp51 = icmp eq %struct.addrinfo* %call50, null
  br i1 %cmp51, label %if.then53, label %if.end54

if.then53:                                        ; preds = %for.body45
  %57 = load i8** %fullhost, align 8
  call void @free(i8* %57) #9
  br label %for.inc63

if.end54:                                         ; preds = %for.body45
  br label %found

found:                                            ; preds = %if.end54, %if.then27
  %58 = load i8** %fullhost, align 8
  %call55 = call i64 @strlen(i8* %58) #12
  %sub56 = sub i64 %call55, 1
  %59 = load i8** %fullhost, align 8
  %arrayidx57 = getelementptr inbounds i8* %59, i64 %sub56
  store i8 0, i8* %arrayidx57, align 1
  %60 = load i32* %direct, align 4
  %arraydecay58 = getelementptr inbounds [1025 x i8]* %newname, i32 0, i32 0
  %call59 = call i32 @check_follow_cname(i32 %60, i8** %fullhost, i8* %arraydecay58)
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %if.end62, label %if.then61

if.then61:                                        ; preds = %found
  %61 = load i8*** %hostp.addr, align 8
  %62 = load i8** %61, align 8
  %63 = load i8** %fullhost, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([36 x i8]* @.str180, i32 0, i32 0), i8* %62, i8* %63)
  br label %if.end62

if.end62:                                         ; preds = %if.then61, %found
  %64 = load i8*** %hostp.addr, align 8
  %65 = load i8** %64, align 8
  call void @free(i8* %65) #9
  %66 = load i8** %fullhost, align 8
  %67 = load i8*** %hostp.addr, align 8
  store i8* %66, i8** %67, align 8
  %68 = load %struct.addrinfo** %addrs, align 8
  store %struct.addrinfo* %68, %struct.addrinfo** %retval
  br label %return

for.inc63:                                        ; preds = %if.then53
  %69 = load i32* %i, align 4
  %70 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 1)
  %71 = extractvalue { i32, i1 } %70, 0
  %72 = extractvalue { i32, i1 } %70, 1
  %73 = xor i1 %72, true
  br i1 %73, label %cont65, label %trap64

trap64:                                           ; preds = %for.inc63
  call void @llvm.trap() #3
  unreachable

cont65:                                           ; preds = %for.inc63
  store i32 %71, i32* %i, align 4
  br label %for.cond42

for.end66:                                        ; preds = %for.cond42
  br label %notfound

notfound:                                         ; preds = %for.end66, %if.end28
  %74 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 94), align 4
  %tobool67 = icmp ne i32 %74, 0
  br i1 %tobool67, label %if.end69, label %if.then68

if.then68:                                        ; preds = %notfound
  %75 = load i8** @__progname, align 8
  %76 = load i8*** %hostp.addr, align 8
  %77 = load i8** %76, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str181, i32 0, i32 0), i8* %75, i8* %77) #11
  unreachable

if.end69:                                         ; preds = %notfound
  %78 = load i8*** %hostp.addr, align 8
  %79 = load i8** %78, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([36 x i8]* @.str182, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.resolve_canonicalize, i32 0, i32 0), i8* %79)
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

return:                                           ; preds = %if.end69, %if.end62, %if.then40, %if.end16, %if.then4, %if.then
  %80 = load %struct.addrinfo** %retval
  ret %struct.addrinfo* %80
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.addrinfo* @resolve_host(i8* %name, i32 %port, i32 %logerr, i8* %cname, i64 %clen) #0 {
entry:
  %retval = alloca %struct.addrinfo*, align 8
  %name.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %logerr.addr = alloca i32, align 4
  %cname.addr = alloca i8*, align 8
  %clen.addr = alloca i64, align 8
  %strport = alloca [32 x i8], align 16
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  %gaierr = alloca i32, align 4
  %loglevel = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %port, i32* %port.addr, align 4
  store i32 %logerr, i32* %logerr.addr, align 4
  store i8* %cname, i8** %cname.addr, align 8
  store i64 %clen, i64* %clen.addr, align 8
  store i32 5, i32* %loglevel, align 4
  %0 = load i32* %port.addr, align 4
  %cmp = icmp sle i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 @default_ssh_port()
  store i32 %call, i32* %port.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %1 = load i32* %port.addr, align 4
  %call1 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([3 x i8]* @.str55, i32 0, i32 0), i32 %1) #9
  %2 = bitcast %struct.addrinfo* %hints to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 48, i32 8, i1 false)
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %5 = extractvalue { i32, i1 } %4, 0
  %6 = extractvalue { i32, i1 } %4, 1
  %7 = xor i1 %6, true
  br i1 %7, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp2 = icmp eq i32 %3, %5
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %cont
  br label %cond.end

cond.false:                                       ; preds = %cont
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ]
  %ai_family = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 1
  store i32 %cond, i32* %ai_family, align 4
  %ai_socktype = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 2
  store i32 1, i32* %ai_socktype, align 4
  %9 = load i8** %cname.addr, align 8
  %cmp3 = icmp ne i8* %9, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %cond.end
  %ai_flags = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 0
  store i32 2, i32* %ai_flags, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %cond.end
  %10 = load i8** %name.addr, align 8
  %arraydecay6 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %call7 = call i32 @getaddrinfo(i8* %10, i8* %arraydecay6, %struct.addrinfo* %hints, %struct.addrinfo** %res)
  store i32 %call7, i32* %gaierr, align 4
  %cmp8 = icmp ne i32 %call7, 0
  br i1 %cmp8, label %if.then9, label %if.end19

if.then9:                                         ; preds = %if.end5
  %11 = load i32* %logerr.addr, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then9
  %12 = load i32* %gaierr, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont11, label %trap10

trap10:                                           ; preds = %lor.lhs.false
  call void @llvm.trap() #3
  unreachable

cont11:                                           ; preds = %lor.lhs.false
  %cmp12 = icmp ne i32 %12, %14
  br i1 %cmp12, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %cont11
  %17 = load i32* %gaierr, align 4
  %18 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 5)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont14, label %trap13

trap13:                                           ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont14:                                           ; preds = %land.lhs.true
  %cmp15 = icmp ne i32 %17, %19
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %cont14, %if.then9
  store i32 2, i32* %loglevel, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %cont14, %cont11
  %22 = load i32* %loglevel, align 4
  %23 = load i8** @__progname, align 8
  %24 = load i8** %name.addr, align 8
  %25 = load i32* %gaierr, align 4
  %call18 = call i8* @ssh_gai_strerror(i32 %25)
  call void (i32, i8*, ...)* @do_log2(i32 %22, i8* getelementptr inbounds ([42 x i8]* @.str172, i32 0, i32 0), i8* %23, i8* %24, i8* %call18)
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end19:                                         ; preds = %if.end5
  %26 = load i8** %cname.addr, align 8
  %cmp20 = icmp ne i8* %26, null
  br i1 %cmp20, label %land.lhs.true21, label %if.end33

land.lhs.true21:                                  ; preds = %if.end19
  %27 = load %struct.addrinfo** %res, align 8
  %ai_canonname = getelementptr inbounds %struct.addrinfo* %27, i32 0, i32 6
  %28 = load i8** %ai_canonname, align 8
  %cmp22 = icmp ne i8* %28, null
  br i1 %cmp22, label %if.then23, label %if.end33

if.then23:                                        ; preds = %land.lhs.true21
  %29 = load i8** %cname.addr, align 8
  %30 = load %struct.addrinfo** %res, align 8
  %ai_canonname24 = getelementptr inbounds %struct.addrinfo* %30, i32 0, i32 6
  %31 = load i8** %ai_canonname24, align 8
  %32 = load i64* %clen.addr, align 8
  %call25 = call i64 @strlcpy(i8* %29, i8* %31, i64 %32)
  %33 = load i64* %clen.addr, align 8
  %cmp26 = icmp uge i64 %call25, %33
  br i1 %cmp26, label %if.then27, label %if.end32

if.then27:                                        ; preds = %if.then23
  %34 = load i8** %name.addr, align 8
  %35 = load %struct.addrinfo** %res, align 8
  %ai_canonname28 = getelementptr inbounds %struct.addrinfo* %35, i32 0, i32 6
  %36 = load i8** %ai_canonname28, align 8
  %37 = load i64* %clen.addr, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str173, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @__func__.resolve_host, i32 0, i32 0), i8* %34, i8* %36, i64 %37)
  %38 = load i64* %clen.addr, align 8
  %cmp29 = icmp ugt i64 %38, 0
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then27
  %39 = load i8** %cname.addr, align 8
  store i8 0, i8* %39, align 1
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.then27
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then23
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %land.lhs.true21, %if.end19
  %40 = load %struct.addrinfo** %res, align 8
  store %struct.addrinfo* %40, %struct.addrinfo** %retval
  br label %return

return:                                           ; preds = %if.end33, %if.end17
  %41 = load %struct.addrinfo** %retval
  ret %struct.addrinfo* %41
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @check_follow_cname(i32 %direct, i8** %namep, i8* %cname) #0 {
entry:
  %retval = alloca i32, align 4
  %direct.addr = alloca i32, align 4
  %namep.addr = alloca i8**, align 8
  %cname.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %rule = alloca %struct.allowed_cname*, align 8
  store i32 %direct, i32* %direct.addr, align 4
  store i8** %namep, i8*** %namep.addr, align 8
  store i8* %cname, i8** %cname.addr, align 8
  %0 = load i8** %cname.addr, align 8
  %1 = load i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 95), align 4
  %cmp2 = icmp eq i32 %2, 0
  br i1 %cmp2, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %3 = load i8*** %namep.addr, align 8
  %4 = load i8** %3, align 8
  %5 = load i8** %cname.addr, align 8
  %call = call i32 @strcmp(i8* %4, i8* %5) #12
  %cmp5 = icmp eq i32 %call, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false4
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp7 = icmp eq i32 %6, 0
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end10:                                         ; preds = %if.end
  %7 = load i32* %direct.addr, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.end14, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end10
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 92), align 4
  %cmp11 = icmp ne i32 %8, 2
  br i1 %cmp11, label %if.then13, label %if.end14

if.then13:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval
  br label %return

if.end14:                                         ; preds = %land.lhs.true, %if.end10
  %9 = load i8*** %namep.addr, align 8
  %10 = load i8** %9, align 8
  %11 = load i8** %cname.addr, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str170, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.check_follow_cname, i32 0, i32 0), i8* %10, i8* %11)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.end14
  %12 = load i32* %i, align 4
  %13 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 95), align 4
  %cmp15 = icmp slt i32 %12, %13
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %14 = load i32* %i, align 4
  %idx.ext = sext i32 %14 to i64
  %add.ptr = getelementptr inbounds %struct.allowed_cname* getelementptr inbounds (%struct.Options* @options, i32 0, i32 96, i32 0), i64 %idx.ext
  store %struct.allowed_cname* %add.ptr, %struct.allowed_cname** %rule, align 8
  %15 = load i8*** %namep.addr, align 8
  %16 = load i8** %15, align 8
  %17 = load %struct.allowed_cname** %rule, align 8
  %source_list = getelementptr inbounds %struct.allowed_cname* %17, i32 0, i32 0
  %18 = load i8** %source_list, align 8
  %call17 = call i32 @match_pattern_list(i8* %16, i8* %18, i32 1)
  %cmp18 = icmp ne i32 %call17, 1
  br i1 %cmp18, label %if.then24, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %for.body
  %19 = load i8** %cname.addr, align 8
  %20 = load %struct.allowed_cname** %rule, align 8
  %target_list = getelementptr inbounds %struct.allowed_cname* %20, i32 0, i32 1
  %21 = load i8** %target_list, align 8
  %call21 = call i32 @match_pattern_list(i8* %19, i8* %21, i32 1)
  %cmp22 = icmp ne i32 %call21, 1
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; preds = %lor.lhs.false20, %for.body
  br label %for.inc

if.end25:                                         ; preds = %lor.lhs.false20
  %22 = load i8*** %namep.addr, align 8
  %23 = load i8** %22, align 8
  %24 = load i8** %cname.addr, align 8
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([48 x i8]* @.str171, i32 0, i32 0), i8* %23, i8* %24)
  %25 = load i8*** %namep.addr, align 8
  %26 = load i8** %25, align 8
  call void @free(i8* %26) #9
  %27 = load i8** %cname.addr, align 8
  %call26 = call i8* @xstrdup(i8* %27)
  %28 = load i8*** %namep.addr, align 8
  store i8* %call26, i8** %28, align 8
  store i32 1, i32* %retval
  br label %return

for.inc:                                          ; preds = %if.then24
  %29 = load i32* %i, align 4
  %30 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 1)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %31, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.end25, %if.then13, %if.then9, %if.then
  %34 = load i32* %retval
  ret i32 %34
}

declare void @debug(i8*, ...) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @set_addrinfo_port(%struct.addrinfo* %addrs, i32 %port) #0 {
entry:
  %addrs.addr = alloca %struct.addrinfo*, align 8
  %port.addr = alloca i32, align 4
  %addr = alloca %struct.addrinfo*, align 8
  store %struct.addrinfo* %addrs, %struct.addrinfo** %addrs.addr, align 8
  store i32 %port, i32* %port.addr, align 4
  %0 = load %struct.addrinfo** %addrs.addr, align 8
  store %struct.addrinfo* %0, %struct.addrinfo** %addr, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.addrinfo** %addr, align 8
  %cmp = icmp ne %struct.addrinfo* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.addrinfo** %addr, align 8
  %ai_family = getelementptr inbounds %struct.addrinfo* %2, i32 0, i32 1
  %3 = load i32* %ai_family, align 4
  switch i32 %3, label %sw.epilog [
    i32 2, label %sw.bb
    i32 10, label %sw.bb1
  ]

sw.bb:                                            ; preds = %for.body
  %4 = load i32* %port.addr, align 4
  %conv = trunc i32 %4 to i16
  %call = call zeroext i16 @htons(i16 zeroext %conv) #2
  %5 = load %struct.addrinfo** %addr, align 8
  %ai_addr = getelementptr inbounds %struct.addrinfo* %5, i32 0, i32 5
  %6 = load %struct.sockaddr** %ai_addr, align 8
  %7 = bitcast %struct.sockaddr* %6 to %struct.sockaddr_in*
  %sin_port = getelementptr inbounds %struct.sockaddr_in* %7, i32 0, i32 1
  store i16 %call, i16* %sin_port, align 2
  br label %sw.epilog

sw.bb1:                                           ; preds = %for.body
  %8 = load i32* %port.addr, align 4
  %conv2 = trunc i32 %8 to i16
  %call3 = call zeroext i16 @htons(i16 zeroext %conv2) #2
  %9 = load %struct.addrinfo** %addr, align 8
  %ai_addr4 = getelementptr inbounds %struct.addrinfo* %9, i32 0, i32 5
  %10 = load %struct.sockaddr** %ai_addr4, align 8
  %11 = bitcast %struct.sockaddr* %10 to %struct.sockaddr_in6*
  %sin6_port = getelementptr inbounds %struct.sockaddr_in6* %11, i32 0, i32 1
  store i16 %call3, i16* %sin6_port, align 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb, %for.body
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %12 = load %struct.addrinfo** %addr, align 8
  %ai_next = getelementptr inbounds %struct.addrinfo* %12, i32 0, i32 7
  %13 = load %struct.addrinfo** %ai_next, align 8
  store %struct.addrinfo* %13, %struct.addrinfo** %addr, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind
declare i32 @snprintf(i8*, i64, i8*, ...) #4

declare i32 @xasprintf(i8**, i8*, ...) #1

declare void @channel_set_af(i32) #1

; Function Attrs: nounwind
declare i32 @isatty(i32) #4

; Function Attrs: nounwind
declare i32 @fileno(%struct._IO_FILE*) #4

declare void @seed_rng() #1

; Function Attrs: nounwind
declare i32 @gethostname(i8*, i64) #4

declare i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: nounwind readonly
declare i64 @strcspn(i8*, i8*) #8

declare %struct.ssh_digest_ctx* @ssh_digest_start(i32) #1

declare i32 @ssh_digest_update(%struct.ssh_digest_ctx*, i8*, i64) #1

declare i32 @ssh_digest_final(%struct.ssh_digest_ctx*, i8*, i64) #1

declare void @ssh_digest_free(%struct.ssh_digest_ctx*) #1

declare i8* @tohex(i8*, i64) #1

declare i64 @ssh_digest_bytes(i32) #1

declare void @debug3(i8*, ...) #1

declare void @packet_set_connection(i32, i32) #1

declare void @enable_compat20() #1

declare void @ssh_packet_set_mux(%struct.ssh*) #1

declare void @debug2(i8*, ...) #1

; Function Attrs: nounwind readnone
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #2

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) #4

declare void @ssh_packet_set_timeout(%struct.ssh*, i32, i32) #1

declare %struct.sshkey* @key_load_private_cert(i32, i8*, i8*, i32*) #1

declare %struct.sshkey* @key_load_private_type(i32, i8*, i8*, i8**, i32*) #1

declare %struct.sshkey* @key_load_cert(i8*) #1

declare %struct.sshkey* @key_load_public(i8*, i8**) #1

declare void @permanently_set_uid(%struct.passwd*) #1

; Function Attrs: nounwind
declare i32 @mkdir(i8*, i32) #4

declare void @error(i8*, ...) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @load_public_identity_files() #0 {
entry:
  %filename = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %thishost = alloca [1025 x i8], align 16
  %pwdir = alloca i8*, align 8
  %pwname = alloca i8*, align 8
  %public = alloca %struct.sshkey*, align 8
  %pw = alloca %struct.passwd*, align 8
  %i = alloca i32, align 4
  %n_ids = alloca i32, align 4
  %n_certs = alloca i32, align 4
  %identity_files = alloca [100 x i8*], align 16
  %identity_keys = alloca [100 x %struct.sshkey*], align 16
  %certificate_files = alloca [100 x i8*], align 16
  %certificates = alloca [100 x %struct.sshkey*], align 16
  %keys = alloca %struct.sshkey**, align 8
  %nkeys = alloca i32, align 4
  store i8* null, i8** %pwdir, align 8
  store i8* null, i8** %pwname, align 8
  store i32 0, i32* %n_certs, align 4
  store i32 0, i32* %n_ids, align 4
  %0 = bitcast [100 x i8*]* %identity_files to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 800, i32 16, i1 false)
  %1 = bitcast [100 x %struct.sshkey*]* %identity_keys to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 800, i32 16, i1 false)
  %2 = bitcast [100 x i8*]* %certificate_files to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 800, i32 16, i1 false)
  %3 = bitcast [100 x %struct.sshkey*]* %certificates to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 800, i32 16, i1 false)
  %4 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 49), align 8
  %cmp = icmp ne i8* %4, null
  br i1 %cmp, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %entry
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 51), align 4
  %cmp1 = icmp slt i32 %5, 100
  br i1 %cmp1, label %land.lhs.true2, label %if.end17

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 18), align 4
  %tobool = icmp ne i32 %6, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %call = call i32 @pkcs11_init(i32 %lnot.ext)
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %land.lhs.true4, label %if.end17

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %7 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 49), align 8
  %call5 = call i32 @pkcs11_add_provider(i8* %7, i8* null, %struct.sshkey*** %keys)
  store i32 %call5, i32* %nkeys, align 4
  %cmp6 = icmp sgt i32 %call5, 0
  br i1 %cmp6, label %if.then, label %if.end17

if.then:                                          ; preds = %land.lhs.true4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.then
  %8 = load i32* %i, align 4
  %9 = load i32* %nkeys, align 4
  %cmp7 = icmp slt i32 %8, %9
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32* %n_ids, align 4
  %cmp8 = icmp uge i32 %10, 100
  br i1 %cmp8, label %if.then9, label %if.end

if.then9:                                         ; preds = %for.body
  %11 = load i32* %i, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load %struct.sshkey*** %keys, align 8
  %arrayidx = getelementptr inbounds %struct.sshkey** %12, i64 %idxprom
  %13 = load %struct.sshkey** %arrayidx, align 8
  call void @sshkey_free(%struct.sshkey* %13)
  br label %for.inc

if.end:                                           ; preds = %for.body
  %14 = load i32* %i, align 4
  %idxprom10 = sext i32 %14 to i64
  %15 = load %struct.sshkey*** %keys, align 8
  %arrayidx11 = getelementptr inbounds %struct.sshkey** %15, i64 %idxprom10
  %16 = load %struct.sshkey** %arrayidx11, align 8
  %17 = load i32* %n_ids, align 4
  %idxprom12 = zext i32 %17 to i64
  %arrayidx13 = getelementptr inbounds [100 x %struct.sshkey*]* %identity_keys, i32 0, i64 %idxprom12
  store %struct.sshkey* %16, %struct.sshkey** %arrayidx13, align 8
  %18 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 49), align 8
  %call14 = call i8* @xstrdup(i8* %18)
  %19 = load i32* %n_ids, align 4
  %idxprom15 = zext i32 %19 to i64
  %arrayidx16 = getelementptr inbounds [100 x i8*]* %identity_files, i32 0, i64 %idxprom15
  store i8* %call14, i8** %arrayidx16, align 8
  %20 = load i32* %n_ids, align 4
  %inc = add i32 %20, 1
  store i32 %inc, i32* %n_ids, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then9
  %21 = load i32* %i, align 4
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 1)
  %23 = extractvalue { i32, i1 } %22, 0
  %24 = extractvalue { i32, i1 } %22, 1
  %25 = xor i1 %24, true
  br i1 %25, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %23, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %26 = load %struct.sshkey*** %keys, align 8
  %27 = bitcast %struct.sshkey** %26 to i8*
  call void @free(i8* %27) #9
  br label %if.end17

if.end17:                                         ; preds = %for.end, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %28 = load i32* @original_real_uid, align 4
  %call18 = call %struct.passwd* @getpwuid(i32 %28)
  store %struct.passwd* %call18, %struct.passwd** %pw, align 8
  %cmp19 = icmp eq %struct.passwd* %call18, null
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end17
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str99, i32 0, i32 0)) #11
  unreachable

if.end21:                                         ; preds = %if.end17
  %29 = load %struct.passwd** %pw, align 8
  %pw_name = getelementptr inbounds %struct.passwd* %29, i32 0, i32 0
  %30 = load i8** %pw_name, align 8
  %call22 = call i8* @xstrdup(i8* %30)
  store i8* %call22, i8** %pwname, align 8
  %31 = load %struct.passwd** %pw, align 8
  %pw_dir = getelementptr inbounds %struct.passwd* %31, i32 0, i32 5
  %32 = load i8** %pw_dir, align 8
  %call23 = call i8* @xstrdup(i8* %32)
  store i8* %call23, i8** %pwdir, align 8
  %arraydecay = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call24 = call i32 @gethostname(i8* %arraydecay, i64 1025) #9
  %33 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %34 = extractvalue { i32, i1 } %33, 0
  %35 = extractvalue { i32, i1 } %33, 1
  %36 = xor i1 %35, true
  br i1 %36, label %cont26, label %trap25

trap25:                                           ; preds = %if.end21
  call void @llvm.trap() #3
  unreachable

cont26:                                           ; preds = %if.end21
  %cmp27 = icmp eq i32 %call24, %34
  br i1 %cmp27, label %if.then28, label %if.end31

if.then28:                                        ; preds = %cont26
  %call29 = call i32* @__errno_location() #2
  %37 = load i32* %call29, align 4
  %call30 = call i8* @strerror(i32 %37) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str100, i32 0, i32 0), i8* %call30) #11
  unreachable

if.end31:                                         ; preds = %cont26
  store i32 0, i32* %i, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %cont94, %if.end31
  %38 = load i32* %i, align 4
  %39 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 51), align 4
  %cmp33 = icmp slt i32 %38, %39
  br i1 %cmp33, label %for.body34, label %for.end95

for.body34:                                       ; preds = %for.cond32
  %40 = load i32* %n_ids, align 4
  %cmp35 = icmp uge i32 %40, 100
  br i1 %cmp35, label %if.then40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body34
  %41 = load i32* %i, align 4
  %idxprom36 = sext i32 %41 to i64
  %arrayidx37 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom36
  %42 = load i8** %arrayidx37, align 8
  %call38 = call i32 @strcasecmp(i8* %42, i8* getelementptr inbounds ([5 x i8]* @.str28, i32 0, i32 0)) #12
  %cmp39 = icmp eq i32 %call38, 0
  br i1 %cmp39, label %if.then40, label %if.end45

if.then40:                                        ; preds = %lor.lhs.false, %for.body34
  %43 = load i32* %i, align 4
  %idxprom41 = sext i32 %43 to i64
  %arrayidx42 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom41
  %44 = load i8** %arrayidx42, align 8
  call void @free(i8* %44) #9
  %45 = load i32* %i, align 4
  %idxprom43 = sext i32 %45 to i64
  %arrayidx44 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom43
  store i8* null, i8** %arrayidx44, align 8
  br label %for.inc92

if.end45:                                         ; preds = %lor.lhs.false
  %46 = load i32* %i, align 4
  %idxprom46 = sext i32 %46 to i64
  %arrayidx47 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom46
  %47 = load i8** %arrayidx47, align 8
  %48 = load i32* @original_real_uid, align 4
  %call48 = call i8* @tilde_expand_filename(i8* %47, i32 %48)
  store i8* %call48, i8** %cp, align 8
  %49 = load i8** %cp, align 8
  %50 = load i8** %pwdir, align 8
  %51 = load i8** %pwname, align 8
  %arraydecay49 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %52 = load i8** @host, align 8
  %53 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %call50 = call i8* (i8*, ...)* @percent_expand(i8* %49, i8* getelementptr inbounds ([2 x i8]* @.str75, i32 0, i32 0), i8* %50, i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i8* %51, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i8* %arraydecay49, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i8* %52, i8* getelementptr inbounds ([2 x i8]* @.str79, i32 0, i32 0), i8* %53, i8* null)
  store i8* %call50, i8** %filename, align 8
  %54 = load i8** %cp, align 8
  call void @free(i8* %54) #9
  %55 = load i8** %filename, align 8
  %call51 = call %struct.sshkey* @key_load_public(i8* %55, i8** null)
  store %struct.sshkey* %call51, %struct.sshkey** %public, align 8
  %56 = load i8** %filename, align 8
  %57 = load %struct.sshkey** %public, align 8
  %tobool52 = icmp ne %struct.sshkey* %57, null
  br i1 %tobool52, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end45
  %58 = load %struct.sshkey** %public, align 8
  %type = getelementptr inbounds %struct.sshkey* %58, i32 0, i32 0
  %59 = load i32* %type, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end45
  %60 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %61 = extractvalue { i32, i1 } %60, 0
  %62 = extractvalue { i32, i1 } %60, 1
  %63 = xor i1 %62, true
  br i1 %63, label %cont54, label %trap53

trap53:                                           ; preds = %cond.false
  call void @llvm.trap() #3
  unreachable

cont54:                                           ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %cont54, %cond.true
  %cond = phi i32 [ %59, %cond.true ], [ %61, %cont54 ]
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([25 x i8]* @.str101, i32 0, i32 0), i8* %56, i32 %cond)
  %64 = load i32* %i, align 4
  %idxprom55 = sext i32 %64 to i64
  %arrayidx56 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom55
  %65 = load i8** %arrayidx56, align 8
  call void @free(i8* %65) #9
  %66 = load i8** %filename, align 8
  %67 = load i32* %n_ids, align 4
  %idxprom57 = zext i32 %67 to i64
  %arrayidx58 = getelementptr inbounds [100 x i8*]* %identity_files, i32 0, i64 %idxprom57
  store i8* %66, i8** %arrayidx58, align 8
  %68 = load %struct.sshkey** %public, align 8
  %69 = load i32* %n_ids, align 4
  %idxprom59 = zext i32 %69 to i64
  %arrayidx60 = getelementptr inbounds [100 x %struct.sshkey*]* %identity_keys, i32 0, i64 %idxprom59
  store %struct.sshkey* %68, %struct.sshkey** %arrayidx60, align 8
  %70 = load i32* %n_ids, align 4
  %inc61 = add i32 %70, 1
  store i32 %inc61, i32* %n_ids, align 4
  %cmp62 = icmp uge i32 %inc61, 100
  br i1 %cmp62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %cond.end
  br label %for.inc92

if.end64:                                         ; preds = %cond.end
  %71 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 55), align 4
  %cmp65 = icmp ne i32 %71, 0
  br i1 %cmp65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.end64
  br label %for.inc92

if.end67:                                         ; preds = %if.end64
  %72 = load i8** %filename, align 8
  %call68 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %cp, i8* getelementptr inbounds ([8 x i8]* @.str102, i32 0, i32 0), i8* %72)
  %73 = load i8** %cp, align 8
  %call69 = call %struct.sshkey* @key_load_public(i8* %73, i8** null)
  store %struct.sshkey* %call69, %struct.sshkey** %public, align 8
  %74 = load i8** %cp, align 8
  %75 = load %struct.sshkey** %public, align 8
  %tobool70 = icmp ne %struct.sshkey* %75, null
  br i1 %tobool70, label %cond.true71, label %cond.false73

cond.true71:                                      ; preds = %if.end67
  %76 = load %struct.sshkey** %public, align 8
  %type72 = getelementptr inbounds %struct.sshkey* %76, i32 0, i32 0
  %77 = load i32* %type72, align 4
  br label %cond.end76

cond.false73:                                     ; preds = %if.end67
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %79 = extractvalue { i32, i1 } %78, 0
  %80 = extractvalue { i32, i1 } %78, 1
  %81 = xor i1 %80, true
  br i1 %81, label %cont75, label %trap74

trap74:                                           ; preds = %cond.false73
  call void @llvm.trap() #3
  unreachable

cont75:                                           ; preds = %cond.false73
  br label %cond.end76

cond.end76:                                       ; preds = %cont75, %cond.true71
  %cond77 = phi i32 [ %77, %cond.true71 ], [ %79, %cont75 ]
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([25 x i8]* @.str101, i32 0, i32 0), i8* %74, i32 %cond77)
  %82 = load %struct.sshkey** %public, align 8
  %cmp78 = icmp eq %struct.sshkey* %82, null
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %cond.end76
  %83 = load i8** %cp, align 8
  call void @free(i8* %83) #9
  br label %for.inc92

if.end80:                                         ; preds = %cond.end76
  %84 = load %struct.sshkey** %public, align 8
  %call81 = call i32 @sshkey_is_cert(%struct.sshkey* %84)
  %tobool82 = icmp ne i32 %call81, 0
  br i1 %tobool82, label %if.end85, label %if.then83

if.then83:                                        ; preds = %if.end80
  %85 = load i8** %cp, align 8
  %86 = load %struct.sshkey** %public, align 8
  %call84 = call i8* @sshkey_type(%struct.sshkey* %86)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([40 x i8]* @.str103, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.load_public_identity_files, i32 0, i32 0), i8* %85, i8* %call84)
  %87 = load %struct.sshkey** %public, align 8
  call void @sshkey_free(%struct.sshkey* %87)
  %88 = load i8** %cp, align 8
  call void @free(i8* %88) #9
  br label %for.inc92

if.end85:                                         ; preds = %if.end80
  %89 = load i8** %filename, align 8
  %call86 = call i8* @xstrdup(i8* %89)
  %90 = load i32* %n_ids, align 4
  %idxprom87 = zext i32 %90 to i64
  %arrayidx88 = getelementptr inbounds [100 x i8*]* %identity_files, i32 0, i64 %idxprom87
  store i8* %call86, i8** %arrayidx88, align 8
  %91 = load %struct.sshkey** %public, align 8
  %92 = load i32* %n_ids, align 4
  %idxprom89 = zext i32 %92 to i64
  %arrayidx90 = getelementptr inbounds [100 x %struct.sshkey*]* %identity_keys, i32 0, i64 %idxprom89
  store %struct.sshkey* %91, %struct.sshkey** %arrayidx90, align 8
  %93 = load i32* %n_ids, align 4
  %inc91 = add i32 %93, 1
  store i32 %inc91, i32* %n_ids, align 4
  br label %for.inc92

for.inc92:                                        ; preds = %if.end85, %if.then83, %if.then79, %if.then66, %if.then63, %if.then40
  %94 = load i32* %i, align 4
  %95 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 1)
  %96 = extractvalue { i32, i1 } %95, 0
  %97 = extractvalue { i32, i1 } %95, 1
  %98 = xor i1 %97, true
  br i1 %98, label %cont94, label %trap93

trap93:                                           ; preds = %for.inc92
  call void @llvm.trap() #3
  unreachable

cont94:                                           ; preds = %for.inc92
  store i32 %96, i32* %i, align 4
  br label %for.cond32

for.end95:                                        ; preds = %for.cond32
  %99 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 55), align 4
  %cmp96 = icmp sgt i32 %99, 100
  br i1 %cmp96, label %if.then97, label %if.end98

if.then97:                                        ; preds = %for.end95
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([26 x i8]* @.str104, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.load_public_identity_files, i32 0, i32 0)) #11
  unreachable

if.end98:                                         ; preds = %for.end95
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %cont135, %if.end98
  %100 = load i32* %i, align 4
  %101 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 55), align 4
  %cmp100 = icmp slt i32 %100, %101
  br i1 %cmp100, label %for.body101, label %for.end136

for.body101:                                      ; preds = %for.cond99
  %102 = load i32* %i, align 4
  %idxprom102 = sext i32 %102 to i64
  %arrayidx103 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56), i32 0, i64 %idxprom102
  %103 = load i8** %arrayidx103, align 8
  %104 = load i32* @original_real_uid, align 4
  %call104 = call i8* @tilde_expand_filename(i8* %103, i32 %104)
  store i8* %call104, i8** %cp, align 8
  %105 = load i8** %cp, align 8
  %106 = load i8** %pwdir, align 8
  %107 = load i8** %pwname, align 8
  %arraydecay105 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %108 = load i8** @host, align 8
  %109 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %call106 = call i8* (i8*, ...)* @percent_expand(i8* %105, i8* getelementptr inbounds ([2 x i8]* @.str75, i32 0, i32 0), i8* %106, i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i8* %107, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i8* %arraydecay105, i8* getelementptr inbounds ([2 x i8]* @.str52, i32 0, i32 0), i8* %108, i8* getelementptr inbounds ([2 x i8]* @.str79, i32 0, i32 0), i8* %109, i8* null)
  store i8* %call106, i8** %filename, align 8
  %110 = load i8** %cp, align 8
  call void @free(i8* %110) #9
  %111 = load i8** %filename, align 8
  %call107 = call %struct.sshkey* @key_load_public(i8* %111, i8** null)
  store %struct.sshkey* %call107, %struct.sshkey** %public, align 8
  %112 = load i8** %filename, align 8
  %113 = load %struct.sshkey** %public, align 8
  %tobool108 = icmp ne %struct.sshkey* %113, null
  br i1 %tobool108, label %cond.true109, label %cond.false111

cond.true109:                                     ; preds = %for.body101
  %114 = load %struct.sshkey** %public, align 8
  %type110 = getelementptr inbounds %struct.sshkey* %114, i32 0, i32 0
  %115 = load i32* %type110, align 4
  br label %cond.end114

cond.false111:                                    ; preds = %for.body101
  %116 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %117 = extractvalue { i32, i1 } %116, 0
  %118 = extractvalue { i32, i1 } %116, 1
  %119 = xor i1 %118, true
  br i1 %119, label %cont113, label %trap112

trap112:                                          ; preds = %cond.false111
  call void @llvm.trap() #3
  unreachable

cont113:                                          ; preds = %cond.false111
  br label %cond.end114

cond.end114:                                      ; preds = %cont113, %cond.true109
  %cond115 = phi i32 [ %115, %cond.true109 ], [ %117, %cont113 ]
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([28 x i8]* @.str105, i32 0, i32 0), i8* %112, i32 %cond115)
  %120 = load i32* %i, align 4
  %idxprom116 = sext i32 %120 to i64
  %arrayidx117 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56), i32 0, i64 %idxprom116
  %121 = load i8** %arrayidx117, align 8
  call void @free(i8* %121) #9
  %122 = load i32* %i, align 4
  %idxprom118 = sext i32 %122 to i64
  %arrayidx119 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56), i32 0, i64 %idxprom118
  store i8* null, i8** %arrayidx119, align 8
  %123 = load %struct.sshkey** %public, align 8
  %cmp120 = icmp eq %struct.sshkey* %123, null
  br i1 %cmp120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %cond.end114
  %124 = load i8** %filename, align 8
  call void @free(i8* %124) #9
  br label %for.inc133

if.end122:                                        ; preds = %cond.end114
  %125 = load %struct.sshkey** %public, align 8
  %call123 = call i32 @sshkey_is_cert(%struct.sshkey* %125)
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.end127, label %if.then125

if.then125:                                       ; preds = %if.end122
  %126 = load i8** %filename, align 8
  %127 = load %struct.sshkey** %public, align 8
  %call126 = call i8* @sshkey_type(%struct.sshkey* %127)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([40 x i8]* @.str103, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.load_public_identity_files, i32 0, i32 0), i8* %126, i8* %call126)
  %128 = load %struct.sshkey** %public, align 8
  call void @sshkey_free(%struct.sshkey* %128)
  %129 = load i8** %filename, align 8
  call void @free(i8* %129) #9
  br label %for.inc133

if.end127:                                        ; preds = %if.end122
  %130 = load i8** %filename, align 8
  %131 = load i32* %n_certs, align 4
  %idxprom128 = zext i32 %131 to i64
  %arrayidx129 = getelementptr inbounds [100 x i8*]* %certificate_files, i32 0, i64 %idxprom128
  store i8* %130, i8** %arrayidx129, align 8
  %132 = load %struct.sshkey** %public, align 8
  %133 = load i32* %n_certs, align 4
  %idxprom130 = zext i32 %133 to i64
  %arrayidx131 = getelementptr inbounds [100 x %struct.sshkey*]* %certificates, i32 0, i64 %idxprom130
  store %struct.sshkey* %132, %struct.sshkey** %arrayidx131, align 8
  %134 = load i32* %n_certs, align 4
  %inc132 = add i32 %134, 1
  store i32 %inc132, i32* %n_certs, align 4
  br label %for.inc133

for.inc133:                                       ; preds = %if.end127, %if.then125, %if.then121
  %135 = load i32* %i, align 4
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 1)
  %137 = extractvalue { i32, i1 } %136, 0
  %138 = extractvalue { i32, i1 } %136, 1
  %139 = xor i1 %138, true
  br i1 %139, label %cont135, label %trap134

trap134:                                          ; preds = %for.inc133
  call void @llvm.trap() #3
  unreachable

cont135:                                          ; preds = %for.inc133
  store i32 %137, i32* %i, align 4
  br label %for.cond99

for.end136:                                       ; preds = %for.cond99
  %140 = load i32* %n_ids, align 4
  store i32 %140, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 51), align 4
  %141 = bitcast [100 x i8*]* %identity_files to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52) to i8*), i8* %141, i64 800, i32 8, i1 false)
  %142 = bitcast [100 x %struct.sshkey*]* %identity_keys to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 54) to i8*), i8* %142, i64 800, i32 8, i1 false)
  %143 = load i32* %n_certs, align 4
  store i32 %143, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 55), align 4
  %144 = bitcast [100 x i8*]* %certificate_files to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56) to i8*), i8* %144, i64 800, i32 8, i1 false)
  %145 = bitcast [100 x %struct.sshkey*]* %certificates to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 58) to i8*), i8* %145, i64 800, i32 8, i1 false)
  %146 = load i8** %pwname, align 8
  %147 = load i8** %pwname, align 8
  %call137 = call i64 @strlen(i8* %147) #12
  call void @explicit_bzero(i8* %146, i64 %call137)
  %148 = load i8** %pwname, align 8
  call void @free(i8* %148) #9
  %149 = load i8** %pwdir, align 8
  %150 = load i8** %pwdir, align 8
  %call138 = call i64 @strlen(i8* %150) #12
  call void @explicit_bzero(i8* %149, i64 %call138)
  %151 = load i8** %pwdir, align 8
  call void @free(i8* %151) #9
  ret void
}

; Function Attrs: nounwind
declare i32 @unsetenv(i8*) #4

; Function Attrs: nounwind
declare i32 @setenv(i8*, i8*, i32) #4

; Function Attrs: nounwind sspreq uwtable
define internal void @tilde_expand_paths(i8** %paths, i32 %num_paths) #0 {
entry:
  %paths.addr = alloca i8**, align 8
  %num_paths.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %cp = alloca i8*, align 8
  store i8** %paths, i8*** %paths.addr, align 8
  store i32 %num_paths, i32* %num_paths.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* %num_paths.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = zext i32 %2 to i64
  %3 = load i8*** %paths.addr, align 8
  %arrayidx = getelementptr inbounds i8** %3, i64 %idxprom
  %4 = load i8** %arrayidx, align 8
  %5 = load i32* @original_real_uid, align 4
  %call = call i8* @tilde_expand_filename(i8* %4, i32 %5)
  store i8* %call, i8** %cp, align 8
  %6 = load i32* %i, align 4
  %idxprom1 = zext i32 %6 to i64
  %7 = load i8*** %paths.addr, align 8
  %arrayidx2 = getelementptr inbounds i8** %7, i64 %idxprom1
  %8 = load i8** %arrayidx2, align 8
  call void @free(i8* %8) #9
  %9 = load i8** %cp, align 8
  %10 = load i32* %i, align 4
  %idxprom3 = zext i32 %10 to i64
  %11 = load i8*** %paths.addr, align 8
  %arrayidx4 = getelementptr inbounds i8** %11, i64 %idxprom3
  store i8* %9, i8** %arrayidx4, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32* %i, align 4
  %inc = add i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare void (i32)* @mysignal(i32, void (i32)*) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @main_sigchld_handler(i32 %sig) #0 {
entry:
  %sig.addr = alloca i32, align 4
  %save_errno = alloca i32, align 4
  %pid = alloca i32, align 4
  %status = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  %call = call i32* @__errno_location() #2
  %0 = load i32* %call, align 4
  store i32 %0, i32* %save_errno, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %while.cond
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %while.cond
  %call1 = call i32 @waitpid(i32 %2, i32* %status, i32 1)
  store i32 %call1, i32* %pid, align 4
  %cmp = icmp sgt i32 %call1, 0
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cont
  %5 = load i32* %pid, align 4
  %cmp2 = icmp slt i32 %5, 0
  br i1 %cmp2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %call3 = call i32* @__errno_location() #2
  %6 = load i32* %call3, align 4
  %cmp4 = icmp eq i32 %6, 4
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %7 = phi i1 [ false, %lor.rhs ], [ %cmp4, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %cont
  %8 = phi i1 [ true, %cont ], [ %7, %land.end ]
  br i1 %8, label %while.body, label %while.end

while.body:                                       ; preds = %lor.end
  br label %while.cond

while.end:                                        ; preds = %lor.end
  %9 = load i32* %sig.addr, align 4
  %call5 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 %9, void (i32)* @main_sigchld_handler)
  %10 = load i32* %save_errno, align 4
  %call6 = call i32* @__errno_location() #2
  store i32 %10, i32* %call6, align 4
  ret void
}

declare i32 @ssh_packet_connection_is_on_socket(%struct.ssh*) #1

declare void @verbose(i8*, ...) #1

declare i8* @ssh_remote_ipaddr(%struct.ssh*) #1

declare i32 @ssh_remote_port(%struct.ssh*) #1

declare void @sshkey_free(%struct.sshkey*) #1

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_session2() #0 {
entry:
  %id = alloca i32, align 4
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %id, align 4
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 79), align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cont
  call void @ssh_init_stdio_forwarding()
  br label %if.end

if.end:                                           ; preds = %if.then, %cont
  call void @ssh_init_forwarding()
  %5 = load %struct.ssh** @active_state, align 8
  %call = call i32 @ssh_packet_get_mux(%struct.ssh* %5)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @muxserver_listen()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 79), align 4
  %tobool4 = icmp ne i32 %6, 0
  br i1 %tobool4, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %if.end3
  %7 = load i32* @muxserver_sock, align 4
  %8 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont6, label %trap5

trap5:                                            ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont6:                                            ; preds = %land.lhs.true
  %cmp = icmp ne i32 %7, %9
  br i1 %cmp, label %if.then7, label %if.end11

if.then7:                                         ; preds = %cont6
  %12 = load i32* @stdin_null_flag, align 4
  store i32 %12, i32* @ostdin_null_flag, align 4
  %13 = load i32* @no_shell_flag, align 4
  store i32 %13, i32* @ono_shell_flag, align 4
  %14 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  store i32 %14, i32* @orequest_tty, align 4
  %15 = load i32* @tty_flag, align 4
  store i32 %15, i32* @otty_flag, align 4
  store i32 1, i32* @stdin_null_flag, align 4
  store i32 1, i32* @no_shell_flag, align 4
  store i32 0, i32* @tty_flag, align 4
  %16 = load i32* @fork_after_authentication_flag, align 4
  %tobool8 = icmp ne i32 %16, 0
  br i1 %tobool8, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.then7
  store i32 1, i32* @need_controlpersist_detach, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.then7
  store i32 1, i32* @fork_after_authentication_flag, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %cont6, %if.end3
  %17 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 79), align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %land.lhs.true13, label %if.end18

land.lhs.true13:                                  ; preds = %if.end11
  %18 = load i32* @muxserver_sock, align 4
  %19 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont15, label %trap14

trap14:                                           ; preds = %land.lhs.true13
  call void @llvm.trap() #3
  unreachable

cont15:                                           ; preds = %land.lhs.true13
  %cmp16 = icmp eq i32 %18, %20
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %cont15
  call void @ssh_init_stdio_forwarding()
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %cont15, %if.end11
  %23 = load i32* @no_shell_flag, align 4
  %tobool19 = icmp ne i32 %23, 0
  br i1 %tobool19, label %lor.lhs.false, label %if.then21

lor.lhs.false:                                    ; preds = %if.end18
  %24 = load i32* @datafellows, align 4
  %and = and i32 %24, 1048576
  %tobool20 = icmp ne i32 %and, 0
  br i1 %tobool20, label %if.then21, label %if.else

if.then21:                                        ; preds = %lor.lhs.false, %if.end18
  %call22 = call i32 @ssh_session2_open()
  store i32 %call22, i32* %id, align 4
  br label %if.end24

if.else:                                          ; preds = %lor.lhs.false
  %25 = load %struct.ssh** @active_state, align 8
  %26 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp23 = icmp eq i32 %26, 0
  %conv = zext i1 %cmp23 to i32
  %27 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 24), align 4
  %28 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 25), align 4
  call void @ssh_packet_set_interactive(%struct.ssh* %25, i32 %conv, i32 %27, i32 %28)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then21
  %29 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp25 = icmp eq i32 %29, 0
  br i1 %cmp25, label %land.lhs.true27, label %if.end31

land.lhs.true27:                                  ; preds = %if.end24
  %30 = load i32* @datafellows, align 4
  %and28 = and i32 %30, 67108864
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %land.lhs.true27
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([40 x i8]* @.str106, i32 0, i32 0))
  %31 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_start(%struct.ssh* %31, i8 zeroext 80)
  %32 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_put_cstring(%struct.ssh* %32, i8* getelementptr inbounds ([29 x i8]* @.str107, i32 0, i32 0))
  %33 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_put_char(%struct.ssh* %33, i32 0)
  %34 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %34)
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %land.lhs.true27, %if.end24
  %35 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  %cmp32 = icmp ne i8* %35, null
  br i1 %cmp32, label %land.lhs.true34, label %if.end38

land.lhs.true34:                                  ; preds = %if.end31
  %36 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 86), align 4
  %tobool35 = icmp ne i32 %36, 0
  br i1 %tobool35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %land.lhs.true34
  %37 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  %call37 = call i32 @ssh_local_cmd(i8* %37)
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %land.lhs.true34, %if.end31
  %38 = load i32* @fork_after_authentication_flag, align 4
  %tobool39 = icmp ne i32 %38, 0
  br i1 %tobool39, label %if.then40, label %if.end48

if.then40:                                        ; preds = %if.end38
  %39 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else46

land.lhs.true42:                                  ; preds = %if.then40
  %40 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp43 = icmp sgt i32 %40, 0
  br i1 %cmp43, label %if.then45, label %if.else46

if.then45:                                        ; preds = %land.lhs.true42
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([67 x i8]* @.str108, i32 0, i32 0))
  br label %if.end47

if.else46:                                        ; preds = %land.lhs.true42, %if.then40
  call void @fork_postauth()
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.then45
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end38
  %41 = load i32* @tty_flag, align 4
  %42 = load i32* @tty_flag, align 4
  %tobool49 = icmp ne i32 %42, 0
  br i1 %tobool49, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end48
  %43 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end48
  %44 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %45 = extractvalue { i32, i1 } %44, 0
  %46 = extractvalue { i32, i1 } %44, 1
  %47 = xor i1 %46, true
  br i1 %47, label %cont51, label %trap50

trap50:                                           ; preds = %cond.false
  call void @llvm.trap() #3
  unreachable

cont51:                                           ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %cont51, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %45, %cont51 ]
  %48 = load i32* %id, align 4
  %call52 = call i32 @client_loop(i32 %41, i32 %cond, i32 %48)
  ret i32 %call52
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_session() #0 {
entry:
  %type = alloca i32, align 4
  %interactive = alloca i32, align 4
  %have_tty = alloca i32, align 4
  %ws = alloca %struct.winsize, align 2
  %cp = alloca i8*, align 8
  %display = alloca i8*, align 8
  %proto = alloca i8*, align 8
  %data = alloca i8*, align 8
  %_len = alloca i32, align 4
  %len = alloca i32, align 4
  store i32 0, i32* %interactive, align 4
  store i32 0, i32* %have_tty, align 4
  store i8* null, i8** %proto, align 8
  store i8* null, i8** %data, align 8
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 21), align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end11

if.then:                                          ; preds = %entry
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 22), align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([36 x i8]* @.str155, i32 0, i32 0), i32 %1)
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 22), align 4
  %cmp = icmp slt i32 %2, 1
  br i1 %cmp, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 22), align 4
  %cmp1 = icmp sgt i32 %3, 9
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([59 x i8]* @.str156, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_start(%struct.ssh* %4, i8 zeroext 37)
  %5 = load %struct.ssh** @active_state, align 8
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 22), align 4
  call void @ssh_packet_put_int(%struct.ssh* %5, i32 %6)
  %7 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %7)
  call void @packet_write_wait()
  %8 = load %struct.ssh** @active_state, align 8
  %call = call i32 @ssh_packet_read(%struct.ssh* %8)
  store i32 %call, i32* %type, align 4
  %9 = load i32* %type, align 4
  %cmp3 = icmp eq i32 %9, 14
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %10 = load %struct.ssh** @active_state, align 8
  %11 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 22), align 4
  %call5 = call i32 @ssh_packet_start_compression(%struct.ssh* %10, i32 %11)
  br label %if.end10

if.else:                                          ; preds = %if.end
  %12 = load i32* %type, align 4
  %cmp6 = icmp eq i32 %12, 15
  br i1 %cmp6, label %if.then7, label %if.else8

if.then7:                                         ; preds = %if.else
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([42 x i8]* @.str157, i32 0, i32 0))
  br label %if.end9

if.else8:                                         ; preds = %if.else
  call void (i8*, ...)* @packet_disconnect(i8* getelementptr inbounds ([49 x i8]* @.str158, i32 0, i32 0)) #11
  unreachable

if.end9:                                          ; preds = %if.then7
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then4
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %entry
  %13 = load i32* @tty_flag, align 4
  %tobool12 = icmp ne i32 %13, 0
  br i1 %tobool12, label %if.then13, label %if.end38

if.then13:                                        ; preds = %if.end11
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([16 x i8]* @.str159, i32 0, i32 0))
  %14 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_start(%struct.ssh* %14, i8 zeroext 10)
  %call14 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8]* @.str129, i32 0, i32 0)) #9
  store i8* %call14, i8** %cp, align 8
  %15 = load i8** %cp, align 8
  %tobool15 = icmp ne i8* %15, null
  br i1 %tobool15, label %if.end17, label %if.then16

if.then16:                                        ; preds = %if.then13
  store i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), i8** %cp, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.then13
  %16 = load %struct.ssh** @active_state, align 8
  %17 = load i8** %cp, align 8
  call void @ssh_packet_put_cstring(%struct.ssh* %16, i8* %17)
  %18 = load %struct._IO_FILE** @stdin, align 8
  %call18 = call i32 @fileno(%struct._IO_FILE* %18) #9
  %call19 = call i32 (i32, i64, ...)* @ioctl(i32 %call18, i64 21523, %struct.winsize* %ws) #9
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end17
  %19 = bitcast %struct.winsize* %ws to i8*
  call void @llvm.memset.p0i8.i64(i8* %19, i8 0, i64 8, i32 2, i1 false)
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end17
  %20 = load %struct.ssh** @active_state, align 8
  %ws_row = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 0
  %21 = load i16* %ws_row, align 2
  %conv = zext i16 %21 to i32
  call void @ssh_packet_put_int(%struct.ssh* %20, i32 %conv)
  %22 = load %struct.ssh** @active_state, align 8
  %ws_col = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 1
  %23 = load i16* %ws_col, align 2
  %conv23 = zext i16 %23 to i32
  call void @ssh_packet_put_int(%struct.ssh* %22, i32 %conv23)
  %24 = load %struct.ssh** @active_state, align 8
  %ws_xpixel = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 2
  %25 = load i16* %ws_xpixel, align 2
  %conv24 = zext i16 %25 to i32
  call void @ssh_packet_put_int(%struct.ssh* %24, i32 %conv24)
  %26 = load %struct.ssh** @active_state, align 8
  %ws_ypixel = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 3
  %27 = load i16* %ws_ypixel, align 2
  %conv25 = zext i16 %27 to i32
  call void @ssh_packet_put_int(%struct.ssh* %26, i32 %conv25)
  %28 = load %struct._IO_FILE** @stdin, align 8
  %call26 = call i32 @fileno(%struct._IO_FILE* %28) #9
  call void @tty_make_modes(i32 %call26, %struct.termios* null)
  %29 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %29)
  call void @packet_write_wait()
  %30 = load %struct.ssh** @active_state, align 8
  %call27 = call i32 @ssh_packet_read(%struct.ssh* %30)
  store i32 %call27, i32* %type, align 4
  %31 = load i32* %type, align 4
  %cmp28 = icmp eq i32 %31, 14
  br i1 %cmp28, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.end22
  store i32 1, i32* %interactive, align 4
  store i32 1, i32* %have_tty, align 4
  br label %if.end37

if.else31:                                        ; preds = %if.end22
  %32 = load i32* %type, align 4
  %cmp32 = icmp eq i32 %32, 15
  br i1 %cmp32, label %if.then34, label %if.else35

if.then34:                                        ; preds = %if.else31
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([65 x i8]* @.str160, i32 0, i32 0))
  br label %if.end36

if.else35:                                        ; preds = %if.else31
  call void (i8*, ...)* @packet_disconnect(i8* getelementptr inbounds ([49 x i8]* @.str161, i32 0, i32 0)) #11
  unreachable

if.end36:                                         ; preds = %if.then34
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then30
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end11
  %call39 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8]* @.str123, i32 0, i32 0)) #9
  store i8* %call39, i8** %display, align 8
  %33 = load i8** %display, align 8
  %cmp40 = icmp eq i8* %33, null
  br i1 %cmp40, label %land.lhs.true, label %if.end44

land.lhs.true:                                    ; preds = %if.end38
  %34 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool42 = icmp ne i32 %34, 0
  br i1 %tobool42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %land.lhs.true
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([45 x i8]* @.str124, i32 0, i32 0))
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %land.lhs.true, %if.end38
  %35 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool45 = icmp ne i32 %35, 0
  br i1 %tobool45, label %land.lhs.true46, label %if.end62

land.lhs.true46:                                  ; preds = %if.end44
  %36 = load i8** %display, align 8
  %37 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 5), align 8
  %38 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 3), align 4
  %39 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 2), align 4
  %call47 = call i32 @client_x11_get_proto(i8* %36, i8* %37, i32 %38, i32 %39, i8** %proto, i8** %data)
  %cmp48 = icmp eq i32 %call47, 0
  br i1 %cmp48, label %if.then50, label %if.end62

if.then50:                                        ; preds = %land.lhs.true46
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([56 x i8]* @.str125, i32 0, i32 0))
  %40 = load i8** %display, align 8
  %41 = load i8** %proto, align 8
  %42 = load i8** %data, align 8
  call void @x11_request_forwarding_with_spoofing(i32 0, i8* %40, i8* %41, i8* %42, i32 0)
  %43 = load %struct.ssh** @active_state, align 8
  %call51 = call i32 @ssh_packet_read(%struct.ssh* %43)
  store i32 %call51, i32* %type, align 4
  %44 = load i32* %type, align 4
  %cmp52 = icmp eq i32 %44, 14
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then50
  store i32 1, i32* %interactive, align 4
  br label %if.end61

if.else55:                                        ; preds = %if.then50
  %45 = load i32* %type, align 4
  %cmp56 = icmp eq i32 %45, 15
  br i1 %cmp56, label %if.then58, label %if.else59

if.then58:                                        ; preds = %if.else55
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([44 x i8]* @.str162, i32 0, i32 0))
  br label %if.end60

if.else59:                                        ; preds = %if.else55
  call void (i8*, ...)* @packet_disconnect(i8* getelementptr inbounds ([42 x i8]* @.str163, i32 0, i32 0)) #11
  unreachable

if.end60:                                         ; preds = %if.then58
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then54
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %land.lhs.true46, %if.end44
  %46 = load %struct.ssh** @active_state, align 8
  %47 = load i32* %interactive, align 4
  %48 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 24), align 4
  %49 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 25), align 4
  call void @ssh_packet_set_interactive(%struct.ssh* %46, i32 %47, i32 %48, i32 %49)
  call void @check_agent_present()
  %50 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool63 = icmp ne i32 %50, 0
  br i1 %tobool63, label %if.then64, label %if.end75

if.then64:                                        ; preds = %if.end62
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([44 x i8]* @.str127, i32 0, i32 0))
  call void @auth_request_forwarding()
  %51 = load %struct.ssh** @active_state, align 8
  %call65 = call i32 @ssh_packet_read(%struct.ssh* %51)
  store i32 %call65, i32* %type, align 4
  br label %do.body

do.body:                                          ; preds = %if.then64
  %52 = load %struct.ssh** @active_state, align 8
  %call66 = call i32 @ssh_packet_remaining(%struct.ssh* %52)
  store i32 %call66, i32* %_len, align 4
  %53 = load i32* %_len, align 4
  %cmp67 = icmp sgt i32 %53, 0
  br i1 %cmp67, label %if.then69, label %if.end70

if.then69:                                        ; preds = %do.body
  %54 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str164, i32 0, i32 0), i32 %54, i8* getelementptr inbounds ([6 x i8]* @.str165, i32 0, i32 0), i32 1811)
  %55 = load %struct.ssh** @active_state, align 8
  call void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect(%struct.ssh* %55, i8* getelementptr inbounds ([24 x i8]* @.str166, i32 0, i32 0)) #11
  unreachable

if.end70:                                         ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end70
  %56 = load i32* %type, align 4
  %cmp71 = icmp ne i32 %56, 14
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %do.end
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([61 x i8]* @.str167, i32 0, i32 0))
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %do.end
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end62
  call void @ssh_init_stdio_forwarding()
  call void @ssh_init_forwarding()
  %57 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  %cmp76 = icmp ne i8* %57, null
  br i1 %cmp76, label %land.lhs.true78, label %if.end82

land.lhs.true78:                                  ; preds = %if.end75
  %58 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 86), align 4
  %tobool79 = icmp ne i32 %58, 0
  br i1 %tobool79, label %if.then80, label %if.end82

if.then80:                                        ; preds = %land.lhs.true78
  %59 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 85), align 8
  %call81 = call i32 @ssh_local_cmd(i8* %59)
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %land.lhs.true78, %if.end75
  %60 = load i32* @fork_after_authentication_flag, align 4
  %tobool83 = icmp ne i32 %60, 0
  br i1 %tobool83, label %if.then84, label %if.end92

if.then84:                                        ; preds = %if.end82
  %61 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool85 = icmp ne i32 %61, 0
  br i1 %tobool85, label %land.lhs.true86, label %if.else90

land.lhs.true86:                                  ; preds = %if.then84
  %62 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp87 = icmp sgt i32 %62, 0
  br i1 %cmp87, label %if.then89, label %if.else90

if.then89:                                        ; preds = %land.lhs.true86
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([67 x i8]* @.str108, i32 0, i32 0))
  br label %if.end91

if.else90:                                        ; preds = %land.lhs.true86, %if.then84
  call void @fork_postauth()
  br label %if.end91

if.end91:                                         ; preds = %if.else90, %if.then89
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end82
  %call93 = call i64 @sshbuf_len(%struct.sshbuf* @command)
  %conv94 = trunc i64 %call93 to i32
  %cmp95 = icmp ugt i32 %conv94, 0
  br i1 %cmp95, label %if.then97, label %if.else108

if.then97:                                        ; preds = %if.end92
  %call98 = call i64 @sshbuf_len(%struct.sshbuf* @command)
  %conv99 = trunc i64 %call98 to i32
  store i32 %conv99, i32* %len, align 4
  %63 = load i32* %len, align 4
  %cmp100 = icmp sgt i32 %63, 900
  br i1 %cmp100, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.then97
  store i32 900, i32* %len, align 4
  br label %if.end103

if.end103:                                        ; preds = %if.then102, %if.then97
  %64 = load i32* %len, align 4
  %call104 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @command)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([22 x i8]* @.str168, i32 0, i32 0), i32 %64, i8* %call104)
  %65 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_start(%struct.ssh* %65, i8 zeroext 13)
  %66 = load %struct.ssh** @active_state, align 8
  %call105 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @command)
  %call106 = call i64 @sshbuf_len(%struct.sshbuf* @command)
  %conv107 = trunc i64 %call106 to i32
  call void @ssh_packet_put_string(%struct.ssh* %66, i8* %call105, i32 %conv107)
  %67 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %67)
  call void @packet_write_wait()
  br label %if.end109

if.else108:                                       ; preds = %if.end92
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([18 x i8]* @.str169, i32 0, i32 0))
  %68 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_start(%struct.ssh* %68, i8 zeroext 12)
  %69 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %69)
  call void @packet_write_wait()
  br label %if.end109

if.end109:                                        ; preds = %if.else108, %if.end103
  %70 = load i32* %have_tty, align 4
  %71 = load i32* @tty_flag, align 4
  %tobool110 = icmp ne i32 %71, 0
  br i1 %tobool110, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end109
  %72 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end109
  %73 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %74 = extractvalue { i32, i1 } %73, 0
  %75 = extractvalue { i32, i1 } %73, 1
  %76 = xor i1 %75, true
  br i1 %76, label %cont, label %trap

trap:                                             ; preds = %cond.false
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %cont, %cond.true
  %cond = phi i32 [ %72, %cond.true ], [ %74, %cont ]
  %call111 = call i32 @client_loop(i32 %70, i32 %cond, i32 0)
  ret i32 %call111
}

declare void @packet_close() #1

; Function Attrs: nounwind
declare i32 @unlink(i8*) #4

declare i32 @waitpid(i32, i32*, i32) #1

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #9

declare i32 @pkcs11_init(i32) #1

declare i32 @pkcs11_add_provider(i8*, i8*, %struct.sshkey***) #1

; Function Attrs: nounwind readonly
declare i32 @strcasecmp(i8*, i8*) #8

declare i32 @sshkey_is_cert(%struct.sshkey*) #1

declare i8* @sshkey_type(%struct.sshkey*) #1

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #9

declare void @explicit_bzero(i8*, i64) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @ssh_init_stdio_forwarding() #0 {
entry:
  %c = alloca %struct.Channel*, align 8
  %in = alloca i32, align 4
  %out = alloca i32, align 4
  %0 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @compat20, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str149, i32 0, i32 0)) #11
  unreachable

if.end2:                                          ; preds = %if.end
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 67), align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([10 x i8]* @.str150, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @__func__.ssh_init_stdio_forwarding, i32 0, i32 0), i8* %2, i32 %3)
  %call = call i32 @dup(i32 0) #9
  store i32 %call, i32* %in, align 4
  %cmp3 = icmp slt i32 %call, 0
  br i1 %cmp3, label %if.then6, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end2
  %call4 = call i32 @dup(i32 1) #9
  store i32 %call4, i32* %out, align 4
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %lor.lhs.false, %if.end2
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([47 x i8]* @.str151, i32 0, i32 0)) #11
  unreachable

if.end7:                                          ; preds = %lor.lhs.false
  %4 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 67), align 4
  %conv = trunc i32 %5 to i16
  %6 = load i32* %in, align 4
  %7 = load i32* %out, align 4
  %call8 = call %struct.Channel* @channel_connect_stdio_fwd(i8* %4, i16 zeroext %conv, i32 %6, i32 %7)
  store %struct.Channel* %call8, %struct.Channel** %c, align 8
  %cmp9 = icmp eq %struct.Channel* %call8, null
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end7
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str152, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @__func__.ssh_init_stdio_forwarding, i32 0, i32 0)) #11
  unreachable

if.end12:                                         ; preds = %if.end7
  %8 = load %struct.Channel** %c, align 8
  %self = getelementptr inbounds %struct.Channel* %8, i32 0, i32 1
  %9 = load i32* %self, align 4
  call void @channel_register_cleanup(i32 %9, void (i32, i8*)* @client_cleanup_stdio_fwd, i32 0)
  %10 = load %struct.Channel** %c, align 8
  %self13 = getelementptr inbounds %struct.Channel* %10, i32 0, i32 1
  %11 = load i32* %self13, align 4
  call void @channel_register_open_confirm(i32 %11, void (i32, i32, i8*)* @ssh_stdio_confirm, i8* null)
  br label %return

return:                                           ; preds = %if.end12, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @ssh_init_forwarding() #0 {
entry:
  %success = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %success, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont35, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %3, i64 %idxprom
  %listen_path = getelementptr inbounds %struct.Forward* %arrayidx, i32 0, i32 2
  %4 = load i8** %listen_path, align 8
  %cmp1 = icmp ne i8* %4, null
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %5 = load i32* %i, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx3 = getelementptr inbounds %struct.Forward* %6, i64 %idxprom2
  %listen_path4 = getelementptr inbounds %struct.Forward* %arrayidx3, i32 0, i32 2
  %7 = load i8** %listen_path4, align 8
  br label %cond.end14

cond.false:                                       ; preds = %for.body
  %8 = load i32* %i, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx6 = getelementptr inbounds %struct.Forward* %9, i64 %idxprom5
  %listen_host = getelementptr inbounds %struct.Forward* %arrayidx6, i32 0, i32 0
  %10 = load i8** %listen_host, align 8
  %cmp7 = icmp eq i8* %10, null
  br i1 %cmp7, label %cond.true8, label %cond.false9

cond.true8:                                       ; preds = %cond.false
  %11 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6, i32 0), align 4
  %tobool = icmp ne i32 %11, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([2 x i8]* @.str132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str133, i32 0, i32 0)
  br label %cond.end

cond.false9:                                      ; preds = %cond.false
  %12 = load i32* %i, align 4
  %idxprom10 = sext i32 %12 to i64
  %13 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx11 = getelementptr inbounds %struct.Forward* %13, i64 %idxprom10
  %listen_host12 = getelementptr inbounds %struct.Forward* %arrayidx11, i32 0, i32 0
  %14 = load i8** %listen_host12, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false9, %cond.true8
  %cond13 = phi i8* [ %cond, %cond.true8 ], [ %14, %cond.false9 ]
  br label %cond.end14

cond.end14:                                       ; preds = %cond.end, %cond.true
  %cond15 = phi i8* [ %7, %cond.true ], [ %cond13, %cond.end ]
  %15 = load i32* %i, align 4
  %idxprom16 = sext i32 %15 to i64
  %16 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx17 = getelementptr inbounds %struct.Forward* %16, i64 %idxprom16
  %listen_port = getelementptr inbounds %struct.Forward* %arrayidx17, i32 0, i32 1
  %17 = load i32* %listen_port, align 4
  %18 = load i32* %i, align 4
  %idxprom18 = sext i32 %18 to i64
  %19 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx19 = getelementptr inbounds %struct.Forward* %19, i64 %idxprom18
  %connect_path = getelementptr inbounds %struct.Forward* %arrayidx19, i32 0, i32 5
  %20 = load i8** %connect_path, align 8
  %cmp20 = icmp ne i8* %20, null
  br i1 %cmp20, label %cond.true21, label %cond.false25

cond.true21:                                      ; preds = %cond.end14
  %21 = load i32* %i, align 4
  %idxprom22 = sext i32 %21 to i64
  %22 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx23 = getelementptr inbounds %struct.Forward* %22, i64 %idxprom22
  %connect_path24 = getelementptr inbounds %struct.Forward* %arrayidx23, i32 0, i32 5
  %23 = load i8** %connect_path24, align 8
  br label %cond.end28

cond.false25:                                     ; preds = %cond.end14
  %24 = load i32* %i, align 4
  %idxprom26 = sext i32 %24 to i64
  %25 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx27 = getelementptr inbounds %struct.Forward* %25, i64 %idxprom26
  %connect_host = getelementptr inbounds %struct.Forward* %arrayidx27, i32 0, i32 3
  %26 = load i8** %connect_host, align 8
  br label %cond.end28

cond.end28:                                       ; preds = %cond.false25, %cond.true21
  %cond29 = phi i8* [ %23, %cond.true21 ], [ %26, %cond.false25 ]
  %27 = load i32* %i, align 4
  %idxprom30 = sext i32 %27 to i64
  %28 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx31 = getelementptr inbounds %struct.Forward* %28, i64 %idxprom30
  %connect_port = getelementptr inbounds %struct.Forward* %arrayidx31, i32 0, i32 4
  %29 = load i32* %connect_port, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([69 x i8]* @.str131, i32 0, i32 0), i8* %cond15, i32 %17, i8* %cond29, i32 %29)
  %30 = load i32* %i, align 4
  %idxprom32 = sext i32 %30 to i64
  %31 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx33 = getelementptr inbounds %struct.Forward* %31, i64 %idxprom32
  %call = call i32 @channel_setup_local_fwd_listener(%struct.Forward* %arrayidx33, %struct.ForwardOptions* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6))
  %32 = load i32* %success, align 4
  %33 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %call)
  %34 = extractvalue { i32, i1 } %33, 0
  %35 = extractvalue { i32, i1 } %33, 1
  %36 = xor i1 %35, true
  br i1 %36, label %cont, label %trap

trap:                                             ; preds = %cond.end28
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %cond.end28
  store i32 %34, i32* %success, align 4
  br label %for.inc

for.inc:                                          ; preds = %cont
  %37 = load i32* %i, align 4
  %38 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 1)
  %39 = extractvalue { i32, i1 } %38, 0
  %40 = extractvalue { i32, i1 } %38, 1
  %41 = xor i1 %40, true
  br i1 %41, label %cont35, label %trap34

trap34:                                           ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont35:                                           ; preds = %for.inc
  store i32 %39, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %42 = load i32* %i, align 4
  %cmp36 = icmp sgt i32 %42, 0
  br i1 %cmp36, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.end
  %43 = load i32* %success, align 4
  %44 = load i32* %i, align 4
  %cmp37 = icmp ne i32 %43, %44
  br i1 %cmp37, label %land.lhs.true38, label %if.end

land.lhs.true38:                                  ; preds = %land.lhs.true
  %45 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool39 = icmp ne i32 %45, 0
  br i1 %tobool39, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true38
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str134, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %land.lhs.true38, %land.lhs.true, %for.end
  %46 = load i32* %i, align 4
  %cmp40 = icmp sgt i32 %46, 0
  br i1 %cmp40, label %land.lhs.true41, label %if.end44

land.lhs.true41:                                  ; preds = %if.end
  %47 = load i32* %success, align 4
  %cmp42 = icmp eq i32 %47, 0
  br i1 %cmp42, label %if.then43, label %if.end44

if.then43:                                        ; preds = %land.lhs.true41
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str134, i32 0, i32 0))
  br label %if.end44

if.end44:                                         ; preds = %if.then43, %land.lhs.true41, %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond45

for.cond45:                                       ; preds = %cont109, %if.end44
  %48 = load i32* %i, align 4
  %49 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp46 = icmp slt i32 %48, %49
  br i1 %cmp46, label %for.body47, label %for.end110

for.body47:                                       ; preds = %for.cond45
  %50 = load i32* %i, align 4
  %idxprom48 = sext i32 %50 to i64
  %51 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx49 = getelementptr inbounds %struct.Forward* %51, i64 %idxprom48
  %listen_path50 = getelementptr inbounds %struct.Forward* %arrayidx49, i32 0, i32 2
  %52 = load i8** %listen_path50, align 8
  %cmp51 = icmp ne i8* %52, null
  br i1 %cmp51, label %cond.true52, label %cond.false56

cond.true52:                                      ; preds = %for.body47
  %53 = load i32* %i, align 4
  %idxprom53 = sext i32 %53 to i64
  %54 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx54 = getelementptr inbounds %struct.Forward* %54, i64 %idxprom53
  %listen_path55 = getelementptr inbounds %struct.Forward* %arrayidx54, i32 0, i32 2
  %55 = load i8** %listen_path55, align 8
  br label %cond.end68

cond.false56:                                     ; preds = %for.body47
  %56 = load i32* %i, align 4
  %idxprom57 = sext i32 %56 to i64
  %57 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx58 = getelementptr inbounds %struct.Forward* %57, i64 %idxprom57
  %listen_host59 = getelementptr inbounds %struct.Forward* %arrayidx58, i32 0, i32 0
  %58 = load i8** %listen_host59, align 8
  %cmp60 = icmp eq i8* %58, null
  br i1 %cmp60, label %cond.true61, label %cond.false62

cond.true61:                                      ; preds = %cond.false56
  br label %cond.end66

cond.false62:                                     ; preds = %cond.false56
  %59 = load i32* %i, align 4
  %idxprom63 = sext i32 %59 to i64
  %60 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx64 = getelementptr inbounds %struct.Forward* %60, i64 %idxprom63
  %listen_host65 = getelementptr inbounds %struct.Forward* %arrayidx64, i32 0, i32 0
  %61 = load i8** %listen_host65, align 8
  br label %cond.end66

cond.end66:                                       ; preds = %cond.false62, %cond.true61
  %cond67 = phi i8* [ getelementptr inbounds ([10 x i8]* @.str133, i32 0, i32 0), %cond.true61 ], [ %61, %cond.false62 ]
  br label %cond.end68

cond.end68:                                       ; preds = %cond.end66, %cond.true52
  %cond69 = phi i8* [ %55, %cond.true52 ], [ %cond67, %cond.end66 ]
  %62 = load i32* %i, align 4
  %idxprom70 = sext i32 %62 to i64
  %63 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx71 = getelementptr inbounds %struct.Forward* %63, i64 %idxprom70
  %listen_port72 = getelementptr inbounds %struct.Forward* %arrayidx71, i32 0, i32 1
  %64 = load i32* %listen_port72, align 4
  %65 = load i32* %i, align 4
  %idxprom73 = sext i32 %65 to i64
  %66 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx74 = getelementptr inbounds %struct.Forward* %66, i64 %idxprom73
  %connect_path75 = getelementptr inbounds %struct.Forward* %arrayidx74, i32 0, i32 5
  %67 = load i8** %connect_path75, align 8
  %cmp76 = icmp ne i8* %67, null
  br i1 %cmp76, label %cond.true77, label %cond.false81

cond.true77:                                      ; preds = %cond.end68
  %68 = load i32* %i, align 4
  %idxprom78 = sext i32 %68 to i64
  %69 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx79 = getelementptr inbounds %struct.Forward* %69, i64 %idxprom78
  %connect_path80 = getelementptr inbounds %struct.Forward* %arrayidx79, i32 0, i32 5
  %70 = load i8** %connect_path80, align 8
  br label %cond.end85

cond.false81:                                     ; preds = %cond.end68
  %71 = load i32* %i, align 4
  %idxprom82 = sext i32 %71 to i64
  %72 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx83 = getelementptr inbounds %struct.Forward* %72, i64 %idxprom82
  %connect_host84 = getelementptr inbounds %struct.Forward* %arrayidx83, i32 0, i32 3
  %73 = load i8** %connect_host84, align 8
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false81, %cond.true77
  %cond86 = phi i8* [ %70, %cond.true77 ], [ %73, %cond.false81 ]
  %74 = load i32* %i, align 4
  %idxprom87 = sext i32 %74 to i64
  %75 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx88 = getelementptr inbounds %struct.Forward* %75, i64 %idxprom87
  %connect_port89 = getelementptr inbounds %struct.Forward* %arrayidx88, i32 0, i32 4
  %76 = load i32* %connect_port89, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([71 x i8]* @.str135, i32 0, i32 0), i8* %cond69, i32 %64, i8* %cond86, i32 %76)
  %77 = load i32* %i, align 4
  %idxprom90 = sext i32 %77 to i64
  %78 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx91 = getelementptr inbounds %struct.Forward* %78, i64 %idxprom90
  %call92 = call i32 @channel_request_remote_forwarding(%struct.Forward* %arrayidx91)
  %79 = load i32* %i, align 4
  %idxprom93 = sext i32 %79 to i64
  %80 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx94 = getelementptr inbounds %struct.Forward* %80, i64 %idxprom93
  %handle = getelementptr inbounds %struct.Forward* %arrayidx94, i32 0, i32 7
  store i32 %call92, i32* %handle, align 4
  %81 = load i32* %i, align 4
  %idxprom95 = sext i32 %81 to i64
  %82 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx96 = getelementptr inbounds %struct.Forward* %82, i64 %idxprom95
  %handle97 = getelementptr inbounds %struct.Forward* %arrayidx96, i32 0, i32 7
  %83 = load i32* %handle97, align 4
  %cmp98 = icmp slt i32 %83, 0
  br i1 %cmp98, label %if.then99, label %if.else103

if.then99:                                        ; preds = %cond.end85
  %84 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool100 = icmp ne i32 %84, 0
  br i1 %tobool100, label %if.then101, label %if.else

if.then101:                                       ; preds = %if.then99
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str136, i32 0, i32 0)) #11
  unreachable

if.else:                                          ; preds = %if.then99
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([46 x i8]* @.str137, i32 0, i32 0))
  br label %if.end102

if.end102:                                        ; preds = %if.else
  br label %if.end106

if.else103:                                       ; preds = %cond.end85
  %85 = load i32* %i, align 4
  %idxprom104 = sext i32 %85 to i64
  %86 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx105 = getelementptr inbounds %struct.Forward* %86, i64 %idxprom104
  %87 = bitcast %struct.Forward* %arrayidx105 to i8*
  call void @client_register_global_confirm(void (i32, i32, i8*)* @ssh_confirm_remote_forward, i8* %87)
  br label %if.end106

if.end106:                                        ; preds = %if.else103, %if.end102
  br label %for.inc107

for.inc107:                                       ; preds = %if.end106
  %88 = load i32* %i, align 4
  %89 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 1)
  %90 = extractvalue { i32, i1 } %89, 0
  %91 = extractvalue { i32, i1 } %89, 1
  %92 = xor i1 %91, true
  br i1 %92, label %cont109, label %trap108

trap108:                                          ; preds = %for.inc107
  call void @llvm.trap() #3
  unreachable

cont109:                                          ; preds = %for.inc107
  store i32 %90, i32* %i, align 4
  br label %for.cond45

for.end110:                                       ; preds = %for.cond45
  %93 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  %cmp111 = icmp ne i32 %93, 0
  br i1 %cmp111, label %if.then112, label %if.end123

if.then112:                                       ; preds = %for.end110
  %94 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  %95 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 83), align 4
  %96 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 84), align 4
  %call113 = call i32 @client_request_tun_fwd(i32 %94, i32 %95, i32 %96)
  %97 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %98 = extractvalue { i32, i1 } %97, 0
  %99 = extractvalue { i32, i1 } %97, 1
  %100 = xor i1 %99, true
  br i1 %100, label %cont115, label %trap114

trap114:                                          ; preds = %if.then112
  call void @llvm.trap() #3
  unreachable

cont115:                                          ; preds = %if.then112
  %cmp116 = icmp eq i32 %call113, %98
  br i1 %cmp116, label %if.then117, label %if.end122

if.then117:                                       ; preds = %cont115
  %101 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool118 = icmp ne i32 %101, 0
  br i1 %tobool118, label %if.then119, label %if.else120

if.then119:                                       ; preds = %if.then117
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str138, i32 0, i32 0)) #11
  unreachable

if.else120:                                       ; preds = %if.then117
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str138, i32 0, i32 0))
  br label %if.end121

if.end121:                                        ; preds = %if.else120
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %cont115
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %for.end110
  ret void
}

declare i32 @ssh_packet_get_mux(%struct.ssh*) #1

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_session2_open() #0 {
entry:
  %c = alloca %struct.Channel*, align 8
  %window = alloca i32, align 4
  %packetmax = alloca i32, align 4
  %in = alloca i32, align 4
  %out = alloca i32, align 4
  %err = alloca i32, align 4
  %0 = load i32* @stdin_null_flag, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str115, i32 0, i32 0), i32 0)
  store i32 %call, i32* %in, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %call1 = call i32 @dup(i32 0) #9
  store i32 %call1, i32* %in, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call2 = call i32 @dup(i32 1) #9
  store i32 %call2, i32* %out, align 4
  %call3 = call i32 @dup(i32 2) #9
  store i32 %call3, i32* %err, align 4
  %1 = load i32* %in, align 4
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i32* %out, align 4
  %cmp4 = icmp slt i32 %2, 0
  br i1 %cmp4, label %if.then7, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %3 = load i32* %err, align 4
  %cmp6 = icmp slt i32 %3, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str119, i32 0, i32 0)) #11
  unreachable

if.end8:                                          ; preds = %lor.lhs.false5
  %4 = load i32* %in, align 4
  %call9 = call i32 @isatty(i32 %4) #9
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end8
  %5 = load i32* %in, align 4
  %call12 = call i32 @set_nonblock(i32 %5)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end8
  %6 = load i32* %out, align 4
  %call14 = call i32 @isatty(i32 %6) #9
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end18, label %if.then16

if.then16:                                        ; preds = %if.end13
  %7 = load i32* %out, align 4
  %call17 = call i32 @set_nonblock(i32 %7)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end13
  %8 = load i32* %err, align 4
  %call19 = call i32 @isatty(i32 %8) #9
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %if.end23, label %if.then21

if.then21:                                        ; preds = %if.end18
  %9 = load i32* %err, align 4
  %call22 = call i32 @set_nonblock(i32 %9)
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end18
  %10 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %11 = extractvalue { i32, i1 } %10, 0
  %12 = extractvalue { i32, i1 } %10, 1
  %13 = xor i1 %12, true
  br i1 %13, label %cont, label %trap

trap:                                             ; preds = %if.end23
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end23
  %14 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 64, i32 %11)
  %15 = extractvalue { i32, i1 } %14, 0
  %16 = extractvalue { i32, i1 } %14, 1
  %17 = xor i1 %16, true
  br i1 %17, label %cont25, label %trap24

trap24:                                           ; preds = %cont
  call void @llvm.trap() #3
  unreachable

cont25:                                           ; preds = %cont
  store i32 %15, i32* %window, align 4
  %18 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont27, label %trap26

trap26:                                           ; preds = %cont25
  call void @llvm.trap() #3
  unreachable

cont27:                                           ; preds = %cont25
  store i32 %19, i32* %packetmax, align 4
  %22 = load i32* @tty_flag, align 4
  %tobool28 = icmp ne i32 %22, 0
  br i1 %tobool28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %cont27
  %23 = load i32* %window, align 4
  %shr = ashr i32 %23, 1
  store i32 %shr, i32* %window, align 4
  %24 = load i32* %packetmax, align 4
  %shr30 = ashr i32 %24, 1
  store i32 %shr30, i32* %packetmax, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %cont27
  %25 = load i32* %in, align 4
  %26 = load i32* %out, align 4
  %27 = load i32* %err, align 4
  %28 = load i32* %window, align 4
  %29 = load i32* %packetmax, align 4
  %call32 = call %struct.Channel* @channel_new(i8* getelementptr inbounds ([8 x i8]* @.str120, i32 0, i32 0), i32 3, i32 %25, i32 %26, i32 %27, i32 %28, i32 %29, i32 2, i8* getelementptr inbounds ([15 x i8]* @.str121, i32 0, i32 0), i32 0)
  store %struct.Channel* %call32, %struct.Channel** %c, align 8
  %30 = load %struct.Channel** %c, align 8
  %self = getelementptr inbounds %struct.Channel* %30, i32 0, i32 1
  %31 = load i32* %self, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([35 x i8]* @.str122, i32 0, i32 0), i32 %31)
  %32 = load %struct.Channel** %c, align 8
  %self33 = getelementptr inbounds %struct.Channel* %32, i32 0, i32 1
  %33 = load i32* %self33, align 4
  call void @channel_send_open(i32 %33)
  %34 = load i32* @no_shell_flag, align 4
  %tobool34 = icmp ne i32 %34, 0
  br i1 %tobool34, label %if.end37, label %if.then35

if.then35:                                        ; preds = %if.end31
  %35 = load %struct.Channel** %c, align 8
  %self36 = getelementptr inbounds %struct.Channel* %35, i32 0, i32 1
  %36 = load i32* %self36, align 4
  call void @channel_register_open_confirm(i32 %36, void (i32, i32, i8*)* @ssh_session2_setup, i8* null)
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end31
  %37 = load %struct.Channel** %c, align 8
  %self38 = getelementptr inbounds %struct.Channel* %37, i32 0, i32 1
  %38 = load i32* %self38, align 4
  ret i32 %38
}

declare void @ssh_packet_set_interactive(%struct.ssh*, i32, i32, i32) #1

declare void @ssh_packet_start(%struct.ssh*, i8 zeroext) #1

declare void @ssh_packet_put_cstring(%struct.ssh*, i8*) #1

declare void @ssh_packet_put_char(%struct.ssh*, i32) #1

declare void @ssh_packet_send(%struct.ssh*) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @fork_postauth() #0 {
entry:
  %0 = load i32* @need_controlpersist_detach, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @control_persist_detach()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([22 x i8]* @.str109, i32 0, i32 0))
  store i32 0, i32* @fork_after_authentication_flag, align 4
  %call = call i32 @daemon(i32 1, i32 1) #9
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then1, label %if.end4

if.then1:                                         ; preds = %if.end
  %call2 = call i32* @__errno_location() #2
  %1 = load i32* %call2, align 4
  %call3 = call i8* @strerror(i32 %1) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str110, i32 0, i32 0), i8* %call3) #11
  unreachable

if.end4:                                          ; preds = %if.end
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @control_persist_detach() #0 {
entry:
  %pid = alloca i32, align 4
  %devnull = alloca i32, align 4
  %keep_stderr = alloca i32, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([33 x i8]* @.str111, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.control_persist_detach, i32 0, i32 0))
  %call = call i32 @fork() #9
  store i32 %call, i32* %pid, align 4
  switch i32 %call, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %0 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %0) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([13 x i8]* @.str112, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.control_persist_detach, i32 0, i32 0), i8* %call2) #11
  unreachable

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %1 = load i32* %pid, align 4
  %conv = sext i32 %1 to i64
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([30 x i8]* @.str113, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.control_persist_detach, i32 0, i32 0), i64 %conv)
  %2 = load i32* @ostdin_null_flag, align 4
  store i32 %2, i32* @stdin_null_flag, align 4
  %3 = load i32* @orequest_tty, align 4
  store i32 %3, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %4 = load i32* @otty_flag, align 4
  store i32 %4, i32* @tty_flag, align 4
  %5 = load i32* @muxserver_sock, align 4
  %call4 = call i32 @close(i32 %5)
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont, label %trap

trap:                                             ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %sw.default
  store i32 %7, i32* @muxserver_sock, align 4
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %10 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call5 = call i32 @muxclient(i8* %10)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str114, i32 0, i32 0)) #11
  unreachable

sw.epilog:                                        ; preds = %sw.bb3
  %call6 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str115, i32 0, i32 0), i32 2)
  store i32 %call6, i32* %devnull, align 4
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = extractvalue { i32, i1 } %11, 1
  %14 = xor i1 %13, true
  br i1 %14, label %cont8, label %trap7

trap7:                                            ; preds = %sw.epilog
  call void @llvm.trap() #3
  unreachable

cont8:                                            ; preds = %sw.epilog
  %cmp = icmp eq i32 %call6, %12
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %cont8
  %call10 = call i32* @__errno_location() #2
  %15 = load i32* %call10, align 4
  %call11 = call i8* @strerror(i32 %15) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str116, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.control_persist_detach, i32 0, i32 0), i8* %call11)
  br label %if.end39

if.else:                                          ; preds = %cont8
  %call12 = call i32 @log_is_on_stderr()
  %tobool = icmp ne i32 %call12, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.else
  %16 = load i32* @debug_flag, align 4
  %tobool13 = icmp ne i32 %16, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %17 = phi i1 [ false, %if.else ], [ %tobool13, %land.rhs ]
  %land.ext = zext i1 %17 to i32
  store i32 %land.ext, i32* %keep_stderr, align 4
  %18 = load i32* %devnull, align 4
  %call14 = call i32 @dup2(i32 %18, i32 0) #9
  %19 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont16, label %trap15

trap15:                                           ; preds = %land.end
  call void @llvm.trap() #3
  unreachable

cont16:                                           ; preds = %land.end
  %cmp17 = icmp eq i32 %call14, %20
  br i1 %cmp17, label %if.then31, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cont16
  %23 = load i32* %devnull, align 4
  %call19 = call i32 @dup2(i32 %23, i32 1) #9
  %24 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %25 = extractvalue { i32, i1 } %24, 0
  %26 = extractvalue { i32, i1 } %24, 1
  %27 = xor i1 %26, true
  br i1 %27, label %cont21, label %trap20

trap20:                                           ; preds = %lor.lhs.false
  call void @llvm.trap() #3
  unreachable

cont21:                                           ; preds = %lor.lhs.false
  %cmp22 = icmp eq i32 %call19, %25
  br i1 %cmp22, label %if.then31, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %cont21
  %28 = load i32* %keep_stderr, align 4
  %tobool25 = icmp ne i32 %28, 0
  br i1 %tobool25, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %lor.lhs.false24
  %29 = load i32* %devnull, align 4
  %call26 = call i32 @dup2(i32 %29, i32 2) #9
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont28, label %trap27

trap27:                                           ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont28:                                           ; preds = %land.lhs.true
  %cmp29 = icmp eq i32 %call26, %31
  br i1 %cmp29, label %if.then31, label %if.end

if.then31:                                        ; preds = %cont28, %cont21, %cont16
  %call32 = call i32* @__errno_location() #2
  %34 = load i32* %call32, align 4
  %call33 = call i8* @strerror(i32 %34) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str117, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.control_persist_detach, i32 0, i32 0), i8* %call33)
  br label %if.end

if.end:                                           ; preds = %if.then31, %cont28, %lor.lhs.false24
  %35 = load i32* %devnull, align 4
  %cmp34 = icmp sgt i32 %35, 2
  br i1 %cmp34, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end
  %36 = load i32* %devnull, align 4
  %call37 = call i32 @close(i32 %36)
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then
  %call40 = call i32 @daemon(i32 1, i32 1) #9
  %37 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void (i8*, ...)* @setproctitle(i8* getelementptr inbounds ([9 x i8]* @.str118, i32 0, i32 0), i8* %37)
  ret void
}

; Function Attrs: nounwind
declare i32 @daemon(i32, i32) #4

; Function Attrs: nounwind
declare i32 @fork() #4

declare i32 @close(i32) #1

declare i32 @open(i8*, i32, ...) #1

declare i32 @log_is_on_stderr() #1

; Function Attrs: nounwind
declare i32 @dup2(i32, i32) #4

declare void @setproctitle(i8*, ...) #1

; Function Attrs: nounwind
declare i32 @dup(i32) #4

declare i32 @set_nonblock(i32) #1

declare %struct.Channel* @channel_new(i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32) #1

declare void @channel_send_open(i32) #1

declare void @channel_register_open_confirm(i32, void (i32, i32, i8*)*, i8*) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @ssh_session2_setup(i32 %id, i32 %success, i8* %arg) #0 {
entry:
  %id.addr = alloca i32, align 4
  %success.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %display = alloca i8*, align 8
  %interactive = alloca i32, align 4
  %proto = alloca i8*, align 8
  %data = alloca i8*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i32 %success, i32* %success.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* @tty_flag, align 4
  store i32 %0, i32* %interactive, align 4
  store i8* null, i8** %proto, align 8
  store i8* null, i8** %data, align 8
  %1 = load i32* %success.addr, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([8 x i8]* @.str123, i32 0, i32 0)) #9
  store i8* %call, i8** %display, align 8
  %2 = load i8** %display, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %land.lhs.true, label %if.end3

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %land.lhs.true
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([45 x i8]* @.str124, i32 0, i32 0))
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool4 = icmp ne i32 %4, 0
  br i1 %tobool4, label %land.lhs.true5, label %if.end9

land.lhs.true5:                                   ; preds = %if.end3
  %5 = load i8** %display, align 8
  %6 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 5), align 8
  %7 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 3), align 4
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 2), align 4
  %call6 = call i32 @client_x11_get_proto(i8* %5, i8* %6, i32 %7, i32 %8, i8** %proto, i8** %data)
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true5
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([56 x i8]* @.str125, i32 0, i32 0))
  %9 = load i32* %id.addr, align 4
  %10 = load i8** %display, align 8
  %11 = load i8** %proto, align 8
  %12 = load i8** %data, align 8
  call void @x11_request_forwarding_with_spoofing(i32 %9, i8* %10, i8* %11, i8* %12, i32 1)
  %13 = load i32* %id.addr, align 4
  call void @client_expect_confirm(i32 %13, i8* getelementptr inbounds ([15 x i8]* @.str126, i32 0, i32 0), i32 0)
  store i32 1, i32* %interactive, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %land.lhs.true5, %if.end3
  call void @check_agent_present()
  %14 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool10 = icmp ne i32 %14, 0
  br i1 %tobool10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end9
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([44 x i8]* @.str127, i32 0, i32 0))
  %15 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %15, i8* getelementptr inbounds ([27 x i8]* @.str128, i32 0, i32 0), i32 0)
  %16 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %16)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end9
  %17 = load %struct.ssh** @active_state, align 8
  %18 = load i32* %interactive, align 4
  %19 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 24), align 4
  %20 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 25), align 4
  call void @ssh_packet_set_interactive(%struct.ssh* %17, i32 %18, i32 %19, i32 %20)
  %21 = load i32* %id.addr, align 4
  %22 = load i32* @tty_flag, align 4
  %23 = load i32* @subsystem_flag, align 4
  %call13 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8]* @.str129, i32 0, i32 0)) #9
  %24 = load %struct._IO_FILE** @stdin, align 8
  %call14 = call i32 @fileno(%struct._IO_FILE* %24) #9
  %25 = load i8*** @environ, align 8
  call void @client_session2_setup(i32 %21, i32 %22, i32 %23, i8* %call13, %struct.termios* null, i32 %call14, %struct.sshbuf* @command, i8** %25)
  br label %return

return:                                           ; preds = %if.end12, %if.then
  ret void
}

; Function Attrs: nounwind
declare i8* @getenv(i8*) #4

declare void @x11_request_forwarding_with_spoofing(i32, i8*, i8*, i8*, i32) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @check_agent_present() #0 {
entry:
  %r = alloca i32, align 4
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  %call = call i32 @ssh_get_authentication_socket(i32* null)
  store i32 %call, i32* %r, align 4
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then1, label %if.end5

if.then1:                                         ; preds = %if.then
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %1 = load i32* %r, align 4
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 47)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %if.then1
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then1
  %cmp2 = icmp ne i32 %1, %3
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %cont
  %6 = load i32* %r, align 4
  %call4 = call i8* @ssh_err(i32 %6)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([34 x i8]* @.str130, i32 0, i32 0), i8* %call4)
  br label %if.end

if.end:                                           ; preds = %if.then3, %cont
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %entry
  ret void
}

declare void @channel_request_start(i32, i8*, i32) #1

declare i32 @ssh_get_authentication_socket(i32*) #1

declare i8* @ssh_err(i32) #1

declare i32 @channel_setup_local_fwd_listener(%struct.Forward*, %struct.ForwardOptions*) #1

declare i32 @channel_request_remote_forwarding(%struct.Forward*) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @ssh_confirm_remote_forward(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %rfwd = alloca %struct.Forward*, align 8
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  %0 = load i8** %ctxt.addr, align 8
  %1 = bitcast i8* %0 to %struct.Forward*
  store %struct.Forward* %1, %struct.Forward** %rfwd, align 8
  %2 = load i32* %type.addr, align 4
  %cmp = icmp eq i32 %2, 81
  %cond = select i1 %cmp, i8* getelementptr inbounds ([8 x i8]* @.str140, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str141, i32 0, i32 0)
  %3 = load %struct.Forward** %rfwd, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %3, i32 0, i32 2
  %4 = load i8** %listen_path, align 8
  %tobool = icmp ne i8* %4, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %struct.Forward** %rfwd, align 8
  %listen_path1 = getelementptr inbounds %struct.Forward* %5, i32 0, i32 2
  %6 = load i8** %listen_path1, align 8
  br label %cond.end7

cond.false:                                       ; preds = %entry
  %7 = load %struct.Forward** %rfwd, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %7, i32 0, i32 0
  %8 = load i8** %listen_host, align 8
  %tobool2 = icmp ne i8* %8, null
  br i1 %tobool2, label %cond.true3, label %cond.false5

cond.true3:                                       ; preds = %cond.false
  %9 = load %struct.Forward** %rfwd, align 8
  %listen_host4 = getelementptr inbounds %struct.Forward* %9, i32 0, i32 0
  %10 = load i8** %listen_host4, align 8
  br label %cond.end

cond.false5:                                      ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %cond.false5, %cond.true3
  %cond6 = phi i8* [ %10, %cond.true3 ], [ getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0), %cond.false5 ]
  br label %cond.end7

cond.end7:                                        ; preds = %cond.end, %cond.true
  %cond8 = phi i8* [ %6, %cond.true ], [ %cond6, %cond.end ]
  %11 = load %struct.Forward** %rfwd, align 8
  %listen_path9 = getelementptr inbounds %struct.Forward* %11, i32 0, i32 2
  %12 = load i8** %listen_path9, align 8
  %tobool10 = icmp ne i8* %12, null
  br i1 %tobool10, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %cond.end7
  %13 = load %struct.Forward** %rfwd, align 8
  %listen_host11 = getelementptr inbounds %struct.Forward* %13, i32 0, i32 0
  %14 = load i8** %listen_host11, align 8
  %tobool12 = icmp ne i8* %14, null
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %cond.end7
  %15 = phi i1 [ true, %cond.end7 ], [ %tobool12, %lor.rhs ]
  %cond13 = select i1 %15, i8* getelementptr inbounds ([2 x i8]* @.str142, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str45, i32 0, i32 0)
  %16 = load %struct.Forward** %rfwd, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %16, i32 0, i32 1
  %17 = load i32* %listen_port, align 4
  %18 = load %struct.Forward** %rfwd, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %18, i32 0, i32 5
  %19 = load i8** %connect_path, align 8
  %tobool14 = icmp ne i8* %19, null
  br i1 %tobool14, label %cond.true15, label %cond.false17

cond.true15:                                      ; preds = %lor.end
  %20 = load %struct.Forward** %rfwd, align 8
  %connect_path16 = getelementptr inbounds %struct.Forward* %20, i32 0, i32 5
  %21 = load i8** %connect_path16, align 8
  br label %cond.end18

cond.false17:                                     ; preds = %lor.end
  %22 = load %struct.Forward** %rfwd, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %22, i32 0, i32 3
  %23 = load i8** %connect_host, align 8
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi i8* [ %21, %cond.true15 ], [ %23, %cond.false17 ]
  %24 = load %struct.Forward** %rfwd, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %24, i32 0, i32 4
  %25 = load i32* %connect_port, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([52 x i8]* @.str139, i32 0, i32 0), i8* %cond, i8* %cond8, i8* %cond13, i32 %17, i8* %cond19, i32 %25)
  %26 = load %struct.Forward** %rfwd, align 8
  %listen_path20 = getelementptr inbounds %struct.Forward* %26, i32 0, i32 2
  %27 = load i8** %listen_path20, align 8
  %cmp21 = icmp eq i8* %27, null
  br i1 %cmp21, label %land.lhs.true, label %if.end31

land.lhs.true:                                    ; preds = %cond.end18
  %28 = load %struct.Forward** %rfwd, align 8
  %listen_port22 = getelementptr inbounds %struct.Forward* %28, i32 0, i32 1
  %29 = load i32* %listen_port22, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then, label %if.end31

if.then:                                          ; preds = %land.lhs.true
  %30 = load i32* %type.addr, align 4
  %cmp24 = icmp eq i32 %30, 81
  br i1 %cmp24, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.then
  %call = call i32 @packet_get_int()
  %31 = load %struct.Forward** %rfwd, align 8
  %allocated_port = getelementptr inbounds %struct.Forward* %31, i32 0, i32 6
  store i32 %call, i32* %allocated_port, align 4
  %32 = load %struct.Forward** %rfwd, align 8
  %allocated_port26 = getelementptr inbounds %struct.Forward* %32, i32 0, i32 6
  %33 = load i32* %allocated_port26, align 4
  %34 = load %struct.Forward** %rfwd, align 8
  %connect_host27 = getelementptr inbounds %struct.Forward* %34, i32 0, i32 3
  %35 = load i8** %connect_host27, align 8
  %36 = load %struct.Forward** %rfwd, align 8
  %connect_port28 = getelementptr inbounds %struct.Forward* %36, i32 0, i32 4
  %37 = load i32* %connect_port28, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([46 x i8]* @.str143, i32 0, i32 0), i32 %33, i8* %35, i32 %37)
  %38 = load %struct.Forward** %rfwd, align 8
  %handle = getelementptr inbounds %struct.Forward* %38, i32 0, i32 7
  %39 = load i32* %handle, align 4
  %40 = load %struct.Forward** %rfwd, align 8
  %allocated_port29 = getelementptr inbounds %struct.Forward* %40, i32 0, i32 6
  %41 = load i32* %allocated_port29, align 4
  call void @channel_update_permitted_opens(i32 %39, i32 %41)
  br label %if.end

if.else:                                          ; preds = %if.then
  %42 = load %struct.Forward** %rfwd, align 8
  %handle30 = getelementptr inbounds %struct.Forward* %42, i32 0, i32 7
  %43 = load i32* %handle30, align 4
  %44 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %45 = extractvalue { i32, i1 } %44, 0
  %46 = extractvalue { i32, i1 } %44, 1
  %47 = xor i1 %46, true
  br i1 %47, label %cont, label %trap

trap:                                             ; preds = %if.else
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.else
  call void @channel_update_permitted_opens(i32 %43, i32 %45)
  br label %if.end

if.end:                                           ; preds = %cont, %if.then25
  br label %if.end31

if.end31:                                         ; preds = %if.end, %land.lhs.true, %cond.end18
  %48 = load i32* %type.addr, align 4
  %cmp32 = icmp eq i32 %48, 82
  br i1 %cmp32, label %if.then33, label %if.end51

if.then33:                                        ; preds = %if.end31
  %49 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool34 = icmp ne i32 %49, 0
  br i1 %tobool34, label %if.then35, label %if.else42

if.then35:                                        ; preds = %if.then33
  %50 = load %struct.Forward** %rfwd, align 8
  %listen_path36 = getelementptr inbounds %struct.Forward* %50, i32 0, i32 2
  %51 = load i8** %listen_path36, align 8
  %cmp37 = icmp ne i8* %51, null
  br i1 %cmp37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.then35
  %52 = load %struct.Forward** %rfwd, align 8
  %listen_path39 = getelementptr inbounds %struct.Forward* %52, i32 0, i32 2
  %53 = load i8** %listen_path39, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([56 x i8]* @.str144, i32 0, i32 0), i8* %53) #11
  unreachable

if.else40:                                        ; preds = %if.then35
  %54 = load %struct.Forward** %rfwd, align 8
  %listen_port41 = getelementptr inbounds %struct.Forward* %54, i32 0, i32 1
  %55 = load i32* %listen_port41, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([56 x i8]* @.str145, i32 0, i32 0), i32 %55) #11
  unreachable

if.else42:                                        ; preds = %if.then33
  %56 = load %struct.Forward** %rfwd, align 8
  %listen_path43 = getelementptr inbounds %struct.Forward* %56, i32 0, i32 2
  %57 = load i8** %listen_path43, align 8
  %cmp44 = icmp ne i8* %57, null
  br i1 %cmp44, label %if.then45, label %if.else47

if.then45:                                        ; preds = %if.else42
  %58 = load %struct.Forward** %rfwd, align 8
  %listen_path46 = getelementptr inbounds %struct.Forward* %58, i32 0, i32 2
  %59 = load i8** %listen_path46, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([58 x i8]* @.str146, i32 0, i32 0), i8* %59)
  br label %if.end49

if.else47:                                        ; preds = %if.else42
  %60 = load %struct.Forward** %rfwd, align 8
  %listen_port48 = getelementptr inbounds %struct.Forward* %60, i32 0, i32 1
  %61 = load i32* %listen_port48, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([58 x i8]* @.str147, i32 0, i32 0), i32 %61)
  br label %if.end49

if.end49:                                         ; preds = %if.else47, %if.then45
  br label %if.end50

if.end50:                                         ; preds = %if.end49
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end31
  %62 = load i32* @remote_forward_confirms_received, align 4
  %63 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 1)
  %64 = extractvalue { i32, i1 } %63, 0
  %65 = extractvalue { i32, i1 } %63, 1
  %66 = xor i1 %65, true
  br i1 %66, label %cont53, label %trap52

trap52:                                           ; preds = %if.end51
  call void @llvm.trap() #3
  unreachable

cont53:                                           ; preds = %if.end51
  store i32 %64, i32* @remote_forward_confirms_received, align 4
  %67 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp54 = icmp eq i32 %64, %67
  br i1 %cmp54, label %if.then55, label %if.end59

if.then55:                                        ; preds = %cont53
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([41 x i8]* @.str148, i32 0, i32 0))
  %68 = load i32* @fork_after_authentication_flag, align 4
  %tobool56 = icmp ne i32 %68, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.then55
  call void @fork_postauth()
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.then55
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %cont53
  ret void
}

declare i32 @packet_get_int() #1

declare void @channel_update_permitted_opens(i32, i32) #1

declare %struct.Channel* @channel_connect_stdio_fwd(i8*, i16 zeroext, i32, i32) #1

declare void @channel_register_cleanup(i32, void (i32, i8*)*, i32) #1

; Function Attrs: nounwind sspreq uwtable
define internal void @client_cleanup_stdio_fwd(i32 %id, i8* %arg) #0 {
entry:
  %id.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([23 x i8]* @.str154, i32 0, i32 0))
  call void @cleanup_exit(i32 0) #11
  unreachable

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @ssh_stdio_confirm(i32 %id, i32 %success, i8* %arg) #0 {
entry:
  %id.addr = alloca i32, align 4
  %success.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i32 %success, i32* %success.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %success.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str153, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

declare void @ssh_packet_put_int(%struct.ssh*, i32) #1

declare void @packet_write_wait() #1

declare i32 @ssh_packet_read(%struct.ssh*) #1

declare i32 @ssh_packet_start_compression(%struct.ssh*, i32) #1

; Function Attrs: noreturn
declare void @packet_disconnect(i8*, ...) #6

; Function Attrs: nounwind
declare i32 @ioctl(i32, i64, ...) #4

declare void @tty_make_modes(i32, %struct.termios*) #1

declare void @auth_request_forwarding() #1

declare i32 @ssh_packet_remaining(%struct.ssh*) #1

; Function Attrs: noreturn
declare void @ssh_packet_disconnect(%struct.ssh*, i8*, ...) #6

declare i8* @sshbuf_mutable_ptr(%struct.sshbuf*) #1

declare void @ssh_packet_put_string(%struct.ssh*, i8*, i32) #1

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #5

declare i32 @match_pattern_list(i8*, i8*, i32) #1

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #1

declare void @do_log2(i32, i8*, ...) #1

declare i8* @ssh_gai_strerror(i32) #1

; Function Attrs: nounwind sspreq uwtable
define internal %struct.addrinfo* @resolve_addr(i8* %name, i32 %port, i8* %caddr, i64 %clen) #0 {
entry:
  %retval = alloca %struct.addrinfo*, align 8
  %name.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %caddr.addr = alloca i8*, align 8
  %clen.addr = alloca i64, align 8
  %addr = alloca [1025 x i8], align 16
  %strport = alloca [32 x i8], align 16
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  %gaierr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  store i32 %port, i32* %port.addr, align 4
  store i8* %caddr, i8** %caddr.addr, align 8
  store i64 %clen, i64* %clen.addr, align 8
  %0 = load i32* %port.addr, align 4
  %cmp = icmp sle i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 @default_ssh_port()
  store i32 %call, i32* %port.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %1 = load i32* %port.addr, align 4
  %call1 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([3 x i8]* @.str183, i32 0, i32 0), i32 %1) #9
  %2 = bitcast %struct.addrinfo* %hints to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 48, i32 8, i1 false)
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %5 = extractvalue { i32, i1 } %4, 0
  %6 = extractvalue { i32, i1 } %4, 1
  %7 = xor i1 %6, true
  br i1 %7, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp2 = icmp eq i32 %3, %5
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %cont
  br label %cond.end

cond.false:                                       ; preds = %cont
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 28), align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ]
  %ai_family = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 1
  store i32 %cond, i32* %ai_family, align 4
  %ai_socktype = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 2
  store i32 1, i32* %ai_socktype, align 4
  %ai_flags = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 0
  store i32 1028, i32* %ai_flags, align 4
  %9 = load i8** %name.addr, align 8
  %arraydecay3 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %call4 = call i32 @getaddrinfo(i8* %9, i8* %arraydecay3, %struct.addrinfo* %hints, %struct.addrinfo** %res)
  store i32 %call4, i32* %gaierr, align 4
  %cmp5 = icmp ne i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %cond.end
  %10 = load i8** %name.addr, align 8
  %11 = load i32* %gaierr, align 4
  %call7 = call i8* @ssh_gai_strerror(i32 %11)
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([49 x i8]* @.str184, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @__func__.resolve_addr, i32 0, i32 0), i8* %10, i8* %call7)
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end8:                                          ; preds = %cond.end
  %12 = load %struct.addrinfo** %res, align 8
  %cmp9 = icmp eq %struct.addrinfo* %12, null
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  %13 = load i8** %name.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([45 x i8]* @.str185, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @__func__.resolve_addr, i32 0, i32 0), i8* %13)
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end11:                                         ; preds = %if.end8
  %14 = load %struct.addrinfo** %res, align 8
  %ai_next = getelementptr inbounds %struct.addrinfo* %14, i32 0, i32 7
  %15 = load %struct.addrinfo** %ai_next, align 8
  %cmp12 = icmp ne %struct.addrinfo* %15, null
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  %16 = load i8** %name.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([51 x i8]* @.str186, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @__func__.resolve_addr, i32 0, i32 0), i8* %16)
  br label %fail

if.end14:                                         ; preds = %if.end11
  %17 = load %struct.addrinfo** %res, align 8
  %ai_addr = getelementptr inbounds %struct.addrinfo* %17, i32 0, i32 5
  %18 = load %struct.sockaddr** %ai_addr, align 8
  %19 = load %struct.addrinfo** %res, align 8
  %ai_addrlen = getelementptr inbounds %struct.addrinfo* %19, i32 0, i32 4
  %20 = load i32* %ai_addrlen, align 4
  %arraydecay15 = getelementptr inbounds [1025 x i8]* %addr, i32 0, i32 0
  %call16 = call i32 @getnameinfo(%struct.sockaddr* %18, i32 %20, i8* %arraydecay15, i32 1025, i8* null, i32 0, i32 1)
  store i32 %call16, i32* %gaierr, align 4
  %cmp17 = icmp ne i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end14
  %21 = load i8** %name.addr, align 8
  %22 = load i32* %gaierr, align 4
  %call19 = call i8* @ssh_gai_strerror(i32 %22)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([49 x i8]* @.str187, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @__func__.resolve_addr, i32 0, i32 0), i8* %21, i8* %call19)
  br label %fail

if.end20:                                         ; preds = %if.end14
  %23 = load i8** %caddr.addr, align 8
  %arraydecay21 = getelementptr inbounds [1025 x i8]* %addr, i32 0, i32 0
  %24 = load i64* %clen.addr, align 8
  %call22 = call i64 @strlcpy(i8* %23, i8* %arraydecay21, i64 %24)
  %25 = load i64* %clen.addr, align 8
  %cmp23 = icmp uge i64 %call22, %25
  br i1 %cmp23, label %if.then24, label %if.end29

if.then24:                                        ; preds = %if.end20
  %26 = load i8** %name.addr, align 8
  %arraydecay25 = getelementptr inbounds [1025 x i8]* %addr, i32 0, i32 0
  %27 = load i64* %clen.addr, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str188, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @__func__.resolve_addr, i32 0, i32 0), i8* %26, i8* %arraydecay25, i64 %27)
  %28 = load i64* %clen.addr, align 8
  %cmp26 = icmp ugt i64 %28, 0
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then24
  %29 = load i8** %caddr.addr, align 8
  store i8 0, i8* %29, align 1
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.then24
  br label %fail

fail:                                             ; preds = %if.end28, %if.then18, %if.then13
  %30 = load %struct.addrinfo** %res, align 8
  call void @freeaddrinfo(%struct.addrinfo* %30) #9
  store %struct.addrinfo* null, %struct.addrinfo** %retval
  br label %return

if.end29:                                         ; preds = %if.end20
  %31 = load %struct.addrinfo** %res, align 8
  store %struct.addrinfo* %31, %struct.addrinfo** %retval
  br label %return

return:                                           ; preds = %if.end29, %fail, %if.then10, %if.then6
  %32 = load %struct.addrinfo** %retval
  ret %struct.addrinfo* %32
}

declare i32 @getnameinfo(%struct.sockaddr*, i32, i8*, i32, i8*, i32, i32) #1

; Function Attrs: nounwind sspreq uwtable
define void @add_local_forward(%struct.Options* %options, %struct.Forward* %newfwd) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %newfwd.addr = alloca %struct.Forward*, align 8
  %fwd = alloca %struct.Forward*, align 8
  %i = alloca i32, align 4
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store %struct.Forward* %newfwd, %struct.Forward** %newfwd.addr, align 8
  %0 = load %struct.Forward** %newfwd.addr, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %0, i32 0, i32 1
  %1 = load i32* %listen_port, align 4
  %2 = load i32* @original_real_uid, align 4
  %call = call i32 @bind_permitted(i32 %1, i32 %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.Forward** %newfwd.addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %3, i32 0, i32 2
  %4 = load i8** %listen_path, align 8
  %cmp = icmp eq i8* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([48 x i8]* @.str194, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.end
  %5 = load i32* %i, align 4
  %6 = load %struct.Options** %options.addr, align 8
  %num_local_forwards = getelementptr inbounds %struct.Options* %6, i32 0, i32 61
  %7 = load i32* %num_local_forwards, align 4
  %cmp1 = icmp slt i32 %5, %7
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Forward** %newfwd.addr, align 8
  %9 = load %struct.Options** %options.addr, align 8
  %local_forwards = getelementptr inbounds %struct.Options* %9, i32 0, i32 62
  %10 = load %struct.Forward** %local_forwards, align 8
  %11 = load i32* %i, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.Forward* %10, i64 %idx.ext
  %call2 = call i32 @forward_equals(%struct.Forward* %8, %struct.Forward* %add.ptr)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %for.body
  br label %return

if.end5:                                          ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end5
  %12 = load i32* %i, align 4
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 1)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %14, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Options** %options.addr, align 8
  %local_forwards6 = getelementptr inbounds %struct.Options* %17, i32 0, i32 62
  %18 = load %struct.Forward** %local_forwards6, align 8
  %19 = bitcast %struct.Forward* %18 to i8*
  %20 = load %struct.Options** %options.addr, align 8
  %num_local_forwards7 = getelementptr inbounds %struct.Options* %20, i32 0, i32 61
  %21 = load i32* %num_local_forwards7, align 4
  %22 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 1)
  %23 = extractvalue { i32, i1 } %22, 0
  %24 = extractvalue { i32, i1 } %22, 1
  %25 = xor i1 %24, true
  br i1 %25, label %cont9, label %trap8

trap8:                                            ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %for.end
  %conv = sext i32 %23 to i64
  %call10 = call i8* @xreallocarray(i8* %19, i64 %conv, i64 56)
  %26 = bitcast i8* %call10 to %struct.Forward*
  %27 = load %struct.Options** %options.addr, align 8
  %local_forwards11 = getelementptr inbounds %struct.Options* %27, i32 0, i32 62
  store %struct.Forward* %26, %struct.Forward** %local_forwards11, align 8
  %28 = load %struct.Options** %options.addr, align 8
  %num_local_forwards12 = getelementptr inbounds %struct.Options* %28, i32 0, i32 61
  %29 = load i32* %num_local_forwards12, align 4
  %30 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 1)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont14, label %trap13

trap13:                                           ; preds = %cont9
  call void @llvm.trap() #3
  unreachable

cont14:                                           ; preds = %cont9
  store i32 %31, i32* %num_local_forwards12, align 4
  %idxprom = sext i32 %29 to i64
  %34 = load %struct.Options** %options.addr, align 8
  %local_forwards15 = getelementptr inbounds %struct.Options* %34, i32 0, i32 62
  %35 = load %struct.Forward** %local_forwards15, align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %35, i64 %idxprom
  store %struct.Forward* %arrayidx, %struct.Forward** %fwd, align 8
  %36 = load %struct.Forward** %newfwd.addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %36, i32 0, i32 0
  %37 = load i8** %listen_host, align 8
  %38 = load %struct.Forward** %fwd, align 8
  %listen_host16 = getelementptr inbounds %struct.Forward* %38, i32 0, i32 0
  store i8* %37, i8** %listen_host16, align 8
  %39 = load %struct.Forward** %newfwd.addr, align 8
  %listen_port17 = getelementptr inbounds %struct.Forward* %39, i32 0, i32 1
  %40 = load i32* %listen_port17, align 4
  %41 = load %struct.Forward** %fwd, align 8
  %listen_port18 = getelementptr inbounds %struct.Forward* %41, i32 0, i32 1
  store i32 %40, i32* %listen_port18, align 4
  %42 = load %struct.Forward** %newfwd.addr, align 8
  %listen_path19 = getelementptr inbounds %struct.Forward* %42, i32 0, i32 2
  %43 = load i8** %listen_path19, align 8
  %44 = load %struct.Forward** %fwd, align 8
  %listen_path20 = getelementptr inbounds %struct.Forward* %44, i32 0, i32 2
  store i8* %43, i8** %listen_path20, align 8
  %45 = load %struct.Forward** %newfwd.addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %45, i32 0, i32 3
  %46 = load i8** %connect_host, align 8
  %47 = load %struct.Forward** %fwd, align 8
  %connect_host21 = getelementptr inbounds %struct.Forward* %47, i32 0, i32 3
  store i8* %46, i8** %connect_host21, align 8
  %48 = load %struct.Forward** %newfwd.addr, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %48, i32 0, i32 4
  %49 = load i32* %connect_port, align 4
  %50 = load %struct.Forward** %fwd, align 8
  %connect_port22 = getelementptr inbounds %struct.Forward* %50, i32 0, i32 4
  store i32 %49, i32* %connect_port22, align 4
  %51 = load %struct.Forward** %newfwd.addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %51, i32 0, i32 5
  %52 = load i8** %connect_path, align 8
  %53 = load %struct.Forward** %fwd, align 8
  %connect_path23 = getelementptr inbounds %struct.Forward* %53, i32 0, i32 5
  store i8* %52, i8** %connect_path23, align 8
  br label %return

return:                                           ; preds = %cont14, %if.then4
  ret void
}

declare i32 @bind_permitted(i32, i32) #1

declare i32 @forward_equals(%struct.Forward*, %struct.Forward*) #1

declare i8* @xreallocarray(i8*, i64, i64) #1

; Function Attrs: nounwind sspreq uwtable
define void @add_remote_forward(%struct.Options* %options, %struct.Forward* %newfwd) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %newfwd.addr = alloca %struct.Forward*, align 8
  %fwd = alloca %struct.Forward*, align 8
  %i = alloca i32, align 4
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store %struct.Forward* %newfwd, %struct.Forward** %newfwd.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %entry
  %0 = load i32* %i, align 4
  %1 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards = getelementptr inbounds %struct.Options* %1, i32 0, i32 63
  %2 = load i32* %num_remote_forwards, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Forward** %newfwd.addr, align 8
  %4 = load %struct.Options** %options.addr, align 8
  %remote_forwards = getelementptr inbounds %struct.Options* %4, i32 0, i32 64
  %5 = load %struct.Forward** %remote_forwards, align 8
  %6 = load i32* %i, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds %struct.Forward* %5, i64 %idx.ext
  %call = call i32 @forward_equals(%struct.Forward* %3, %struct.Forward* %add.ptr)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32* %i, align 4
  %8 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 1)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %9, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load %struct.Options** %options.addr, align 8
  %remote_forwards1 = getelementptr inbounds %struct.Options* %12, i32 0, i32 64
  %13 = load %struct.Forward** %remote_forwards1, align 8
  %14 = bitcast %struct.Forward* %13 to i8*
  %15 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards2 = getelementptr inbounds %struct.Options* %15, i32 0, i32 63
  %16 = load i32* %num_remote_forwards2, align 4
  %17 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont4, label %trap3

trap3:                                            ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont4:                                            ; preds = %for.end
  %conv = sext i32 %18 to i64
  %call5 = call i8* @xreallocarray(i8* %14, i64 %conv, i64 56)
  %21 = bitcast i8* %call5 to %struct.Forward*
  %22 = load %struct.Options** %options.addr, align 8
  %remote_forwards6 = getelementptr inbounds %struct.Options* %22, i32 0, i32 64
  store %struct.Forward* %21, %struct.Forward** %remote_forwards6, align 8
  %23 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards7 = getelementptr inbounds %struct.Options* %23, i32 0, i32 63
  %24 = load i32* %num_remote_forwards7, align 4
  %25 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 1)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont9, label %trap8

trap8:                                            ; preds = %cont4
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %cont4
  store i32 %26, i32* %num_remote_forwards7, align 4
  %idxprom = sext i32 %24 to i64
  %29 = load %struct.Options** %options.addr, align 8
  %remote_forwards10 = getelementptr inbounds %struct.Options* %29, i32 0, i32 64
  %30 = load %struct.Forward** %remote_forwards10, align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %30, i64 %idxprom
  store %struct.Forward* %arrayidx, %struct.Forward** %fwd, align 8
  %31 = load %struct.Forward** %newfwd.addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %31, i32 0, i32 0
  %32 = load i8** %listen_host, align 8
  %33 = load %struct.Forward** %fwd, align 8
  %listen_host11 = getelementptr inbounds %struct.Forward* %33, i32 0, i32 0
  store i8* %32, i8** %listen_host11, align 8
  %34 = load %struct.Forward** %newfwd.addr, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %34, i32 0, i32 1
  %35 = load i32* %listen_port, align 4
  %36 = load %struct.Forward** %fwd, align 8
  %listen_port12 = getelementptr inbounds %struct.Forward* %36, i32 0, i32 1
  store i32 %35, i32* %listen_port12, align 4
  %37 = load %struct.Forward** %newfwd.addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %37, i32 0, i32 2
  %38 = load i8** %listen_path, align 8
  %39 = load %struct.Forward** %fwd, align 8
  %listen_path13 = getelementptr inbounds %struct.Forward* %39, i32 0, i32 2
  store i8* %38, i8** %listen_path13, align 8
  %40 = load %struct.Forward** %newfwd.addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %40, i32 0, i32 3
  %41 = load i8** %connect_host, align 8
  %42 = load %struct.Forward** %fwd, align 8
  %connect_host14 = getelementptr inbounds %struct.Forward* %42, i32 0, i32 3
  store i8* %41, i8** %connect_host14, align 8
  %43 = load %struct.Forward** %newfwd.addr, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %43, i32 0, i32 4
  %44 = load i32* %connect_port, align 4
  %45 = load %struct.Forward** %fwd, align 8
  %connect_port15 = getelementptr inbounds %struct.Forward* %45, i32 0, i32 4
  store i32 %44, i32* %connect_port15, align 4
  %46 = load %struct.Forward** %newfwd.addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %46, i32 0, i32 5
  %47 = load i8** %connect_path, align 8
  %48 = load %struct.Forward** %fwd, align 8
  %connect_path16 = getelementptr inbounds %struct.Forward* %48, i32 0, i32 5
  store i8* %47, i8** %connect_path16, align 8
  %49 = load %struct.Forward** %newfwd.addr, align 8
  %handle = getelementptr inbounds %struct.Forward* %49, i32 0, i32 7
  %50 = load i32* %handle, align 4
  %51 = load %struct.Forward** %fwd, align 8
  %handle17 = getelementptr inbounds %struct.Forward* %51, i32 0, i32 7
  store i32 %50, i32* %handle17, align 4
  %52 = load %struct.Forward** %fwd, align 8
  %allocated_port = getelementptr inbounds %struct.Forward* %52, i32 0, i32 6
  store i32 0, i32* %allocated_port, align 4
  br label %return

return:                                           ; preds = %cont9, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define void @add_certificate_file(%struct.Options* %options, i8* %path, i32 %userprovided) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %path.addr = alloca i8*, align 8
  %userprovided.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store i8* %path, i8** %path.addr, align 8
  store i32 %userprovided, i32* %userprovided.addr, align 4
  %0 = load %struct.Options** %options.addr, align 8
  %num_certificate_files = getelementptr inbounds %struct.Options* %0, i32 0, i32 55
  %1 = load i32* %num_certificate_files, align 4
  %cmp = icmp sge i32 %1, 100
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str1195, i32 0, i32 0), i32 100) #11
  unreachable

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.end
  %2 = load i32* %i, align 4
  %3 = load %struct.Options** %options.addr, align 8
  %num_certificate_files1 = getelementptr inbounds %struct.Options* %3, i32 0, i32 55
  %4 = load i32* %num_certificate_files1, align 4
  %cmp2 = icmp slt i32 %2, %4
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.Options** %options.addr, align 8
  %certificate_file_userprovided = getelementptr inbounds %struct.Options* %6, i32 0, i32 57
  %arrayidx = getelementptr inbounds [100 x i32]* %certificate_file_userprovided, i32 0, i64 %idxprom
  %7 = load i32* %arrayidx, align 4
  %8 = load i32* %userprovided.addr, align 4
  %cmp3 = icmp eq i32 %7, %8
  br i1 %cmp3, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %10 = load %struct.Options** %options.addr, align 8
  %certificate_files = getelementptr inbounds %struct.Options* %10, i32 0, i32 56
  %arrayidx5 = getelementptr inbounds [100 x i8*]* %certificate_files, i32 0, i64 %idxprom4
  %11 = load i8** %arrayidx5, align 8
  %12 = load i8** %path.addr, align 8
  %call = call i32 @strcmp(i8* %11, i8* %12) #12
  %cmp6 = icmp eq i32 %call, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %land.lhs.true
  %13 = load i8** %path.addr, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([30 x i8]* @.str2196, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.add_certificate_file, i32 0, i32 0), i8* %13)
  br label %return

if.end8:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end8
  %14 = load i32* %i, align 4
  %15 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 1)
  %16 = extractvalue { i32, i1 } %15, 0
  %17 = extractvalue { i32, i1 } %15, 1
  %18 = xor i1 %17, true
  br i1 %18, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %16, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load i32* %userprovided.addr, align 4
  %20 = load %struct.Options** %options.addr, align 8
  %num_certificate_files9 = getelementptr inbounds %struct.Options* %20, i32 0, i32 55
  %21 = load i32* %num_certificate_files9, align 4
  %idxprom10 = sext i32 %21 to i64
  %22 = load %struct.Options** %options.addr, align 8
  %certificate_file_userprovided11 = getelementptr inbounds %struct.Options* %22, i32 0, i32 57
  %arrayidx12 = getelementptr inbounds [100 x i32]* %certificate_file_userprovided11, i32 0, i64 %idxprom10
  store i32 %19, i32* %arrayidx12, align 4
  %23 = load i8** %path.addr, align 8
  %call13 = call i8* @xstrdup(i8* %23)
  %24 = load %struct.Options** %options.addr, align 8
  %num_certificate_files14 = getelementptr inbounds %struct.Options* %24, i32 0, i32 55
  %25 = load i32* %num_certificate_files14, align 4
  %26 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 1)
  %27 = extractvalue { i32, i1 } %26, 0
  %28 = extractvalue { i32, i1 } %26, 1
  %29 = xor i1 %28, true
  br i1 %29, label %cont16, label %trap15

trap15:                                           ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont16:                                           ; preds = %for.end
  store i32 %27, i32* %num_certificate_files14, align 4
  %idxprom17 = sext i32 %25 to i64
  %30 = load %struct.Options** %options.addr, align 8
  %certificate_files18 = getelementptr inbounds %struct.Options* %30, i32 0, i32 56
  %arrayidx19 = getelementptr inbounds [100 x i8*]* %certificate_files18, i32 0, i64 %idxprom17
  store i8* %call13, i8** %arrayidx19, align 8
  br label %return

return:                                           ; preds = %cont16, %if.then7
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define void @add_identity_file(%struct.Options* %options, i8* %dir, i8* %filename, i32 %userprovided) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %dir.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %userprovided.addr = alloca i32, align 4
  %path = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store i8* %dir, i8** %dir.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %userprovided, i32* %userprovided.addr, align 4
  %0 = load %struct.Options** %options.addr, align 8
  %num_identity_files = getelementptr inbounds %struct.Options* %0, i32 0, i32 51
  %1 = load i32* %num_identity_files, align 4
  %cmp = icmp sge i32 %1, 100
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str3197, i32 0, i32 0), i32 100) #11
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i8** %dir.addr, align 8
  %cmp1 = icmp eq i8* %2, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %3 = load i8** %filename.addr, align 8
  %call = call i8* @xstrdup(i8* %3)
  store i8* %call, i8** %path, align 8
  br label %if.end4

if.else:                                          ; preds = %if.end
  %4 = load i8** %dir.addr, align 8
  %5 = load i8** %filename.addr, align 8
  %call3 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %path, i8* getelementptr inbounds ([13 x i8]* @.str4198, i32 0, i32 0), i8* %4, i8* %5)
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.end4
  %6 = load i32* %i, align 4
  %7 = load %struct.Options** %options.addr, align 8
  %num_identity_files5 = getelementptr inbounds %struct.Options* %7, i32 0, i32 51
  %8 = load i32* %num_identity_files5, align 4
  %cmp6 = icmp slt i32 %6, %8
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.Options** %options.addr, align 8
  %identity_file_userprovided = getelementptr inbounds %struct.Options* %10, i32 0, i32 53
  %arrayidx = getelementptr inbounds [100 x i32]* %identity_file_userprovided, i32 0, i64 %idxprom
  %11 = load i32* %arrayidx, align 4
  %12 = load i32* %userprovided.addr, align 4
  %cmp7 = icmp eq i32 %11, %12
  br i1 %cmp7, label %land.lhs.true, label %if.end13

land.lhs.true:                                    ; preds = %for.body
  %13 = load i32* %i, align 4
  %idxprom8 = sext i32 %13 to i64
  %14 = load %struct.Options** %options.addr, align 8
  %identity_files = getelementptr inbounds %struct.Options* %14, i32 0, i32 52
  %arrayidx9 = getelementptr inbounds [100 x i8*]* %identity_files, i32 0, i64 %idxprom8
  %15 = load i8** %arrayidx9, align 8
  %16 = load i8** %path, align 8
  %call10 = call i32 @strcmp(i8* %15, i8* %16) #12
  %cmp11 = icmp eq i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  %17 = load i8** %path, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([30 x i8]* @.str2196, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.add_identity_file, i32 0, i32 0), i8* %17)
  %18 = load i8** %path, align 8
  call void @free(i8* %18) #9
  br label %return

if.end13:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %19 = load i32* %i, align 4
  %20 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 1)
  %21 = extractvalue { i32, i1 } %20, 0
  %22 = extractvalue { i32, i1 } %20, 1
  %23 = xor i1 %22, true
  br i1 %23, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %21, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load i32* %userprovided.addr, align 4
  %25 = load %struct.Options** %options.addr, align 8
  %num_identity_files14 = getelementptr inbounds %struct.Options* %25, i32 0, i32 51
  %26 = load i32* %num_identity_files14, align 4
  %idxprom15 = sext i32 %26 to i64
  %27 = load %struct.Options** %options.addr, align 8
  %identity_file_userprovided16 = getelementptr inbounds %struct.Options* %27, i32 0, i32 53
  %arrayidx17 = getelementptr inbounds [100 x i32]* %identity_file_userprovided16, i32 0, i64 %idxprom15
  store i32 %24, i32* %arrayidx17, align 4
  %28 = load i8** %path, align 8
  %29 = load %struct.Options** %options.addr, align 8
  %num_identity_files18 = getelementptr inbounds %struct.Options* %29, i32 0, i32 51
  %30 = load i32* %num_identity_files18, align 4
  %31 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 1)
  %32 = extractvalue { i32, i1 } %31, 0
  %33 = extractvalue { i32, i1 } %31, 1
  %34 = xor i1 %33, true
  br i1 %34, label %cont20, label %trap19

trap19:                                           ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont20:                                           ; preds = %for.end
  store i32 %32, i32* %num_identity_files18, align 4
  %idxprom21 = sext i32 %30 to i64
  %35 = load %struct.Options** %options.addr, align 8
  %identity_files22 = getelementptr inbounds %struct.Options* %35, i32 0, i32 52
  %arrayidx23 = getelementptr inbounds [100 x i8*]* %identity_files22, i32 0, i64 %idxprom21
  store i8* %28, i8** %arrayidx23, align 8
  br label %return

return:                                           ; preds = %cont20, %if.then12
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define i32 @default_ssh_port() #0 {
entry:
  %sp = alloca %struct.servent*, align 8
  %0 = load i32* @default_ssh_port.port, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call %struct.servent* @getservbyname(i8* getelementptr inbounds ([4 x i8]* @.str5199, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str6200, i32 0, i32 0))
  store %struct.servent* %call, %struct.servent** %sp, align 8
  %1 = load %struct.servent** %sp, align 8
  %tobool = icmp ne %struct.servent* %1, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %2 = load %struct.servent** %sp, align 8
  %s_port = getelementptr inbounds %struct.servent* %2, i32 0, i32 2
  %3 = load i32* %s_port, align 4
  %conv = trunc i32 %3 to i16
  %call1 = call zeroext i16 @ntohs(i16 zeroext %conv) #2
  %conv2 = zext i16 %call1 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ 22, %cond.false ]
  store i32 %cond, i32* @default_ssh_port.port, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %entry
  %4 = load i32* @default_ssh_port.port, align 4
  ret i32 %4
}

declare %struct.servent* @getservbyname(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #5

; Function Attrs: nounwind sspreq uwtable
define i32 @process_config_line(%struct.Options* %options, %struct.passwd* %pw, i8* %host, i8* %original_host, i8* %line, i8* %filename, i32 %linenum, i32* %activep, i32 %flags) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %pw.addr = alloca %struct.passwd*, align 8
  %host.addr = alloca i8*, align 8
  %original_host.addr = alloca i8*, align 8
  %line.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %linenum.addr = alloca i32, align 4
  %activep.addr = alloca i32*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  store i8* %original_host, i8** %original_host.addr, align 8
  store i8* %line, i8** %line.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %linenum, i32* %linenum.addr, align 4
  store i32* %activep, i32** %activep.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %0 = load %struct.Options** %options.addr, align 8
  %1 = load %struct.passwd** %pw.addr, align 8
  %2 = load i8** %host.addr, align 8
  %3 = load i8** %original_host.addr, align 8
  %4 = load i8** %line.addr, align 8
  %5 = load i8** %filename.addr, align 8
  %6 = load i32* %linenum.addr, align 4
  %7 = load i32** %activep.addr, align 8
  %8 = load i32* %flags.addr, align 4
  %call = call i32 @process_config_line_depth(%struct.Options* %0, %struct.passwd* %1, i8* %2, i8* %3, i8* %4, i8* %5, i32 %6, i32* %7, i32 %8, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind sspreq uwtable
define i32 @read_config_file(i8* %filename, %struct.passwd* %pw, i8* %host, i8* %original_host, %struct.Options* %options, i32 %flags) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %pw.addr = alloca %struct.passwd*, align 8
  %host.addr = alloca i8*, align 8
  %original_host.addr = alloca i8*, align 8
  %options.addr = alloca %struct.Options*, align 8
  %flags.addr = alloca i32, align 4
  %active = alloca i32, align 4
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  store i8* %original_host, i8** %original_host.addr, align 8
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32 1, i32* %active, align 4
  %0 = load i8** %filename.addr, align 8
  %1 = load %struct.passwd** %pw.addr, align 8
  %2 = load i8** %host.addr, align 8
  %3 = load i8** %original_host.addr, align 8
  %4 = load %struct.Options** %options.addr, align 8
  %5 = load i32* %flags.addr, align 4
  %call = call i32 @read_config_file_depth(i8* %0, %struct.passwd* %1, i8* %2, i8* %3, %struct.Options* %4, i32 %5, i32* %active, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind sspreq uwtable
define i32 @option_clear_or_none(i8* %o) #0 {
entry:
  %o.addr = alloca i8*, align 8
  store i8* %o, i8** %o.addr, align 8
  %0 = load i8** %o.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %1 = load i8** %o.addr, align 8
  %call = call i32 @strcasecmp(i8* %1, i8* getelementptr inbounds ([5 x i8]* @.str7201, i32 0, i32 0)) #12
  %cmp1 = icmp eq i32 %call, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind sspreq uwtable
define void @initialize_options(%struct.Options* %options) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  %0 = load %struct.Options** %options.addr, align 8
  %1 = bitcast %struct.Options* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 88, i64 7880, i32 8, i1 false)
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %6 = load %struct.Options** %options.addr, align 8
  %forward_agent = getelementptr inbounds %struct.Options* %6, i32 0, i32 0
  store i32 %3, i32* %forward_agent, align 4
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %8 = extractvalue { i32, i1 } %7, 0
  %9 = extractvalue { i32, i1 } %7, 1
  %10 = xor i1 %9, true
  br i1 %10, label %cont2, label %trap1

trap1:                                            ; preds = %cont
  call void @llvm.trap() #3
  unreachable

cont2:                                            ; preds = %cont
  %11 = load %struct.Options** %options.addr, align 8
  %forward_x11 = getelementptr inbounds %struct.Options* %11, i32 0, i32 1
  store i32 %8, i32* %forward_x11, align 4
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %13 = extractvalue { i32, i1 } %12, 0
  %14 = extractvalue { i32, i1 } %12, 1
  %15 = xor i1 %14, true
  br i1 %15, label %cont4, label %trap3

trap3:                                            ; preds = %cont2
  call void @llvm.trap() #3
  unreachable

cont4:                                            ; preds = %cont2
  %16 = load %struct.Options** %options.addr, align 8
  %forward_x11_trusted = getelementptr inbounds %struct.Options* %16, i32 0, i32 3
  store i32 %13, i32* %forward_x11_trusted, align 4
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont6, label %trap5

trap5:                                            ; preds = %cont4
  call void @llvm.trap() #3
  unreachable

cont6:                                            ; preds = %cont4
  %21 = load %struct.Options** %options.addr, align 8
  %forward_x11_timeout = getelementptr inbounds %struct.Options* %21, i32 0, i32 2
  store i32 %18, i32* %forward_x11_timeout, align 4
  %22 = load %struct.Options** %options.addr, align 8
  %stdio_forward_host = getelementptr inbounds %struct.Options* %22, i32 0, i32 66
  store i8* null, i8** %stdio_forward_host, align 8
  %23 = load %struct.Options** %options.addr, align 8
  %stdio_forward_port = getelementptr inbounds %struct.Options* %23, i32 0, i32 67
  store i32 0, i32* %stdio_forward_port, align 4
  %24 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %25 = extractvalue { i32, i1 } %24, 0
  %26 = extractvalue { i32, i1 } %24, 1
  %27 = xor i1 %26, true
  br i1 %27, label %cont8, label %trap7

trap7:                                            ; preds = %cont6
  call void @llvm.trap() #3
  unreachable

cont8:                                            ; preds = %cont6
  %28 = load %struct.Options** %options.addr, align 8
  %clear_forwardings = getelementptr inbounds %struct.Options* %28, i32 0, i32 65
  store i32 %25, i32* %clear_forwardings, align 4
  %29 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %30 = extractvalue { i32, i1 } %29, 0
  %31 = extractvalue { i32, i1 } %29, 1
  %32 = xor i1 %31, true
  br i1 %32, label %cont10, label %trap9

trap9:                                            ; preds = %cont8
  call void @llvm.trap() #3
  unreachable

cont10:                                           ; preds = %cont8
  %33 = load %struct.Options** %options.addr, align 8
  %exit_on_forward_failure = getelementptr inbounds %struct.Options* %33, i32 0, i32 4
  store i32 %30, i32* %exit_on_forward_failure, align 4
  %34 = load %struct.Options** %options.addr, align 8
  %xauth_location = getelementptr inbounds %struct.Options* %34, i32 0, i32 5
  store i8* null, i8** %xauth_location, align 8
  %35 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %36 = extractvalue { i32, i1 } %35, 0
  %37 = extractvalue { i32, i1 } %35, 1
  %38 = xor i1 %37, true
  br i1 %38, label %cont12, label %trap11

trap11:                                           ; preds = %cont10
  call void @llvm.trap() #3
  unreachable

cont12:                                           ; preds = %cont10
  %39 = load %struct.Options** %options.addr, align 8
  %fwd_opts = getelementptr inbounds %struct.Options* %39, i32 0, i32 6
  %gateway_ports = getelementptr inbounds %struct.ForwardOptions* %fwd_opts, i32 0, i32 0
  store i32 %36, i32* %gateway_ports, align 4
  %40 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %41 = extractvalue { i32, i1 } %40, 0
  %42 = extractvalue { i32, i1 } %40, 1
  %43 = xor i1 %42, true
  br i1 %43, label %cont14, label %trap13

trap13:                                           ; preds = %cont12
  call void @llvm.trap() #3
  unreachable

cont14:                                           ; preds = %cont12
  %44 = load %struct.Options** %options.addr, align 8
  %fwd_opts15 = getelementptr inbounds %struct.Options* %44, i32 0, i32 6
  %streamlocal_bind_mask = getelementptr inbounds %struct.ForwardOptions* %fwd_opts15, i32 0, i32 1
  store i32 %41, i32* %streamlocal_bind_mask, align 4
  %45 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %46 = extractvalue { i32, i1 } %45, 0
  %47 = extractvalue { i32, i1 } %45, 1
  %48 = xor i1 %47, true
  br i1 %48, label %cont17, label %trap16

trap16:                                           ; preds = %cont14
  call void @llvm.trap() #3
  unreachable

cont17:                                           ; preds = %cont14
  %49 = load %struct.Options** %options.addr, align 8
  %fwd_opts18 = getelementptr inbounds %struct.Options* %49, i32 0, i32 6
  %streamlocal_bind_unlink = getelementptr inbounds %struct.ForwardOptions* %fwd_opts18, i32 0, i32 2
  store i32 %46, i32* %streamlocal_bind_unlink, align 4
  %50 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %51 = extractvalue { i32, i1 } %50, 0
  %52 = extractvalue { i32, i1 } %50, 1
  %53 = xor i1 %52, true
  br i1 %53, label %cont20, label %trap19

trap19:                                           ; preds = %cont17
  call void @llvm.trap() #3
  unreachable

cont20:                                           ; preds = %cont17
  %54 = load %struct.Options** %options.addr, align 8
  %use_privileged_port = getelementptr inbounds %struct.Options* %54, i32 0, i32 7
  store i32 %51, i32* %use_privileged_port, align 4
  %55 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %56 = extractvalue { i32, i1 } %55, 0
  %57 = extractvalue { i32, i1 } %55, 1
  %58 = xor i1 %57, true
  br i1 %58, label %cont22, label %trap21

trap21:                                           ; preds = %cont20
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %cont20
  %59 = load %struct.Options** %options.addr, align 8
  %rsa_authentication = getelementptr inbounds %struct.Options* %59, i32 0, i32 9
  store i32 %56, i32* %rsa_authentication, align 4
  %60 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %61 = extractvalue { i32, i1 } %60, 0
  %62 = extractvalue { i32, i1 } %60, 1
  %63 = xor i1 %62, true
  br i1 %63, label %cont24, label %trap23

trap23:                                           ; preds = %cont22
  call void @llvm.trap() #3
  unreachable

cont24:                                           ; preds = %cont22
  %64 = load %struct.Options** %options.addr, align 8
  %pubkey_authentication = getelementptr inbounds %struct.Options* %64, i32 0, i32 10
  store i32 %61, i32* %pubkey_authentication, align 4
  %65 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %66 = extractvalue { i32, i1 } %65, 0
  %67 = extractvalue { i32, i1 } %65, 1
  %68 = xor i1 %67, true
  br i1 %68, label %cont26, label %trap25

trap25:                                           ; preds = %cont24
  call void @llvm.trap() #3
  unreachable

cont26:                                           ; preds = %cont24
  %69 = load %struct.Options** %options.addr, align 8
  %challenge_response_authentication = getelementptr inbounds %struct.Options* %69, i32 0, i32 12
  store i32 %66, i32* %challenge_response_authentication, align 4
  %70 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %71 = extractvalue { i32, i1 } %70, 0
  %72 = extractvalue { i32, i1 } %70, 1
  %73 = xor i1 %72, true
  br i1 %73, label %cont28, label %trap27

trap27:                                           ; preds = %cont26
  call void @llvm.trap() #3
  unreachable

cont28:                                           ; preds = %cont26
  %74 = load %struct.Options** %options.addr, align 8
  %gss_authentication = getelementptr inbounds %struct.Options* %74, i32 0, i32 13
  store i32 %71, i32* %gss_authentication, align 4
  %75 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %76 = extractvalue { i32, i1 } %75, 0
  %77 = extractvalue { i32, i1 } %75, 1
  %78 = xor i1 %77, true
  br i1 %78, label %cont30, label %trap29

trap29:                                           ; preds = %cont28
  call void @llvm.trap() #3
  unreachable

cont30:                                           ; preds = %cont28
  %79 = load %struct.Options** %options.addr, align 8
  %gss_deleg_creds = getelementptr inbounds %struct.Options* %79, i32 0, i32 14
  store i32 %76, i32* %gss_deleg_creds, align 4
  %80 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %81 = extractvalue { i32, i1 } %80, 0
  %82 = extractvalue { i32, i1 } %80, 1
  %83 = xor i1 %82, true
  br i1 %83, label %cont32, label %trap31

trap31:                                           ; preds = %cont30
  call void @llvm.trap() #3
  unreachable

cont32:                                           ; preds = %cont30
  %84 = load %struct.Options** %options.addr, align 8
  %password_authentication = getelementptr inbounds %struct.Options* %84, i32 0, i32 15
  store i32 %81, i32* %password_authentication, align 4
  %85 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %86 = extractvalue { i32, i1 } %85, 0
  %87 = extractvalue { i32, i1 } %85, 1
  %88 = xor i1 %87, true
  br i1 %88, label %cont34, label %trap33

trap33:                                           ; preds = %cont32
  call void @llvm.trap() #3
  unreachable

cont34:                                           ; preds = %cont32
  %89 = load %struct.Options** %options.addr, align 8
  %kbd_interactive_authentication = getelementptr inbounds %struct.Options* %89, i32 0, i32 16
  store i32 %86, i32* %kbd_interactive_authentication, align 4
  %90 = load %struct.Options** %options.addr, align 8
  %kbd_interactive_devices = getelementptr inbounds %struct.Options* %90, i32 0, i32 17
  store i8* null, i8** %kbd_interactive_devices, align 8
  %91 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %92 = extractvalue { i32, i1 } %91, 0
  %93 = extractvalue { i32, i1 } %91, 1
  %94 = xor i1 %93, true
  br i1 %94, label %cont36, label %trap35

trap35:                                           ; preds = %cont34
  call void @llvm.trap() #3
  unreachable

cont36:                                           ; preds = %cont34
  %95 = load %struct.Options** %options.addr, align 8
  %rhosts_rsa_authentication = getelementptr inbounds %struct.Options* %95, i32 0, i32 8
  store i32 %92, i32* %rhosts_rsa_authentication, align 4
  %96 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %97 = extractvalue { i32, i1 } %96, 0
  %98 = extractvalue { i32, i1 } %96, 1
  %99 = xor i1 %98, true
  br i1 %99, label %cont38, label %trap37

trap37:                                           ; preds = %cont36
  call void @llvm.trap() #3
  unreachable

cont38:                                           ; preds = %cont36
  %100 = load %struct.Options** %options.addr, align 8
  %hostbased_authentication = getelementptr inbounds %struct.Options* %100, i32 0, i32 11
  store i32 %97, i32* %hostbased_authentication, align 4
  %101 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %102 = extractvalue { i32, i1 } %101, 0
  %103 = extractvalue { i32, i1 } %101, 1
  %104 = xor i1 %103, true
  br i1 %104, label %cont40, label %trap39

trap39:                                           ; preds = %cont38
  call void @llvm.trap() #3
  unreachable

cont40:                                           ; preds = %cont38
  %105 = load %struct.Options** %options.addr, align 8
  %batch_mode = getelementptr inbounds %struct.Options* %105, i32 0, i32 18
  store i32 %102, i32* %batch_mode, align 4
  %106 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %107 = extractvalue { i32, i1 } %106, 0
  %108 = extractvalue { i32, i1 } %106, 1
  %109 = xor i1 %108, true
  br i1 %109, label %cont42, label %trap41

trap41:                                           ; preds = %cont40
  call void @llvm.trap() #3
  unreachable

cont42:                                           ; preds = %cont40
  %110 = load %struct.Options** %options.addr, align 8
  %check_host_ip = getelementptr inbounds %struct.Options* %110, i32 0, i32 19
  store i32 %107, i32* %check_host_ip, align 4
  %111 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %112 = extractvalue { i32, i1 } %111, 0
  %113 = extractvalue { i32, i1 } %111, 1
  %114 = xor i1 %113, true
  br i1 %114, label %cont44, label %trap43

trap43:                                           ; preds = %cont42
  call void @llvm.trap() #3
  unreachable

cont44:                                           ; preds = %cont42
  %115 = load %struct.Options** %options.addr, align 8
  %strict_host_key_checking = getelementptr inbounds %struct.Options* %115, i32 0, i32 20
  store i32 %112, i32* %strict_host_key_checking, align 4
  %116 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %117 = extractvalue { i32, i1 } %116, 0
  %118 = extractvalue { i32, i1 } %116, 1
  %119 = xor i1 %118, true
  br i1 %119, label %cont46, label %trap45

trap45:                                           ; preds = %cont44
  call void @llvm.trap() #3
  unreachable

cont46:                                           ; preds = %cont44
  %120 = load %struct.Options** %options.addr, align 8
  %compression = getelementptr inbounds %struct.Options* %120, i32 0, i32 21
  store i32 %117, i32* %compression, align 4
  %121 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %122 = extractvalue { i32, i1 } %121, 0
  %123 = extractvalue { i32, i1 } %121, 1
  %124 = xor i1 %123, true
  br i1 %124, label %cont48, label %trap47

trap47:                                           ; preds = %cont46
  call void @llvm.trap() #3
  unreachable

cont48:                                           ; preds = %cont46
  %125 = load %struct.Options** %options.addr, align 8
  %tcp_keep_alive = getelementptr inbounds %struct.Options* %125, i32 0, i32 23
  store i32 %122, i32* %tcp_keep_alive, align 4
  %126 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %127 = extractvalue { i32, i1 } %126, 0
  %128 = extractvalue { i32, i1 } %126, 1
  %129 = xor i1 %128, true
  br i1 %129, label %cont50, label %trap49

trap49:                                           ; preds = %cont48
  call void @llvm.trap() #3
  unreachable

cont50:                                           ; preds = %cont48
  %130 = load %struct.Options** %options.addr, align 8
  %compression_level = getelementptr inbounds %struct.Options* %130, i32 0, i32 22
  store i32 %127, i32* %compression_level, align 4
  %131 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %132 = extractvalue { i32, i1 } %131, 0
  %133 = extractvalue { i32, i1 } %131, 1
  %134 = xor i1 %133, true
  br i1 %134, label %cont52, label %trap51

trap51:                                           ; preds = %cont50
  call void @llvm.trap() #3
  unreachable

cont52:                                           ; preds = %cont50
  %135 = load %struct.Options** %options.addr, align 8
  %port = getelementptr inbounds %struct.Options* %135, i32 0, i32 27
  store i32 %132, i32* %port, align 4
  %136 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %137 = extractvalue { i32, i1 } %136, 0
  %138 = extractvalue { i32, i1 } %136, 1
  %139 = xor i1 %138, true
  br i1 %139, label %cont54, label %trap53

trap53:                                           ; preds = %cont52
  call void @llvm.trap() #3
  unreachable

cont54:                                           ; preds = %cont52
  %140 = load %struct.Options** %options.addr, align 8
  %address_family = getelementptr inbounds %struct.Options* %140, i32 0, i32 28
  store i32 %137, i32* %address_family, align 4
  %141 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %142 = extractvalue { i32, i1 } %141, 0
  %143 = extractvalue { i32, i1 } %141, 1
  %144 = xor i1 %143, true
  br i1 %144, label %cont56, label %trap55

trap55:                                           ; preds = %cont54
  call void @llvm.trap() #3
  unreachable

cont56:                                           ; preds = %cont54
  %145 = load %struct.Options** %options.addr, align 8
  %connection_attempts = getelementptr inbounds %struct.Options* %145, i32 0, i32 29
  store i32 %142, i32* %connection_attempts, align 4
  %146 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %147 = extractvalue { i32, i1 } %146, 0
  %148 = extractvalue { i32, i1 } %146, 1
  %149 = xor i1 %148, true
  br i1 %149, label %cont58, label %trap57

trap57:                                           ; preds = %cont56
  call void @llvm.trap() #3
  unreachable

cont58:                                           ; preds = %cont56
  %150 = load %struct.Options** %options.addr, align 8
  %connection_timeout = getelementptr inbounds %struct.Options* %150, i32 0, i32 30
  store i32 %147, i32* %connection_timeout, align 4
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %152 = extractvalue { i32, i1 } %151, 0
  %153 = extractvalue { i32, i1 } %151, 1
  %154 = xor i1 %153, true
  br i1 %154, label %cont60, label %trap59

trap59:                                           ; preds = %cont58
  call void @llvm.trap() #3
  unreachable

cont60:                                           ; preds = %cont58
  %155 = load %struct.Options** %options.addr, align 8
  %number_of_password_prompts = getelementptr inbounds %struct.Options* %155, i32 0, i32 31
  store i32 %152, i32* %number_of_password_prompts, align 4
  %156 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %157 = extractvalue { i32, i1 } %156, 0
  %158 = extractvalue { i32, i1 } %156, 1
  %159 = xor i1 %158, true
  br i1 %159, label %cont62, label %trap61

trap61:                                           ; preds = %cont60
  call void @llvm.trap() #3
  unreachable

cont62:                                           ; preds = %cont60
  %160 = load %struct.Options** %options.addr, align 8
  %cipher = getelementptr inbounds %struct.Options* %160, i32 0, i32 32
  store i32 %157, i32* %cipher, align 4
  %161 = load %struct.Options** %options.addr, align 8
  %ciphers = getelementptr inbounds %struct.Options* %161, i32 0, i32 33
  store i8* null, i8** %ciphers, align 8
  %162 = load %struct.Options** %options.addr, align 8
  %macs = getelementptr inbounds %struct.Options* %162, i32 0, i32 34
  store i8* null, i8** %macs, align 8
  %163 = load %struct.Options** %options.addr, align 8
  %kex_algorithms = getelementptr inbounds %struct.Options* %163, i32 0, i32 36
  store i8* null, i8** %kex_algorithms, align 8
  %164 = load %struct.Options** %options.addr, align 8
  %hostkeyalgorithms = getelementptr inbounds %struct.Options* %164, i32 0, i32 35
  store i8* null, i8** %hostkeyalgorithms, align 8
  %165 = load %struct.Options** %options.addr, align 8
  %protocol = getelementptr inbounds %struct.Options* %165, i32 0, i32 37
  store i32 0, i32* %protocol, align 4
  %166 = load %struct.Options** %options.addr, align 8
  %num_identity_files = getelementptr inbounds %struct.Options* %166, i32 0, i32 51
  store i32 0, i32* %num_identity_files, align 4
  %167 = load %struct.Options** %options.addr, align 8
  %num_certificate_files = getelementptr inbounds %struct.Options* %167, i32 0, i32 55
  store i32 0, i32* %num_certificate_files, align 4
  %168 = load %struct.Options** %options.addr, align 8
  %hostname = getelementptr inbounds %struct.Options* %168, i32 0, i32 38
  store i8* null, i8** %hostname, align 8
  %169 = load %struct.Options** %options.addr, align 8
  %host_key_alias = getelementptr inbounds %struct.Options* %169, i32 0, i32 39
  store i8* null, i8** %host_key_alias, align 8
  %170 = load %struct.Options** %options.addr, align 8
  %proxy_command = getelementptr inbounds %struct.Options* %170, i32 0, i32 40
  store i8* null, i8** %proxy_command, align 8
  %171 = load %struct.Options** %options.addr, align 8
  %jump_user = getelementptr inbounds %struct.Options* %171, i32 0, i32 102
  store i8* null, i8** %jump_user, align 8
  %172 = load %struct.Options** %options.addr, align 8
  %jump_host = getelementptr inbounds %struct.Options* %172, i32 0, i32 103
  store i8* null, i8** %jump_host, align 8
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %174 = extractvalue { i32, i1 } %173, 0
  %175 = extractvalue { i32, i1 } %173, 1
  %176 = xor i1 %175, true
  br i1 %176, label %cont64, label %trap63

trap63:                                           ; preds = %cont62
  call void @llvm.trap() #3
  unreachable

cont64:                                           ; preds = %cont62
  %177 = load %struct.Options** %options.addr, align 8
  %jump_port = getelementptr inbounds %struct.Options* %177, i32 0, i32 104
  store i32 %174, i32* %jump_port, align 4
  %178 = load %struct.Options** %options.addr, align 8
  %jump_extra = getelementptr inbounds %struct.Options* %178, i32 0, i32 105
  store i8* null, i8** %jump_extra, align 8
  %179 = load %struct.Options** %options.addr, align 8
  %user = getelementptr inbounds %struct.Options* %179, i32 0, i32 41
  store i8* null, i8** %user, align 8
  %180 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %181 = extractvalue { i32, i1 } %180, 0
  %182 = extractvalue { i32, i1 } %180, 1
  %183 = xor i1 %182, true
  br i1 %183, label %cont66, label %trap65

trap65:                                           ; preds = %cont64
  call void @llvm.trap() #3
  unreachable

cont66:                                           ; preds = %cont64
  %184 = load %struct.Options** %options.addr, align 8
  %escape_char = getelementptr inbounds %struct.Options* %184, i32 0, i32 42
  store i32 %181, i32* %escape_char, align 4
  %185 = load %struct.Options** %options.addr, align 8
  %num_system_hostfiles = getelementptr inbounds %struct.Options* %185, i32 0, i32 43
  store i32 0, i32* %num_system_hostfiles, align 4
  %186 = load %struct.Options** %options.addr, align 8
  %num_user_hostfiles = getelementptr inbounds %struct.Options* %186, i32 0, i32 45
  store i32 0, i32* %num_user_hostfiles, align 4
  %187 = load %struct.Options** %options.addr, align 8
  %local_forwards = getelementptr inbounds %struct.Options* %187, i32 0, i32 62
  store %struct.Forward* null, %struct.Forward** %local_forwards, align 8
  %188 = load %struct.Options** %options.addr, align 8
  %num_local_forwards = getelementptr inbounds %struct.Options* %188, i32 0, i32 61
  store i32 0, i32* %num_local_forwards, align 4
  %189 = load %struct.Options** %options.addr, align 8
  %remote_forwards = getelementptr inbounds %struct.Options* %189, i32 0, i32 64
  store %struct.Forward* null, %struct.Forward** %remote_forwards, align 8
  %190 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards = getelementptr inbounds %struct.Options* %190, i32 0, i32 63
  store i32 0, i32* %num_remote_forwards, align 4
  %191 = load %struct.Options** %options.addr, align 8
  %log_level = getelementptr inbounds %struct.Options* %191, i32 0, i32 26
  store i32 -1, i32* %log_level, align 4
  %192 = load %struct.Options** %options.addr, align 8
  %preferred_authentications = getelementptr inbounds %struct.Options* %192, i32 0, i32 47
  store i8* null, i8** %preferred_authentications, align 8
  %193 = load %struct.Options** %options.addr, align 8
  %bind_address = getelementptr inbounds %struct.Options* %193, i32 0, i32 48
  store i8* null, i8** %bind_address, align 8
  %194 = load %struct.Options** %options.addr, align 8
  %pkcs11_provider = getelementptr inbounds %struct.Options* %194, i32 0, i32 49
  store i8* null, i8** %pkcs11_provider, align 8
  %195 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %196 = extractvalue { i32, i1 } %195, 0
  %197 = extractvalue { i32, i1 } %195, 1
  %198 = xor i1 %197, true
  br i1 %198, label %cont68, label %trap67

trap67:                                           ; preds = %cont66
  call void @llvm.trap() #3
  unreachable

cont68:                                           ; preds = %cont66
  %199 = load %struct.Options** %options.addr, align 8
  %enable_ssh_keysign = getelementptr inbounds %struct.Options* %199, i32 0, i32 68
  store i32 %196, i32* %enable_ssh_keysign, align 4
  %200 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %201 = extractvalue { i32, i1 } %200, 0
  %202 = extractvalue { i32, i1 } %200, 1
  %203 = xor i1 %202, true
  br i1 %203, label %cont70, label %trap69

trap69:                                           ; preds = %cont68
  call void @llvm.trap() #3
  unreachable

cont70:                                           ; preds = %cont68
  %204 = load %struct.Options** %options.addr, align 8
  %no_host_authentication_for_localhost = getelementptr inbounds %struct.Options* %204, i32 0, i32 71
  store i32 %201, i32* %no_host_authentication_for_localhost, align 4
  %205 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %206 = extractvalue { i32, i1 } %205, 0
  %207 = extractvalue { i32, i1 } %205, 1
  %208 = xor i1 %207, true
  br i1 %208, label %cont72, label %trap71

trap71:                                           ; preds = %cont70
  call void @llvm.trap() #3
  unreachable

cont72:                                           ; preds = %cont70
  %209 = load %struct.Options** %options.addr, align 8
  %identities_only = getelementptr inbounds %struct.Options* %209, i32 0, i32 72
  store i32 %206, i32* %identities_only, align 4
  %210 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %211 = extractvalue { i32, i1 } %210, 0
  %212 = extractvalue { i32, i1 } %210, 1
  %213 = xor i1 %212, true
  br i1 %213, label %cont74, label %trap73

trap73:                                           ; preds = %cont72
  call void @llvm.trap() #3
  unreachable

cont74:                                           ; preds = %cont72
  %conv = sext i32 %211 to i64
  %214 = load %struct.Options** %options.addr, align 8
  %rekey_limit = getelementptr inbounds %struct.Options* %214, i32 0, i32 69
  store i64 %conv, i64* %rekey_limit, align 8
  %215 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %216 = extractvalue { i32, i1 } %215, 0
  %217 = extractvalue { i32, i1 } %215, 1
  %218 = xor i1 %217, true
  br i1 %218, label %cont76, label %trap75

trap75:                                           ; preds = %cont74
  call void @llvm.trap() #3
  unreachable

cont76:                                           ; preds = %cont74
  %219 = load %struct.Options** %options.addr, align 8
  %rekey_interval = getelementptr inbounds %struct.Options* %219, i32 0, i32 70
  store i32 %216, i32* %rekey_interval, align 4
  %220 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %221 = extractvalue { i32, i1 } %220, 0
  %222 = extractvalue { i32, i1 } %220, 1
  %223 = xor i1 %222, true
  br i1 %223, label %cont78, label %trap77

trap77:                                           ; preds = %cont76
  call void @llvm.trap() #3
  unreachable

cont78:                                           ; preds = %cont76
  %224 = load %struct.Options** %options.addr, align 8
  %verify_host_key_dns = getelementptr inbounds %struct.Options* %224, i32 0, i32 50
  store i32 %221, i32* %verify_host_key_dns, align 4
  %225 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %226 = extractvalue { i32, i1 } %225, 0
  %227 = extractvalue { i32, i1 } %225, 1
  %228 = xor i1 %227, true
  br i1 %228, label %cont80, label %trap79

trap79:                                           ; preds = %cont78
  call void @llvm.trap() #3
  unreachable

cont80:                                           ; preds = %cont78
  %229 = load %struct.Options** %options.addr, align 8
  %server_alive_interval = getelementptr inbounds %struct.Options* %229, i32 0, i32 73
  store i32 %226, i32* %server_alive_interval, align 4
  %230 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %231 = extractvalue { i32, i1 } %230, 0
  %232 = extractvalue { i32, i1 } %230, 1
  %233 = xor i1 %232, true
  br i1 %233, label %cont82, label %trap81

trap81:                                           ; preds = %cont80
  call void @llvm.trap() #3
  unreachable

cont82:                                           ; preds = %cont80
  %234 = load %struct.Options** %options.addr, align 8
  %server_alive_count_max = getelementptr inbounds %struct.Options* %234, i32 0, i32 74
  store i32 %231, i32* %server_alive_count_max, align 4
  %235 = load %struct.Options** %options.addr, align 8
  %num_send_env = getelementptr inbounds %struct.Options* %235, i32 0, i32 75
  store i32 0, i32* %num_send_env, align 4
  %236 = load %struct.Options** %options.addr, align 8
  %control_path = getelementptr inbounds %struct.Options* %236, i32 0, i32 77
  store i8* null, i8** %control_path, align 8
  %237 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %238 = extractvalue { i32, i1 } %237, 0
  %239 = extractvalue { i32, i1 } %237, 1
  %240 = xor i1 %239, true
  br i1 %240, label %cont84, label %trap83

trap83:                                           ; preds = %cont82
  call void @llvm.trap() #3
  unreachable

cont84:                                           ; preds = %cont82
  %241 = load %struct.Options** %options.addr, align 8
  %control_master = getelementptr inbounds %struct.Options* %241, i32 0, i32 78
  store i32 %238, i32* %control_master, align 4
  %242 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %243 = extractvalue { i32, i1 } %242, 0
  %244 = extractvalue { i32, i1 } %242, 1
  %245 = xor i1 %244, true
  br i1 %245, label %cont86, label %trap85

trap85:                                           ; preds = %cont84
  call void @llvm.trap() #3
  unreachable

cont86:                                           ; preds = %cont84
  %246 = load %struct.Options** %options.addr, align 8
  %control_persist = getelementptr inbounds %struct.Options* %246, i32 0, i32 79
  store i32 %243, i32* %control_persist, align 4
  %247 = load %struct.Options** %options.addr, align 8
  %control_persist_timeout = getelementptr inbounds %struct.Options* %247, i32 0, i32 80
  store i32 0, i32* %control_persist_timeout, align 4
  %248 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %249 = extractvalue { i32, i1 } %248, 0
  %250 = extractvalue { i32, i1 } %248, 1
  %251 = xor i1 %250, true
  br i1 %251, label %cont88, label %trap87

trap87:                                           ; preds = %cont86
  call void @llvm.trap() #3
  unreachable

cont88:                                           ; preds = %cont86
  %252 = load %struct.Options** %options.addr, align 8
  %hash_known_hosts = getelementptr inbounds %struct.Options* %252, i32 0, i32 81
  store i32 %249, i32* %hash_known_hosts, align 4
  %253 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %254 = extractvalue { i32, i1 } %253, 0
  %255 = extractvalue { i32, i1 } %253, 1
  %256 = xor i1 %255, true
  br i1 %256, label %cont90, label %trap89

trap89:                                           ; preds = %cont88
  call void @llvm.trap() #3
  unreachable

cont90:                                           ; preds = %cont88
  %257 = load %struct.Options** %options.addr, align 8
  %tun_open = getelementptr inbounds %struct.Options* %257, i32 0, i32 82
  store i32 %254, i32* %tun_open, align 4
  %258 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %259 = extractvalue { i32, i1 } %258, 0
  %260 = extractvalue { i32, i1 } %258, 1
  %261 = xor i1 %260, true
  br i1 %261, label %cont92, label %trap91

trap91:                                           ; preds = %cont90
  call void @llvm.trap() #3
  unreachable

cont92:                                           ; preds = %cont90
  %262 = load %struct.Options** %options.addr, align 8
  %tun_local = getelementptr inbounds %struct.Options* %262, i32 0, i32 83
  store i32 %259, i32* %tun_local, align 4
  %263 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %264 = extractvalue { i32, i1 } %263, 0
  %265 = extractvalue { i32, i1 } %263, 1
  %266 = xor i1 %265, true
  br i1 %266, label %cont94, label %trap93

trap93:                                           ; preds = %cont92
  call void @llvm.trap() #3
  unreachable

cont94:                                           ; preds = %cont92
  %267 = load %struct.Options** %options.addr, align 8
  %tun_remote = getelementptr inbounds %struct.Options* %267, i32 0, i32 84
  store i32 %264, i32* %tun_remote, align 4
  %268 = load %struct.Options** %options.addr, align 8
  %local_command = getelementptr inbounds %struct.Options* %268, i32 0, i32 85
  store i8* null, i8** %local_command, align 8
  %269 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %270 = extractvalue { i32, i1 } %269, 0
  %271 = extractvalue { i32, i1 } %269, 1
  %272 = xor i1 %271, true
  br i1 %272, label %cont96, label %trap95

trap95:                                           ; preds = %cont94
  call void @llvm.trap() #3
  unreachable

cont96:                                           ; preds = %cont94
  %273 = load %struct.Options** %options.addr, align 8
  %permit_local_command = getelementptr inbounds %struct.Options* %273, i32 0, i32 86
  store i32 %270, i32* %permit_local_command, align 4
  %274 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %275 = extractvalue { i32, i1 } %274, 0
  %276 = extractvalue { i32, i1 } %274, 1
  %277 = xor i1 %276, true
  br i1 %277, label %cont98, label %trap97

trap97:                                           ; preds = %cont96
  call void @llvm.trap() #3
  unreachable

cont98:                                           ; preds = %cont96
  %278 = load %struct.Options** %options.addr, align 8
  %add_keys_to_agent = getelementptr inbounds %struct.Options* %278, i32 0, i32 59
  store i32 %275, i32* %add_keys_to_agent, align 4
  %279 = load %struct.Options** %options.addr, align 8
  %identity_agent = getelementptr inbounds %struct.Options* %279, i32 0, i32 60
  store i8* null, i8** %identity_agent, align 8
  %280 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %281 = extractvalue { i32, i1 } %280, 0
  %282 = extractvalue { i32, i1 } %280, 1
  %283 = xor i1 %282, true
  br i1 %283, label %cont100, label %trap99

trap99:                                           ; preds = %cont98
  call void @llvm.trap() #3
  unreachable

cont100:                                          ; preds = %cont98
  %284 = load %struct.Options** %options.addr, align 8
  %visual_host_key = getelementptr inbounds %struct.Options* %284, i32 0, i32 87
  store i32 %281, i32* %visual_host_key, align 4
  %285 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %286 = extractvalue { i32, i1 } %285, 0
  %287 = extractvalue { i32, i1 } %285, 1
  %288 = xor i1 %287, true
  br i1 %288, label %cont102, label %trap101

trap101:                                          ; preds = %cont100
  call void @llvm.trap() #3
  unreachable

cont102:                                          ; preds = %cont100
  %289 = load %struct.Options** %options.addr, align 8
  %ip_qos_interactive = getelementptr inbounds %struct.Options* %289, i32 0, i32 24
  store i32 %286, i32* %ip_qos_interactive, align 4
  %290 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %291 = extractvalue { i32, i1 } %290, 0
  %292 = extractvalue { i32, i1 } %290, 1
  %293 = xor i1 %292, true
  br i1 %293, label %cont104, label %trap103

trap103:                                          ; preds = %cont102
  call void @llvm.trap() #3
  unreachable

cont104:                                          ; preds = %cont102
  %294 = load %struct.Options** %options.addr, align 8
  %ip_qos_bulk = getelementptr inbounds %struct.Options* %294, i32 0, i32 25
  store i32 %291, i32* %ip_qos_bulk, align 4
  %295 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %296 = extractvalue { i32, i1 } %295, 0
  %297 = extractvalue { i32, i1 } %295, 1
  %298 = xor i1 %297, true
  br i1 %298, label %cont106, label %trap105

trap105:                                          ; preds = %cont104
  call void @llvm.trap() #3
  unreachable

cont106:                                          ; preds = %cont104
  %299 = load %struct.Options** %options.addr, align 8
  %request_tty = getelementptr inbounds %struct.Options* %299, i32 0, i32 88
  store i32 %296, i32* %request_tty, align 4
  %300 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %301 = extractvalue { i32, i1 } %300, 0
  %302 = extractvalue { i32, i1 } %300, 1
  %303 = xor i1 %302, true
  br i1 %303, label %cont108, label %trap107

trap107:                                          ; preds = %cont106
  call void @llvm.trap() #3
  unreachable

cont108:                                          ; preds = %cont106
  %304 = load %struct.Options** %options.addr, align 8
  %proxy_use_fdpass = getelementptr inbounds %struct.Options* %304, i32 0, i32 89
  store i32 %301, i32* %proxy_use_fdpass, align 4
  %305 = load %struct.Options** %options.addr, align 8
  %ignored_unknown = getelementptr inbounds %struct.Options* %305, i32 0, i32 106
  store i8* null, i8** %ignored_unknown, align 8
  %306 = load %struct.Options** %options.addr, align 8
  %num_canonical_domains = getelementptr inbounds %struct.Options* %306, i32 0, i32 90
  store i32 0, i32* %num_canonical_domains, align 4
  %307 = load %struct.Options** %options.addr, align 8
  %num_permitted_cnames = getelementptr inbounds %struct.Options* %307, i32 0, i32 95
  store i32 0, i32* %num_permitted_cnames, align 4
  %308 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %309 = extractvalue { i32, i1 } %308, 0
  %310 = extractvalue { i32, i1 } %308, 1
  %311 = xor i1 %310, true
  br i1 %311, label %cont110, label %trap109

trap109:                                          ; preds = %cont108
  call void @llvm.trap() #3
  unreachable

cont110:                                          ; preds = %cont108
  %312 = load %struct.Options** %options.addr, align 8
  %canonicalize_max_dots = getelementptr inbounds %struct.Options* %312, i32 0, i32 93
  store i32 %309, i32* %canonicalize_max_dots, align 4
  %313 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %314 = extractvalue { i32, i1 } %313, 0
  %315 = extractvalue { i32, i1 } %313, 1
  %316 = xor i1 %315, true
  br i1 %316, label %cont112, label %trap111

trap111:                                          ; preds = %cont110
  call void @llvm.trap() #3
  unreachable

cont112:                                          ; preds = %cont110
  %317 = load %struct.Options** %options.addr, align 8
  %canonicalize_fallback_local = getelementptr inbounds %struct.Options* %317, i32 0, i32 94
  store i32 %314, i32* %canonicalize_fallback_local, align 4
  %318 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %319 = extractvalue { i32, i1 } %318, 0
  %320 = extractvalue { i32, i1 } %318, 1
  %321 = xor i1 %320, true
  br i1 %321, label %cont114, label %trap113

trap113:                                          ; preds = %cont112
  call void @llvm.trap() #3
  unreachable

cont114:                                          ; preds = %cont112
  %322 = load %struct.Options** %options.addr, align 8
  %canonicalize_hostname = getelementptr inbounds %struct.Options* %322, i32 0, i32 92
  store i32 %319, i32* %canonicalize_hostname, align 4
  %323 = load %struct.Options** %options.addr, align 8
  %revoked_host_keys = getelementptr inbounds %struct.Options* %323, i32 0, i32 97
  store i8* null, i8** %revoked_host_keys, align 8
  %324 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %325 = extractvalue { i32, i1 } %324, 0
  %326 = extractvalue { i32, i1 } %324, 1
  %327 = xor i1 %326, true
  br i1 %327, label %cont116, label %trap115

trap115:                                          ; preds = %cont114
  call void @llvm.trap() #3
  unreachable

cont116:                                          ; preds = %cont114
  %328 = load %struct.Options** %options.addr, align 8
  %fingerprint_hash = getelementptr inbounds %struct.Options* %328, i32 0, i32 98
  store i32 %325, i32* %fingerprint_hash, align 4
  %329 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %330 = extractvalue { i32, i1 } %329, 0
  %331 = extractvalue { i32, i1 } %329, 1
  %332 = xor i1 %331, true
  br i1 %332, label %cont118, label %trap117

trap117:                                          ; preds = %cont116
  call void @llvm.trap() #3
  unreachable

cont118:                                          ; preds = %cont116
  %333 = load %struct.Options** %options.addr, align 8
  %update_hostkeys = getelementptr inbounds %struct.Options* %333, i32 0, i32 99
  store i32 %330, i32* %update_hostkeys, align 4
  %334 = load %struct.Options** %options.addr, align 8
  %hostbased_key_types = getelementptr inbounds %struct.Options* %334, i32 0, i32 100
  store i8* null, i8** %hostbased_key_types, align 8
  %335 = load %struct.Options** %options.addr, align 8
  %pubkey_key_types = getelementptr inbounds %struct.Options* %335, i32 0, i32 101
  store i8* null, i8** %pubkey_key_types, align 8
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define void @fill_default_options_for_canonicalization(%struct.Options* %options) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  %0 = load %struct.Options** %options.addr, align 8
  %canonicalize_max_dots = getelementptr inbounds %struct.Options* %0, i32 0, i32 93
  %1 = load i32* %canonicalize_max_dots, align 4
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %6 = load %struct.Options** %options.addr, align 8
  %canonicalize_max_dots1 = getelementptr inbounds %struct.Options* %6, i32 0, i32 93
  store i32 1, i32* %canonicalize_max_dots1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cont
  %7 = load %struct.Options** %options.addr, align 8
  %canonicalize_fallback_local = getelementptr inbounds %struct.Options* %7, i32 0, i32 94
  %8 = load i32* %canonicalize_fallback_local, align 4
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %10 = extractvalue { i32, i1 } %9, 0
  %11 = extractvalue { i32, i1 } %9, 1
  %12 = xor i1 %11, true
  br i1 %12, label %cont3, label %trap2

trap2:                                            ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont3:                                            ; preds = %if.end
  %cmp4 = icmp eq i32 %8, %10
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %cont3
  %13 = load %struct.Options** %options.addr, align 8
  %canonicalize_fallback_local6 = getelementptr inbounds %struct.Options* %13, i32 0, i32 94
  store i32 1, i32* %canonicalize_fallback_local6, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %cont3
  %14 = load %struct.Options** %options.addr, align 8
  %canonicalize_hostname = getelementptr inbounds %struct.Options* %14, i32 0, i32 92
  %15 = load i32* %canonicalize_hostname, align 4
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont9, label %trap8

trap8:                                            ; preds = %if.end7
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %if.end7
  %cmp10 = icmp eq i32 %15, %17
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %cont9
  %20 = load %struct.Options** %options.addr, align 8
  %canonicalize_hostname12 = getelementptr inbounds %struct.Options* %20, i32 0, i32 92
  store i32 0, i32* %canonicalize_hostname12, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %cont9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define void @fill_default_options(%struct.Options* %options) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  %0 = load %struct.Options** %options.addr, align 8
  %forward_agent = getelementptr inbounds %struct.Options* %0, i32 0, i32 0
  %1 = load i32* %forward_agent, align 4
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %6 = load %struct.Options** %options.addr, align 8
  %forward_agent1 = getelementptr inbounds %struct.Options* %6, i32 0, i32 0
  store i32 0, i32* %forward_agent1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cont
  %7 = load %struct.Options** %options.addr, align 8
  %forward_x11 = getelementptr inbounds %struct.Options* %7, i32 0, i32 1
  %8 = load i32* %forward_x11, align 4
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %10 = extractvalue { i32, i1 } %9, 0
  %11 = extractvalue { i32, i1 } %9, 1
  %12 = xor i1 %11, true
  br i1 %12, label %cont3, label %trap2

trap2:                                            ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont3:                                            ; preds = %if.end
  %cmp4 = icmp eq i32 %8, %10
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %cont3
  %13 = load %struct.Options** %options.addr, align 8
  %forward_x116 = getelementptr inbounds %struct.Options* %13, i32 0, i32 1
  store i32 0, i32* %forward_x116, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %cont3
  %14 = load %struct.Options** %options.addr, align 8
  %forward_x11_trusted = getelementptr inbounds %struct.Options* %14, i32 0, i32 3
  %15 = load i32* %forward_x11_trusted, align 4
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont9, label %trap8

trap8:                                            ; preds = %if.end7
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %if.end7
  %cmp10 = icmp eq i32 %15, %17
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %cont9
  %20 = load %struct.Options** %options.addr, align 8
  %forward_x11_trusted12 = getelementptr inbounds %struct.Options* %20, i32 0, i32 3
  store i32 0, i32* %forward_x11_trusted12, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %cont9
  %21 = load %struct.Options** %options.addr, align 8
  %forward_x11_timeout = getelementptr inbounds %struct.Options* %21, i32 0, i32 2
  %22 = load i32* %forward_x11_timeout, align 4
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %24 = extractvalue { i32, i1 } %23, 0
  %25 = extractvalue { i32, i1 } %23, 1
  %26 = xor i1 %25, true
  br i1 %26, label %cont15, label %trap14

trap14:                                           ; preds = %if.end13
  call void @llvm.trap() #3
  unreachable

cont15:                                           ; preds = %if.end13
  %cmp16 = icmp eq i32 %22, %24
  br i1 %cmp16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %cont15
  %27 = load %struct.Options** %options.addr, align 8
  %forward_x11_timeout18 = getelementptr inbounds %struct.Options* %27, i32 0, i32 2
  store i32 1200, i32* %forward_x11_timeout18, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %cont15
  %28 = load %struct.Options** %options.addr, align 8
  %exit_on_forward_failure = getelementptr inbounds %struct.Options* %28, i32 0, i32 4
  %29 = load i32* %exit_on_forward_failure, align 4
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont21, label %trap20

trap20:                                           ; preds = %if.end19
  call void @llvm.trap() #3
  unreachable

cont21:                                           ; preds = %if.end19
  %cmp22 = icmp eq i32 %29, %31
  br i1 %cmp22, label %if.then23, label %if.end26

if.then23:                                        ; preds = %cont21
  %34 = load %struct.Options** %options.addr, align 8
  %stdio_forward_host = getelementptr inbounds %struct.Options* %34, i32 0, i32 66
  %35 = load i8** %stdio_forward_host, align 8
  %cmp24 = icmp ne i8* %35, null
  %cond = select i1 %cmp24, i32 1, i32 0
  %36 = load %struct.Options** %options.addr, align 8
  %exit_on_forward_failure25 = getelementptr inbounds %struct.Options* %36, i32 0, i32 4
  store i32 %cond, i32* %exit_on_forward_failure25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %cont21
  %37 = load %struct.Options** %options.addr, align 8
  %clear_forwardings = getelementptr inbounds %struct.Options* %37, i32 0, i32 65
  %38 = load i32* %clear_forwardings, align 4
  %39 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont28, label %trap27

trap27:                                           ; preds = %if.end26
  call void @llvm.trap() #3
  unreachable

cont28:                                           ; preds = %if.end26
  %cmp29 = icmp eq i32 %38, %40
  br i1 %cmp29, label %if.then30, label %if.end35

if.then30:                                        ; preds = %cont28
  %43 = load %struct.Options** %options.addr, align 8
  %stdio_forward_host31 = getelementptr inbounds %struct.Options* %43, i32 0, i32 66
  %44 = load i8** %stdio_forward_host31, align 8
  %cmp32 = icmp ne i8* %44, null
  %cond33 = select i1 %cmp32, i32 1, i32 0
  %45 = load %struct.Options** %options.addr, align 8
  %clear_forwardings34 = getelementptr inbounds %struct.Options* %45, i32 0, i32 65
  store i32 %cond33, i32* %clear_forwardings34, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %cont28
  %46 = load %struct.Options** %options.addr, align 8
  %clear_forwardings36 = getelementptr inbounds %struct.Options* %46, i32 0, i32 65
  %47 = load i32* %clear_forwardings36, align 4
  %cmp37 = icmp eq i32 %47, 1
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.end35
  %48 = load %struct.Options** %options.addr, align 8
  call void @clear_forwardings(%struct.Options* %48)
  br label %if.end39

if.end39:                                         ; preds = %if.then38, %if.end35
  %49 = load %struct.Options** %options.addr, align 8
  %xauth_location = getelementptr inbounds %struct.Options* %49, i32 0, i32 5
  %50 = load i8** %xauth_location, align 8
  %cmp40 = icmp eq i8* %50, null
  br i1 %cmp40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.end39
  %51 = load %struct.Options** %options.addr, align 8
  %xauth_location42 = getelementptr inbounds %struct.Options* %51, i32 0, i32 5
  store i8* getelementptr inbounds ([15 x i8]* @.str8202, i32 0, i32 0), i8** %xauth_location42, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end39
  %52 = load %struct.Options** %options.addr, align 8
  %fwd_opts = getelementptr inbounds %struct.Options* %52, i32 0, i32 6
  %gateway_ports = getelementptr inbounds %struct.ForwardOptions* %fwd_opts, i32 0, i32 0
  %53 = load i32* %gateway_ports, align 4
  %54 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %55 = extractvalue { i32, i1 } %54, 0
  %56 = extractvalue { i32, i1 } %54, 1
  %57 = xor i1 %56, true
  br i1 %57, label %cont45, label %trap44

trap44:                                           ; preds = %if.end43
  call void @llvm.trap() #3
  unreachable

cont45:                                           ; preds = %if.end43
  %cmp46 = icmp eq i32 %53, %55
  br i1 %cmp46, label %if.then47, label %if.end50

if.then47:                                        ; preds = %cont45
  %58 = load %struct.Options** %options.addr, align 8
  %fwd_opts48 = getelementptr inbounds %struct.Options* %58, i32 0, i32 6
  %gateway_ports49 = getelementptr inbounds %struct.ForwardOptions* %fwd_opts48, i32 0, i32 0
  store i32 0, i32* %gateway_ports49, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.then47, %cont45
  %59 = load %struct.Options** %options.addr, align 8
  %fwd_opts51 = getelementptr inbounds %struct.Options* %59, i32 0, i32 6
  %streamlocal_bind_mask = getelementptr inbounds %struct.ForwardOptions* %fwd_opts51, i32 0, i32 1
  %60 = load i32* %streamlocal_bind_mask, align 4
  %61 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %62 = extractvalue { i32, i1 } %61, 0
  %63 = extractvalue { i32, i1 } %61, 1
  %64 = xor i1 %63, true
  br i1 %64, label %cont53, label %trap52

trap52:                                           ; preds = %if.end50
  call void @llvm.trap() #3
  unreachable

cont53:                                           ; preds = %if.end50
  %cmp54 = icmp eq i32 %60, %62
  br i1 %cmp54, label %if.then55, label %if.end58

if.then55:                                        ; preds = %cont53
  %65 = load %struct.Options** %options.addr, align 8
  %fwd_opts56 = getelementptr inbounds %struct.Options* %65, i32 0, i32 6
  %streamlocal_bind_mask57 = getelementptr inbounds %struct.ForwardOptions* %fwd_opts56, i32 0, i32 1
  store i32 127, i32* %streamlocal_bind_mask57, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %cont53
  %66 = load %struct.Options** %options.addr, align 8
  %fwd_opts59 = getelementptr inbounds %struct.Options* %66, i32 0, i32 6
  %streamlocal_bind_unlink = getelementptr inbounds %struct.ForwardOptions* %fwd_opts59, i32 0, i32 2
  %67 = load i32* %streamlocal_bind_unlink, align 4
  %68 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %69 = extractvalue { i32, i1 } %68, 0
  %70 = extractvalue { i32, i1 } %68, 1
  %71 = xor i1 %70, true
  br i1 %71, label %cont61, label %trap60

trap60:                                           ; preds = %if.end58
  call void @llvm.trap() #3
  unreachable

cont61:                                           ; preds = %if.end58
  %cmp62 = icmp eq i32 %67, %69
  br i1 %cmp62, label %if.then63, label %if.end66

if.then63:                                        ; preds = %cont61
  %72 = load %struct.Options** %options.addr, align 8
  %fwd_opts64 = getelementptr inbounds %struct.Options* %72, i32 0, i32 6
  %streamlocal_bind_unlink65 = getelementptr inbounds %struct.ForwardOptions* %fwd_opts64, i32 0, i32 2
  store i32 0, i32* %streamlocal_bind_unlink65, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then63, %cont61
  %73 = load %struct.Options** %options.addr, align 8
  %use_privileged_port = getelementptr inbounds %struct.Options* %73, i32 0, i32 7
  %74 = load i32* %use_privileged_port, align 4
  %75 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %76 = extractvalue { i32, i1 } %75, 0
  %77 = extractvalue { i32, i1 } %75, 1
  %78 = xor i1 %77, true
  br i1 %78, label %cont68, label %trap67

trap67:                                           ; preds = %if.end66
  call void @llvm.trap() #3
  unreachable

cont68:                                           ; preds = %if.end66
  %cmp69 = icmp eq i32 %74, %76
  br i1 %cmp69, label %if.then70, label %if.end72

if.then70:                                        ; preds = %cont68
  %79 = load %struct.Options** %options.addr, align 8
  %use_privileged_port71 = getelementptr inbounds %struct.Options* %79, i32 0, i32 7
  store i32 0, i32* %use_privileged_port71, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %cont68
  %80 = load %struct.Options** %options.addr, align 8
  %rsa_authentication = getelementptr inbounds %struct.Options* %80, i32 0, i32 9
  %81 = load i32* %rsa_authentication, align 4
  %82 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %83 = extractvalue { i32, i1 } %82, 0
  %84 = extractvalue { i32, i1 } %82, 1
  %85 = xor i1 %84, true
  br i1 %85, label %cont74, label %trap73

trap73:                                           ; preds = %if.end72
  call void @llvm.trap() #3
  unreachable

cont74:                                           ; preds = %if.end72
  %cmp75 = icmp eq i32 %81, %83
  br i1 %cmp75, label %if.then76, label %if.end78

if.then76:                                        ; preds = %cont74
  %86 = load %struct.Options** %options.addr, align 8
  %rsa_authentication77 = getelementptr inbounds %struct.Options* %86, i32 0, i32 9
  store i32 1, i32* %rsa_authentication77, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.then76, %cont74
  %87 = load %struct.Options** %options.addr, align 8
  %pubkey_authentication = getelementptr inbounds %struct.Options* %87, i32 0, i32 10
  %88 = load i32* %pubkey_authentication, align 4
  %89 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %90 = extractvalue { i32, i1 } %89, 0
  %91 = extractvalue { i32, i1 } %89, 1
  %92 = xor i1 %91, true
  br i1 %92, label %cont80, label %trap79

trap79:                                           ; preds = %if.end78
  call void @llvm.trap() #3
  unreachable

cont80:                                           ; preds = %if.end78
  %cmp81 = icmp eq i32 %88, %90
  br i1 %cmp81, label %if.then82, label %if.end84

if.then82:                                        ; preds = %cont80
  %93 = load %struct.Options** %options.addr, align 8
  %pubkey_authentication83 = getelementptr inbounds %struct.Options* %93, i32 0, i32 10
  store i32 1, i32* %pubkey_authentication83, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then82, %cont80
  %94 = load %struct.Options** %options.addr, align 8
  %challenge_response_authentication = getelementptr inbounds %struct.Options* %94, i32 0, i32 12
  %95 = load i32* %challenge_response_authentication, align 4
  %96 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %97 = extractvalue { i32, i1 } %96, 0
  %98 = extractvalue { i32, i1 } %96, 1
  %99 = xor i1 %98, true
  br i1 %99, label %cont86, label %trap85

trap85:                                           ; preds = %if.end84
  call void @llvm.trap() #3
  unreachable

cont86:                                           ; preds = %if.end84
  %cmp87 = icmp eq i32 %95, %97
  br i1 %cmp87, label %if.then88, label %if.end90

if.then88:                                        ; preds = %cont86
  %100 = load %struct.Options** %options.addr, align 8
  %challenge_response_authentication89 = getelementptr inbounds %struct.Options* %100, i32 0, i32 12
  store i32 1, i32* %challenge_response_authentication89, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.then88, %cont86
  %101 = load %struct.Options** %options.addr, align 8
  %gss_authentication = getelementptr inbounds %struct.Options* %101, i32 0, i32 13
  %102 = load i32* %gss_authentication, align 4
  %103 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %104 = extractvalue { i32, i1 } %103, 0
  %105 = extractvalue { i32, i1 } %103, 1
  %106 = xor i1 %105, true
  br i1 %106, label %cont92, label %trap91

trap91:                                           ; preds = %if.end90
  call void @llvm.trap() #3
  unreachable

cont92:                                           ; preds = %if.end90
  %cmp93 = icmp eq i32 %102, %104
  br i1 %cmp93, label %if.then94, label %if.end96

if.then94:                                        ; preds = %cont92
  %107 = load %struct.Options** %options.addr, align 8
  %gss_authentication95 = getelementptr inbounds %struct.Options* %107, i32 0, i32 13
  store i32 0, i32* %gss_authentication95, align 4
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %cont92
  %108 = load %struct.Options** %options.addr, align 8
  %gss_deleg_creds = getelementptr inbounds %struct.Options* %108, i32 0, i32 14
  %109 = load i32* %gss_deleg_creds, align 4
  %110 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %111 = extractvalue { i32, i1 } %110, 0
  %112 = extractvalue { i32, i1 } %110, 1
  %113 = xor i1 %112, true
  br i1 %113, label %cont98, label %trap97

trap97:                                           ; preds = %if.end96
  call void @llvm.trap() #3
  unreachable

cont98:                                           ; preds = %if.end96
  %cmp99 = icmp eq i32 %109, %111
  br i1 %cmp99, label %if.then100, label %if.end102

if.then100:                                       ; preds = %cont98
  %114 = load %struct.Options** %options.addr, align 8
  %gss_deleg_creds101 = getelementptr inbounds %struct.Options* %114, i32 0, i32 14
  store i32 0, i32* %gss_deleg_creds101, align 4
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %cont98
  %115 = load %struct.Options** %options.addr, align 8
  %password_authentication = getelementptr inbounds %struct.Options* %115, i32 0, i32 15
  %116 = load i32* %password_authentication, align 4
  %117 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %118 = extractvalue { i32, i1 } %117, 0
  %119 = extractvalue { i32, i1 } %117, 1
  %120 = xor i1 %119, true
  br i1 %120, label %cont104, label %trap103

trap103:                                          ; preds = %if.end102
  call void @llvm.trap() #3
  unreachable

cont104:                                          ; preds = %if.end102
  %cmp105 = icmp eq i32 %116, %118
  br i1 %cmp105, label %if.then106, label %if.end108

if.then106:                                       ; preds = %cont104
  %121 = load %struct.Options** %options.addr, align 8
  %password_authentication107 = getelementptr inbounds %struct.Options* %121, i32 0, i32 15
  store i32 1, i32* %password_authentication107, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then106, %cont104
  %122 = load %struct.Options** %options.addr, align 8
  %kbd_interactive_authentication = getelementptr inbounds %struct.Options* %122, i32 0, i32 16
  %123 = load i32* %kbd_interactive_authentication, align 4
  %124 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %125 = extractvalue { i32, i1 } %124, 0
  %126 = extractvalue { i32, i1 } %124, 1
  %127 = xor i1 %126, true
  br i1 %127, label %cont110, label %trap109

trap109:                                          ; preds = %if.end108
  call void @llvm.trap() #3
  unreachable

cont110:                                          ; preds = %if.end108
  %cmp111 = icmp eq i32 %123, %125
  br i1 %cmp111, label %if.then112, label %if.end114

if.then112:                                       ; preds = %cont110
  %128 = load %struct.Options** %options.addr, align 8
  %kbd_interactive_authentication113 = getelementptr inbounds %struct.Options* %128, i32 0, i32 16
  store i32 1, i32* %kbd_interactive_authentication113, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %cont110
  %129 = load %struct.Options** %options.addr, align 8
  %rhosts_rsa_authentication = getelementptr inbounds %struct.Options* %129, i32 0, i32 8
  %130 = load i32* %rhosts_rsa_authentication, align 4
  %131 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %132 = extractvalue { i32, i1 } %131, 0
  %133 = extractvalue { i32, i1 } %131, 1
  %134 = xor i1 %133, true
  br i1 %134, label %cont116, label %trap115

trap115:                                          ; preds = %if.end114
  call void @llvm.trap() #3
  unreachable

cont116:                                          ; preds = %if.end114
  %cmp117 = icmp eq i32 %130, %132
  br i1 %cmp117, label %if.then118, label %if.end120

if.then118:                                       ; preds = %cont116
  %135 = load %struct.Options** %options.addr, align 8
  %rhosts_rsa_authentication119 = getelementptr inbounds %struct.Options* %135, i32 0, i32 8
  store i32 0, i32* %rhosts_rsa_authentication119, align 4
  br label %if.end120

if.end120:                                        ; preds = %if.then118, %cont116
  %136 = load %struct.Options** %options.addr, align 8
  %hostbased_authentication = getelementptr inbounds %struct.Options* %136, i32 0, i32 11
  %137 = load i32* %hostbased_authentication, align 4
  %138 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %139 = extractvalue { i32, i1 } %138, 0
  %140 = extractvalue { i32, i1 } %138, 1
  %141 = xor i1 %140, true
  br i1 %141, label %cont122, label %trap121

trap121:                                          ; preds = %if.end120
  call void @llvm.trap() #3
  unreachable

cont122:                                          ; preds = %if.end120
  %cmp123 = icmp eq i32 %137, %139
  br i1 %cmp123, label %if.then124, label %if.end126

if.then124:                                       ; preds = %cont122
  %142 = load %struct.Options** %options.addr, align 8
  %hostbased_authentication125 = getelementptr inbounds %struct.Options* %142, i32 0, i32 11
  store i32 0, i32* %hostbased_authentication125, align 4
  br label %if.end126

if.end126:                                        ; preds = %if.then124, %cont122
  %143 = load %struct.Options** %options.addr, align 8
  %batch_mode = getelementptr inbounds %struct.Options* %143, i32 0, i32 18
  %144 = load i32* %batch_mode, align 4
  %145 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %146 = extractvalue { i32, i1 } %145, 0
  %147 = extractvalue { i32, i1 } %145, 1
  %148 = xor i1 %147, true
  br i1 %148, label %cont128, label %trap127

trap127:                                          ; preds = %if.end126
  call void @llvm.trap() #3
  unreachable

cont128:                                          ; preds = %if.end126
  %cmp129 = icmp eq i32 %144, %146
  br i1 %cmp129, label %if.then130, label %if.end132

if.then130:                                       ; preds = %cont128
  %149 = load %struct.Options** %options.addr, align 8
  %batch_mode131 = getelementptr inbounds %struct.Options* %149, i32 0, i32 18
  store i32 0, i32* %batch_mode131, align 4
  br label %if.end132

if.end132:                                        ; preds = %if.then130, %cont128
  %150 = load %struct.Options** %options.addr, align 8
  %check_host_ip = getelementptr inbounds %struct.Options* %150, i32 0, i32 19
  %151 = load i32* %check_host_ip, align 4
  %152 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %153 = extractvalue { i32, i1 } %152, 0
  %154 = extractvalue { i32, i1 } %152, 1
  %155 = xor i1 %154, true
  br i1 %155, label %cont134, label %trap133

trap133:                                          ; preds = %if.end132
  call void @llvm.trap() #3
  unreachable

cont134:                                          ; preds = %if.end132
  %cmp135 = icmp eq i32 %151, %153
  br i1 %cmp135, label %if.then136, label %if.end138

if.then136:                                       ; preds = %cont134
  %156 = load %struct.Options** %options.addr, align 8
  %check_host_ip137 = getelementptr inbounds %struct.Options* %156, i32 0, i32 19
  store i32 1, i32* %check_host_ip137, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then136, %cont134
  %157 = load %struct.Options** %options.addr, align 8
  %strict_host_key_checking = getelementptr inbounds %struct.Options* %157, i32 0, i32 20
  %158 = load i32* %strict_host_key_checking, align 4
  %159 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %160 = extractvalue { i32, i1 } %159, 0
  %161 = extractvalue { i32, i1 } %159, 1
  %162 = xor i1 %161, true
  br i1 %162, label %cont140, label %trap139

trap139:                                          ; preds = %if.end138
  call void @llvm.trap() #3
  unreachable

cont140:                                          ; preds = %if.end138
  %cmp141 = icmp eq i32 %158, %160
  br i1 %cmp141, label %if.then142, label %if.end144

if.then142:                                       ; preds = %cont140
  %163 = load %struct.Options** %options.addr, align 8
  %strict_host_key_checking143 = getelementptr inbounds %struct.Options* %163, i32 0, i32 20
  store i32 2, i32* %strict_host_key_checking143, align 4
  br label %if.end144

if.end144:                                        ; preds = %if.then142, %cont140
  %164 = load %struct.Options** %options.addr, align 8
  %compression = getelementptr inbounds %struct.Options* %164, i32 0, i32 21
  %165 = load i32* %compression, align 4
  %166 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %167 = extractvalue { i32, i1 } %166, 0
  %168 = extractvalue { i32, i1 } %166, 1
  %169 = xor i1 %168, true
  br i1 %169, label %cont146, label %trap145

trap145:                                          ; preds = %if.end144
  call void @llvm.trap() #3
  unreachable

cont146:                                          ; preds = %if.end144
  %cmp147 = icmp eq i32 %165, %167
  br i1 %cmp147, label %if.then148, label %if.end150

if.then148:                                       ; preds = %cont146
  %170 = load %struct.Options** %options.addr, align 8
  %compression149 = getelementptr inbounds %struct.Options* %170, i32 0, i32 21
  store i32 0, i32* %compression149, align 4
  br label %if.end150

if.end150:                                        ; preds = %if.then148, %cont146
  %171 = load %struct.Options** %options.addr, align 8
  %tcp_keep_alive = getelementptr inbounds %struct.Options* %171, i32 0, i32 23
  %172 = load i32* %tcp_keep_alive, align 4
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %174 = extractvalue { i32, i1 } %173, 0
  %175 = extractvalue { i32, i1 } %173, 1
  %176 = xor i1 %175, true
  br i1 %176, label %cont152, label %trap151

trap151:                                          ; preds = %if.end150
  call void @llvm.trap() #3
  unreachable

cont152:                                          ; preds = %if.end150
  %cmp153 = icmp eq i32 %172, %174
  br i1 %cmp153, label %if.then154, label %if.end156

if.then154:                                       ; preds = %cont152
  %177 = load %struct.Options** %options.addr, align 8
  %tcp_keep_alive155 = getelementptr inbounds %struct.Options* %177, i32 0, i32 23
  store i32 1, i32* %tcp_keep_alive155, align 4
  br label %if.end156

if.end156:                                        ; preds = %if.then154, %cont152
  %178 = load %struct.Options** %options.addr, align 8
  %compression_level = getelementptr inbounds %struct.Options* %178, i32 0, i32 22
  %179 = load i32* %compression_level, align 4
  %180 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %181 = extractvalue { i32, i1 } %180, 0
  %182 = extractvalue { i32, i1 } %180, 1
  %183 = xor i1 %182, true
  br i1 %183, label %cont158, label %trap157

trap157:                                          ; preds = %if.end156
  call void @llvm.trap() #3
  unreachable

cont158:                                          ; preds = %if.end156
  %cmp159 = icmp eq i32 %179, %181
  br i1 %cmp159, label %if.then160, label %if.end162

if.then160:                                       ; preds = %cont158
  %184 = load %struct.Options** %options.addr, align 8
  %compression_level161 = getelementptr inbounds %struct.Options* %184, i32 0, i32 22
  store i32 6, i32* %compression_level161, align 4
  br label %if.end162

if.end162:                                        ; preds = %if.then160, %cont158
  %185 = load %struct.Options** %options.addr, align 8
  %port = getelementptr inbounds %struct.Options* %185, i32 0, i32 27
  %186 = load i32* %port, align 4
  %187 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %188 = extractvalue { i32, i1 } %187, 0
  %189 = extractvalue { i32, i1 } %187, 1
  %190 = xor i1 %189, true
  br i1 %190, label %cont164, label %trap163

trap163:                                          ; preds = %if.end162
  call void @llvm.trap() #3
  unreachable

cont164:                                          ; preds = %if.end162
  %cmp165 = icmp eq i32 %186, %188
  br i1 %cmp165, label %if.then166, label %if.end168

if.then166:                                       ; preds = %cont164
  %191 = load %struct.Options** %options.addr, align 8
  %port167 = getelementptr inbounds %struct.Options* %191, i32 0, i32 27
  store i32 0, i32* %port167, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %cont164
  %192 = load %struct.Options** %options.addr, align 8
  %address_family = getelementptr inbounds %struct.Options* %192, i32 0, i32 28
  %193 = load i32* %address_family, align 4
  %194 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %195 = extractvalue { i32, i1 } %194, 0
  %196 = extractvalue { i32, i1 } %194, 1
  %197 = xor i1 %196, true
  br i1 %197, label %cont170, label %trap169

trap169:                                          ; preds = %if.end168
  call void @llvm.trap() #3
  unreachable

cont170:                                          ; preds = %if.end168
  %cmp171 = icmp eq i32 %193, %195
  br i1 %cmp171, label %if.then172, label %if.end174

if.then172:                                       ; preds = %cont170
  %198 = load %struct.Options** %options.addr, align 8
  %address_family173 = getelementptr inbounds %struct.Options* %198, i32 0, i32 28
  store i32 0, i32* %address_family173, align 4
  br label %if.end174

if.end174:                                        ; preds = %if.then172, %cont170
  %199 = load %struct.Options** %options.addr, align 8
  %connection_attempts = getelementptr inbounds %struct.Options* %199, i32 0, i32 29
  %200 = load i32* %connection_attempts, align 4
  %201 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %202 = extractvalue { i32, i1 } %201, 0
  %203 = extractvalue { i32, i1 } %201, 1
  %204 = xor i1 %203, true
  br i1 %204, label %cont176, label %trap175

trap175:                                          ; preds = %if.end174
  call void @llvm.trap() #3
  unreachable

cont176:                                          ; preds = %if.end174
  %cmp177 = icmp eq i32 %200, %202
  br i1 %cmp177, label %if.then178, label %if.end180

if.then178:                                       ; preds = %cont176
  %205 = load %struct.Options** %options.addr, align 8
  %connection_attempts179 = getelementptr inbounds %struct.Options* %205, i32 0, i32 29
  store i32 1, i32* %connection_attempts179, align 4
  br label %if.end180

if.end180:                                        ; preds = %if.then178, %cont176
  %206 = load %struct.Options** %options.addr, align 8
  %number_of_password_prompts = getelementptr inbounds %struct.Options* %206, i32 0, i32 31
  %207 = load i32* %number_of_password_prompts, align 4
  %208 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %209 = extractvalue { i32, i1 } %208, 0
  %210 = extractvalue { i32, i1 } %208, 1
  %211 = xor i1 %210, true
  br i1 %211, label %cont182, label %trap181

trap181:                                          ; preds = %if.end180
  call void @llvm.trap() #3
  unreachable

cont182:                                          ; preds = %if.end180
  %cmp183 = icmp eq i32 %207, %209
  br i1 %cmp183, label %if.then184, label %if.end186

if.then184:                                       ; preds = %cont182
  %212 = load %struct.Options** %options.addr, align 8
  %number_of_password_prompts185 = getelementptr inbounds %struct.Options* %212, i32 0, i32 31
  store i32 3, i32* %number_of_password_prompts185, align 4
  br label %if.end186

if.end186:                                        ; preds = %if.then184, %cont182
  %213 = load %struct.Options** %options.addr, align 8
  %cipher = getelementptr inbounds %struct.Options* %213, i32 0, i32 32
  %214 = load i32* %cipher, align 4
  %215 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %216 = extractvalue { i32, i1 } %215, 0
  %217 = extractvalue { i32, i1 } %215, 1
  %218 = xor i1 %217, true
  br i1 %218, label %cont188, label %trap187

trap187:                                          ; preds = %if.end186
  call void @llvm.trap() #3
  unreachable

cont188:                                          ; preds = %if.end186
  %cmp189 = icmp eq i32 %214, %216
  br i1 %cmp189, label %if.then190, label %if.end194

if.then190:                                       ; preds = %cont188
  %219 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %220 = extractvalue { i32, i1 } %219, 0
  %221 = extractvalue { i32, i1 } %219, 1
  %222 = xor i1 %221, true
  br i1 %222, label %cont192, label %trap191

trap191:                                          ; preds = %if.then190
  call void @llvm.trap() #3
  unreachable

cont192:                                          ; preds = %if.then190
  %223 = load %struct.Options** %options.addr, align 8
  %cipher193 = getelementptr inbounds %struct.Options* %223, i32 0, i32 32
  store i32 %220, i32* %cipher193, align 4
  br label %if.end194

if.end194:                                        ; preds = %cont192, %cont188
  %224 = load %struct.Options** %options.addr, align 8
  %protocol = getelementptr inbounds %struct.Options* %224, i32 0, i32 37
  %225 = load i32* %protocol, align 4
  %cmp195 = icmp eq i32 %225, 0
  br i1 %cmp195, label %if.then196, label %if.end198

if.then196:                                       ; preds = %if.end194
  %226 = load %struct.Options** %options.addr, align 8
  %protocol197 = getelementptr inbounds %struct.Options* %226, i32 0, i32 37
  store i32 4, i32* %protocol197, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.then196, %if.end194
  %227 = load %struct.Options** %options.addr, align 8
  %add_keys_to_agent = getelementptr inbounds %struct.Options* %227, i32 0, i32 59
  %228 = load i32* %add_keys_to_agent, align 4
  %229 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %230 = extractvalue { i32, i1 } %229, 0
  %231 = extractvalue { i32, i1 } %229, 1
  %232 = xor i1 %231, true
  br i1 %232, label %cont200, label %trap199

trap199:                                          ; preds = %if.end198
  call void @llvm.trap() #3
  unreachable

cont200:                                          ; preds = %if.end198
  %cmp201 = icmp eq i32 %228, %230
  br i1 %cmp201, label %if.then202, label %if.end204

if.then202:                                       ; preds = %cont200
  %233 = load %struct.Options** %options.addr, align 8
  %add_keys_to_agent203 = getelementptr inbounds %struct.Options* %233, i32 0, i32 59
  store i32 0, i32* %add_keys_to_agent203, align 4
  br label %if.end204

if.end204:                                        ; preds = %if.then202, %cont200
  %234 = load %struct.Options** %options.addr, align 8
  %num_identity_files = getelementptr inbounds %struct.Options* %234, i32 0, i32 51
  %235 = load i32* %num_identity_files, align 4
  %cmp205 = icmp eq i32 %235, 0
  br i1 %cmp205, label %if.then206, label %if.end215

if.then206:                                       ; preds = %if.end204
  %236 = load %struct.Options** %options.addr, align 8
  %protocol207 = getelementptr inbounds %struct.Options* %236, i32 0, i32 37
  %237 = load i32* %protocol207, align 4
  %and = and i32 %237, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then208, label %if.end209

if.then208:                                       ; preds = %if.then206
  %238 = load %struct.Options** %options.addr, align 8
  call void @add_identity_file(%struct.Options* %238, i8* getelementptr inbounds ([3 x i8]* @.str9203, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str10204, i32 0, i32 0), i32 0)
  br label %if.end209

if.end209:                                        ; preds = %if.then208, %if.then206
  %239 = load %struct.Options** %options.addr, align 8
  %protocol210 = getelementptr inbounds %struct.Options* %239, i32 0, i32 37
  %240 = load i32* %protocol210, align 4
  %and211 = and i32 %240, 4
  %tobool212 = icmp ne i32 %and211, 0
  br i1 %tobool212, label %if.then213, label %if.end214

if.then213:                                       ; preds = %if.end209
  %241 = load %struct.Options** %options.addr, align 8
  call void @add_identity_file(%struct.Options* %241, i8* getelementptr inbounds ([3 x i8]* @.str9203, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str11205, i32 0, i32 0), i32 0)
  %242 = load %struct.Options** %options.addr, align 8
  call void @add_identity_file(%struct.Options* %242, i8* getelementptr inbounds ([3 x i8]* @.str9203, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str12206, i32 0, i32 0), i32 0)
  %243 = load %struct.Options** %options.addr, align 8
  call void @add_identity_file(%struct.Options* %243, i8* getelementptr inbounds ([3 x i8]* @.str9203, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str13207, i32 0, i32 0), i32 0)
  %244 = load %struct.Options** %options.addr, align 8
  call void @add_identity_file(%struct.Options* %244, i8* getelementptr inbounds ([3 x i8]* @.str9203, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str14208, i32 0, i32 0), i32 0)
  br label %if.end214

if.end214:                                        ; preds = %if.then213, %if.end209
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.end204
  %245 = load %struct.Options** %options.addr, align 8
  %escape_char = getelementptr inbounds %struct.Options* %245, i32 0, i32 42
  %246 = load i32* %escape_char, align 4
  %247 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %248 = extractvalue { i32, i1 } %247, 0
  %249 = extractvalue { i32, i1 } %247, 1
  %250 = xor i1 %249, true
  br i1 %250, label %cont217, label %trap216

trap216:                                          ; preds = %if.end215
  call void @llvm.trap() #3
  unreachable

cont217:                                          ; preds = %if.end215
  %cmp218 = icmp eq i32 %246, %248
  br i1 %cmp218, label %if.then219, label %if.end221

if.then219:                                       ; preds = %cont217
  %251 = load %struct.Options** %options.addr, align 8
  %escape_char220 = getelementptr inbounds %struct.Options* %251, i32 0, i32 42
  store i32 126, i32* %escape_char220, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then219, %cont217
  %252 = load %struct.Options** %options.addr, align 8
  %num_system_hostfiles = getelementptr inbounds %struct.Options* %252, i32 0, i32 43
  %253 = load i32* %num_system_hostfiles, align 4
  %cmp222 = icmp eq i32 %253, 0
  br i1 %cmp222, label %if.then223, label %if.end231

if.then223:                                       ; preds = %if.end221
  %call = call i8* @xstrdup(i8* getelementptr inbounds ([31 x i8]* @.str15209, i32 0, i32 0))
  %254 = load %struct.Options** %options.addr, align 8
  %num_system_hostfiles224 = getelementptr inbounds %struct.Options* %254, i32 0, i32 43
  %255 = load i32* %num_system_hostfiles224, align 4
  %inc = add i32 %255, 1
  store i32 %inc, i32* %num_system_hostfiles224, align 4
  %idxprom = zext i32 %255 to i64
  %256 = load %struct.Options** %options.addr, align 8
  %system_hostfiles = getelementptr inbounds %struct.Options* %256, i32 0, i32 44
  %arrayidx = getelementptr inbounds [32 x i8*]* %system_hostfiles, i32 0, i64 %idxprom
  store i8* %call, i8** %arrayidx, align 8
  %call225 = call i8* @xstrdup(i8* getelementptr inbounds ([32 x i8]* @.str16210, i32 0, i32 0))
  %257 = load %struct.Options** %options.addr, align 8
  %num_system_hostfiles226 = getelementptr inbounds %struct.Options* %257, i32 0, i32 43
  %258 = load i32* %num_system_hostfiles226, align 4
  %inc227 = add i32 %258, 1
  store i32 %inc227, i32* %num_system_hostfiles226, align 4
  %idxprom228 = zext i32 %258 to i64
  %259 = load %struct.Options** %options.addr, align 8
  %system_hostfiles229 = getelementptr inbounds %struct.Options* %259, i32 0, i32 44
  %arrayidx230 = getelementptr inbounds [32 x i8*]* %system_hostfiles229, i32 0, i64 %idxprom228
  store i8* %call225, i8** %arrayidx230, align 8
  br label %if.end231

if.end231:                                        ; preds = %if.then223, %if.end221
  %260 = load %struct.Options** %options.addr, align 8
  %num_user_hostfiles = getelementptr inbounds %struct.Options* %260, i32 0, i32 45
  %261 = load i32* %num_user_hostfiles, align 4
  %cmp232 = icmp eq i32 %261, 0
  br i1 %cmp232, label %if.then233, label %if.end245

if.then233:                                       ; preds = %if.end231
  %call234 = call i8* @xstrdup(i8* getelementptr inbounds ([19 x i8]* @.str17211, i32 0, i32 0))
  %262 = load %struct.Options** %options.addr, align 8
  %num_user_hostfiles235 = getelementptr inbounds %struct.Options* %262, i32 0, i32 45
  %263 = load i32* %num_user_hostfiles235, align 4
  %inc236 = add i32 %263, 1
  store i32 %inc236, i32* %num_user_hostfiles235, align 4
  %idxprom237 = zext i32 %263 to i64
  %264 = load %struct.Options** %options.addr, align 8
  %user_hostfiles = getelementptr inbounds %struct.Options* %264, i32 0, i32 46
  %arrayidx238 = getelementptr inbounds [32 x i8*]* %user_hostfiles, i32 0, i64 %idxprom237
  store i8* %call234, i8** %arrayidx238, align 8
  %call239 = call i8* @xstrdup(i8* getelementptr inbounds ([20 x i8]* @.str18212, i32 0, i32 0))
  %265 = load %struct.Options** %options.addr, align 8
  %num_user_hostfiles240 = getelementptr inbounds %struct.Options* %265, i32 0, i32 45
  %266 = load i32* %num_user_hostfiles240, align 4
  %inc241 = add i32 %266, 1
  store i32 %inc241, i32* %num_user_hostfiles240, align 4
  %idxprom242 = zext i32 %266 to i64
  %267 = load %struct.Options** %options.addr, align 8
  %user_hostfiles243 = getelementptr inbounds %struct.Options* %267, i32 0, i32 46
  %arrayidx244 = getelementptr inbounds [32 x i8*]* %user_hostfiles243, i32 0, i64 %idxprom242
  store i8* %call239, i8** %arrayidx244, align 8
  br label %if.end245

if.end245:                                        ; preds = %if.then233, %if.end231
  %268 = load %struct.Options** %options.addr, align 8
  %log_level = getelementptr inbounds %struct.Options* %268, i32 0, i32 26
  %269 = load i32* %log_level, align 4
  %cmp246 = icmp eq i32 %269, -1
  br i1 %cmp246, label %if.then247, label %if.end249

if.then247:                                       ; preds = %if.end245
  %270 = load %struct.Options** %options.addr, align 8
  %log_level248 = getelementptr inbounds %struct.Options* %270, i32 0, i32 26
  store i32 3, i32* %log_level248, align 4
  br label %if.end249

if.end249:                                        ; preds = %if.then247, %if.end245
  %271 = load %struct.Options** %options.addr, align 8
  %no_host_authentication_for_localhost = getelementptr inbounds %struct.Options* %271, i32 0, i32 71
  %272 = load i32* %no_host_authentication_for_localhost, align 4
  %273 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %274 = extractvalue { i32, i1 } %273, 0
  %275 = extractvalue { i32, i1 } %273, 1
  %276 = xor i1 %275, true
  br i1 %276, label %cont251, label %trap250

trap250:                                          ; preds = %if.end249
  call void @llvm.trap() #3
  unreachable

cont251:                                          ; preds = %if.end249
  %cmp252 = icmp eq i32 %272, %274
  br i1 %cmp252, label %if.then253, label %if.end255

if.then253:                                       ; preds = %cont251
  %277 = load %struct.Options** %options.addr, align 8
  %no_host_authentication_for_localhost254 = getelementptr inbounds %struct.Options* %277, i32 0, i32 71
  store i32 0, i32* %no_host_authentication_for_localhost254, align 4
  br label %if.end255

if.end255:                                        ; preds = %if.then253, %cont251
  %278 = load %struct.Options** %options.addr, align 8
  %identities_only = getelementptr inbounds %struct.Options* %278, i32 0, i32 72
  %279 = load i32* %identities_only, align 4
  %280 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %281 = extractvalue { i32, i1 } %280, 0
  %282 = extractvalue { i32, i1 } %280, 1
  %283 = xor i1 %282, true
  br i1 %283, label %cont257, label %trap256

trap256:                                          ; preds = %if.end255
  call void @llvm.trap() #3
  unreachable

cont257:                                          ; preds = %if.end255
  %cmp258 = icmp eq i32 %279, %281
  br i1 %cmp258, label %if.then259, label %if.end261

if.then259:                                       ; preds = %cont257
  %284 = load %struct.Options** %options.addr, align 8
  %identities_only260 = getelementptr inbounds %struct.Options* %284, i32 0, i32 72
  store i32 0, i32* %identities_only260, align 4
  br label %if.end261

if.end261:                                        ; preds = %if.then259, %cont257
  %285 = load %struct.Options** %options.addr, align 8
  %enable_ssh_keysign = getelementptr inbounds %struct.Options* %285, i32 0, i32 68
  %286 = load i32* %enable_ssh_keysign, align 4
  %287 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %288 = extractvalue { i32, i1 } %287, 0
  %289 = extractvalue { i32, i1 } %287, 1
  %290 = xor i1 %289, true
  br i1 %290, label %cont263, label %trap262

trap262:                                          ; preds = %if.end261
  call void @llvm.trap() #3
  unreachable

cont263:                                          ; preds = %if.end261
  %cmp264 = icmp eq i32 %286, %288
  br i1 %cmp264, label %if.then265, label %if.end267

if.then265:                                       ; preds = %cont263
  %291 = load %struct.Options** %options.addr, align 8
  %enable_ssh_keysign266 = getelementptr inbounds %struct.Options* %291, i32 0, i32 68
  store i32 0, i32* %enable_ssh_keysign266, align 4
  br label %if.end267

if.end267:                                        ; preds = %if.then265, %cont263
  %292 = load %struct.Options** %options.addr, align 8
  %rekey_limit = getelementptr inbounds %struct.Options* %292, i32 0, i32 69
  %293 = load i64* %rekey_limit, align 8
  %294 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %295 = extractvalue { i32, i1 } %294, 0
  %296 = extractvalue { i32, i1 } %294, 1
  %297 = xor i1 %296, true
  br i1 %297, label %cont269, label %trap268

trap268:                                          ; preds = %if.end267
  call void @llvm.trap() #3
  unreachable

cont269:                                          ; preds = %if.end267
  %conv = sext i32 %295 to i64
  %cmp270 = icmp eq i64 %293, %conv
  br i1 %cmp270, label %if.then272, label %if.end274

if.then272:                                       ; preds = %cont269
  %298 = load %struct.Options** %options.addr, align 8
  %rekey_limit273 = getelementptr inbounds %struct.Options* %298, i32 0, i32 69
  store i64 0, i64* %rekey_limit273, align 8
  br label %if.end274

if.end274:                                        ; preds = %if.then272, %cont269
  %299 = load %struct.Options** %options.addr, align 8
  %rekey_interval = getelementptr inbounds %struct.Options* %299, i32 0, i32 70
  %300 = load i32* %rekey_interval, align 4
  %301 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %302 = extractvalue { i32, i1 } %301, 0
  %303 = extractvalue { i32, i1 } %301, 1
  %304 = xor i1 %303, true
  br i1 %304, label %cont276, label %trap275

trap275:                                          ; preds = %if.end274
  call void @llvm.trap() #3
  unreachable

cont276:                                          ; preds = %if.end274
  %cmp277 = icmp eq i32 %300, %302
  br i1 %cmp277, label %if.then279, label %if.end281

if.then279:                                       ; preds = %cont276
  %305 = load %struct.Options** %options.addr, align 8
  %rekey_interval280 = getelementptr inbounds %struct.Options* %305, i32 0, i32 70
  store i32 0, i32* %rekey_interval280, align 4
  br label %if.end281

if.end281:                                        ; preds = %if.then279, %cont276
  %306 = load %struct.Options** %options.addr, align 8
  %verify_host_key_dns = getelementptr inbounds %struct.Options* %306, i32 0, i32 50
  %307 = load i32* %verify_host_key_dns, align 4
  %308 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %309 = extractvalue { i32, i1 } %308, 0
  %310 = extractvalue { i32, i1 } %308, 1
  %311 = xor i1 %310, true
  br i1 %311, label %cont283, label %trap282

trap282:                                          ; preds = %if.end281
  call void @llvm.trap() #3
  unreachable

cont283:                                          ; preds = %if.end281
  %cmp284 = icmp eq i32 %307, %309
  br i1 %cmp284, label %if.then286, label %if.end288

if.then286:                                       ; preds = %cont283
  %312 = load %struct.Options** %options.addr, align 8
  %verify_host_key_dns287 = getelementptr inbounds %struct.Options* %312, i32 0, i32 50
  store i32 0, i32* %verify_host_key_dns287, align 4
  br label %if.end288

if.end288:                                        ; preds = %if.then286, %cont283
  %313 = load %struct.Options** %options.addr, align 8
  %server_alive_interval = getelementptr inbounds %struct.Options* %313, i32 0, i32 73
  %314 = load i32* %server_alive_interval, align 4
  %315 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %316 = extractvalue { i32, i1 } %315, 0
  %317 = extractvalue { i32, i1 } %315, 1
  %318 = xor i1 %317, true
  br i1 %318, label %cont290, label %trap289

trap289:                                          ; preds = %if.end288
  call void @llvm.trap() #3
  unreachable

cont290:                                          ; preds = %if.end288
  %cmp291 = icmp eq i32 %314, %316
  br i1 %cmp291, label %if.then293, label %if.end295

if.then293:                                       ; preds = %cont290
  %319 = load %struct.Options** %options.addr, align 8
  %server_alive_interval294 = getelementptr inbounds %struct.Options* %319, i32 0, i32 73
  store i32 0, i32* %server_alive_interval294, align 4
  br label %if.end295

if.end295:                                        ; preds = %if.then293, %cont290
  %320 = load %struct.Options** %options.addr, align 8
  %server_alive_count_max = getelementptr inbounds %struct.Options* %320, i32 0, i32 74
  %321 = load i32* %server_alive_count_max, align 4
  %322 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %323 = extractvalue { i32, i1 } %322, 0
  %324 = extractvalue { i32, i1 } %322, 1
  %325 = xor i1 %324, true
  br i1 %325, label %cont297, label %trap296

trap296:                                          ; preds = %if.end295
  call void @llvm.trap() #3
  unreachable

cont297:                                          ; preds = %if.end295
  %cmp298 = icmp eq i32 %321, %323
  br i1 %cmp298, label %if.then300, label %if.end302

if.then300:                                       ; preds = %cont297
  %326 = load %struct.Options** %options.addr, align 8
  %server_alive_count_max301 = getelementptr inbounds %struct.Options* %326, i32 0, i32 74
  store i32 3, i32* %server_alive_count_max301, align 4
  br label %if.end302

if.end302:                                        ; preds = %if.then300, %cont297
  %327 = load %struct.Options** %options.addr, align 8
  %control_master = getelementptr inbounds %struct.Options* %327, i32 0, i32 78
  %328 = load i32* %control_master, align 4
  %329 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %330 = extractvalue { i32, i1 } %329, 0
  %331 = extractvalue { i32, i1 } %329, 1
  %332 = xor i1 %331, true
  br i1 %332, label %cont304, label %trap303

trap303:                                          ; preds = %if.end302
  call void @llvm.trap() #3
  unreachable

cont304:                                          ; preds = %if.end302
  %cmp305 = icmp eq i32 %328, %330
  br i1 %cmp305, label %if.then307, label %if.end309

if.then307:                                       ; preds = %cont304
  %333 = load %struct.Options** %options.addr, align 8
  %control_master308 = getelementptr inbounds %struct.Options* %333, i32 0, i32 78
  store i32 0, i32* %control_master308, align 4
  br label %if.end309

if.end309:                                        ; preds = %if.then307, %cont304
  %334 = load %struct.Options** %options.addr, align 8
  %control_persist = getelementptr inbounds %struct.Options* %334, i32 0, i32 79
  %335 = load i32* %control_persist, align 4
  %336 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %337 = extractvalue { i32, i1 } %336, 0
  %338 = extractvalue { i32, i1 } %336, 1
  %339 = xor i1 %338, true
  br i1 %339, label %cont311, label %trap310

trap310:                                          ; preds = %if.end309
  call void @llvm.trap() #3
  unreachable

cont311:                                          ; preds = %if.end309
  %cmp312 = icmp eq i32 %335, %337
  br i1 %cmp312, label %if.then314, label %if.end316

if.then314:                                       ; preds = %cont311
  %340 = load %struct.Options** %options.addr, align 8
  %control_persist315 = getelementptr inbounds %struct.Options* %340, i32 0, i32 79
  store i32 0, i32* %control_persist315, align 4
  %341 = load %struct.Options** %options.addr, align 8
  %control_persist_timeout = getelementptr inbounds %struct.Options* %341, i32 0, i32 80
  store i32 0, i32* %control_persist_timeout, align 4
  br label %if.end316

if.end316:                                        ; preds = %if.then314, %cont311
  %342 = load %struct.Options** %options.addr, align 8
  %hash_known_hosts = getelementptr inbounds %struct.Options* %342, i32 0, i32 81
  %343 = load i32* %hash_known_hosts, align 4
  %344 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %345 = extractvalue { i32, i1 } %344, 0
  %346 = extractvalue { i32, i1 } %344, 1
  %347 = xor i1 %346, true
  br i1 %347, label %cont318, label %trap317

trap317:                                          ; preds = %if.end316
  call void @llvm.trap() #3
  unreachable

cont318:                                          ; preds = %if.end316
  %cmp319 = icmp eq i32 %343, %345
  br i1 %cmp319, label %if.then321, label %if.end323

if.then321:                                       ; preds = %cont318
  %348 = load %struct.Options** %options.addr, align 8
  %hash_known_hosts322 = getelementptr inbounds %struct.Options* %348, i32 0, i32 81
  store i32 0, i32* %hash_known_hosts322, align 4
  br label %if.end323

if.end323:                                        ; preds = %if.then321, %cont318
  %349 = load %struct.Options** %options.addr, align 8
  %tun_open = getelementptr inbounds %struct.Options* %349, i32 0, i32 82
  %350 = load i32* %tun_open, align 4
  %351 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %352 = extractvalue { i32, i1 } %351, 0
  %353 = extractvalue { i32, i1 } %351, 1
  %354 = xor i1 %353, true
  br i1 %354, label %cont325, label %trap324

trap324:                                          ; preds = %if.end323
  call void @llvm.trap() #3
  unreachable

cont325:                                          ; preds = %if.end323
  %cmp326 = icmp eq i32 %350, %352
  br i1 %cmp326, label %if.then328, label %if.end330

if.then328:                                       ; preds = %cont325
  %355 = load %struct.Options** %options.addr, align 8
  %tun_open329 = getelementptr inbounds %struct.Options* %355, i32 0, i32 82
  store i32 0, i32* %tun_open329, align 4
  br label %if.end330

if.end330:                                        ; preds = %if.then328, %cont325
  %356 = load %struct.Options** %options.addr, align 8
  %tun_local = getelementptr inbounds %struct.Options* %356, i32 0, i32 83
  %357 = load i32* %tun_local, align 4
  %358 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %359 = extractvalue { i32, i1 } %358, 0
  %360 = extractvalue { i32, i1 } %358, 1
  %361 = xor i1 %360, true
  br i1 %361, label %cont332, label %trap331

trap331:                                          ; preds = %if.end330
  call void @llvm.trap() #3
  unreachable

cont332:                                          ; preds = %if.end330
  %cmp333 = icmp eq i32 %357, %359
  br i1 %cmp333, label %if.then335, label %if.end337

if.then335:                                       ; preds = %cont332
  %362 = load %struct.Options** %options.addr, align 8
  %tun_local336 = getelementptr inbounds %struct.Options* %362, i32 0, i32 83
  store i32 2147483647, i32* %tun_local336, align 4
  br label %if.end337

if.end337:                                        ; preds = %if.then335, %cont332
  %363 = load %struct.Options** %options.addr, align 8
  %tun_remote = getelementptr inbounds %struct.Options* %363, i32 0, i32 84
  %364 = load i32* %tun_remote, align 4
  %365 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %366 = extractvalue { i32, i1 } %365, 0
  %367 = extractvalue { i32, i1 } %365, 1
  %368 = xor i1 %367, true
  br i1 %368, label %cont339, label %trap338

trap338:                                          ; preds = %if.end337
  call void @llvm.trap() #3
  unreachable

cont339:                                          ; preds = %if.end337
  %cmp340 = icmp eq i32 %364, %366
  br i1 %cmp340, label %if.then342, label %if.end344

if.then342:                                       ; preds = %cont339
  %369 = load %struct.Options** %options.addr, align 8
  %tun_remote343 = getelementptr inbounds %struct.Options* %369, i32 0, i32 84
  store i32 2147483647, i32* %tun_remote343, align 4
  br label %if.end344

if.end344:                                        ; preds = %if.then342, %cont339
  %370 = load %struct.Options** %options.addr, align 8
  %permit_local_command = getelementptr inbounds %struct.Options* %370, i32 0, i32 86
  %371 = load i32* %permit_local_command, align 4
  %372 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %373 = extractvalue { i32, i1 } %372, 0
  %374 = extractvalue { i32, i1 } %372, 1
  %375 = xor i1 %374, true
  br i1 %375, label %cont346, label %trap345

trap345:                                          ; preds = %if.end344
  call void @llvm.trap() #3
  unreachable

cont346:                                          ; preds = %if.end344
  %cmp347 = icmp eq i32 %371, %373
  br i1 %cmp347, label %if.then349, label %if.end351

if.then349:                                       ; preds = %cont346
  %376 = load %struct.Options** %options.addr, align 8
  %permit_local_command350 = getelementptr inbounds %struct.Options* %376, i32 0, i32 86
  store i32 0, i32* %permit_local_command350, align 4
  br label %if.end351

if.end351:                                        ; preds = %if.then349, %cont346
  %377 = load %struct.Options** %options.addr, align 8
  %visual_host_key = getelementptr inbounds %struct.Options* %377, i32 0, i32 87
  %378 = load i32* %visual_host_key, align 4
  %379 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %380 = extractvalue { i32, i1 } %379, 0
  %381 = extractvalue { i32, i1 } %379, 1
  %382 = xor i1 %381, true
  br i1 %382, label %cont353, label %trap352

trap352:                                          ; preds = %if.end351
  call void @llvm.trap() #3
  unreachable

cont353:                                          ; preds = %if.end351
  %cmp354 = icmp eq i32 %378, %380
  br i1 %cmp354, label %if.then356, label %if.end358

if.then356:                                       ; preds = %cont353
  %383 = load %struct.Options** %options.addr, align 8
  %visual_host_key357 = getelementptr inbounds %struct.Options* %383, i32 0, i32 87
  store i32 0, i32* %visual_host_key357, align 4
  br label %if.end358

if.end358:                                        ; preds = %if.then356, %cont353
  %384 = load %struct.Options** %options.addr, align 8
  %ip_qos_interactive = getelementptr inbounds %struct.Options* %384, i32 0, i32 24
  %385 = load i32* %ip_qos_interactive, align 4
  %386 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %387 = extractvalue { i32, i1 } %386, 0
  %388 = extractvalue { i32, i1 } %386, 1
  %389 = xor i1 %388, true
  br i1 %389, label %cont360, label %trap359

trap359:                                          ; preds = %if.end358
  call void @llvm.trap() #3
  unreachable

cont360:                                          ; preds = %if.end358
  %cmp361 = icmp eq i32 %385, %387
  br i1 %cmp361, label %if.then363, label %if.end365

if.then363:                                       ; preds = %cont360
  %390 = load %struct.Options** %options.addr, align 8
  %ip_qos_interactive364 = getelementptr inbounds %struct.Options* %390, i32 0, i32 24
  store i32 16, i32* %ip_qos_interactive364, align 4
  br label %if.end365

if.end365:                                        ; preds = %if.then363, %cont360
  %391 = load %struct.Options** %options.addr, align 8
  %ip_qos_bulk = getelementptr inbounds %struct.Options* %391, i32 0, i32 25
  %392 = load i32* %ip_qos_bulk, align 4
  %393 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %394 = extractvalue { i32, i1 } %393, 0
  %395 = extractvalue { i32, i1 } %393, 1
  %396 = xor i1 %395, true
  br i1 %396, label %cont367, label %trap366

trap366:                                          ; preds = %if.end365
  call void @llvm.trap() #3
  unreachable

cont367:                                          ; preds = %if.end365
  %cmp368 = icmp eq i32 %392, %394
  br i1 %cmp368, label %if.then370, label %if.end372

if.then370:                                       ; preds = %cont367
  %397 = load %struct.Options** %options.addr, align 8
  %ip_qos_bulk371 = getelementptr inbounds %struct.Options* %397, i32 0, i32 25
  store i32 8, i32* %ip_qos_bulk371, align 4
  br label %if.end372

if.end372:                                        ; preds = %if.then370, %cont367
  %398 = load %struct.Options** %options.addr, align 8
  %request_tty = getelementptr inbounds %struct.Options* %398, i32 0, i32 88
  %399 = load i32* %request_tty, align 4
  %400 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %401 = extractvalue { i32, i1 } %400, 0
  %402 = extractvalue { i32, i1 } %400, 1
  %403 = xor i1 %402, true
  br i1 %403, label %cont374, label %trap373

trap373:                                          ; preds = %if.end372
  call void @llvm.trap() #3
  unreachable

cont374:                                          ; preds = %if.end372
  %cmp375 = icmp eq i32 %399, %401
  br i1 %cmp375, label %if.then377, label %if.end379

if.then377:                                       ; preds = %cont374
  %404 = load %struct.Options** %options.addr, align 8
  %request_tty378 = getelementptr inbounds %struct.Options* %404, i32 0, i32 88
  store i32 0, i32* %request_tty378, align 4
  br label %if.end379

if.end379:                                        ; preds = %if.then377, %cont374
  %405 = load %struct.Options** %options.addr, align 8
  %proxy_use_fdpass = getelementptr inbounds %struct.Options* %405, i32 0, i32 89
  %406 = load i32* %proxy_use_fdpass, align 4
  %407 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %408 = extractvalue { i32, i1 } %407, 0
  %409 = extractvalue { i32, i1 } %407, 1
  %410 = xor i1 %409, true
  br i1 %410, label %cont381, label %trap380

trap380:                                          ; preds = %if.end379
  call void @llvm.trap() #3
  unreachable

cont381:                                          ; preds = %if.end379
  %cmp382 = icmp eq i32 %406, %408
  br i1 %cmp382, label %if.then384, label %if.end386

if.then384:                                       ; preds = %cont381
  %411 = load %struct.Options** %options.addr, align 8
  %proxy_use_fdpass385 = getelementptr inbounds %struct.Options* %411, i32 0, i32 89
  store i32 0, i32* %proxy_use_fdpass385, align 4
  br label %if.end386

if.end386:                                        ; preds = %if.then384, %cont381
  %412 = load %struct.Options** %options.addr, align 8
  %canonicalize_max_dots = getelementptr inbounds %struct.Options* %412, i32 0, i32 93
  %413 = load i32* %canonicalize_max_dots, align 4
  %414 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %415 = extractvalue { i32, i1 } %414, 0
  %416 = extractvalue { i32, i1 } %414, 1
  %417 = xor i1 %416, true
  br i1 %417, label %cont388, label %trap387

trap387:                                          ; preds = %if.end386
  call void @llvm.trap() #3
  unreachable

cont388:                                          ; preds = %if.end386
  %cmp389 = icmp eq i32 %413, %415
  br i1 %cmp389, label %if.then391, label %if.end393

if.then391:                                       ; preds = %cont388
  %418 = load %struct.Options** %options.addr, align 8
  %canonicalize_max_dots392 = getelementptr inbounds %struct.Options* %418, i32 0, i32 93
  store i32 1, i32* %canonicalize_max_dots392, align 4
  br label %if.end393

if.end393:                                        ; preds = %if.then391, %cont388
  %419 = load %struct.Options** %options.addr, align 8
  %canonicalize_fallback_local = getelementptr inbounds %struct.Options* %419, i32 0, i32 94
  %420 = load i32* %canonicalize_fallback_local, align 4
  %421 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %422 = extractvalue { i32, i1 } %421, 0
  %423 = extractvalue { i32, i1 } %421, 1
  %424 = xor i1 %423, true
  br i1 %424, label %cont395, label %trap394

trap394:                                          ; preds = %if.end393
  call void @llvm.trap() #3
  unreachable

cont395:                                          ; preds = %if.end393
  %cmp396 = icmp eq i32 %420, %422
  br i1 %cmp396, label %if.then398, label %if.end400

if.then398:                                       ; preds = %cont395
  %425 = load %struct.Options** %options.addr, align 8
  %canonicalize_fallback_local399 = getelementptr inbounds %struct.Options* %425, i32 0, i32 94
  store i32 1, i32* %canonicalize_fallback_local399, align 4
  br label %if.end400

if.end400:                                        ; preds = %if.then398, %cont395
  %426 = load %struct.Options** %options.addr, align 8
  %canonicalize_hostname = getelementptr inbounds %struct.Options* %426, i32 0, i32 92
  %427 = load i32* %canonicalize_hostname, align 4
  %428 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %429 = extractvalue { i32, i1 } %428, 0
  %430 = extractvalue { i32, i1 } %428, 1
  %431 = xor i1 %430, true
  br i1 %431, label %cont402, label %trap401

trap401:                                          ; preds = %if.end400
  call void @llvm.trap() #3
  unreachable

cont402:                                          ; preds = %if.end400
  %cmp403 = icmp eq i32 %427, %429
  br i1 %cmp403, label %if.then405, label %if.end407

if.then405:                                       ; preds = %cont402
  %432 = load %struct.Options** %options.addr, align 8
  %canonicalize_hostname406 = getelementptr inbounds %struct.Options* %432, i32 0, i32 92
  store i32 0, i32* %canonicalize_hostname406, align 4
  br label %if.end407

if.end407:                                        ; preds = %if.then405, %cont402
  %433 = load %struct.Options** %options.addr, align 8
  %fingerprint_hash = getelementptr inbounds %struct.Options* %433, i32 0, i32 98
  %434 = load i32* %fingerprint_hash, align 4
  %435 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %436 = extractvalue { i32, i1 } %435, 0
  %437 = extractvalue { i32, i1 } %435, 1
  %438 = xor i1 %437, true
  br i1 %438, label %cont409, label %trap408

trap408:                                          ; preds = %if.end407
  call void @llvm.trap() #3
  unreachable

cont409:                                          ; preds = %if.end407
  %cmp410 = icmp eq i32 %434, %436
  br i1 %cmp410, label %if.then412, label %if.end414

if.then412:                                       ; preds = %cont409
  %439 = load %struct.Options** %options.addr, align 8
  %fingerprint_hash413 = getelementptr inbounds %struct.Options* %439, i32 0, i32 98
  store i32 3, i32* %fingerprint_hash413, align 4
  br label %if.end414

if.end414:                                        ; preds = %if.then412, %cont409
  %440 = load %struct.Options** %options.addr, align 8
  %update_hostkeys = getelementptr inbounds %struct.Options* %440, i32 0, i32 99
  %441 = load i32* %update_hostkeys, align 4
  %442 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %443 = extractvalue { i32, i1 } %442, 0
  %444 = extractvalue { i32, i1 } %442, 1
  %445 = xor i1 %444, true
  br i1 %445, label %cont416, label %trap415

trap415:                                          ; preds = %if.end414
  call void @llvm.trap() #3
  unreachable

cont416:                                          ; preds = %if.end414
  %cmp417 = icmp eq i32 %441, %443
  br i1 %cmp417, label %if.then419, label %if.end421

if.then419:                                       ; preds = %cont416
  %446 = load %struct.Options** %options.addr, align 8
  %update_hostkeys420 = getelementptr inbounds %struct.Options* %446, i32 0, i32 99
  store i32 0, i32* %update_hostkeys420, align 4
  br label %if.end421

if.end421:                                        ; preds = %if.then419, %cont416
  %447 = load %struct.Options** %options.addr, align 8
  %ciphers = getelementptr inbounds %struct.Options* %447, i32 0, i32 33
  %call422 = call i32 @kex_assemble_names(i8* getelementptr inbounds ([142 x i8]* @.str19213, i32 0, i32 0), i8** %ciphers)
  %cmp423 = icmp ne i32 %call422, 0
  br i1 %cmp423, label %if.then440, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end421
  %448 = load %struct.Options** %options.addr, align 8
  %macs = getelementptr inbounds %struct.Options* %448, i32 0, i32 34
  %call425 = call i32 @kex_assemble_names(i8* getelementptr inbounds ([214 x i8]* @.str20214, i32 0, i32 0), i8** %macs)
  %cmp426 = icmp ne i32 %call425, 0
  br i1 %cmp426, label %if.then440, label %lor.lhs.false428

lor.lhs.false428:                                 ; preds = %lor.lhs.false
  %449 = load %struct.Options** %options.addr, align 8
  %kex_algorithms = getelementptr inbounds %struct.Options* %449, i32 0, i32 36
  %call429 = call i32 @kex_assemble_names(i8* getelementptr inbounds ([294 x i8]* @.str21215, i32 0, i32 0), i8** %kex_algorithms)
  %cmp430 = icmp ne i32 %call429, 0
  br i1 %cmp430, label %if.then440, label %lor.lhs.false432

lor.lhs.false432:                                 ; preds = %lor.lhs.false428
  %450 = load %struct.Options** %options.addr, align 8
  %hostbased_key_types = getelementptr inbounds %struct.Options* %450, i32 0, i32 100
  %call433 = call i32 @kex_assemble_names(i8* getelementptr inbounds ([291 x i8]* @.str22216, i32 0, i32 0), i8** %hostbased_key_types)
  %cmp434 = icmp ne i32 %call433, 0
  br i1 %cmp434, label %if.then440, label %lor.lhs.false436

lor.lhs.false436:                                 ; preds = %lor.lhs.false432
  %451 = load %struct.Options** %options.addr, align 8
  %pubkey_key_types = getelementptr inbounds %struct.Options* %451, i32 0, i32 101
  %call437 = call i32 @kex_assemble_names(i8* getelementptr inbounds ([291 x i8]* @.str22216, i32 0, i32 0), i8** %pubkey_key_types)
  %cmp438 = icmp ne i32 %call437, 0
  br i1 %cmp438, label %if.then440, label %if.end441

if.then440:                                       ; preds = %lor.lhs.false436, %lor.lhs.false432, %lor.lhs.false428, %lor.lhs.false, %if.end421
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str23217, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.fill_default_options, i32 0, i32 0)) #11
  unreachable

if.end441:                                        ; preds = %lor.lhs.false436
  br label %do.body

do.body:                                          ; preds = %if.end441
  %452 = load %struct.Options** %options.addr, align 8
  %local_command = getelementptr inbounds %struct.Options* %452, i32 0, i32 85
  %453 = load i8** %local_command, align 8
  %call442 = call i32 @option_clear_or_none(i8* %453)
  %tobool443 = icmp ne i32 %call442, 0
  br i1 %tobool443, label %if.then444, label %if.end447

if.then444:                                       ; preds = %do.body
  %454 = load %struct.Options** %options.addr, align 8
  %local_command445 = getelementptr inbounds %struct.Options* %454, i32 0, i32 85
  %455 = load i8** %local_command445, align 8
  call void @free(i8* %455) #9
  %456 = load %struct.Options** %options.addr, align 8
  %local_command446 = getelementptr inbounds %struct.Options* %456, i32 0, i32 85
  store i8* null, i8** %local_command446, align 8
  br label %if.end447

if.end447:                                        ; preds = %if.then444, %do.body
  br label %do.end

do.end:                                           ; preds = %if.end447
  br label %do.body448

do.body448:                                       ; preds = %do.end
  %457 = load %struct.Options** %options.addr, align 8
  %proxy_command = getelementptr inbounds %struct.Options* %457, i32 0, i32 40
  %458 = load i8** %proxy_command, align 8
  %call449 = call i32 @option_clear_or_none(i8* %458)
  %tobool450 = icmp ne i32 %call449, 0
  br i1 %tobool450, label %if.then451, label %if.end454

if.then451:                                       ; preds = %do.body448
  %459 = load %struct.Options** %options.addr, align 8
  %proxy_command452 = getelementptr inbounds %struct.Options* %459, i32 0, i32 40
  %460 = load i8** %proxy_command452, align 8
  call void @free(i8* %460) #9
  %461 = load %struct.Options** %options.addr, align 8
  %proxy_command453 = getelementptr inbounds %struct.Options* %461, i32 0, i32 40
  store i8* null, i8** %proxy_command453, align 8
  br label %if.end454

if.end454:                                        ; preds = %if.then451, %do.body448
  br label %do.end455

do.end455:                                        ; preds = %if.end454
  br label %do.body456

do.body456:                                       ; preds = %do.end455
  %462 = load %struct.Options** %options.addr, align 8
  %control_path = getelementptr inbounds %struct.Options* %462, i32 0, i32 77
  %463 = load i8** %control_path, align 8
  %call457 = call i32 @option_clear_or_none(i8* %463)
  %tobool458 = icmp ne i32 %call457, 0
  br i1 %tobool458, label %if.then459, label %if.end462

if.then459:                                       ; preds = %do.body456
  %464 = load %struct.Options** %options.addr, align 8
  %control_path460 = getelementptr inbounds %struct.Options* %464, i32 0, i32 77
  %465 = load i8** %control_path460, align 8
  call void @free(i8* %465) #9
  %466 = load %struct.Options** %options.addr, align 8
  %control_path461 = getelementptr inbounds %struct.Options* %466, i32 0, i32 77
  store i8* null, i8** %control_path461, align 8
  br label %if.end462

if.end462:                                        ; preds = %if.then459, %do.body456
  br label %do.end463

do.end463:                                        ; preds = %if.end462
  br label %do.body464

do.body464:                                       ; preds = %do.end463
  %467 = load %struct.Options** %options.addr, align 8
  %revoked_host_keys = getelementptr inbounds %struct.Options* %467, i32 0, i32 97
  %468 = load i8** %revoked_host_keys, align 8
  %call465 = call i32 @option_clear_or_none(i8* %468)
  %tobool466 = icmp ne i32 %call465, 0
  br i1 %tobool466, label %if.then467, label %if.end470

if.then467:                                       ; preds = %do.body464
  %469 = load %struct.Options** %options.addr, align 8
  %revoked_host_keys468 = getelementptr inbounds %struct.Options* %469, i32 0, i32 97
  %470 = load i8** %revoked_host_keys468, align 8
  call void @free(i8* %470) #9
  %471 = load %struct.Options** %options.addr, align 8
  %revoked_host_keys469 = getelementptr inbounds %struct.Options* %471, i32 0, i32 97
  store i8* null, i8** %revoked_host_keys469, align 8
  br label %if.end470

if.end470:                                        ; preds = %if.then467, %do.body464
  br label %do.end471

do.end471:                                        ; preds = %if.end470
  ret void
}

declare i32 @kex_assemble_names(i8*, i8**) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @parse_forward(%struct.Forward* %fwd, i8* %fwdspec, i32 %dynamicfwd, i32 %remotefwd) #0 {
entry:
  %retval = alloca i32, align 4
  %fwd.addr = alloca %struct.Forward*, align 8
  %fwdspec.addr = alloca i8*, align 8
  %dynamicfwd.addr = alloca i32, align 4
  %remotefwd.addr = alloca i32, align 4
  %fwdargs = alloca [4 x %struct.fwdarg], align 16
  %p = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.Forward* %fwd, %struct.Forward** %fwd.addr, align 8
  store i8* %fwdspec, i8** %fwdspec.addr, align 8
  store i32 %dynamicfwd, i32* %dynamicfwd.addr, align 4
  store i32 %remotefwd, i32* %remotefwd.addr, align 4
  %0 = load %struct.Forward** %fwd.addr, align 8
  %1 = bitcast %struct.Forward* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 56, i32 8, i1 false)
  %2 = bitcast [4 x %struct.fwdarg]* %fwdargs to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 64, i32 16, i1 false)
  %3 = load i8** %fwdspec.addr, align 8
  %call = call i8* @xstrdup(i8* %3)
  store i8* %call, i8** %p, align 8
  store i8* %call, i8** %cp, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %4 = load i8** %cp, align 8
  %5 = load i8* %4, align 1
  %conv = zext i8 %5 to i32
  %idxprom = sext i32 %conv to i64
  %call1 = call i16** @__ctype_b_loc() #2
  %6 = load i16** %call1, align 8
  %arrayidx = getelementptr inbounds i16* %6, i64 %idxprom
  %7 = load i16* %arrayidx, align 2
  %conv2 = zext i16 %7 to i32
  %and = and i32 %conv2, 8192
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i8** %cp, align 8
  %incdec.ptr = getelementptr inbounds i8* %8, i32 1
  store i8* %incdec.ptr, i8** %cp, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %while.end
  %9 = load i32* %i, align 4
  %cmp = icmp slt i32 %9, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32* %i, align 4
  %idxprom4 = sext i32 %10 to i64
  %arrayidx5 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 %idxprom4
  %call6 = call i32 @parse_fwd_field(i8** %cp, %struct.fwdarg* %arrayidx5)
  %cmp7 = icmp ne i32 %call6, 0
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32* %i, align 4
  %12 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 1)
  %13 = extractvalue { i32, i1 } %12, 0
  %14 = extractvalue { i32, i1 } %12, 1
  %15 = xor i1 %14, true
  br i1 %15, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %13, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %16 = load i8** %cp, align 8
  %cmp9 = icmp ne i8* %16, null
  br i1 %cmp9, label %land.lhs.true, label %if.end15

land.lhs.true:                                    ; preds = %for.end
  %17 = load i8** %cp, align 8
  %18 = load i8* %17, align 1
  %conv11 = sext i8 %18 to i32
  %cmp12 = icmp ne i32 %conv11, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %for.end
  %19 = load i32* %i, align 4
  switch i32 %19, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb29
    i32 3, label %sw.bb80
    i32 4, label %sw.bb136
  ]

sw.bb:                                            ; preds = %if.end15
  %arrayidx16 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %ispath = getelementptr inbounds %struct.fwdarg* %arrayidx16, i32 0, i32 1
  %20 = load i32* %ispath, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.then18, label %if.else

if.then18:                                        ; preds = %sw.bb
  %arrayidx19 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg = getelementptr inbounds %struct.fwdarg* %arrayidx19, i32 0, i32 0
  %21 = load i8** %arg, align 8
  %call20 = call i8* @xstrdup(i8* %21)
  %22 = load %struct.Forward** %fwd.addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %22, i32 0, i32 2
  store i8* %call20, i8** %listen_path, align 8
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %24 = extractvalue { i32, i1 } %23, 0
  %25 = extractvalue { i32, i1 } %23, 1
  %26 = xor i1 %25, true
  br i1 %26, label %cont22, label %trap21

trap21:                                           ; preds = %if.then18
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %if.then18
  %27 = load %struct.Forward** %fwd.addr, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %27, i32 0, i32 1
  store i32 %24, i32* %listen_port, align 4
  br label %if.end27

if.else:                                          ; preds = %sw.bb
  %28 = load %struct.Forward** %fwd.addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %28, i32 0, i32 0
  store i8* null, i8** %listen_host, align 8
  %arrayidx23 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg24 = getelementptr inbounds %struct.fwdarg* %arrayidx23, i32 0, i32 0
  %29 = load i8** %arg24, align 8
  %call25 = call i32 @a2port(i8* %29)
  %30 = load %struct.Forward** %fwd.addr, align 8
  %listen_port26 = getelementptr inbounds %struct.Forward* %30, i32 0, i32 1
  store i32 %call25, i32* %listen_port26, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else, %cont22
  %call28 = call i8* @xstrdup(i8* getelementptr inbounds ([6 x i8]* @.str24218, i32 0, i32 0))
  %31 = load %struct.Forward** %fwd.addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %31, i32 0, i32 3
  store i8* %call28, i8** %connect_host, align 8
  br label %sw.epilog

sw.bb29:                                          ; preds = %if.end15
  %arrayidx30 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %ispath31 = getelementptr inbounds %struct.fwdarg* %arrayidx30, i32 0, i32 1
  %32 = load i32* %ispath31, align 4
  %tobool32 = icmp ne i32 %32, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else50

land.lhs.true33:                                  ; preds = %sw.bb29
  %arrayidx34 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %ispath35 = getelementptr inbounds %struct.fwdarg* %arrayidx34, i32 0, i32 1
  %33 = load i32* %ispath35, align 4
  %tobool36 = icmp ne i32 %33, 0
  br i1 %tobool36, label %if.then37, label %if.else50

if.then37:                                        ; preds = %land.lhs.true33
  %arrayidx38 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg39 = getelementptr inbounds %struct.fwdarg* %arrayidx38, i32 0, i32 0
  %34 = load i8** %arg39, align 8
  %call40 = call i8* @xstrdup(i8* %34)
  %35 = load %struct.Forward** %fwd.addr, align 8
  %listen_path41 = getelementptr inbounds %struct.Forward* %35, i32 0, i32 2
  store i8* %call40, i8** %listen_path41, align 8
  %36 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %37 = extractvalue { i32, i1 } %36, 0
  %38 = extractvalue { i32, i1 } %36, 1
  %39 = xor i1 %38, true
  br i1 %39, label %cont43, label %trap42

trap42:                                           ; preds = %if.then37
  call void @llvm.trap() #3
  unreachable

cont43:                                           ; preds = %if.then37
  %40 = load %struct.Forward** %fwd.addr, align 8
  %listen_port44 = getelementptr inbounds %struct.Forward* %40, i32 0, i32 1
  store i32 %37, i32* %listen_port44, align 4
  %arrayidx45 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg46 = getelementptr inbounds %struct.fwdarg* %arrayidx45, i32 0, i32 0
  %41 = load i8** %arg46, align 8
  %call47 = call i8* @xstrdup(i8* %41)
  %42 = load %struct.Forward** %fwd.addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %42, i32 0, i32 5
  store i8* %call47, i8** %connect_path, align 8
  %43 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %44 = extractvalue { i32, i1 } %43, 0
  %45 = extractvalue { i32, i1 } %43, 1
  %46 = xor i1 %45, true
  br i1 %46, label %cont49, label %trap48

trap48:                                           ; preds = %cont43
  call void @llvm.trap() #3
  unreachable

cont49:                                           ; preds = %cont43
  %47 = load %struct.Forward** %fwd.addr, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %47, i32 0, i32 4
  store i32 %44, i32* %connect_port, align 4
  br label %if.end79

if.else50:                                        ; preds = %land.lhs.true33, %sw.bb29
  %arrayidx51 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %ispath52 = getelementptr inbounds %struct.fwdarg* %arrayidx51, i32 0, i32 1
  %48 = load i32* %ispath52, align 4
  %tobool53 = icmp ne i32 %48, 0
  br i1 %tobool53, label %if.then54, label %if.else67

if.then54:                                        ; preds = %if.else50
  %49 = load %struct.Forward** %fwd.addr, align 8
  %listen_host55 = getelementptr inbounds %struct.Forward* %49, i32 0, i32 0
  store i8* null, i8** %listen_host55, align 8
  %arrayidx56 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg57 = getelementptr inbounds %struct.fwdarg* %arrayidx56, i32 0, i32 0
  %50 = load i8** %arg57, align 8
  %call58 = call i32 @a2port(i8* %50)
  %51 = load %struct.Forward** %fwd.addr, align 8
  %listen_port59 = getelementptr inbounds %struct.Forward* %51, i32 0, i32 1
  store i32 %call58, i32* %listen_port59, align 4
  %arrayidx60 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg61 = getelementptr inbounds %struct.fwdarg* %arrayidx60, i32 0, i32 0
  %52 = load i8** %arg61, align 8
  %call62 = call i8* @xstrdup(i8* %52)
  %53 = load %struct.Forward** %fwd.addr, align 8
  %connect_path63 = getelementptr inbounds %struct.Forward* %53, i32 0, i32 5
  store i8* %call62, i8** %connect_path63, align 8
  %54 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %55 = extractvalue { i32, i1 } %54, 0
  %56 = extractvalue { i32, i1 } %54, 1
  %57 = xor i1 %56, true
  br i1 %57, label %cont65, label %trap64

trap64:                                           ; preds = %if.then54
  call void @llvm.trap() #3
  unreachable

cont65:                                           ; preds = %if.then54
  %58 = load %struct.Forward** %fwd.addr, align 8
  %connect_port66 = getelementptr inbounds %struct.Forward* %58, i32 0, i32 4
  store i32 %55, i32* %connect_port66, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.else50
  %arrayidx68 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg69 = getelementptr inbounds %struct.fwdarg* %arrayidx68, i32 0, i32 0
  %59 = load i8** %arg69, align 8
  %call70 = call i8* @xstrdup(i8* %59)
  %60 = load %struct.Forward** %fwd.addr, align 8
  %listen_host71 = getelementptr inbounds %struct.Forward* %60, i32 0, i32 0
  store i8* %call70, i8** %listen_host71, align 8
  %arrayidx72 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg73 = getelementptr inbounds %struct.fwdarg* %arrayidx72, i32 0, i32 0
  %61 = load i8** %arg73, align 8
  %call74 = call i32 @a2port(i8* %61)
  %62 = load %struct.Forward** %fwd.addr, align 8
  %listen_port75 = getelementptr inbounds %struct.Forward* %62, i32 0, i32 1
  store i32 %call74, i32* %listen_port75, align 4
  %call76 = call i8* @xstrdup(i8* getelementptr inbounds ([6 x i8]* @.str24218, i32 0, i32 0))
  %63 = load %struct.Forward** %fwd.addr, align 8
  %connect_host77 = getelementptr inbounds %struct.Forward* %63, i32 0, i32 3
  store i8* %call76, i8** %connect_host77, align 8
  br label %if.end78

if.end78:                                         ; preds = %if.else67, %cont65
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %cont49
  br label %sw.epilog

sw.bb80:                                          ; preds = %if.end15
  %arrayidx81 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %ispath82 = getelementptr inbounds %struct.fwdarg* %arrayidx81, i32 0, i32 1
  %64 = load i32* %ispath82, align 4
  %tobool83 = icmp ne i32 %64, 0
  br i1 %tobool83, label %if.then84, label %if.else100

if.then84:                                        ; preds = %sw.bb80
  %arrayidx85 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg86 = getelementptr inbounds %struct.fwdarg* %arrayidx85, i32 0, i32 0
  %65 = load i8** %arg86, align 8
  %call87 = call i8* @xstrdup(i8* %65)
  %66 = load %struct.Forward** %fwd.addr, align 8
  %listen_path88 = getelementptr inbounds %struct.Forward* %66, i32 0, i32 2
  store i8* %call87, i8** %listen_path88, align 8
  %67 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %68 = extractvalue { i32, i1 } %67, 0
  %69 = extractvalue { i32, i1 } %67, 1
  %70 = xor i1 %69, true
  br i1 %70, label %cont90, label %trap89

trap89:                                           ; preds = %if.then84
  call void @llvm.trap() #3
  unreachable

cont90:                                           ; preds = %if.then84
  %71 = load %struct.Forward** %fwd.addr, align 8
  %listen_port91 = getelementptr inbounds %struct.Forward* %71, i32 0, i32 1
  store i32 %68, i32* %listen_port91, align 4
  %arrayidx92 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg93 = getelementptr inbounds %struct.fwdarg* %arrayidx92, i32 0, i32 0
  %72 = load i8** %arg93, align 8
  %call94 = call i8* @xstrdup(i8* %72)
  %73 = load %struct.Forward** %fwd.addr, align 8
  %connect_host95 = getelementptr inbounds %struct.Forward* %73, i32 0, i32 3
  store i8* %call94, i8** %connect_host95, align 8
  %arrayidx96 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 2
  %arg97 = getelementptr inbounds %struct.fwdarg* %arrayidx96, i32 0, i32 0
  %74 = load i8** %arg97, align 8
  %call98 = call i32 @a2port(i8* %74)
  %75 = load %struct.Forward** %fwd.addr, align 8
  %connect_port99 = getelementptr inbounds %struct.Forward* %75, i32 0, i32 4
  store i32 %call98, i32* %connect_port99, align 4
  br label %if.end135

if.else100:                                       ; preds = %sw.bb80
  %arrayidx101 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 2
  %ispath102 = getelementptr inbounds %struct.fwdarg* %arrayidx101, i32 0, i32 1
  %76 = load i32* %ispath102, align 4
  %tobool103 = icmp ne i32 %76, 0
  br i1 %tobool103, label %if.then104, label %if.else120

if.then104:                                       ; preds = %if.else100
  %arrayidx105 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg106 = getelementptr inbounds %struct.fwdarg* %arrayidx105, i32 0, i32 0
  %77 = load i8** %arg106, align 8
  %call107 = call i8* @xstrdup(i8* %77)
  %78 = load %struct.Forward** %fwd.addr, align 8
  %listen_host108 = getelementptr inbounds %struct.Forward* %78, i32 0, i32 0
  store i8* %call107, i8** %listen_host108, align 8
  %arrayidx109 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg110 = getelementptr inbounds %struct.fwdarg* %arrayidx109, i32 0, i32 0
  %79 = load i8** %arg110, align 8
  %call111 = call i32 @a2port(i8* %79)
  %80 = load %struct.Forward** %fwd.addr, align 8
  %listen_port112 = getelementptr inbounds %struct.Forward* %80, i32 0, i32 1
  store i32 %call111, i32* %listen_port112, align 4
  %arrayidx113 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 2
  %arg114 = getelementptr inbounds %struct.fwdarg* %arrayidx113, i32 0, i32 0
  %81 = load i8** %arg114, align 8
  %call115 = call i8* @xstrdup(i8* %81)
  %82 = load %struct.Forward** %fwd.addr, align 8
  %connect_path116 = getelementptr inbounds %struct.Forward* %82, i32 0, i32 5
  store i8* %call115, i8** %connect_path116, align 8
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %84 = extractvalue { i32, i1 } %83, 0
  %85 = extractvalue { i32, i1 } %83, 1
  %86 = xor i1 %85, true
  br i1 %86, label %cont118, label %trap117

trap117:                                          ; preds = %if.then104
  call void @llvm.trap() #3
  unreachable

cont118:                                          ; preds = %if.then104
  %87 = load %struct.Forward** %fwd.addr, align 8
  %connect_port119 = getelementptr inbounds %struct.Forward* %87, i32 0, i32 4
  store i32 %84, i32* %connect_port119, align 4
  br label %if.end134

if.else120:                                       ; preds = %if.else100
  %88 = load %struct.Forward** %fwd.addr, align 8
  %listen_host121 = getelementptr inbounds %struct.Forward* %88, i32 0, i32 0
  store i8* null, i8** %listen_host121, align 8
  %arrayidx122 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg123 = getelementptr inbounds %struct.fwdarg* %arrayidx122, i32 0, i32 0
  %89 = load i8** %arg123, align 8
  %call124 = call i32 @a2port(i8* %89)
  %90 = load %struct.Forward** %fwd.addr, align 8
  %listen_port125 = getelementptr inbounds %struct.Forward* %90, i32 0, i32 1
  store i32 %call124, i32* %listen_port125, align 4
  %arrayidx126 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg127 = getelementptr inbounds %struct.fwdarg* %arrayidx126, i32 0, i32 0
  %91 = load i8** %arg127, align 8
  %call128 = call i8* @xstrdup(i8* %91)
  %92 = load %struct.Forward** %fwd.addr, align 8
  %connect_host129 = getelementptr inbounds %struct.Forward* %92, i32 0, i32 3
  store i8* %call128, i8** %connect_host129, align 8
  %arrayidx130 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 2
  %arg131 = getelementptr inbounds %struct.fwdarg* %arrayidx130, i32 0, i32 0
  %93 = load i8** %arg131, align 8
  %call132 = call i32 @a2port(i8* %93)
  %94 = load %struct.Forward** %fwd.addr, align 8
  %connect_port133 = getelementptr inbounds %struct.Forward* %94, i32 0, i32 4
  store i32 %call132, i32* %connect_port133, align 4
  br label %if.end134

if.end134:                                        ; preds = %if.else120, %cont118
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %cont90
  br label %sw.epilog

sw.bb136:                                         ; preds = %if.end15
  %arrayidx137 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 0
  %arg138 = getelementptr inbounds %struct.fwdarg* %arrayidx137, i32 0, i32 0
  %95 = load i8** %arg138, align 8
  %call139 = call i8* @xstrdup(i8* %95)
  %96 = load %struct.Forward** %fwd.addr, align 8
  %listen_host140 = getelementptr inbounds %struct.Forward* %96, i32 0, i32 0
  store i8* %call139, i8** %listen_host140, align 8
  %arrayidx141 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 1
  %arg142 = getelementptr inbounds %struct.fwdarg* %arrayidx141, i32 0, i32 0
  %97 = load i8** %arg142, align 8
  %call143 = call i32 @a2port(i8* %97)
  %98 = load %struct.Forward** %fwd.addr, align 8
  %listen_port144 = getelementptr inbounds %struct.Forward* %98, i32 0, i32 1
  store i32 %call143, i32* %listen_port144, align 4
  %arrayidx145 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 2
  %arg146 = getelementptr inbounds %struct.fwdarg* %arrayidx145, i32 0, i32 0
  %99 = load i8** %arg146, align 8
  %call147 = call i8* @xstrdup(i8* %99)
  %100 = load %struct.Forward** %fwd.addr, align 8
  %connect_host148 = getelementptr inbounds %struct.Forward* %100, i32 0, i32 3
  store i8* %call147, i8** %connect_host148, align 8
  %arrayidx149 = getelementptr inbounds [4 x %struct.fwdarg]* %fwdargs, i32 0, i64 3
  %arg150 = getelementptr inbounds %struct.fwdarg* %arrayidx149, i32 0, i32 0
  %101 = load i8** %arg150, align 8
  %call151 = call i32 @a2port(i8* %101)
  %102 = load %struct.Forward** %fwd.addr, align 8
  %connect_port152 = getelementptr inbounds %struct.Forward* %102, i32 0, i32 4
  store i32 %call151, i32* %connect_port152, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.end15
  store i32 0, i32* %i, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb136, %if.end135, %if.end79, %if.end27
  %103 = load i8** %p, align 8
  call void @free(i8* %103) #9
  %104 = load i32* %dynamicfwd.addr, align 4
  %tobool153 = icmp ne i32 %104, 0
  br i1 %tobool153, label %if.then154, label %if.else161

if.then154:                                       ; preds = %sw.epilog
  %105 = load i32* %i, align 4
  %cmp155 = icmp eq i32 %105, 1
  br i1 %cmp155, label %if.end160, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then154
  %106 = load i32* %i, align 4
  %cmp157 = icmp eq i32 %106, 2
  br i1 %cmp157, label %if.end160, label %if.then159

if.then159:                                       ; preds = %lor.lhs.false
  br label %fail_free

if.end160:                                        ; preds = %lor.lhs.false, %if.then154
  br label %if.end187

if.else161:                                       ; preds = %sw.epilog
  %107 = load i32* %i, align 4
  %cmp162 = icmp eq i32 %107, 3
  br i1 %cmp162, label %if.end177, label %lor.lhs.false164

lor.lhs.false164:                                 ; preds = %if.else161
  %108 = load i32* %i, align 4
  %cmp165 = icmp eq i32 %108, 4
  br i1 %cmp165, label %if.end177, label %if.then167

if.then167:                                       ; preds = %lor.lhs.false164
  %109 = load %struct.Forward** %fwd.addr, align 8
  %connect_path168 = getelementptr inbounds %struct.Forward* %109, i32 0, i32 5
  %110 = load i8** %connect_path168, align 8
  %cmp169 = icmp eq i8* %110, null
  br i1 %cmp169, label %land.lhs.true171, label %if.end176

land.lhs.true171:                                 ; preds = %if.then167
  %111 = load %struct.Forward** %fwd.addr, align 8
  %listen_path172 = getelementptr inbounds %struct.Forward* %111, i32 0, i32 2
  %112 = load i8** %listen_path172, align 8
  %cmp173 = icmp eq i8* %112, null
  br i1 %cmp173, label %if.then175, label %if.end176

if.then175:                                       ; preds = %land.lhs.true171
  br label %fail_free

if.end176:                                        ; preds = %land.lhs.true171, %if.then167
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %lor.lhs.false164, %if.else161
  %113 = load %struct.Forward** %fwd.addr, align 8
  %connect_port178 = getelementptr inbounds %struct.Forward* %113, i32 0, i32 4
  %114 = load i32* %connect_port178, align 4
  %cmp179 = icmp sle i32 %114, 0
  br i1 %cmp179, label %land.lhs.true181, label %if.end186

land.lhs.true181:                                 ; preds = %if.end177
  %115 = load %struct.Forward** %fwd.addr, align 8
  %connect_path182 = getelementptr inbounds %struct.Forward* %115, i32 0, i32 5
  %116 = load i8** %connect_path182, align 8
  %cmp183 = icmp eq i8* %116, null
  br i1 %cmp183, label %if.then185, label %if.end186

if.then185:                                       ; preds = %land.lhs.true181
  br label %fail_free

if.end186:                                        ; preds = %land.lhs.true181, %if.end177
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end160
  %117 = load %struct.Forward** %fwd.addr, align 8
  %listen_port188 = getelementptr inbounds %struct.Forward* %117, i32 0, i32 1
  %118 = load i32* %listen_port188, align 4
  %cmp189 = icmp slt i32 %118, 0
  br i1 %cmp189, label %land.lhs.true191, label %lor.lhs.false195

land.lhs.true191:                                 ; preds = %if.end187
  %119 = load %struct.Forward** %fwd.addr, align 8
  %listen_path192 = getelementptr inbounds %struct.Forward* %119, i32 0, i32 2
  %120 = load i8** %listen_path192, align 8
  %cmp193 = icmp eq i8* %120, null
  br i1 %cmp193, label %if.then201, label %lor.lhs.false195

lor.lhs.false195:                                 ; preds = %land.lhs.true191, %if.end187
  %121 = load i32* %remotefwd.addr, align 4
  %tobool196 = icmp ne i32 %121, 0
  br i1 %tobool196, label %if.end202, label %land.lhs.true197

land.lhs.true197:                                 ; preds = %lor.lhs.false195
  %122 = load %struct.Forward** %fwd.addr, align 8
  %listen_port198 = getelementptr inbounds %struct.Forward* %122, i32 0, i32 1
  %123 = load i32* %listen_port198, align 4
  %cmp199 = icmp eq i32 %123, 0
  br i1 %cmp199, label %if.then201, label %if.end202

if.then201:                                       ; preds = %land.lhs.true197, %land.lhs.true191
  br label %fail_free

if.end202:                                        ; preds = %land.lhs.true197, %lor.lhs.false195
  %124 = load %struct.Forward** %fwd.addr, align 8
  %connect_host203 = getelementptr inbounds %struct.Forward* %124, i32 0, i32 3
  %125 = load i8** %connect_host203, align 8
  %cmp204 = icmp ne i8* %125, null
  br i1 %cmp204, label %land.lhs.true206, label %if.end212

land.lhs.true206:                                 ; preds = %if.end202
  %126 = load %struct.Forward** %fwd.addr, align 8
  %connect_host207 = getelementptr inbounds %struct.Forward* %126, i32 0, i32 3
  %127 = load i8** %connect_host207, align 8
  %call208 = call i64 @strlen(i8* %127) #12
  %cmp209 = icmp uge i64 %call208, 1025
  br i1 %cmp209, label %if.then211, label %if.end212

if.then211:                                       ; preds = %land.lhs.true206
  br label %fail_free

if.end212:                                        ; preds = %land.lhs.true206, %if.end202
  %128 = load %struct.Forward** %fwd.addr, align 8
  %connect_path213 = getelementptr inbounds %struct.Forward* %128, i32 0, i32 5
  %129 = load i8** %connect_path213, align 8
  %cmp214 = icmp ne i8* %129, null
  br i1 %cmp214, label %land.lhs.true216, label %if.end222

land.lhs.true216:                                 ; preds = %if.end212
  %130 = load %struct.Forward** %fwd.addr, align 8
  %connect_path217 = getelementptr inbounds %struct.Forward* %130, i32 0, i32 5
  %131 = load i8** %connect_path217, align 8
  %call218 = call i64 @strlen(i8* %131) #12
  %cmp219 = icmp uge i64 %call218, 108
  br i1 %cmp219, label %if.then221, label %if.end222

if.then221:                                       ; preds = %land.lhs.true216
  br label %fail_free

if.end222:                                        ; preds = %land.lhs.true216, %if.end212
  %132 = load %struct.Forward** %fwd.addr, align 8
  %listen_host223 = getelementptr inbounds %struct.Forward* %132, i32 0, i32 0
  %133 = load i8** %listen_host223, align 8
  %cmp224 = icmp ne i8* %133, null
  br i1 %cmp224, label %land.lhs.true226, label %if.end232

land.lhs.true226:                                 ; preds = %if.end222
  %134 = load %struct.Forward** %fwd.addr, align 8
  %listen_host227 = getelementptr inbounds %struct.Forward* %134, i32 0, i32 0
  %135 = load i8** %listen_host227, align 8
  %call228 = call i64 @strlen(i8* %135) #12
  %cmp229 = icmp uge i64 %call228, 1025
  br i1 %cmp229, label %if.then231, label %if.end232

if.then231:                                       ; preds = %land.lhs.true226
  br label %fail_free

if.end232:                                        ; preds = %land.lhs.true226, %if.end222
  %136 = load %struct.Forward** %fwd.addr, align 8
  %listen_path233 = getelementptr inbounds %struct.Forward* %136, i32 0, i32 2
  %137 = load i8** %listen_path233, align 8
  %cmp234 = icmp ne i8* %137, null
  br i1 %cmp234, label %land.lhs.true236, label %if.end242

land.lhs.true236:                                 ; preds = %if.end232
  %138 = load %struct.Forward** %fwd.addr, align 8
  %listen_path237 = getelementptr inbounds %struct.Forward* %138, i32 0, i32 2
  %139 = load i8** %listen_path237, align 8
  %call238 = call i64 @strlen(i8* %139) #12
  %cmp239 = icmp uge i64 %call238, 108
  br i1 %cmp239, label %if.then241, label %if.end242

if.then241:                                       ; preds = %land.lhs.true236
  br label %fail_free

if.end242:                                        ; preds = %land.lhs.true236, %if.end232
  %140 = load i32* %i, align 4
  store i32 %140, i32* %retval
  br label %return

fail_free:                                        ; preds = %if.then241, %if.then231, %if.then221, %if.then211, %if.then201, %if.then185, %if.then175, %if.then159
  %141 = load %struct.Forward** %fwd.addr, align 8
  %connect_host243 = getelementptr inbounds %struct.Forward* %141, i32 0, i32 3
  %142 = load i8** %connect_host243, align 8
  call void @free(i8* %142) #9
  %143 = load %struct.Forward** %fwd.addr, align 8
  %connect_host244 = getelementptr inbounds %struct.Forward* %143, i32 0, i32 3
  store i8* null, i8** %connect_host244, align 8
  %144 = load %struct.Forward** %fwd.addr, align 8
  %connect_path245 = getelementptr inbounds %struct.Forward* %144, i32 0, i32 5
  %145 = load i8** %connect_path245, align 8
  call void @free(i8* %145) #9
  %146 = load %struct.Forward** %fwd.addr, align 8
  %connect_path246 = getelementptr inbounds %struct.Forward* %146, i32 0, i32 5
  store i8* null, i8** %connect_path246, align 8
  %147 = load %struct.Forward** %fwd.addr, align 8
  %listen_host247 = getelementptr inbounds %struct.Forward* %147, i32 0, i32 0
  %148 = load i8** %listen_host247, align 8
  call void @free(i8* %148) #9
  %149 = load %struct.Forward** %fwd.addr, align 8
  %listen_host248 = getelementptr inbounds %struct.Forward* %149, i32 0, i32 0
  store i8* null, i8** %listen_host248, align 8
  %150 = load %struct.Forward** %fwd.addr, align 8
  %listen_path249 = getelementptr inbounds %struct.Forward* %150, i32 0, i32 2
  %151 = load i8** %listen_path249, align 8
  call void @free(i8* %151) #9
  %152 = load %struct.Forward** %fwd.addr, align 8
  %listen_path250 = getelementptr inbounds %struct.Forward* %152, i32 0, i32 2
  store i8* null, i8** %listen_path250, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %fail_free, %if.end242
  %153 = load i32* %retval
  ret i32 %153
}

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() #5

; Function Attrs: nounwind sspreq uwtable
define i32 @parse_jump(i8* %s, %struct.Options* %o, i32 %active) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %o.addr = alloca %struct.Options*, align 8
  %active.addr = alloca i32, align 4
  %orig = alloca i8*, align 8
  %sdup = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %host = alloca i8*, align 8
  %user = alloca i8*, align 8
  %ret = alloca i32, align 4
  %port = alloca i32, align 4
  %first = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store %struct.Options* %o, %struct.Options** %o.addr, align 8
  store i32 %active, i32* %active.addr, align 4
  store i8* null, i8** %host, align 8
  store i8* null, i8** %user, align 8
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %ret, align 4
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %5 = extractvalue { i32, i1 } %4, 0
  %6 = extractvalue { i32, i1 } %4, 1
  %7 = xor i1 %6, true
  br i1 %7, label %cont2, label %trap1

trap1:                                            ; preds = %cont
  call void @llvm.trap() #3
  unreachable

cont2:                                            ; preds = %cont
  store i32 %5, i32* %port, align 4
  %8 = load %struct.Options** %o.addr, align 8
  %proxy_command = getelementptr inbounds %struct.Options* %8, i32 0, i32 40
  %9 = load i8** %proxy_command, align 8
  %cmp = icmp eq i8* %9, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cont2
  %10 = load %struct.Options** %o.addr, align 8
  %jump_host = getelementptr inbounds %struct.Options* %10, i32 0, i32 103
  %11 = load i8** %jump_host, align 8
  %cmp3 = icmp eq i8* %11, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cont2
  %12 = phi i1 [ false, %cont2 ], [ %cmp3, %land.rhs ]
  %land.ext = zext i1 %12 to i32
  %13 = load i32* %active.addr, align 4
  %and = and i32 %13, %land.ext
  store i32 %and, i32* %active.addr, align 4
  %14 = load i8** %s.addr, align 8
  %call = call i8* @xstrdup(i8* %14)
  store i8* %call, i8** %sdup, align 8
  store i8* %call, i8** %orig, align 8
  %15 = load i32* %active.addr, align 4
  store i32 %15, i32* %first, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %land.end
  %16 = load i8** %sdup, align 8
  %call4 = call i8* @strrchr(i8* %16, i32 44) #12
  store i8* %call4, i8** %cp, align 8
  %cmp5 = icmp eq i8* %call4, null
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %17 = load i8** %sdup, align 8
  store i8* %17, i8** %cp, align 8
  br label %if.end

if.else:                                          ; preds = %do.body
  %18 = load i8** %cp, align 8
  %incdec.ptr = getelementptr inbounds i8* %18, i32 1
  store i8* %incdec.ptr, i8** %cp, align 8
  store i8 0, i8* %18, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i32* %first, align 4
  %tobool = icmp ne i32 %19, 0
  br i1 %tobool, label %if.then6, label %if.else11

if.then6:                                         ; preds = %if.end
  %20 = load i8** %cp, align 8
  %call7 = call i32 @parse_user_host_port(i8* %20, i8** %user, i8** %host, i32* %port)
  %cmp8 = icmp ne i32 %call7, 0
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.then6
  br label %out

if.end10:                                         ; preds = %if.then6
  br label %if.end16

if.else11:                                        ; preds = %if.end
  %21 = load i8** %cp, align 8
  %call12 = call i32 @parse_user_host_port(i8* %21, i8** null, i8** null, i32* null)
  %cmp13 = icmp ne i32 %call12, 0
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.else11
  br label %out

if.end15:                                         ; preds = %if.else11
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end10
  store i32 0, i32* %first, align 4
  br label %do.cond

do.cond:                                          ; preds = %if.end16
  %22 = load i8** %cp, align 8
  %23 = load i8** %sdup, align 8
  %cmp17 = icmp ne i8* %22, %23
  br i1 %cmp17, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %24 = load i32* %active.addr, align 4
  %tobool18 = icmp ne i32 %24, 0
  br i1 %tobool18, label %if.then19, label %if.end30

if.then19:                                        ; preds = %do.end
  %25 = load i8** %user, align 8
  %26 = load %struct.Options** %o.addr, align 8
  %jump_user = getelementptr inbounds %struct.Options* %26, i32 0, i32 102
  store i8* %25, i8** %jump_user, align 8
  %27 = load i8** %host, align 8
  %28 = load %struct.Options** %o.addr, align 8
  %jump_host20 = getelementptr inbounds %struct.Options* %28, i32 0, i32 103
  store i8* %27, i8** %jump_host20, align 8
  %29 = load i32* %port, align 4
  %30 = load %struct.Options** %o.addr, align 8
  %jump_port = getelementptr inbounds %struct.Options* %30, i32 0, i32 104
  store i32 %29, i32* %jump_port, align 4
  %call21 = call i8* @xstrdup(i8* getelementptr inbounds ([5 x i8]* @.str7201, i32 0, i32 0))
  %31 = load %struct.Options** %o.addr, align 8
  %proxy_command22 = getelementptr inbounds %struct.Options* %31, i32 0, i32 40
  store i8* %call21, i8** %proxy_command22, align 8
  store i8* null, i8** %host, align 8
  store i8* null, i8** %user, align 8
  %32 = load i8** %s.addr, align 8
  %call23 = call i8* @strrchr(i8* %32, i32 44) #12
  store i8* %call23, i8** %cp, align 8
  %cmp24 = icmp ne i8* %call23, null
  br i1 %cmp24, label %land.lhs.true, label %if.end29

land.lhs.true:                                    ; preds = %if.then19
  %33 = load i8** %cp, align 8
  %34 = load i8** %s.addr, align 8
  %cmp25 = icmp ne i8* %33, %34
  br i1 %cmp25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %land.lhs.true
  %35 = load i8** %s.addr, align 8
  %call27 = call i8* @xstrdup(i8* %35)
  %36 = load %struct.Options** %o.addr, align 8
  %jump_extra = getelementptr inbounds %struct.Options* %36, i32 0, i32 105
  store i8* %call27, i8** %jump_extra, align 8
  %37 = load i8** %cp, align 8
  %38 = load i8** %s.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %37 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %38 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %39 = load %struct.Options** %o.addr, align 8
  %jump_extra28 = getelementptr inbounds %struct.Options* %39, i32 0, i32 105
  %40 = load i8** %jump_extra28, align 8
  %arrayidx = getelementptr inbounds i8* %40, i64 %sub.ptr.sub
  store i8 0, i8* %arrayidx, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %land.lhs.true, %if.then19
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %do.end
  store i32 0, i32* %ret, align 4
  br label %out

out:                                              ; preds = %if.end30, %if.then14, %if.then9
  %41 = load i8** %orig, align 8
  call void @free(i8* %41) #9
  %42 = load i8** %user, align 8
  call void @free(i8* %42) #9
  %43 = load i8** %host, align 8
  call void @free(i8* %43) #9
  %44 = load i32* %ret, align 4
  ret i32 %44
}

declare i32 @parse_user_host_port(i8*, i8**, i8**, i32*) #1

; Function Attrs: nounwind sspreq uwtable
define void @dump_client_config(%struct.Options* %o, i8* %host) #0 {
entry:
  %o.addr = alloca %struct.Options*, align 8
  %host.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %buf = alloca [8 x i8], align 1
  store %struct.Options* %o, %struct.Options** %o.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  %0 = load %struct.Options** %o.addr, align 8
  %hostkeyalgorithms = getelementptr inbounds %struct.Options* %0, i32 0, i32 35
  %call = call i32 @kex_assemble_names(i8* getelementptr inbounds ([291 x i8]* @.str22216, i32 0, i32 0), i8** %hostkeyalgorithms)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str23217, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.dump_client_config, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  %1 = load %struct.Options** %o.addr, align 8
  %user = getelementptr inbounds %struct.Options* %1, i32 0, i32 41
  %2 = load i8** %user, align 8
  call void @dump_cfg_string(i32 23, i8* %2)
  %3 = load i8** %host.addr, align 8
  call void @dump_cfg_string(i32 15, i8* %3)
  %4 = load %struct.Options** %o.addr, align 8
  %port = getelementptr inbounds %struct.Options* %4, i32 0, i32 27
  %5 = load i32* %port, align 4
  call void @dump_cfg_int(i32 16, i32 %5)
  %6 = load %struct.Options** %o.addr, align 8
  %address_family = getelementptr inbounds %struct.Options* %6, i32 0, i32 28
  %7 = load i32* %address_family, align 4
  call void @dump_cfg_fmtint(i32 58, i32 %7)
  %8 = load %struct.Options** %o.addr, align 8
  %batch_mode = getelementptr inbounds %struct.Options* %8, i32 0, i32 18
  %9 = load i32* %batch_mode, align 4
  call void @dump_cfg_fmtint(i32 30, i32 %9)
  %10 = load %struct.Options** %o.addr, align 8
  %canonicalize_fallback_local = getelementptr inbounds %struct.Options* %10, i32 0, i32 94
  %11 = load i32* %canonicalize_fallback_local, align 4
  call void @dump_cfg_fmtint(i32 82, i32 %11)
  %12 = load %struct.Options** %o.addr, align 8
  %canonicalize_hostname = getelementptr inbounds %struct.Options* %12, i32 0, i32 92
  %13 = load i32* %canonicalize_hostname, align 4
  call void @dump_cfg_fmtint(i32 80, i32 %13)
  %14 = load %struct.Options** %o.addr, align 8
  %challenge_response_authentication = getelementptr inbounds %struct.Options* %14, i32 0, i32 12
  %15 = load i32* %challenge_response_authentication, align 4
  call void @dump_cfg_fmtint(i32 12, i32 %15)
  %16 = load %struct.Options** %o.addr, align 8
  %check_host_ip = getelementptr inbounds %struct.Options* %16, i32 0, i32 19
  %17 = load i32* %check_host_ip, align 4
  call void @dump_cfg_fmtint(i32 31, i32 %17)
  %18 = load %struct.Options** %o.addr, align 8
  %compression = getelementptr inbounds %struct.Options* %18, i32 0, i32 21
  %19 = load i32* %compression, align 4
  call void @dump_cfg_fmtint(i32 33, i32 %19)
  %20 = load %struct.Options** %o.addr, align 8
  %control_master = getelementptr inbounds %struct.Options* %20, i32 0, i32 78
  %21 = load i32* %control_master, align 4
  call void @dump_cfg_fmtint(i32 66, i32 %21)
  %22 = load %struct.Options** %o.addr, align 8
  %enable_ssh_keysign = getelementptr inbounds %struct.Options* %22, i32 0, i32 68
  %23 = load i32* %enable_ssh_keysign, align 4
  call void @dump_cfg_fmtint(i32 54, i32 %23)
  %24 = load %struct.Options** %o.addr, align 8
  %clear_forwardings = getelementptr inbounds %struct.Options* %24, i32 0, i32 65
  %25 = load i32* %clear_forwardings, align 4
  call void @dump_cfg_fmtint(i32 52, i32 %25)
  %26 = load %struct.Options** %o.addr, align 8
  %exit_on_forward_failure = getelementptr inbounds %struct.Options* %26, i32 0, i32 4
  %27 = load i32* %exit_on_forward_failure, align 4
  call void @dump_cfg_fmtint(i32 9, i32 %27)
  %28 = load %struct.Options** %o.addr, align 8
  %fingerprint_hash = getelementptr inbounds %struct.Options* %28, i32 0, i32 98
  %29 = load i32* %fingerprint_hash, align 4
  call void @dump_cfg_fmtint(i32 87, i32 %29)
  %30 = load %struct.Options** %o.addr, align 8
  %forward_agent = getelementptr inbounds %struct.Options* %30, i32 0, i32 0
  %31 = load i32* %forward_agent, align 4
  call void @dump_cfg_fmtint(i32 4, i32 %31)
  %32 = load %struct.Options** %o.addr, align 8
  %forward_x11 = getelementptr inbounds %struct.Options* %32, i32 0, i32 1
  %33 = load i32* %forward_x11, align 4
  call void @dump_cfg_fmtint(i32 5, i32 %33)
  %34 = load %struct.Options** %o.addr, align 8
  %forward_x11_trusted = getelementptr inbounds %struct.Options* %34, i32 0, i32 3
  %35 = load i32* %forward_x11_trusted, align 4
  call void @dump_cfg_fmtint(i32 6, i32 %35)
  %36 = load %struct.Options** %o.addr, align 8
  %fwd_opts = getelementptr inbounds %struct.Options* %36, i32 0, i32 6
  %gateway_ports = getelementptr inbounds %struct.ForwardOptions* %fwd_opts, i32 0, i32 0
  %37 = load i32* %gateway_ports, align 4
  call void @dump_cfg_fmtint(i32 8, i32 %37)
  %38 = load %struct.Options** %o.addr, align 8
  %hash_known_hosts = getelementptr inbounds %struct.Options* %38, i32 0, i32 81
  %39 = load i32* %hash_known_hosts, align 4
  call void @dump_cfg_fmtint(i32 68, i32 %39)
  %40 = load %struct.Options** %o.addr, align 8
  %hostbased_authentication = getelementptr inbounds %struct.Options* %40, i32 0, i32 11
  %41 = load i32* %hostbased_authentication, align 4
  call void @dump_cfg_fmtint(i32 48, i32 %41)
  %42 = load %struct.Options** %o.addr, align 8
  %identities_only = getelementptr inbounds %struct.Options* %42, i32 0, i32 72
  %43 = load i32* %identities_only, align 4
  call void @dump_cfg_fmtint(i32 63, i32 %43)
  %44 = load %struct.Options** %o.addr, align 8
  %kbd_interactive_authentication = getelementptr inbounds %struct.Options* %44, i32 0, i32 16
  %45 = load i32* %kbd_interactive_authentication, align 4
  call void @dump_cfg_fmtint(i32 43, i32 %45)
  %46 = load %struct.Options** %o.addr, align 8
  %no_host_authentication_for_localhost = getelementptr inbounds %struct.Options* %46, i32 0, i32 71
  %47 = load i32* %no_host_authentication_for_localhost, align 4
  call void @dump_cfg_fmtint(i32 53, i32 %47)
  %48 = load %struct.Options** %o.addr, align 8
  %password_authentication = getelementptr inbounds %struct.Options* %48, i32 0, i32 15
  %49 = load i32* %password_authentication, align 4
  call void @dump_cfg_fmtint(i32 10, i32 %49)
  %50 = load %struct.Options** %o.addr, align 8
  %permit_local_command = getelementptr inbounds %struct.Options* %50, i32 0, i32 86
  %51 = load i32* %permit_local_command, align 4
  call void @dump_cfg_fmtint(i32 72, i32 %51)
  %52 = load %struct.Options** %o.addr, align 8
  %protocol = getelementptr inbounds %struct.Options* %52, i32 0, i32 37
  %53 = load i32* %protocol, align 4
  call void @dump_cfg_fmtint(i32 40, i32 %53)
  %54 = load %struct.Options** %o.addr, align 8
  %proxy_use_fdpass = getelementptr inbounds %struct.Options* %54, i32 0, i32 89
  %55 = load i32* %proxy_use_fdpass, align 4
  call void @dump_cfg_fmtint(i32 78, i32 %55)
  %56 = load %struct.Options** %o.addr, align 8
  %pubkey_authentication = getelementptr inbounds %struct.Options* %56, i32 0, i32 10
  %57 = load i32* %pubkey_authentication, align 4
  call void @dump_cfg_fmtint(i32 42, i32 %57)
  %58 = load %struct.Options** %o.addr, align 8
  %request_tty = getelementptr inbounds %struct.Options* %58, i32 0, i32 88
  %59 = load i32* %request_tty, align 4
  call void @dump_cfg_fmtint(i32 76, i32 %59)
  %60 = load %struct.Options** %o.addr, align 8
  %rhosts_rsa_authentication = getelementptr inbounds %struct.Options* %60, i32 0, i32 8
  %61 = load i32* %rhosts_rsa_authentication, align 4
  call void @dump_cfg_fmtint(i32 25, i32 %61)
  %62 = load %struct.Options** %o.addr, align 8
  %rsa_authentication = getelementptr inbounds %struct.Options* %62, i32 0, i32 9
  %63 = load i32* %rsa_authentication, align 4
  call void @dump_cfg_fmtint(i32 11, i32 %63)
  %64 = load %struct.Options** %o.addr, align 8
  %fwd_opts1 = getelementptr inbounds %struct.Options* %64, i32 0, i32 6
  %streamlocal_bind_unlink = getelementptr inbounds %struct.ForwardOptions* %fwd_opts1, i32 0, i32 2
  %65 = load i32* %streamlocal_bind_unlink, align 4
  call void @dump_cfg_fmtint(i32 85, i32 %65)
  %66 = load %struct.Options** %o.addr, align 8
  %strict_host_key_checking = getelementptr inbounds %struct.Options* %66, i32 0, i32 20
  %67 = load i32* %strict_host_key_checking, align 4
  call void @dump_cfg_fmtint(i32 32, i32 %67)
  %68 = load %struct.Options** %o.addr, align 8
  %tcp_keep_alive = getelementptr inbounds %struct.Options* %68, i32 0, i32 23
  %69 = load i32* %tcp_keep_alive, align 4
  call void @dump_cfg_fmtint(i32 35, i32 %69)
  %70 = load %struct.Options** %o.addr, align 8
  %tun_open = getelementptr inbounds %struct.Options* %70, i32 0, i32 82
  %71 = load i32* %tun_open, align 4
  call void @dump_cfg_fmtint(i32 69, i32 %71)
  %72 = load %struct.Options** %o.addr, align 8
  %use_privileged_port = getelementptr inbounds %struct.Options* %72, i32 0, i32 7
  %73 = load i32* %use_privileged_port, align 4
  call void @dump_cfg_fmtint(i32 37, i32 %73)
  %74 = load %struct.Options** %o.addr, align 8
  %verify_host_key_dns = getelementptr inbounds %struct.Options* %74, i32 0, i32 50
  %75 = load i32* %verify_host_key_dns, align 4
  call void @dump_cfg_fmtint(i32 56, i32 %75)
  %76 = load %struct.Options** %o.addr, align 8
  %visual_host_key = getelementptr inbounds %struct.Options* %76, i32 0, i32 87
  %77 = load i32* %visual_host_key, align 4
  call void @dump_cfg_fmtint(i32 73, i32 %77)
  %78 = load %struct.Options** %o.addr, align 8
  %update_hostkeys = getelementptr inbounds %struct.Options* %78, i32 0, i32 99
  %79 = load i32* %update_hostkeys, align 4
  call void @dump_cfg_fmtint(i32 88, i32 %79)
  %80 = load %struct.Options** %o.addr, align 8
  %canonicalize_max_dots = getelementptr inbounds %struct.Options* %80, i32 0, i32 93
  %81 = load i32* %canonicalize_max_dots, align 4
  call void @dump_cfg_int(i32 81, i32 %81)
  %82 = load %struct.Options** %o.addr, align 8
  %compression_level = getelementptr inbounds %struct.Options* %82, i32 0, i32 22
  %83 = load i32* %compression_level, align 4
  call void @dump_cfg_int(i32 34, i32 %83)
  %84 = load %struct.Options** %o.addr, align 8
  %connection_attempts = getelementptr inbounds %struct.Options* %84, i32 0, i32 29
  %85 = load i32* %connection_attempts, align 4
  call void @dump_cfg_int(i32 29, i32 %85)
  %86 = load %struct.Options** %o.addr, align 8
  %forward_x11_timeout = getelementptr inbounds %struct.Options* %86, i32 0, i32 2
  %87 = load i32* %forward_x11_timeout, align 4
  call void @dump_cfg_int(i32 7, i32 %87)
  %88 = load %struct.Options** %o.addr, align 8
  %number_of_password_prompts = getelementptr inbounds %struct.Options* %88, i32 0, i32 31
  %89 = load i32* %number_of_password_prompts, align 4
  call void @dump_cfg_int(i32 36, i32 %89)
  %90 = load %struct.Options** %o.addr, align 8
  %server_alive_count_max = getelementptr inbounds %struct.Options* %90, i32 0, i32 74
  %91 = load i32* %server_alive_count_max, align 4
  call void @dump_cfg_int(i32 62, i32 %91)
  %92 = load %struct.Options** %o.addr, align 8
  %server_alive_interval = getelementptr inbounds %struct.Options* %92, i32 0, i32 73
  %93 = load i32* %server_alive_interval, align 4
  call void @dump_cfg_int(i32 61, i32 %93)
  %94 = load %struct.Options** %o.addr, align 8
  %bind_address = getelementptr inbounds %struct.Options* %94, i32 0, i32 48
  %95 = load i8** %bind_address, align 8
  call void @dump_cfg_string(i32 50, i8* %95)
  %96 = load %struct.Options** %o.addr, align 8
  %ciphers = getelementptr inbounds %struct.Options* %96, i32 0, i32 33
  %97 = load i8** %ciphers, align 8
  %tobool = icmp ne i8* %97, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %98 = load %struct.Options** %o.addr, align 8
  %ciphers2 = getelementptr inbounds %struct.Options* %98, i32 0, i32 33
  %99 = load i8** %ciphers2, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %99, %cond.true ], [ getelementptr inbounds ([142 x i8]* @.str19213, i32 0, i32 0), %cond.false ]
  call void @dump_cfg_string(i32 39, i8* %cond)
  %100 = load %struct.Options** %o.addr, align 8
  %control_path = getelementptr inbounds %struct.Options* %100, i32 0, i32 77
  %101 = load i8** %control_path, align 8
  call void @dump_cfg_string(i32 65, i8* %101)
  %102 = load %struct.Options** %o.addr, align 8
  %hostkeyalgorithms3 = getelementptr inbounds %struct.Options* %102, i32 0, i32 35
  %103 = load i8** %hostkeyalgorithms3, align 8
  call void @dump_cfg_string(i32 49, i8* %103)
  %104 = load %struct.Options** %o.addr, align 8
  %host_key_alias = getelementptr inbounds %struct.Options* %104, i32 0, i32 39
  %105 = load i8** %host_key_alias, align 8
  call void @dump_cfg_string(i32 45, i8* %105)
  %106 = load %struct.Options** %o.addr, align 8
  %hostbased_key_types = getelementptr inbounds %struct.Options* %106, i32 0, i32 100
  %107 = load i8** %hostbased_key_types, align 8
  call void @dump_cfg_string(i32 89, i8* %107)
  %108 = load %struct.Options** %o.addr, align 8
  %identity_agent = getelementptr inbounds %struct.Options* %108, i32 0, i32 60
  %109 = load i8** %identity_agent, align 8
  call void @dump_cfg_string(i32 22, i8* %109)
  %110 = load %struct.Options** %o.addr, align 8
  %kbd_interactive_devices = getelementptr inbounds %struct.Options* %110, i32 0, i32 17
  %111 = load i8** %kbd_interactive_devices, align 8
  call void @dump_cfg_string(i32 44, i8* %111)
  %112 = load %struct.Options** %o.addr, align 8
  %kex_algorithms = getelementptr inbounds %struct.Options* %112, i32 0, i32 36
  %113 = load i8** %kex_algorithms, align 8
  %tobool4 = icmp ne i8* %113, null
  br i1 %tobool4, label %cond.true5, label %cond.false7

cond.true5:                                       ; preds = %cond.end
  %114 = load %struct.Options** %o.addr, align 8
  %kex_algorithms6 = getelementptr inbounds %struct.Options* %114, i32 0, i32 36
  %115 = load i8** %kex_algorithms6, align 8
  br label %cond.end8

cond.false7:                                      ; preds = %cond.end
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i8* [ %115, %cond.true5 ], [ getelementptr inbounds ([294 x i8]* @.str21215, i32 0, i32 0), %cond.false7 ]
  call void @dump_cfg_string(i32 74, i8* %cond9)
  %116 = load %struct.Options** %o.addr, align 8
  %local_command = getelementptr inbounds %struct.Options* %116, i32 0, i32 85
  %117 = load i8** %local_command, align 8
  call void @dump_cfg_string(i32 71, i8* %117)
  %118 = load %struct.Options** %o.addr, align 8
  %log_level = getelementptr inbounds %struct.Options* %118, i32 0, i32 26
  %119 = load i32* %log_level, align 4
  %call10 = call i8* @log_level_name(i32 %119)
  call void @dump_cfg_string(i32 38, i8* %call10)
  %120 = load %struct.Options** %o.addr, align 8
  %macs = getelementptr inbounds %struct.Options* %120, i32 0, i32 34
  %121 = load i8** %macs, align 8
  %tobool11 = icmp ne i8* %121, null
  br i1 %tobool11, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %cond.end8
  %122 = load %struct.Options** %o.addr, align 8
  %macs13 = getelementptr inbounds %struct.Options* %122, i32 0, i32 34
  %123 = load i8** %macs13, align 8
  br label %cond.end15

cond.false14:                                     ; preds = %cond.end8
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i8* [ %123, %cond.true12 ], [ getelementptr inbounds ([214 x i8]* @.str20214, i32 0, i32 0), %cond.false14 ]
  call void @dump_cfg_string(i32 41, i8* %cond16)
  %124 = load %struct.Options** %o.addr, align 8
  %pkcs11_provider = getelementptr inbounds %struct.Options* %124, i32 0, i32 49
  %125 = load i8** %pkcs11_provider, align 8
  call void @dump_cfg_string(i32 51, i8* %125)
  %126 = load %struct.Options** %o.addr, align 8
  %preferred_authentications = getelementptr inbounds %struct.Options* %126, i32 0, i32 47
  %127 = load i8** %preferred_authentications, align 8
  call void @dump_cfg_string(i32 47, i8* %127)
  %128 = load %struct.Options** %o.addr, align 8
  %pubkey_key_types = getelementptr inbounds %struct.Options* %128, i32 0, i32 101
  %129 = load i8** %pubkey_key_types, align 8
  call void @dump_cfg_string(i32 90, i8* %129)
  %130 = load %struct.Options** %o.addr, align 8
  %revoked_host_keys = getelementptr inbounds %struct.Options* %130, i32 0, i32 97
  %131 = load i8** %revoked_host_keys, align 8
  call void @dump_cfg_string(i32 86, i8* %131)
  %132 = load %struct.Options** %o.addr, align 8
  %xauth_location = getelementptr inbounds %struct.Options* %132, i32 0, i32 5
  %133 = load i8** %xauth_location, align 8
  call void @dump_cfg_string(i32 13, i8* %133)
  %134 = load %struct.Options** %o.addr, align 8
  %num_local_forwards = getelementptr inbounds %struct.Options* %134, i32 0, i32 61
  %135 = load i32* %num_local_forwards, align 4
  %136 = load %struct.Options** %o.addr, align 8
  %local_forwards = getelementptr inbounds %struct.Options* %136, i32 0, i32 62
  %137 = load %struct.Forward** %local_forwards, align 8
  call void @dump_cfg_forwards(i32 46, i32 %135, %struct.Forward* %137)
  %138 = load %struct.Options** %o.addr, align 8
  %num_local_forwards17 = getelementptr inbounds %struct.Options* %138, i32 0, i32 61
  %139 = load i32* %num_local_forwards17, align 4
  %140 = load %struct.Options** %o.addr, align 8
  %local_forwards18 = getelementptr inbounds %struct.Options* %140, i32 0, i32 62
  %141 = load %struct.Forward** %local_forwards18, align 8
  call void @dump_cfg_forwards(i32 19, i32 %139, %struct.Forward* %141)
  %142 = load %struct.Options** %o.addr, align 8
  %num_remote_forwards = getelementptr inbounds %struct.Options* %142, i32 0, i32 63
  %143 = load i32* %num_remote_forwards, align 4
  %144 = load %struct.Options** %o.addr, align 8
  %remote_forwards = getelementptr inbounds %struct.Options* %144, i32 0, i32 64
  %145 = load %struct.Forward** %remote_forwards, align 8
  call void @dump_cfg_forwards(i32 18, i32 %143, %struct.Forward* %145)
  %146 = load %struct.Options** %o.addr, align 8
  %num_identity_files = getelementptr inbounds %struct.Options* %146, i32 0, i32 51
  %147 = load i32* %num_identity_files, align 4
  %148 = load %struct.Options** %o.addr, align 8
  %identity_files = getelementptr inbounds %struct.Options* %148, i32 0, i32 52
  %arraydecay = getelementptr inbounds [100 x i8*]* %identity_files, i32 0, i32 0
  call void @dump_cfg_strarray(i32 14, i32 %147, i8** %arraydecay)
  %149 = load %struct.Options** %o.addr, align 8
  %num_canonical_domains = getelementptr inbounds %struct.Options* %149, i32 0, i32 90
  %150 = load i32* %num_canonical_domains, align 4
  %151 = load %struct.Options** %o.addr, align 8
  %canonical_domains = getelementptr inbounds %struct.Options* %151, i32 0, i32 91
  %arraydecay19 = getelementptr inbounds [32 x i8*]* %canonical_domains, i32 0, i32 0
  call void @dump_cfg_strarray_oneline(i32 79, i32 %150, i8** %arraydecay19)
  %152 = load %struct.Options** %o.addr, align 8
  %num_system_hostfiles = getelementptr inbounds %struct.Options* %152, i32 0, i32 43
  %153 = load i32* %num_system_hostfiles, align 4
  %154 = load %struct.Options** %o.addr, align 8
  %system_hostfiles = getelementptr inbounds %struct.Options* %154, i32 0, i32 44
  %arraydecay20 = getelementptr inbounds [32 x i8*]* %system_hostfiles, i32 0, i32 0
  call void @dump_cfg_strarray_oneline(i32 27, i32 %153, i8** %arraydecay20)
  %155 = load %struct.Options** %o.addr, align 8
  %num_user_hostfiles = getelementptr inbounds %struct.Options* %155, i32 0, i32 45
  %156 = load i32* %num_user_hostfiles, align 4
  %157 = load %struct.Options** %o.addr, align 8
  %user_hostfiles = getelementptr inbounds %struct.Options* %157, i32 0, i32 46
  %arraydecay21 = getelementptr inbounds [32 x i8*]* %user_hostfiles, i32 0, i32 0
  call void @dump_cfg_strarray_oneline(i32 28, i32 %156, i8** %arraydecay21)
  %158 = load %struct.Options** %o.addr, align 8
  %num_send_env = getelementptr inbounds %struct.Options* %158, i32 0, i32 75
  %159 = load i32* %num_send_env, align 4
  %160 = load %struct.Options** %o.addr, align 8
  %send_env = getelementptr inbounds %struct.Options* %160, i32 0, i32 76
  %arraydecay22 = getelementptr inbounds [256 x i8*]* %send_env, i32 0, i32 0
  call void @dump_cfg_strarray(i32 64, i32 %159, i8** %arraydecay22)
  %161 = load %struct.Options** %o.addr, align 8
  %connection_timeout = getelementptr inbounds %struct.Options* %161, i32 0, i32 30
  %162 = load i32* %connection_timeout, align 4
  %163 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %164 = extractvalue { i32, i1 } %163, 0
  %165 = extractvalue { i32, i1 } %163, 1
  %166 = xor i1 %165, true
  br i1 %166, label %cont, label %trap

trap:                                             ; preds = %cond.end15
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %cond.end15
  %cmp23 = icmp eq i32 %162, %164
  br i1 %cmp23, label %if.then24, label %if.else

if.then24:                                        ; preds = %cont
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str25219, i32 0, i32 0))
  br label %if.end27

if.else:                                          ; preds = %cont
  %167 = load %struct.Options** %o.addr, align 8
  %connection_timeout26 = getelementptr inbounds %struct.Options* %167, i32 0, i32 30
  %168 = load i32* %connection_timeout26, align 4
  call void @dump_cfg_int(i32 57, i32 %168)
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %call28 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str26220, i32 0, i32 0))
  %169 = load %struct.Options** %o.addr, align 8
  %tun_local = getelementptr inbounds %struct.Options* %169, i32 0, i32 83
  %170 = load i32* %tun_local, align 4
  %cmp29 = icmp eq i32 %170, 2147483647
  br i1 %cmp29, label %if.then30, label %if.else32

if.then30:                                        ; preds = %if.end27
  %call31 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str27221, i32 0, i32 0))
  br label %if.end35

if.else32:                                        ; preds = %if.end27
  %171 = load %struct.Options** %o.addr, align 8
  %tun_local33 = getelementptr inbounds %struct.Options* %171, i32 0, i32 83
  %172 = load i32* %tun_local33, align 4
  %call34 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str28222, i32 0, i32 0), i32 %172)
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then30
  %173 = load %struct.Options** %o.addr, align 8
  %tun_remote = getelementptr inbounds %struct.Options* %173, i32 0, i32 84
  %174 = load i32* %tun_remote, align 4
  %cmp36 = icmp eq i32 %174, 2147483647
  br i1 %cmp36, label %if.then37, label %if.else39

if.then37:                                        ; preds = %if.end35
  %call38 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str29223, i32 0, i32 0))
  br label %if.end42

if.else39:                                        ; preds = %if.end35
  %175 = load %struct.Options** %o.addr, align 8
  %tun_remote40 = getelementptr inbounds %struct.Options* %175, i32 0, i32 84
  %176 = load i32* %tun_remote40, align 4
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str30224, i32 0, i32 0), i32 %176)
  br label %if.end42

if.end42:                                         ; preds = %if.else39, %if.then37
  %call43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str31225, i32 0, i32 0))
  %177 = load %struct.Options** %o.addr, align 8
  %num_permitted_cnames = getelementptr inbounds %struct.Options* %177, i32 0, i32 95
  %178 = load i32* %num_permitted_cnames, align 4
  %cmp44 = icmp sgt i32 %178, 0
  br i1 %cmp44, label %if.then45, label %if.end56

if.then45:                                        ; preds = %if.end42
  %call46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str32226, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont54, %if.then45
  %179 = load i32* %i, align 4
  %180 = load %struct.Options** %o.addr, align 8
  %num_permitted_cnames47 = getelementptr inbounds %struct.Options* %180, i32 0, i32 95
  %181 = load i32* %num_permitted_cnames47, align 4
  %cmp48 = icmp slt i32 %179, %181
  br i1 %cmp48, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %182 = load i32* %i, align 4
  %idxprom = sext i32 %182 to i64
  %183 = load %struct.Options** %o.addr, align 8
  %permitted_cnames = getelementptr inbounds %struct.Options* %183, i32 0, i32 96
  %arrayidx = getelementptr inbounds [32 x %struct.allowed_cname]* %permitted_cnames, i32 0, i64 %idxprom
  %source_list = getelementptr inbounds %struct.allowed_cname* %arrayidx, i32 0, i32 0
  %184 = load i8** %source_list, align 8
  %185 = load i32* %i, align 4
  %idxprom49 = sext i32 %185 to i64
  %186 = load %struct.Options** %o.addr, align 8
  %permitted_cnames50 = getelementptr inbounds %struct.Options* %186, i32 0, i32 96
  %arrayidx51 = getelementptr inbounds [32 x %struct.allowed_cname]* %permitted_cnames50, i32 0, i64 %idxprom49
  %target_list = getelementptr inbounds %struct.allowed_cname* %arrayidx51, i32 0, i32 1
  %187 = load i8** %target_list, align 8
  %call52 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str33227, i32 0, i32 0), i8* %184, i8* %187)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %188 = load i32* %i, align 4
  %189 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %188, i32 1)
  %190 = extractvalue { i32, i1 } %189, 0
  %191 = extractvalue { i32, i1 } %189, 1
  %192 = xor i1 %191, true
  br i1 %192, label %cont54, label %trap53

trap53:                                           ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont54:                                           ; preds = %for.inc
  store i32 %190, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call55 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str31225, i32 0, i32 0))
  br label %if.end56

if.end56:                                         ; preds = %for.end, %if.end42
  %193 = load %struct.Options** %o.addr, align 8
  %cipher = getelementptr inbounds %struct.Options* %193, i32 0, i32 32
  %194 = load i32* %cipher, align 4
  %195 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %196 = extractvalue { i32, i1 } %195, 0
  %197 = extractvalue { i32, i1 } %195, 1
  %198 = xor i1 %197, true
  br i1 %198, label %cont58, label %trap57

trap57:                                           ; preds = %if.end56
  call void @llvm.trap() #3
  unreachable

cont58:                                           ; preds = %if.end56
  %cmp59 = icmp ne i32 %194, %196
  br i1 %cmp59, label %if.then60, label %if.end64

if.then60:                                        ; preds = %cont58
  %199 = load %struct.Options** %o.addr, align 8
  %cipher61 = getelementptr inbounds %struct.Options* %199, i32 0, i32 32
  %200 = load i32* %cipher61, align 4
  %call62 = call i8* @cipher_name(i32 %200)
  %call63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str34228, i32 0, i32 0), i8* %call62)
  br label %if.end64

if.end64:                                         ; preds = %if.then60, %cont58
  %201 = load %struct.Options** %o.addr, align 8
  %control_persist = getelementptr inbounds %struct.Options* %201, i32 0, i32 79
  %202 = load i32* %control_persist, align 4
  %cmp65 = icmp eq i32 %202, 0
  br i1 %cmp65, label %if.then67, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end64
  %203 = load %struct.Options** %o.addr, align 8
  %control_persist_timeout = getelementptr inbounds %struct.Options* %203, i32 0, i32 80
  %204 = load i32* %control_persist_timeout, align 4
  %cmp66 = icmp eq i32 %204, 0
  br i1 %cmp66, label %if.then67, label %if.else69

if.then67:                                        ; preds = %lor.lhs.false, %if.end64
  %205 = load %struct.Options** %o.addr, align 8
  %control_persist68 = getelementptr inbounds %struct.Options* %205, i32 0, i32 79
  %206 = load i32* %control_persist68, align 4
  call void @dump_cfg_fmtint(i32 67, i32 %206)
  br label %if.end71

if.else69:                                        ; preds = %lor.lhs.false
  %207 = load %struct.Options** %o.addr, align 8
  %control_persist_timeout70 = getelementptr inbounds %struct.Options* %207, i32 0, i32 80
  %208 = load i32* %control_persist_timeout70, align 4
  call void @dump_cfg_int(i32 67, i32 %208)
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.then67
  %209 = load %struct.Options** %o.addr, align 8
  %escape_char = getelementptr inbounds %struct.Options* %209, i32 0, i32 42
  %210 = load i32* %escape_char, align 4
  %211 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %212 = extractvalue { i32, i1 } %211, 0
  %213 = extractvalue { i32, i1 } %211, 1
  %214 = xor i1 %213, true
  br i1 %214, label %cont73, label %trap72

trap72:                                           ; preds = %if.end71
  call void @llvm.trap() #3
  unreachable

cont73:                                           ; preds = %if.end71
  %cmp74 = icmp eq i32 %210, %212
  br i1 %cmp74, label %if.then75, label %if.else77

if.then75:                                        ; preds = %cont73
  %call76 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str35229, i32 0, i32 0))
  br label %if.end83

if.else77:                                        ; preds = %cont73
  %arraydecay78 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0
  %215 = load %struct.Options** %o.addr, align 8
  %escape_char79 = getelementptr inbounds %struct.Options* %215, i32 0, i32 42
  %216 = load i32* %escape_char79, align 4
  %call80 = call i8* @vis(i8* %arraydecay78, i32 %216, i32 28, i32 0)
  %arraydecay81 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0
  %call82 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str36230, i32 0, i32 0), i8* %arraydecay81)
  br label %if.end83

if.end83:                                         ; preds = %if.else77, %if.then75
  %217 = load %struct.Options** %o.addr, align 8
  %ip_qos_interactive = getelementptr inbounds %struct.Options* %217, i32 0, i32 24
  %218 = load i32* %ip_qos_interactive, align 4
  %call84 = call i8* @iptos2str(i32 %218)
  %call85 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str37231, i32 0, i32 0), i8* %call84)
  %219 = load %struct.Options** %o.addr, align 8
  %ip_qos_bulk = getelementptr inbounds %struct.Options* %219, i32 0, i32 25
  %220 = load i32* %ip_qos_bulk, align 4
  %call86 = call i8* @iptos2str(i32 %220)
  %call87 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str38232, i32 0, i32 0), i8* %call86)
  %221 = load %struct.Options** %o.addr, align 8
  %rekey_limit = getelementptr inbounds %struct.Options* %221, i32 0, i32 69
  %222 = load i64* %rekey_limit, align 8
  %223 = load %struct.Options** %o.addr, align 8
  %rekey_interval = getelementptr inbounds %struct.Options* %223, i32 0, i32 70
  %224 = load i32* %rekey_interval, align 4
  %call88 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str39233, i32 0, i32 0), i64 %222, i32 %224)
  %225 = load %struct.Options** %o.addr, align 8
  %fwd_opts89 = getelementptr inbounds %struct.Options* %225, i32 0, i32 6
  %streamlocal_bind_mask = getelementptr inbounds %struct.ForwardOptions* %fwd_opts89, i32 0, i32 1
  %226 = load i32* %streamlocal_bind_mask, align 4
  %call90 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str40234, i32 0, i32 0), i32 %226)
  %227 = load %struct.Options** %o.addr, align 8
  %jump_host = getelementptr inbounds %struct.Options* %227, i32 0, i32 103
  %228 = load i8** %jump_host, align 8
  %cmp91 = icmp eq i8* %228, null
  br i1 %cmp91, label %if.then92, label %if.else93

if.then92:                                        ; preds = %if.end83
  %229 = load %struct.Options** %o.addr, align 8
  %proxy_command = getelementptr inbounds %struct.Options* %229, i32 0, i32 40
  %230 = load i8** %proxy_command, align 8
  call void @dump_cfg_string(i32 26, i8* %230)
  br label %if.end138

if.else93:                                        ; preds = %if.end83
  %231 = load %struct.Options** %o.addr, align 8
  %jump_host94 = getelementptr inbounds %struct.Options* %231, i32 0, i32 103
  %232 = load i8** %jump_host94, align 8
  %call95 = call i8* @strchr(i8* %232, i32 58) #12
  %cmp96 = icmp ne i8* %call95, null
  br i1 %cmp96, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.else93
  %233 = load %struct.Options** %o.addr, align 8
  %jump_host97 = getelementptr inbounds %struct.Options* %233, i32 0, i32 103
  %234 = load i8** %jump_host97, align 8
  %call98 = call i64 @strspn(i8* %234, i8* getelementptr inbounds ([12 x i8]* @.str41235, i32 0, i32 0)) #12
  %235 = load %struct.Options** %o.addr, align 8
  %jump_host99 = getelementptr inbounds %struct.Options* %235, i32 0, i32 103
  %236 = load i8** %jump_host99, align 8
  %call100 = call i64 @strlen(i8* %236) #12
  %cmp101 = icmp eq i64 %call98, %call100
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.else93
  %237 = phi i1 [ true, %if.else93 ], [ %cmp101, %lor.rhs ]
  %lor.ext = zext i1 %237 to i32
  store i32 %lor.ext, i32* %i, align 4
  %arraydecay102 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0
  %238 = load %struct.Options** %o.addr, align 8
  %jump_port = getelementptr inbounds %struct.Options* %238, i32 0, i32 104
  %239 = load i32* %jump_port, align 4
  %call103 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay102, i64 8, i8* getelementptr inbounds ([3 x i8]* @.str42236, i32 0, i32 0), i32 %239) #9
  %240 = load %struct.Options** %o.addr, align 8
  %jump_extra = getelementptr inbounds %struct.Options* %240, i32 0, i32 105
  %241 = load i8** %jump_extra, align 8
  %cmp104 = icmp eq i8* %241, null
  br i1 %cmp104, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %lor.end
  br label %cond.end108

cond.false106:                                    ; preds = %lor.end
  %242 = load %struct.Options** %o.addr, align 8
  %jump_extra107 = getelementptr inbounds %struct.Options* %242, i32 0, i32 105
  %243 = load i8** %jump_extra107, align 8
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false106, %cond.true105
  %cond109 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), %cond.true105 ], [ %243, %cond.false106 ]
  %244 = load %struct.Options** %o.addr, align 8
  %jump_extra110 = getelementptr inbounds %struct.Options* %244, i32 0, i32 105
  %245 = load i8** %jump_extra110, align 8
  %cmp111 = icmp eq i8* %245, null
  %cond112 = select i1 %cmp111, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str45239, i32 0, i32 0)
  %246 = load %struct.Options** %o.addr, align 8
  %jump_user = getelementptr inbounds %struct.Options* %246, i32 0, i32 102
  %247 = load i8** %jump_user, align 8
  %cmp113 = icmp eq i8* %247, null
  br i1 %cmp113, label %cond.true114, label %cond.false115

cond.true114:                                     ; preds = %cond.end108
  br label %cond.end117

cond.false115:                                    ; preds = %cond.end108
  %248 = load %struct.Options** %o.addr, align 8
  %jump_user116 = getelementptr inbounds %struct.Options* %248, i32 0, i32 102
  %249 = load i8** %jump_user116, align 8
  br label %cond.end117

cond.end117:                                      ; preds = %cond.false115, %cond.true114
  %cond118 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), %cond.true114 ], [ %249, %cond.false115 ]
  %250 = load %struct.Options** %o.addr, align 8
  %jump_user119 = getelementptr inbounds %struct.Options* %250, i32 0, i32 102
  %251 = load i8** %jump_user119, align 8
  %cmp120 = icmp eq i8* %251, null
  %cond121 = select i1 %cmp120, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str46240, i32 0, i32 0)
  %252 = load i32* %i, align 4
  %tobool122 = icmp ne i32 %252, 0
  %cond123 = select i1 %tobool122, i8* getelementptr inbounds ([2 x i8]* @.str47241, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0)
  %253 = load %struct.Options** %o.addr, align 8
  %jump_host124 = getelementptr inbounds %struct.Options* %253, i32 0, i32 103
  %254 = load i8** %jump_host124, align 8
  %255 = load i32* %i, align 4
  %tobool125 = icmp ne i32 %255, 0
  %cond126 = select i1 %tobool125, i8* getelementptr inbounds ([2 x i8]* @.str48242, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0)
  %256 = load %struct.Options** %o.addr, align 8
  %jump_port127 = getelementptr inbounds %struct.Options* %256, i32 0, i32 104
  %257 = load i32* %jump_port127, align 4
  %cmp128 = icmp sle i32 %257, 0
  %cond129 = select i1 %cmp128, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str49243, i32 0, i32 0)
  %258 = load %struct.Options** %o.addr, align 8
  %jump_port130 = getelementptr inbounds %struct.Options* %258, i32 0, i32 104
  %259 = load i32* %jump_port130, align 4
  %cmp131 = icmp sle i32 %259, 0
  br i1 %cmp131, label %cond.true132, label %cond.false133

cond.true132:                                     ; preds = %cond.end117
  br label %cond.end135

cond.false133:                                    ; preds = %cond.end117
  %arraydecay134 = getelementptr inbounds [8 x i8]* %buf, i32 0, i32 0
  br label %cond.end135

cond.end135:                                      ; preds = %cond.false133, %cond.true132
  %cond136 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), %cond.true132 ], [ %arraydecay134, %cond.false133 ]
  %call137 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str43237, i32 0, i32 0), i8* %cond109, i8* %cond112, i8* %cond118, i8* %cond121, i8* %cond123, i8* %254, i8* %cond126, i8* %cond129, i8* %cond136)
  br label %if.end138

if.end138:                                        ; preds = %cond.end135, %if.then92
  ret void
}

declare i8* @log_level_name(i32) #1

declare i8* @cipher_name(i32) #1

declare i8* @vis(i8*, i32, i32, i32) #1

declare i8* @iptos2str(i32) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #8

; Function Attrs: nounwind readonly
declare i64 @strspn(i8*, i8*) #8

declare i8* @ssh_digest_alg_name(i32) #1

; Function Attrs: nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #9

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

declare i32 @fclose(%struct._IO_FILE*) #1

declare i8* @strdelim(i8**) #1

declare i64 @convtime(i8*) #1

declare i32 @scan_scaled(i8*, i64*) #1

; Function Attrs: nounwind
declare i64 @strtol(i8*, i8**, i32) #4

declare i32 @kex_names_valid(i8*) #1

declare i32 @sshkey_names_valid2(i8*, i32) #1

declare i32 @proto_spec(i8*) #1

declare i32 @log_level_number(i8*) #1

declare i32 @match_pattern(i8*, i8*) #1

declare i32 @_ssh__compat_glob(i8*, i32, i32 (i8*, i32)*, %struct._ssh_compat_glob_t*) #1

declare void @_ssh__compat_globfree(%struct._ssh_compat_glob_t*) #1

declare i32 @parse_ipqos(i8*) #1

declare i32 @ssh_digest_alg_by_name(i8*) #1

; Function Attrs: nounwind
declare i32 @tolower(i32) #4

declare i32 @match_hostname(i8*, i8*) #1

declare void @permanently_drop_suid(i32) #1

; Function Attrs: nounwind
declare i32 @execv(i8*, i8**) #4

; Function Attrs: nounwind
declare i32 @kill(i32, i32) #4

; Function Attrs: nounwind
declare i32 @getpid() #4

; Function Attrs: noreturn
declare void @_exit(i32) #6

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_config_line_depth(%struct.Options* %options, %struct.passwd* %pw, i8* %host, i8* %original_host, i8* %line, i8* %filename, i32 %linenum, i32* %activep, i32 %flags, i32 %depth) #0 {
entry:
  %retval = alloca i32, align 4
  %options.addr = alloca %struct.Options*, align 8
  %pw.addr = alloca %struct.passwd*, align 8
  %host.addr = alloca i8*, align 8
  %original_host.addr = alloca i8*, align 8
  %line.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %linenum.addr = alloca i32, align 4
  %activep.addr = alloca i32*, align 8
  %flags.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %s = alloca i8*, align 8
  %charptr = alloca i8**, align 8
  %endofnumber = alloca i8*, align 8
  %keyword = alloca i8*, align 8
  %arg = alloca i8*, align 8
  %arg2 = alloca i8*, align 8
  %cpptr = alloca i8**, align 8
  %fwdarg = alloca [256 x i8], align 16
  %i = alloca i32, align 4
  %uintptr = alloca i32*, align 8
  %max_entries = alloca i32, align 4
  %r = alloca i32, align 4
  %oactive = alloca i32, align 4
  %negated = alloca i32, align 4
  %opcode = alloca i32, align 4
  %intptr = alloca i32*, align 8
  %value = alloca i32, align 4
  %value2 = alloca i32, align 4
  %cmdline = alloca i32, align 4
  %log_level_ptr = alloca i32*, align 8
  %val64 = alloca i64, align 8
  %len = alloca i64, align 8
  %fwd = alloca %struct.Forward, align 8
  %multistate_ptr = alloca %struct.multistate*, align 8
  %cname = alloca %struct.allowed_cname*, align 8
  %gl = alloca %struct._ssh_compat_glob_t, align 8
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  store i8* %original_host, i8** %original_host.addr, align 8
  store i8* %line, i8** %line.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %linenum, i32* %linenum.addr, align 4
  store i32* %activep, i32** %activep.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  store i32 0, i32* %max_entries, align 4
  store i32 0, i32* %cmdline, align 4
  %0 = load i32** %activep.addr, align 8
  %cmp = icmp eq i32* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %cmdline, align 4
  store i32* %cmdline, i32** %activep.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8** %line.addr, align 8
  %call = call i64 @strlen(i8* %1) #12
  store i64 %call, i64* %len, align 8
  %cmp1 = icmp eq i64 %call, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end3:                                          ; preds = %if.end
  %2 = load i64* %len, align 8
  %dec = add i64 %2, -1
  store i64 %dec, i64* %len, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end3
  %3 = load i64* %len, align 8
  %cmp4 = icmp ugt i64 %3, 0
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64* %len, align 8
  %5 = load i8** %line.addr, align 8
  %arrayidx = getelementptr inbounds i8* %5, i64 %4
  %6 = load i8* %arrayidx, align 1
  %conv = sext i8 %6 to i32
  %call5 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8]* @.str185379, i32 0, i32 0), i32 %conv) #12
  %cmp6 = icmp eq i8* %call5, null
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %for.body
  br label %for.end

if.end9:                                          ; preds = %for.body
  %7 = load i64* %len, align 8
  %8 = load i8** %line.addr, align 8
  %arrayidx10 = getelementptr inbounds i8* %8, i64 %7
  store i8 0, i8* %arrayidx10, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end9
  %9 = load i64* %len, align 8
  %dec11 = add i64 %9, -1
  store i64 %dec11, i64* %len, align 8
  br label %for.cond

for.end:                                          ; preds = %if.then8, %for.cond
  %10 = load i8** %line.addr, align 8
  store i8* %10, i8** %s, align 8
  %call12 = call i8* @strdelim(i8** %s)
  store i8* %call12, i8** %keyword, align 8
  %cmp13 = icmp eq i8* %call12, null
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.end
  store i32 0, i32* %retval
  br label %return

if.end16:                                         ; preds = %for.end
  %11 = load i8** %keyword, align 8
  %12 = load i8* %11, align 1
  %conv17 = sext i8 %12 to i32
  %cmp18 = icmp eq i32 %conv17, 0
  br i1 %cmp18, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end16
  %call21 = call i8* @strdelim(i8** %s)
  store i8* %call21, i8** %keyword, align 8
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end16
  %13 = load i8** %keyword, align 8
  %cmp23 = icmp eq i8* %13, null
  br i1 %cmp23, label %if.then33, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end22
  %14 = load i8** %keyword, align 8
  %15 = load i8* %14, align 1
  %tobool = icmp ne i8 %15, 0
  br i1 %tobool, label %lor.lhs.false25, label %if.then33

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %16 = load i8** %keyword, align 8
  %17 = load i8* %16, align 1
  %conv26 = sext i8 %17 to i32
  %cmp27 = icmp eq i32 %conv26, 10
  br i1 %cmp27, label %if.then33, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false25
  %18 = load i8** %keyword, align 8
  %19 = load i8* %18, align 1
  %conv30 = sext i8 %19 to i32
  %cmp31 = icmp eq i32 %conv30, 35
  br i1 %cmp31, label %if.then33, label %if.end34

if.then33:                                        ; preds = %lor.lhs.false29, %lor.lhs.false25, %lor.lhs.false, %if.end22
  store i32 0, i32* %retval
  br label %return

if.end34:                                         ; preds = %lor.lhs.false29
  %20 = load i8** %keyword, align 8
  call void @lowercase(i8* %20)
  %21 = load i8** %keyword, align 8
  %22 = load i8** %filename.addr, align 8
  %23 = load i32* %linenum.addr, align 4
  %24 = load %struct.Options** %options.addr, align 8
  %ignored_unknown = getelementptr inbounds %struct.Options* %24, i32 0, i32 106
  %25 = load i8** %ignored_unknown, align 8
  %call35 = call i32 @parse_token(i8* %21, i8* %22, i32 %23, i8* %25)
  store i32 %call35, i32* %opcode, align 4
  %26 = load i32* %opcode, align 4
  switch i32 %26, label %sw.default [
    i32 0, label %sw.bb
    i32 92, label %sw.bb36
    i32 57, label %sw.bb37
    i32 4, label %sw.bb68
    i32 5, label %sw.bb111
    i32 6, label %sw.bb112
    i32 7, label %sw.bb113
    i32 8, label %sw.bb114
    i32 9, label %sw.bb115
    i32 37, label %sw.bb116
    i32 10, label %sw.bb117
    i32 43, label %sw.bb118
    i32 44, label %sw.bb119
    i32 42, label %sw.bb120
    i32 11, label %sw.bb121
    i32 25, label %sw.bb122
    i32 48, label %sw.bb123
    i32 12, label %sw.bb124
    i32 59, label %sw.bb125
    i32 60, label %sw.bb126
    i32 30, label %sw.bb127
    i32 31, label %sw.bb128
    i32 56, label %sw.bb129
    i32 32, label %sw.bb130
    i32 33, label %sw.bb131
    i32 35, label %sw.bb132
    i32 53, label %sw.bb133
    i32 36, label %sw.bb134
    i32 34, label %sw.bb135
    i32 55, label %sw.bb136
    i32 14, label %sw.bb187
    i32 20, label %sw.bb203
    i32 13, label %sw.bb220
    i32 23, label %sw.bb221
    i32 27, label %sw.bb237
    i32 28, label %sw.bb258
    i32 15, label %sw.bb259
    i32 45, label %sw.bb260
    i32 47, label %sw.bb261
    i32 50, label %sw.bb262
    i32 51, label %sw.bb263
    i32 26, label %sw.bb264
    i32 91, label %sw.bb282
    i32 16, label %sw.bb297
    i32 29, label %sw.bb331
    i32 17, label %sw.bb332
    i32 39, label %sw.bb357
    i32 41, label %sw.bb391
    i32 74, label %sw.bb425
    i32 49, label %sw.bb459
    i32 40, label %sw.bb492
    i32 38, label %sw.bb517
    i32 19, label %sw.bb535
    i32 18, label %sw.bb535
    i32 46, label %sw.bb535
    i32 52, label %sw.bb596
    i32 1, label %sw.bb597
    i32 2, label %sw.bb636
    i32 24, label %sw.bb652
    i32 58, label %sw.bb711
    i32 54, label %sw.bb712
    i32 63, label %sw.bb713
    i32 61, label %sw.bb714
    i32 62, label %sw.bb715
    i32 64, label %sw.bb716
    i32 65, label %sw.bb746
    i32 66, label %sw.bb747
    i32 67, label %sw.bb748
    i32 68, label %sw.bb792
    i32 69, label %sw.bb793
    i32 70, label %sw.bb794
    i32 71, label %sw.bb813
    i32 72, label %sw.bb814
    i32 73, label %sw.bb815
    i32 3, label %sw.bb816
    i32 75, label %sw.bb901
    i32 76, label %sw.bb926
    i32 77, label %sw.bb927
    i32 78, label %sw.bb929
    i32 79, label %sw.bb930
    i32 83, label %sw.bb960
    i32 80, label %sw.bb1008
    i32 81, label %sw.bb1009
    i32 82, label %sw.bb1010
    i32 84, label %sw.bb1011
    i32 85, label %sw.bb1033
    i32 86, label %sw.bb1035
    i32 87, label %sw.bb1036
    i32 88, label %sw.bb1060
    i32 89, label %sw.bb1061
    i32 90, label %sw.bb1062
    i32 21, label %sw.bb1063
    i32 22, label %sw.bb1064
    i32 93, label %sw.bb1065
    i32 94, label %sw.bb1066
  ]

sw.bb:                                            ; preds = %if.end34
  %27 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  %30 = xor i1 %29, true
  br i1 %30, label %cont, label %trap

trap:                                             ; preds = %sw.bb
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %sw.bb
  store i32 %28, i32* %retval
  br label %return

sw.bb36:                                          ; preds = %if.end34
  %31 = load i8** %filename.addr, align 8
  %32 = load i32* %linenum.addr, align 4
  %33 = load i8** %keyword, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([40 x i8]* @.str186380, i32 0, i32 0), i8* %31, i32 %32, i8* %33)
  store i32 0, i32* %retval
  br label %return

sw.bb37:                                          ; preds = %if.end34
  %34 = load %struct.Options** %options.addr, align 8
  %connection_timeout = getelementptr inbounds %struct.Options* %34, i32 0, i32 30
  store i32* %connection_timeout, i32** %intptr, align 8
  br label %parse_time

parse_time:                                       ; preds = %sw.bb714, %if.end185, %sw.bb113, %sw.bb37
  %call38 = call i8* @strdelim(i8** %s)
  store i8* %call38, i8** %arg, align 8
  %35 = load i8** %arg, align 8
  %tobool39 = icmp ne i8* %35, null
  br i1 %tobool39, label %lor.lhs.false40, label %if.then44

lor.lhs.false40:                                  ; preds = %parse_time
  %36 = load i8** %arg, align 8
  %37 = load i8* %36, align 1
  %conv41 = sext i8 %37 to i32
  %cmp42 = icmp eq i32 %conv41, 0
  br i1 %cmp42, label %if.then44, label %if.end45

if.then44:                                        ; preds = %lor.lhs.false40, %parse_time
  %38 = load i8** %filename.addr, align 8
  %39 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str187381, i32 0, i32 0), i8* %38, i32 %39) #11
  unreachable

if.end45:                                         ; preds = %lor.lhs.false40
  %40 = load i8** %arg, align 8
  %call46 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([5 x i8]* @.str7201, i32 0, i32 0)) #12
  %cmp47 = icmp eq i32 %call46, 0
  br i1 %cmp47, label %if.then49, label %if.else

if.then49:                                        ; preds = %if.end45
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %42 = extractvalue { i32, i1 } %41, 0
  %43 = extractvalue { i32, i1 } %41, 1
  %44 = xor i1 %43, true
  br i1 %44, label %cont51, label %trap50

trap50:                                           ; preds = %if.then49
  call void @llvm.trap() #3
  unreachable

cont51:                                           ; preds = %if.then49
  store i32 %42, i32* %value, align 4
  br label %if.end60

if.else:                                          ; preds = %if.end45
  %45 = load i8** %arg, align 8
  %call52 = call i64 @convtime(i8* %45)
  %conv53 = trunc i64 %call52 to i32
  store i32 %conv53, i32* %value, align 4
  %46 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %47 = extractvalue { i32, i1 } %46, 0
  %48 = extractvalue { i32, i1 } %46, 1
  %49 = xor i1 %48, true
  br i1 %49, label %cont55, label %trap54

trap54:                                           ; preds = %if.else
  call void @llvm.trap() #3
  unreachable

cont55:                                           ; preds = %if.else
  %cmp56 = icmp eq i32 %conv53, %47
  br i1 %cmp56, label %if.then58, label %if.end59

if.then58:                                        ; preds = %cont55
  %50 = load i8** %filename.addr, align 8
  %51 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str188382, i32 0, i32 0), i8* %50, i32 %51) #11
  unreachable

if.end59:                                         ; preds = %cont55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %cont51
  %52 = load i32** %activep.addr, align 8
  %53 = load i32* %52, align 4
  %tobool61 = icmp ne i32 %53, 0
  br i1 %tobool61, label %land.lhs.true, label %if.end67

land.lhs.true:                                    ; preds = %if.end60
  %54 = load i32** %intptr, align 8
  %55 = load i32* %54, align 4
  %56 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %57 = extractvalue { i32, i1 } %56, 0
  %58 = extractvalue { i32, i1 } %56, 1
  %59 = xor i1 %58, true
  br i1 %59, label %cont63, label %trap62

trap62:                                           ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont63:                                           ; preds = %land.lhs.true
  %cmp64 = icmp eq i32 %55, %57
  br i1 %cmp64, label %if.then66, label %if.end67

if.then66:                                        ; preds = %cont63
  %60 = load i32* %value, align 4
  %61 = load i32** %intptr, align 8
  store i32 %60, i32* %61, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %cont63, %if.end60
  br label %sw.epilog

sw.bb68:                                          ; preds = %if.end34
  %62 = load %struct.Options** %options.addr, align 8
  %forward_agent = getelementptr inbounds %struct.Options* %62, i32 0, i32 0
  store i32* %forward_agent, i32** %intptr, align 8
  br label %parse_flag

parse_flag:                                       ; preds = %sw.bb1033, %sw.bb1010, %sw.bb929, %sw.bb815, %sw.bb814, %sw.bb792, %sw.bb713, %sw.bb712, %sw.bb596, %sw.bb133, %sw.bb132, %sw.bb131, %sw.bb128, %sw.bb127, %sw.bb126, %sw.bb125, %sw.bb124, %sw.bb123, %sw.bb122, %sw.bb121, %sw.bb120, %sw.bb118, %sw.bb117, %sw.bb116, %sw.bb115, %sw.bb114, %sw.bb112, %sw.bb111, %sw.bb68
  store %struct.multistate* getelementptr inbounds ([5 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_flag to [5 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

parse_multistate:                                 ; preds = %sw.bb1063, %sw.bb1060, %sw.bb1008, %sw.bb926, %sw.bb793, %sw.bb747, %sw.bb711, %sw.bb130, %sw.bb129, %parse_flag
  %call69 = call i8* @strdelim(i8** %s)
  store i8* %call69, i8** %arg, align 8
  %63 = load i8** %arg, align 8
  %tobool70 = icmp ne i8* %63, null
  br i1 %tobool70, label %lor.lhs.false71, label %if.then75

lor.lhs.false71:                                  ; preds = %parse_multistate
  %64 = load i8** %arg, align 8
  %65 = load i8* %64, align 1
  %conv72 = sext i8 %65 to i32
  %cmp73 = icmp eq i32 %conv72, 0
  br i1 %cmp73, label %if.then75, label %if.end76

if.then75:                                        ; preds = %lor.lhs.false71, %parse_multistate
  %66 = load i8** %filename.addr, align 8
  %67 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str189383, i32 0, i32 0), i8* %66, i32 %67) #11
  unreachable

if.end76:                                         ; preds = %lor.lhs.false71
  %68 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %69 = extractvalue { i32, i1 } %68, 0
  %70 = extractvalue { i32, i1 } %68, 1
  %71 = xor i1 %70, true
  br i1 %71, label %cont78, label %trap77

trap77:                                           ; preds = %if.end76
  call void @llvm.trap() #3
  unreachable

cont78:                                           ; preds = %if.end76
  store i32 %69, i32* %value, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc95, %cont78
  %72 = load i32* %i, align 4
  %idxprom = zext i32 %72 to i64
  %73 = load %struct.multistate** %multistate_ptr, align 8
  %arrayidx80 = getelementptr inbounds %struct.multistate* %73, i64 %idxprom
  %key = getelementptr inbounds %struct.multistate* %arrayidx80, i32 0, i32 0
  %74 = load i8** %key, align 8
  %cmp81 = icmp ne i8* %74, null
  br i1 %cmp81, label %for.body83, label %for.end96

for.body83:                                       ; preds = %for.cond79
  %75 = load i8** %arg, align 8
  %76 = load i32* %i, align 4
  %idxprom84 = zext i32 %76 to i64
  %77 = load %struct.multistate** %multistate_ptr, align 8
  %arrayidx85 = getelementptr inbounds %struct.multistate* %77, i64 %idxprom84
  %key86 = getelementptr inbounds %struct.multistate* %arrayidx85, i32 0, i32 0
  %78 = load i8** %key86, align 8
  %call87 = call i32 @strcasecmp(i8* %75, i8* %78) #12
  %cmp88 = icmp eq i32 %call87, 0
  br i1 %cmp88, label %if.then90, label %if.end94

if.then90:                                        ; preds = %for.body83
  %79 = load i32* %i, align 4
  %idxprom91 = zext i32 %79 to i64
  %80 = load %struct.multistate** %multistate_ptr, align 8
  %arrayidx92 = getelementptr inbounds %struct.multistate* %80, i64 %idxprom91
  %value93 = getelementptr inbounds %struct.multistate* %arrayidx92, i32 0, i32 1
  %81 = load i32* %value93, align 4
  store i32 %81, i32* %value, align 4
  br label %for.end96

if.end94:                                         ; preds = %for.body83
  br label %for.inc95

for.inc95:                                        ; preds = %if.end94
  %82 = load i32* %i, align 4
  %inc = add i32 %82, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond79

for.end96:                                        ; preds = %if.then90, %for.cond79
  %83 = load i32* %value, align 4
  %84 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %85 = extractvalue { i32, i1 } %84, 0
  %86 = extractvalue { i32, i1 } %84, 1
  %87 = xor i1 %86, true
  br i1 %87, label %cont98, label %trap97

trap97:                                           ; preds = %for.end96
  call void @llvm.trap() #3
  unreachable

cont98:                                           ; preds = %for.end96
  %cmp99 = icmp eq i32 %83, %85
  br i1 %cmp99, label %if.then101, label %if.end102

if.then101:                                       ; preds = %cont98
  %88 = load i8** %filename.addr, align 8
  %89 = load i32* %linenum.addr, align 4
  %90 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str190384, i32 0, i32 0), i8* %88, i32 %89, i8* %90) #11
  unreachable

if.end102:                                        ; preds = %cont98
  %91 = load i32** %activep.addr, align 8
  %92 = load i32* %91, align 4
  %tobool103 = icmp ne i32 %92, 0
  br i1 %tobool103, label %land.lhs.true104, label %if.end110

land.lhs.true104:                                 ; preds = %if.end102
  %93 = load i32** %intptr, align 8
  %94 = load i32* %93, align 4
  %95 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %96 = extractvalue { i32, i1 } %95, 0
  %97 = extractvalue { i32, i1 } %95, 1
  %98 = xor i1 %97, true
  br i1 %98, label %cont106, label %trap105

trap105:                                          ; preds = %land.lhs.true104
  call void @llvm.trap() #3
  unreachable

cont106:                                          ; preds = %land.lhs.true104
  %cmp107 = icmp eq i32 %94, %96
  br i1 %cmp107, label %if.then109, label %if.end110

if.then109:                                       ; preds = %cont106
  %99 = load i32* %value, align 4
  %100 = load i32** %intptr, align 8
  store i32 %99, i32* %100, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.then109, %cont106, %if.end102
  br label %sw.epilog

sw.bb111:                                         ; preds = %if.end34
  %101 = load %struct.Options** %options.addr, align 8
  %forward_x11 = getelementptr inbounds %struct.Options* %101, i32 0, i32 1
  store i32* %forward_x11, i32** %intptr, align 8
  br label %parse_flag

sw.bb112:                                         ; preds = %if.end34
  %102 = load %struct.Options** %options.addr, align 8
  %forward_x11_trusted = getelementptr inbounds %struct.Options* %102, i32 0, i32 3
  store i32* %forward_x11_trusted, i32** %intptr, align 8
  br label %parse_flag

sw.bb113:                                         ; preds = %if.end34
  %103 = load %struct.Options** %options.addr, align 8
  %forward_x11_timeout = getelementptr inbounds %struct.Options* %103, i32 0, i32 2
  store i32* %forward_x11_timeout, i32** %intptr, align 8
  br label %parse_time

sw.bb114:                                         ; preds = %if.end34
  %104 = load %struct.Options** %options.addr, align 8
  %fwd_opts = getelementptr inbounds %struct.Options* %104, i32 0, i32 6
  %gateway_ports = getelementptr inbounds %struct.ForwardOptions* %fwd_opts, i32 0, i32 0
  store i32* %gateway_ports, i32** %intptr, align 8
  br label %parse_flag

sw.bb115:                                         ; preds = %if.end34
  %105 = load %struct.Options** %options.addr, align 8
  %exit_on_forward_failure = getelementptr inbounds %struct.Options* %105, i32 0, i32 4
  store i32* %exit_on_forward_failure, i32** %intptr, align 8
  br label %parse_flag

sw.bb116:                                         ; preds = %if.end34
  %106 = load %struct.Options** %options.addr, align 8
  %use_privileged_port = getelementptr inbounds %struct.Options* %106, i32 0, i32 7
  store i32* %use_privileged_port, i32** %intptr, align 8
  br label %parse_flag

sw.bb117:                                         ; preds = %if.end34
  %107 = load %struct.Options** %options.addr, align 8
  %password_authentication = getelementptr inbounds %struct.Options* %107, i32 0, i32 15
  store i32* %password_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb118:                                         ; preds = %if.end34
  %108 = load %struct.Options** %options.addr, align 8
  %kbd_interactive_authentication = getelementptr inbounds %struct.Options* %108, i32 0, i32 16
  store i32* %kbd_interactive_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb119:                                         ; preds = %if.end34
  %109 = load %struct.Options** %options.addr, align 8
  %kbd_interactive_devices = getelementptr inbounds %struct.Options* %109, i32 0, i32 17
  store i8** %kbd_interactive_devices, i8*** %charptr, align 8
  br label %parse_string

sw.bb120:                                         ; preds = %if.end34
  %110 = load %struct.Options** %options.addr, align 8
  %pubkey_authentication = getelementptr inbounds %struct.Options* %110, i32 0, i32 10
  store i32* %pubkey_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb121:                                         ; preds = %if.end34
  %111 = load %struct.Options** %options.addr, align 8
  %rsa_authentication = getelementptr inbounds %struct.Options* %111, i32 0, i32 9
  store i32* %rsa_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb122:                                         ; preds = %if.end34
  %112 = load %struct.Options** %options.addr, align 8
  %rhosts_rsa_authentication = getelementptr inbounds %struct.Options* %112, i32 0, i32 8
  store i32* %rhosts_rsa_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb123:                                         ; preds = %if.end34
  %113 = load %struct.Options** %options.addr, align 8
  %hostbased_authentication = getelementptr inbounds %struct.Options* %113, i32 0, i32 11
  store i32* %hostbased_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb124:                                         ; preds = %if.end34
  %114 = load %struct.Options** %options.addr, align 8
  %challenge_response_authentication = getelementptr inbounds %struct.Options* %114, i32 0, i32 12
  store i32* %challenge_response_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb125:                                         ; preds = %if.end34
  %115 = load %struct.Options** %options.addr, align 8
  %gss_authentication = getelementptr inbounds %struct.Options* %115, i32 0, i32 13
  store i32* %gss_authentication, i32** %intptr, align 8
  br label %parse_flag

sw.bb126:                                         ; preds = %if.end34
  %116 = load %struct.Options** %options.addr, align 8
  %gss_deleg_creds = getelementptr inbounds %struct.Options* %116, i32 0, i32 14
  store i32* %gss_deleg_creds, i32** %intptr, align 8
  br label %parse_flag

sw.bb127:                                         ; preds = %if.end34
  %117 = load %struct.Options** %options.addr, align 8
  %batch_mode = getelementptr inbounds %struct.Options* %117, i32 0, i32 18
  store i32* %batch_mode, i32** %intptr, align 8
  br label %parse_flag

sw.bb128:                                         ; preds = %if.end34
  %118 = load %struct.Options** %options.addr, align 8
  %check_host_ip = getelementptr inbounds %struct.Options* %118, i32 0, i32 19
  store i32* %check_host_ip, i32** %intptr, align 8
  br label %parse_flag

sw.bb129:                                         ; preds = %if.end34
  %119 = load %struct.Options** %options.addr, align 8
  %verify_host_key_dns = getelementptr inbounds %struct.Options* %119, i32 0, i32 50
  store i32* %verify_host_key_dns, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([6 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_yesnoask to [6 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb130:                                         ; preds = %if.end34
  %120 = load %struct.Options** %options.addr, align 8
  %strict_host_key_checking = getelementptr inbounds %struct.Options* %120, i32 0, i32 20
  store i32* %strict_host_key_checking, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([6 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_yesnoask to [6 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb131:                                         ; preds = %if.end34
  %121 = load %struct.Options** %options.addr, align 8
  %compression = getelementptr inbounds %struct.Options* %121, i32 0, i32 21
  store i32* %compression, i32** %intptr, align 8
  br label %parse_flag

sw.bb132:                                         ; preds = %if.end34
  %122 = load %struct.Options** %options.addr, align 8
  %tcp_keep_alive = getelementptr inbounds %struct.Options* %122, i32 0, i32 23
  store i32* %tcp_keep_alive, i32** %intptr, align 8
  br label %parse_flag

sw.bb133:                                         ; preds = %if.end34
  %123 = load %struct.Options** %options.addr, align 8
  %no_host_authentication_for_localhost = getelementptr inbounds %struct.Options* %123, i32 0, i32 71
  store i32* %no_host_authentication_for_localhost, i32** %intptr, align 8
  br label %parse_flag

sw.bb134:                                         ; preds = %if.end34
  %124 = load %struct.Options** %options.addr, align 8
  %number_of_password_prompts = getelementptr inbounds %struct.Options* %124, i32 0, i32 31
  store i32* %number_of_password_prompts, i32** %intptr, align 8
  br label %parse_int

sw.bb135:                                         ; preds = %if.end34
  %125 = load %struct.Options** %options.addr, align 8
  %compression_level = getelementptr inbounds %struct.Options* %125, i32 0, i32 22
  store i32* %compression_level, i32** %intptr, align 8
  br label %parse_int

sw.bb136:                                         ; preds = %if.end34
  %call137 = call i8* @strdelim(i8** %s)
  store i8* %call137, i8** %arg, align 8
  %126 = load i8** %arg, align 8
  %tobool138 = icmp ne i8* %126, null
  br i1 %tobool138, label %lor.lhs.false139, label %if.then143

lor.lhs.false139:                                 ; preds = %sw.bb136
  %127 = load i8** %arg, align 8
  %128 = load i8* %127, align 1
  %conv140 = sext i8 %128 to i32
  %cmp141 = icmp eq i32 %conv140, 0
  br i1 %cmp141, label %if.then143, label %if.end144

if.then143:                                       ; preds = %lor.lhs.false139, %sw.bb136
  %129 = load i8** %filename.addr, align 8
  %130 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %129, i32 %130) #11
  unreachable

if.end144:                                        ; preds = %lor.lhs.false139
  %131 = load i8** %arg, align 8
  %call145 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([8 x i8]* @.str192386, i32 0, i32 0)) #12
  %cmp146 = icmp eq i32 %call145, 0
  br i1 %cmp146, label %if.then148, label %if.else149

if.then148:                                       ; preds = %if.end144
  store i64 0, i64* %val64, align 8
  br label %if.end166

if.else149:                                       ; preds = %if.end144
  %132 = load i8** %arg, align 8
  %call150 = call i32 @scan_scaled(i8* %132, i64* %val64)
  %133 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %134 = extractvalue { i32, i1 } %133, 0
  %135 = extractvalue { i32, i1 } %133, 1
  %136 = xor i1 %135, true
  br i1 %136, label %cont152, label %trap151

trap151:                                          ; preds = %if.else149
  call void @llvm.trap() #3
  unreachable

cont152:                                          ; preds = %if.else149
  %cmp153 = icmp eq i32 %call150, %134
  br i1 %cmp153, label %if.then155, label %if.end158

if.then155:                                       ; preds = %cont152
  %137 = load i8** %filename.addr, align 8
  %138 = load i32* %linenum.addr, align 4
  %139 = load i8** %arg, align 8
  %call156 = call i32* @__errno_location() #2
  %140 = load i32* %call156, align 4
  %call157 = call i8* @strerror(i32 %140) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str193387, i32 0, i32 0), i8* %137, i32 %138, i8* %139, i8* %call157) #11
  unreachable

if.end158:                                        ; preds = %cont152
  %141 = load i64* %val64, align 8
  %cmp159 = icmp ne i64 %141, 0
  br i1 %cmp159, label %land.lhs.true161, label %if.end165

land.lhs.true161:                                 ; preds = %if.end158
  %142 = load i64* %val64, align 8
  %cmp162 = icmp slt i64 %142, 16
  br i1 %cmp162, label %if.then164, label %if.end165

if.then164:                                       ; preds = %land.lhs.true161
  %143 = load i8** %filename.addr, align 8
  %144 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str194388, i32 0, i32 0), i8* %143, i32 %144) #11
  unreachable

if.end165:                                        ; preds = %land.lhs.true161, %if.end158
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then148
  %145 = load i32** %activep.addr, align 8
  %146 = load i32* %145, align 4
  %tobool167 = icmp ne i32 %146, 0
  br i1 %tobool167, label %land.lhs.true168, label %if.end176

land.lhs.true168:                                 ; preds = %if.end166
  %147 = load %struct.Options** %options.addr, align 8
  %rekey_limit = getelementptr inbounds %struct.Options* %147, i32 0, i32 69
  %148 = load i64* %rekey_limit, align 8
  %149 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %150 = extractvalue { i32, i1 } %149, 0
  %151 = extractvalue { i32, i1 } %149, 1
  %152 = xor i1 %151, true
  br i1 %152, label %cont170, label %trap169

trap169:                                          ; preds = %land.lhs.true168
  call void @llvm.trap() #3
  unreachable

cont170:                                          ; preds = %land.lhs.true168
  %conv171 = sext i32 %150 to i64
  %cmp172 = icmp eq i64 %148, %conv171
  br i1 %cmp172, label %if.then174, label %if.end176

if.then174:                                       ; preds = %cont170
  %153 = load i64* %val64, align 8
  %154 = load %struct.Options** %options.addr, align 8
  %rekey_limit175 = getelementptr inbounds %struct.Options* %154, i32 0, i32 69
  store i64 %153, i64* %rekey_limit175, align 8
  br label %if.end176

if.end176:                                        ; preds = %if.then174, %cont170, %if.end166
  %155 = load i8** %s, align 8
  %cmp177 = icmp ne i8* %155, null
  br i1 %cmp177, label %if.then179, label %if.end186

if.then179:                                       ; preds = %if.end176
  %156 = load i8** %s, align 8
  %call180 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([5 x i8]* @.str7201, i32 0, i32 0)) #12
  %cmp181 = icmp eq i32 %call180, 0
  br i1 %cmp181, label %if.then183, label %if.end185

if.then183:                                       ; preds = %if.then179
  %call184 = call i8* @strdelim(i8** %s)
  br label %sw.epilog

if.end185:                                        ; preds = %if.then179
  %157 = load %struct.Options** %options.addr, align 8
  %rekey_interval = getelementptr inbounds %struct.Options* %157, i32 0, i32 70
  store i32* %rekey_interval, i32** %intptr, align 8
  br label %parse_time

if.end186:                                        ; preds = %if.end176
  br label %sw.epilog

sw.bb187:                                         ; preds = %if.end34
  %call188 = call i8* @strdelim(i8** %s)
  store i8* %call188, i8** %arg, align 8
  %158 = load i8** %arg, align 8
  %tobool189 = icmp ne i8* %158, null
  br i1 %tobool189, label %lor.lhs.false190, label %if.then194

lor.lhs.false190:                                 ; preds = %sw.bb187
  %159 = load i8** %arg, align 8
  %160 = load i8* %159, align 1
  %conv191 = sext i8 %160 to i32
  %cmp192 = icmp eq i32 %conv191, 0
  br i1 %cmp192, label %if.then194, label %if.end195

if.then194:                                       ; preds = %lor.lhs.false190, %sw.bb187
  %161 = load i8** %filename.addr, align 8
  %162 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %161, i32 %162) #11
  unreachable

if.end195:                                        ; preds = %lor.lhs.false190
  %163 = load i32** %activep.addr, align 8
  %164 = load i32* %163, align 4
  %tobool196 = icmp ne i32 %164, 0
  br i1 %tobool196, label %if.then197, label %if.end202

if.then197:                                       ; preds = %if.end195
  %165 = load %struct.Options** %options.addr, align 8
  %num_identity_files = getelementptr inbounds %struct.Options* %165, i32 0, i32 51
  store i32* %num_identity_files, i32** %intptr, align 8
  %166 = load i32** %intptr, align 8
  %167 = load i32* %166, align 4
  %cmp198 = icmp sge i32 %167, 100
  br i1 %cmp198, label %if.then200, label %if.end201

if.then200:                                       ; preds = %if.then197
  %168 = load i8** %filename.addr, align 8
  %169 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([60 x i8]* @.str195, i32 0, i32 0), i8* %168, i32 %169, i32 100) #11
  unreachable

if.end201:                                        ; preds = %if.then197
  %170 = load %struct.Options** %options.addr, align 8
  %171 = load i8** %arg, align 8
  %172 = load i32* %flags.addr, align 4
  %and = and i32 %172, 2
  call void @add_identity_file(%struct.Options* %170, i8* null, i8* %171, i32 %and)
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.end195
  br label %sw.epilog

sw.bb203:                                         ; preds = %if.end34
  %call204 = call i8* @strdelim(i8** %s)
  store i8* %call204, i8** %arg, align 8
  %173 = load i8** %arg, align 8
  %tobool205 = icmp ne i8* %173, null
  br i1 %tobool205, label %lor.lhs.false206, label %if.then210

lor.lhs.false206:                                 ; preds = %sw.bb203
  %174 = load i8** %arg, align 8
  %175 = load i8* %174, align 1
  %conv207 = sext i8 %175 to i32
  %cmp208 = icmp eq i32 %conv207, 0
  br i1 %cmp208, label %if.then210, label %if.end211

if.then210:                                       ; preds = %lor.lhs.false206, %sw.bb203
  %176 = load i8** %filename.addr, align 8
  %177 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %176, i32 %177) #11
  unreachable

if.end211:                                        ; preds = %lor.lhs.false206
  %178 = load i32** %activep.addr, align 8
  %179 = load i32* %178, align 4
  %tobool212 = icmp ne i32 %179, 0
  br i1 %tobool212, label %if.then213, label %if.end219

if.then213:                                       ; preds = %if.end211
  %180 = load %struct.Options** %options.addr, align 8
  %num_certificate_files = getelementptr inbounds %struct.Options* %180, i32 0, i32 55
  store i32* %num_certificate_files, i32** %intptr, align 8
  %181 = load i32** %intptr, align 8
  %182 = load i32* %181, align 4
  %cmp214 = icmp sge i32 %182, 100
  br i1 %cmp214, label %if.then216, label %if.end217

if.then216:                                       ; preds = %if.then213
  %183 = load i8** %filename.addr, align 8
  %184 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([63 x i8]* @.str196, i32 0, i32 0), i8* %183, i32 %184, i32 100) #11
  unreachable

if.end217:                                        ; preds = %if.then213
  %185 = load %struct.Options** %options.addr, align 8
  %186 = load i8** %arg, align 8
  %187 = load i32* %flags.addr, align 4
  %and218 = and i32 %187, 2
  call void @add_certificate_file(%struct.Options* %185, i8* %186, i32 %and218)
  br label %if.end219

if.end219:                                        ; preds = %if.end217, %if.end211
  br label %sw.epilog

sw.bb220:                                         ; preds = %if.end34
  %188 = load %struct.Options** %options.addr, align 8
  %xauth_location = getelementptr inbounds %struct.Options* %188, i32 0, i32 5
  store i8** %xauth_location, i8*** %charptr, align 8
  br label %parse_string

sw.bb221:                                         ; preds = %if.end34
  %189 = load %struct.Options** %options.addr, align 8
  %user = getelementptr inbounds %struct.Options* %189, i32 0, i32 41
  store i8** %user, i8*** %charptr, align 8
  br label %parse_string

parse_string:                                     ; preds = %sw.bb1064, %sw.bb1035, %sw.bb927, %sw.bb746, %sw.bb263, %sw.bb262, %sw.bb261, %sw.bb260, %sw.bb259, %sw.bb221, %sw.bb220, %sw.bb119
  %call222 = call i8* @strdelim(i8** %s)
  store i8* %call222, i8** %arg, align 8
  %190 = load i8** %arg, align 8
  %tobool223 = icmp ne i8* %190, null
  br i1 %tobool223, label %lor.lhs.false224, label %if.then228

lor.lhs.false224:                                 ; preds = %parse_string
  %191 = load i8** %arg, align 8
  %192 = load i8* %191, align 1
  %conv225 = sext i8 %192 to i32
  %cmp226 = icmp eq i32 %conv225, 0
  br i1 %cmp226, label %if.then228, label %if.end229

if.then228:                                       ; preds = %lor.lhs.false224, %parse_string
  %193 = load i8** %filename.addr, align 8
  %194 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %193, i32 %194) #11
  unreachable

if.end229:                                        ; preds = %lor.lhs.false224
  %195 = load i32** %activep.addr, align 8
  %196 = load i32* %195, align 4
  %tobool230 = icmp ne i32 %196, 0
  br i1 %tobool230, label %land.lhs.true231, label %if.end236

land.lhs.true231:                                 ; preds = %if.end229
  %197 = load i8*** %charptr, align 8
  %198 = load i8** %197, align 8
  %cmp232 = icmp eq i8* %198, null
  br i1 %cmp232, label %if.then234, label %if.end236

if.then234:                                       ; preds = %land.lhs.true231
  %199 = load i8** %arg, align 8
  %call235 = call i8* @xstrdup(i8* %199)
  %200 = load i8*** %charptr, align 8
  store i8* %call235, i8** %200, align 8
  br label %if.end236

if.end236:                                        ; preds = %if.then234, %land.lhs.true231, %if.end229
  br label %sw.epilog

sw.bb237:                                         ; preds = %if.end34
  %201 = load %struct.Options** %options.addr, align 8
  %system_hostfiles = getelementptr inbounds %struct.Options* %201, i32 0, i32 44
  %202 = bitcast [32 x i8*]* %system_hostfiles to i8**
  store i8** %202, i8*** %cpptr, align 8
  %203 = load %struct.Options** %options.addr, align 8
  %num_system_hostfiles = getelementptr inbounds %struct.Options* %203, i32 0, i32 43
  store i32* %num_system_hostfiles, i32** %uintptr, align 8
  store i32 32, i32* %max_entries, align 4
  br label %parse_char_array

parse_char_array:                                 ; preds = %sw.bb258, %sw.bb237
  %204 = load i32** %activep.addr, align 8
  %205 = load i32* %204, align 4
  %tobool238 = icmp ne i32 %205, 0
  br i1 %tobool238, label %land.lhs.true239, label %if.end257

land.lhs.true239:                                 ; preds = %parse_char_array
  %206 = load i32** %uintptr, align 8
  %207 = load i32* %206, align 4
  %cmp240 = icmp eq i32 %207, 0
  br i1 %cmp240, label %if.then242, label %if.end257

if.then242:                                       ; preds = %land.lhs.true239
  br label %while.cond

while.cond:                                       ; preds = %if.end252, %if.then242
  %call243 = call i8* @strdelim(i8** %s)
  store i8* %call243, i8** %arg, align 8
  %cmp244 = icmp ne i8* %call243, null
  br i1 %cmp244, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %208 = load i8** %arg, align 8
  %209 = load i8* %208, align 1
  %conv246 = sext i8 %209 to i32
  %cmp247 = icmp ne i32 %conv246, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %210 = phi i1 [ false, %while.cond ], [ %cmp247, %land.rhs ]
  br i1 %210, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %211 = load i32** %uintptr, align 8
  %212 = load i32* %211, align 4
  %213 = load i32* %max_entries, align 4
  %cmp249 = icmp uge i32 %212, %213
  br i1 %cmp249, label %if.then251, label %if.end252

if.then251:                                       ; preds = %while.body
  %214 = load i8** %filename.addr, align 8
  %215 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str197, i32 0, i32 0), i8* %214, i32 %215) #11
  unreachable

if.end252:                                        ; preds = %while.body
  %216 = load i8** %arg, align 8
  %call253 = call i8* @xstrdup(i8* %216)
  %217 = load i32** %uintptr, align 8
  %218 = load i32* %217, align 4
  %inc254 = add i32 %218, 1
  store i32 %inc254, i32* %217, align 4
  %idxprom255 = zext i32 %218 to i64
  %219 = load i8*** %cpptr, align 8
  %arrayidx256 = getelementptr inbounds i8** %219, i64 %idxprom255
  store i8* %call253, i8** %arrayidx256, align 8
  br label %while.cond

while.end:                                        ; preds = %land.end
  br label %if.end257

if.end257:                                        ; preds = %while.end, %land.lhs.true239, %parse_char_array
  store i32 0, i32* %retval
  br label %return

sw.bb258:                                         ; preds = %if.end34
  %220 = load %struct.Options** %options.addr, align 8
  %user_hostfiles = getelementptr inbounds %struct.Options* %220, i32 0, i32 46
  %221 = bitcast [32 x i8*]* %user_hostfiles to i8**
  store i8** %221, i8*** %cpptr, align 8
  %222 = load %struct.Options** %options.addr, align 8
  %num_user_hostfiles = getelementptr inbounds %struct.Options* %222, i32 0, i32 45
  store i32* %num_user_hostfiles, i32** %uintptr, align 8
  store i32 32, i32* %max_entries, align 4
  br label %parse_char_array

sw.bb259:                                         ; preds = %if.end34
  %223 = load %struct.Options** %options.addr, align 8
  %hostname = getelementptr inbounds %struct.Options* %223, i32 0, i32 38
  store i8** %hostname, i8*** %charptr, align 8
  br label %parse_string

sw.bb260:                                         ; preds = %if.end34
  %224 = load %struct.Options** %options.addr, align 8
  %host_key_alias = getelementptr inbounds %struct.Options* %224, i32 0, i32 39
  store i8** %host_key_alias, i8*** %charptr, align 8
  br label %parse_string

sw.bb261:                                         ; preds = %if.end34
  %225 = load %struct.Options** %options.addr, align 8
  %preferred_authentications = getelementptr inbounds %struct.Options* %225, i32 0, i32 47
  store i8** %preferred_authentications, i8*** %charptr, align 8
  br label %parse_string

sw.bb262:                                         ; preds = %if.end34
  %226 = load %struct.Options** %options.addr, align 8
  %bind_address = getelementptr inbounds %struct.Options* %226, i32 0, i32 48
  store i8** %bind_address, i8*** %charptr, align 8
  br label %parse_string

sw.bb263:                                         ; preds = %if.end34
  %227 = load %struct.Options** %options.addr, align 8
  %pkcs11_provider = getelementptr inbounds %struct.Options* %227, i32 0, i32 49
  store i8** %pkcs11_provider, i8*** %charptr, align 8
  br label %parse_string

sw.bb264:                                         ; preds = %if.end34
  %228 = load %struct.Options** %options.addr, align 8
  %proxy_command = getelementptr inbounds %struct.Options* %228, i32 0, i32 40
  store i8** %proxy_command, i8*** %charptr, align 8
  %229 = load %struct.Options** %options.addr, align 8
  %jump_host = getelementptr inbounds %struct.Options* %229, i32 0, i32 103
  %230 = load i8** %jump_host, align 8
  %cmp265 = icmp ne i8* %230, null
  br i1 %cmp265, label %if.then267, label %if.end269

if.then267:                                       ; preds = %sw.bb264
  %231 = load %struct.Options** %options.addr, align 8
  %jump_host268 = getelementptr inbounds %struct.Options* %231, i32 0, i32 103
  store i8** %jump_host268, i8*** %charptr, align 8
  br label %if.end269

if.end269:                                        ; preds = %if.then267, %sw.bb264
  br label %parse_command

parse_command:                                    ; preds = %sw.bb813, %if.end269
  %232 = load i8** %s, align 8
  %cmp270 = icmp eq i8* %232, null
  br i1 %cmp270, label %if.then272, label %if.end273

if.then272:                                       ; preds = %parse_command
  %233 = load i8** %filename.addr, align 8
  %234 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %233, i32 %234) #11
  unreachable

if.end273:                                        ; preds = %parse_command
  %235 = load i8** %s, align 8
  %call274 = call i64 @strspn(i8* %235, i8* getelementptr inbounds ([6 x i8]* @.str198, i32 0, i32 0)) #12
  store i64 %call274, i64* %len, align 8
  %236 = load i32** %activep.addr, align 8
  %237 = load i32* %236, align 4
  %tobool275 = icmp ne i32 %237, 0
  br i1 %tobool275, label %land.lhs.true276, label %if.end281

land.lhs.true276:                                 ; preds = %if.end273
  %238 = load i8*** %charptr, align 8
  %239 = load i8** %238, align 8
  %cmp277 = icmp eq i8* %239, null
  br i1 %cmp277, label %if.then279, label %if.end281

if.then279:                                       ; preds = %land.lhs.true276
  %240 = load i8** %s, align 8
  %241 = load i64* %len, align 8
  %add.ptr = getelementptr inbounds i8* %240, i64 %241
  %call280 = call i8* @xstrdup(i8* %add.ptr)
  %242 = load i8*** %charptr, align 8
  store i8* %call280, i8** %242, align 8
  br label %if.end281

if.end281:                                        ; preds = %if.then279, %land.lhs.true276, %if.end273
  store i32 0, i32* %retval
  br label %return

sw.bb282:                                         ; preds = %if.end34
  %243 = load i8** %s, align 8
  %cmp283 = icmp eq i8* %243, null
  br i1 %cmp283, label %if.then285, label %if.end286

if.then285:                                       ; preds = %sw.bb282
  %244 = load i8** %filename.addr, align 8
  %245 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %244, i32 %245) #11
  unreachable

if.end286:                                        ; preds = %sw.bb282
  %246 = load i8** %s, align 8
  %call287 = call i64 @strspn(i8* %246, i8* getelementptr inbounds ([6 x i8]* @.str198, i32 0, i32 0)) #12
  store i64 %call287, i64* %len, align 8
  %247 = load i8** %s, align 8
  %248 = load i64* %len, align 8
  %add.ptr288 = getelementptr inbounds i8* %247, i64 %248
  %249 = load %struct.Options** %options.addr, align 8
  %250 = load i32** %activep.addr, align 8
  %251 = load i32* %250, align 4
  %call289 = call i32 @parse_jump(i8* %add.ptr288, %struct.Options* %249, i32 %251)
  %252 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %253 = extractvalue { i32, i1 } %252, 0
  %254 = extractvalue { i32, i1 } %252, 1
  %255 = xor i1 %254, true
  br i1 %255, label %cont291, label %trap290

trap290:                                          ; preds = %if.end286
  call void @llvm.trap() #3
  unreachable

cont291:                                          ; preds = %if.end286
  %cmp292 = icmp eq i32 %call289, %253
  br i1 %cmp292, label %if.then294, label %if.end296

if.then294:                                       ; preds = %cont291
  %256 = load i8** %filename.addr, align 8
  %257 = load i32* %linenum.addr, align 4
  %258 = load i8** %s, align 8
  %259 = load i64* %len, align 8
  %add.ptr295 = getelementptr inbounds i8* %258, i64 %259
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([39 x i8]* @.str199, i32 0, i32 0), i8* %256, i32 %257, i8* %add.ptr295) #11
  unreachable

if.end296:                                        ; preds = %cont291
  store i32 0, i32* %retval
  br label %return

sw.bb297:                                         ; preds = %if.end34
  %260 = load %struct.Options** %options.addr, align 8
  %port = getelementptr inbounds %struct.Options* %260, i32 0, i32 27
  store i32* %port, i32** %intptr, align 8
  br label %parse_int

parse_int:                                        ; preds = %sw.bb1009, %sw.bb715, %sw.bb331, %sw.bb297, %sw.bb135, %sw.bb134
  %call298 = call i8* @strdelim(i8** %s)
  store i8* %call298, i8** %arg, align 8
  %261 = load i8** %arg, align 8
  %tobool299 = icmp ne i8* %261, null
  br i1 %tobool299, label %lor.lhs.false300, label %if.then304

lor.lhs.false300:                                 ; preds = %parse_int
  %262 = load i8** %arg, align 8
  %263 = load i8* %262, align 1
  %conv301 = sext i8 %263 to i32
  %cmp302 = icmp eq i32 %conv301, 0
  br i1 %cmp302, label %if.then304, label %if.end305

if.then304:                                       ; preds = %lor.lhs.false300, %parse_int
  %264 = load i8** %filename.addr, align 8
  %265 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %264, i32 %265) #11
  unreachable

if.end305:                                        ; preds = %lor.lhs.false300
  %266 = load i8** %arg, align 8
  %arrayidx306 = getelementptr inbounds i8* %266, i64 0
  %267 = load i8* %arrayidx306, align 1
  %conv307 = sext i8 %267 to i32
  %cmp308 = icmp slt i32 %conv307, 48
  br i1 %cmp308, label %if.then315, label %lor.lhs.false310

lor.lhs.false310:                                 ; preds = %if.end305
  %268 = load i8** %arg, align 8
  %arrayidx311 = getelementptr inbounds i8* %268, i64 0
  %269 = load i8* %arrayidx311, align 1
  %conv312 = sext i8 %269 to i32
  %cmp313 = icmp sgt i32 %conv312, 57
  br i1 %cmp313, label %if.then315, label %if.end316

if.then315:                                       ; preds = %lor.lhs.false310, %if.end305
  %270 = load i8** %filename.addr, align 8
  %271 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str200, i32 0, i32 0), i8* %270, i32 %271) #11
  unreachable

if.end316:                                        ; preds = %lor.lhs.false310
  %272 = load i8** %arg, align 8
  %call317 = call i64 @strtol(i8* %272, i8** %endofnumber, i32 0) #9
  %conv318 = trunc i64 %call317 to i32
  store i32 %conv318, i32* %value, align 4
  %273 = load i8** %arg, align 8
  %274 = load i8** %endofnumber, align 8
  %cmp319 = icmp eq i8* %273, %274
  br i1 %cmp319, label %if.then321, label %if.end322

if.then321:                                       ; preds = %if.end316
  %275 = load i8** %filename.addr, align 8
  %276 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str200, i32 0, i32 0), i8* %275, i32 %276) #11
  unreachable

if.end322:                                        ; preds = %if.end316
  %277 = load i32** %activep.addr, align 8
  %278 = load i32* %277, align 4
  %tobool323 = icmp ne i32 %278, 0
  br i1 %tobool323, label %land.lhs.true324, label %if.end330

land.lhs.true324:                                 ; preds = %if.end322
  %279 = load i32** %intptr, align 8
  %280 = load i32* %279, align 4
  %281 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %282 = extractvalue { i32, i1 } %281, 0
  %283 = extractvalue { i32, i1 } %281, 1
  %284 = xor i1 %283, true
  br i1 %284, label %cont326, label %trap325

trap325:                                          ; preds = %land.lhs.true324
  call void @llvm.trap() #3
  unreachable

cont326:                                          ; preds = %land.lhs.true324
  %cmp327 = icmp eq i32 %280, %282
  br i1 %cmp327, label %if.then329, label %if.end330

if.then329:                                       ; preds = %cont326
  %285 = load i32* %value, align 4
  %286 = load i32** %intptr, align 8
  store i32 %285, i32* %286, align 4
  br label %if.end330

if.end330:                                        ; preds = %if.then329, %cont326, %if.end322
  br label %sw.epilog

sw.bb331:                                         ; preds = %if.end34
  %287 = load %struct.Options** %options.addr, align 8
  %connection_attempts = getelementptr inbounds %struct.Options* %287, i32 0, i32 29
  store i32* %connection_attempts, i32** %intptr, align 8
  br label %parse_int

sw.bb332:                                         ; preds = %if.end34
  %288 = load %struct.Options** %options.addr, align 8
  %cipher = getelementptr inbounds %struct.Options* %288, i32 0, i32 32
  store i32* %cipher, i32** %intptr, align 8
  %call333 = call i8* @strdelim(i8** %s)
  store i8* %call333, i8** %arg, align 8
  %289 = load i8** %arg, align 8
  %tobool334 = icmp ne i8* %289, null
  br i1 %tobool334, label %lor.lhs.false335, label %if.then339

lor.lhs.false335:                                 ; preds = %sw.bb332
  %290 = load i8** %arg, align 8
  %291 = load i8* %290, align 1
  %conv336 = sext i8 %291 to i32
  %cmp337 = icmp eq i32 %conv336, 0
  br i1 %cmp337, label %if.then339, label %if.end340

if.then339:                                       ; preds = %lor.lhs.false335, %sw.bb332
  %292 = load i8** %filename.addr, align 8
  %293 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %292, i32 %293) #11
  unreachable

if.end340:                                        ; preds = %lor.lhs.false335
  %294 = load i8** %arg, align 8
  %call341 = call i32 @cipher_number(i8* %294)
  store i32 %call341, i32* %value, align 4
  %295 = load i32* %value, align 4
  %296 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %297 = extractvalue { i32, i1 } %296, 0
  %298 = extractvalue { i32, i1 } %296, 1
  %299 = xor i1 %298, true
  br i1 %299, label %cont343, label %trap342

trap342:                                          ; preds = %if.end340
  call void @llvm.trap() #3
  unreachable

cont343:                                          ; preds = %if.end340
  %cmp344 = icmp eq i32 %295, %297
  br i1 %cmp344, label %if.then346, label %if.end348

if.then346:                                       ; preds = %cont343
  %300 = load i8** %filename.addr, align 8
  %301 = load i32* %linenum.addr, align 4
  %302 = load i8** %arg, align 8
  %tobool347 = icmp ne i8* %302, null
  br i1 %tobool347, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then346
  %303 = load i8** %arg, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then346
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %303, %cond.true ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([33 x i8]* @.str201, i32 0, i32 0), i8* %300, i32 %301, i8* %cond) #11
  unreachable

if.end348:                                        ; preds = %cont343
  %304 = load i32** %activep.addr, align 8
  %305 = load i32* %304, align 4
  %tobool349 = icmp ne i32 %305, 0
  br i1 %tobool349, label %land.lhs.true350, label %if.end356

land.lhs.true350:                                 ; preds = %if.end348
  %306 = load i32** %intptr, align 8
  %307 = load i32* %306, align 4
  %308 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %309 = extractvalue { i32, i1 } %308, 0
  %310 = extractvalue { i32, i1 } %308, 1
  %311 = xor i1 %310, true
  br i1 %311, label %cont352, label %trap351

trap351:                                          ; preds = %land.lhs.true350
  call void @llvm.trap() #3
  unreachable

cont352:                                          ; preds = %land.lhs.true350
  %cmp353 = icmp eq i32 %307, %309
  br i1 %cmp353, label %if.then355, label %if.end356

if.then355:                                       ; preds = %cont352
  %312 = load i32* %value, align 4
  %313 = load i32** %intptr, align 8
  store i32 %312, i32* %313, align 4
  br label %if.end356

if.end356:                                        ; preds = %if.then355, %cont352, %if.end348
  br label %sw.epilog

sw.bb357:                                         ; preds = %if.end34
  %call358 = call i8* @strdelim(i8** %s)
  store i8* %call358, i8** %arg, align 8
  %314 = load i8** %arg, align 8
  %tobool359 = icmp ne i8* %314, null
  br i1 %tobool359, label %lor.lhs.false360, label %if.then364

lor.lhs.false360:                                 ; preds = %sw.bb357
  %315 = load i8** %arg, align 8
  %316 = load i8* %315, align 1
  %conv361 = sext i8 %316 to i32
  %cmp362 = icmp eq i32 %conv361, 0
  br i1 %cmp362, label %if.then364, label %if.end365

if.then364:                                       ; preds = %lor.lhs.false360, %sw.bb357
  %317 = load i8** %filename.addr, align 8
  %318 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %317, i32 %318) #11
  unreachable

if.end365:                                        ; preds = %lor.lhs.false360
  %319 = load i8** %arg, align 8
  %320 = load i8* %319, align 1
  %conv366 = sext i8 %320 to i32
  %cmp367 = icmp eq i32 %conv366, 43
  br i1 %cmp367, label %cond.true369, label %cond.false371

cond.true369:                                     ; preds = %if.end365
  %321 = load i8** %arg, align 8
  %add.ptr370 = getelementptr inbounds i8* %321, i64 1
  br label %cond.end372

cond.false371:                                    ; preds = %if.end365
  %322 = load i8** %arg, align 8
  br label %cond.end372

cond.end372:                                      ; preds = %cond.false371, %cond.true369
  %cond373 = phi i8* [ %add.ptr370, %cond.true369 ], [ %322, %cond.false371 ]
  %call374 = call i32 @ciphers_valid(i8* %cond373)
  %tobool375 = icmp ne i32 %call374, 0
  br i1 %tobool375, label %if.end382, label %if.then376

if.then376:                                       ; preds = %cond.end372
  %323 = load i8** %filename.addr, align 8
  %324 = load i32* %linenum.addr, align 4
  %325 = load i8** %arg, align 8
  %tobool377 = icmp ne i8* %325, null
  br i1 %tobool377, label %cond.true378, label %cond.false379

cond.true378:                                     ; preds = %if.then376
  %326 = load i8** %arg, align 8
  br label %cond.end380

cond.false379:                                    ; preds = %if.then376
  br label %cond.end380

cond.end380:                                      ; preds = %cond.false379, %cond.true378
  %cond381 = phi i8* [ %326, %cond.true378 ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false379 ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str203, i32 0, i32 0), i8* %323, i32 %324, i8* %cond381) #11
  unreachable

if.end382:                                        ; preds = %cond.end372
  %327 = load i32** %activep.addr, align 8
  %328 = load i32* %327, align 4
  %tobool383 = icmp ne i32 %328, 0
  br i1 %tobool383, label %land.lhs.true384, label %if.end390

land.lhs.true384:                                 ; preds = %if.end382
  %329 = load %struct.Options** %options.addr, align 8
  %ciphers = getelementptr inbounds %struct.Options* %329, i32 0, i32 33
  %330 = load i8** %ciphers, align 8
  %cmp385 = icmp eq i8* %330, null
  br i1 %cmp385, label %if.then387, label %if.end390

if.then387:                                       ; preds = %land.lhs.true384
  %331 = load i8** %arg, align 8
  %call388 = call i8* @xstrdup(i8* %331)
  %332 = load %struct.Options** %options.addr, align 8
  %ciphers389 = getelementptr inbounds %struct.Options* %332, i32 0, i32 33
  store i8* %call388, i8** %ciphers389, align 8
  br label %if.end390

if.end390:                                        ; preds = %if.then387, %land.lhs.true384, %if.end382
  br label %sw.epilog

sw.bb391:                                         ; preds = %if.end34
  %call392 = call i8* @strdelim(i8** %s)
  store i8* %call392, i8** %arg, align 8
  %333 = load i8** %arg, align 8
  %tobool393 = icmp ne i8* %333, null
  br i1 %tobool393, label %lor.lhs.false394, label %if.then398

lor.lhs.false394:                                 ; preds = %sw.bb391
  %334 = load i8** %arg, align 8
  %335 = load i8* %334, align 1
  %conv395 = sext i8 %335 to i32
  %cmp396 = icmp eq i32 %conv395, 0
  br i1 %cmp396, label %if.then398, label %if.end399

if.then398:                                       ; preds = %lor.lhs.false394, %sw.bb391
  %336 = load i8** %filename.addr, align 8
  %337 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %336, i32 %337) #11
  unreachable

if.end399:                                        ; preds = %lor.lhs.false394
  %338 = load i8** %arg, align 8
  %339 = load i8* %338, align 1
  %conv400 = sext i8 %339 to i32
  %cmp401 = icmp eq i32 %conv400, 43
  br i1 %cmp401, label %cond.true403, label %cond.false405

cond.true403:                                     ; preds = %if.end399
  %340 = load i8** %arg, align 8
  %add.ptr404 = getelementptr inbounds i8* %340, i64 1
  br label %cond.end406

cond.false405:                                    ; preds = %if.end399
  %341 = load i8** %arg, align 8
  br label %cond.end406

cond.end406:                                      ; preds = %cond.false405, %cond.true403
  %cond407 = phi i8* [ %add.ptr404, %cond.true403 ], [ %341, %cond.false405 ]
  %call408 = call i32 @mac_valid(i8* %cond407)
  %tobool409 = icmp ne i32 %call408, 0
  br i1 %tobool409, label %if.end416, label %if.then410

if.then410:                                       ; preds = %cond.end406
  %342 = load i8** %filename.addr, align 8
  %343 = load i32* %linenum.addr, align 4
  %344 = load i8** %arg, align 8
  %tobool411 = icmp ne i8* %344, null
  br i1 %tobool411, label %cond.true412, label %cond.false413

cond.true412:                                     ; preds = %if.then410
  %345 = load i8** %arg, align 8
  br label %cond.end414

cond.false413:                                    ; preds = %if.then410
  br label %cond.end414

cond.end414:                                      ; preds = %cond.false413, %cond.true412
  %cond415 = phi i8* [ %345, %cond.true412 ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false413 ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str204, i32 0, i32 0), i8* %342, i32 %343, i8* %cond415) #11
  unreachable

if.end416:                                        ; preds = %cond.end406
  %346 = load i32** %activep.addr, align 8
  %347 = load i32* %346, align 4
  %tobool417 = icmp ne i32 %347, 0
  br i1 %tobool417, label %land.lhs.true418, label %if.end424

land.lhs.true418:                                 ; preds = %if.end416
  %348 = load %struct.Options** %options.addr, align 8
  %macs = getelementptr inbounds %struct.Options* %348, i32 0, i32 34
  %349 = load i8** %macs, align 8
  %cmp419 = icmp eq i8* %349, null
  br i1 %cmp419, label %if.then421, label %if.end424

if.then421:                                       ; preds = %land.lhs.true418
  %350 = load i8** %arg, align 8
  %call422 = call i8* @xstrdup(i8* %350)
  %351 = load %struct.Options** %options.addr, align 8
  %macs423 = getelementptr inbounds %struct.Options* %351, i32 0, i32 34
  store i8* %call422, i8** %macs423, align 8
  br label %if.end424

if.end424:                                        ; preds = %if.then421, %land.lhs.true418, %if.end416
  br label %sw.epilog

sw.bb425:                                         ; preds = %if.end34
  %call426 = call i8* @strdelim(i8** %s)
  store i8* %call426, i8** %arg, align 8
  %352 = load i8** %arg, align 8
  %tobool427 = icmp ne i8* %352, null
  br i1 %tobool427, label %lor.lhs.false428, label %if.then432

lor.lhs.false428:                                 ; preds = %sw.bb425
  %353 = load i8** %arg, align 8
  %354 = load i8* %353, align 1
  %conv429 = sext i8 %354 to i32
  %cmp430 = icmp eq i32 %conv429, 0
  br i1 %cmp430, label %if.then432, label %if.end433

if.then432:                                       ; preds = %lor.lhs.false428, %sw.bb425
  %355 = load i8** %filename.addr, align 8
  %356 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %355, i32 %356) #11
  unreachable

if.end433:                                        ; preds = %lor.lhs.false428
  %357 = load i8** %arg, align 8
  %358 = load i8* %357, align 1
  %conv434 = sext i8 %358 to i32
  %cmp435 = icmp eq i32 %conv434, 43
  br i1 %cmp435, label %cond.true437, label %cond.false439

cond.true437:                                     ; preds = %if.end433
  %359 = load i8** %arg, align 8
  %add.ptr438 = getelementptr inbounds i8* %359, i64 1
  br label %cond.end440

cond.false439:                                    ; preds = %if.end433
  %360 = load i8** %arg, align 8
  br label %cond.end440

cond.end440:                                      ; preds = %cond.false439, %cond.true437
  %cond441 = phi i8* [ %add.ptr438, %cond.true437 ], [ %360, %cond.false439 ]
  %call442 = call i32 @kex_names_valid(i8* %cond441)
  %tobool443 = icmp ne i32 %call442, 0
  br i1 %tobool443, label %if.end450, label %if.then444

if.then444:                                       ; preds = %cond.end440
  %361 = load i8** %filename.addr, align 8
  %362 = load i32* %linenum.addr, align 4
  %363 = load i8** %arg, align 8
  %tobool445 = icmp ne i8* %363, null
  br i1 %tobool445, label %cond.true446, label %cond.false447

cond.true446:                                     ; preds = %if.then444
  %364 = load i8** %arg, align 8
  br label %cond.end448

cond.false447:                                    ; preds = %if.then444
  br label %cond.end448

cond.end448:                                      ; preds = %cond.false447, %cond.true446
  %cond449 = phi i8* [ %364, %cond.true446 ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false447 ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([45 x i8]* @.str205, i32 0, i32 0), i8* %361, i32 %362, i8* %cond449) #11
  unreachable

if.end450:                                        ; preds = %cond.end440
  %365 = load i32** %activep.addr, align 8
  %366 = load i32* %365, align 4
  %tobool451 = icmp ne i32 %366, 0
  br i1 %tobool451, label %land.lhs.true452, label %if.end458

land.lhs.true452:                                 ; preds = %if.end450
  %367 = load %struct.Options** %options.addr, align 8
  %kex_algorithms = getelementptr inbounds %struct.Options* %367, i32 0, i32 36
  %368 = load i8** %kex_algorithms, align 8
  %cmp453 = icmp eq i8* %368, null
  br i1 %cmp453, label %if.then455, label %if.end458

if.then455:                                       ; preds = %land.lhs.true452
  %369 = load i8** %arg, align 8
  %call456 = call i8* @xstrdup(i8* %369)
  %370 = load %struct.Options** %options.addr, align 8
  %kex_algorithms457 = getelementptr inbounds %struct.Options* %370, i32 0, i32 36
  store i8* %call456, i8** %kex_algorithms457, align 8
  br label %if.end458

if.end458:                                        ; preds = %if.then455, %land.lhs.true452, %if.end450
  br label %sw.epilog

sw.bb459:                                         ; preds = %if.end34
  %371 = load %struct.Options** %options.addr, align 8
  %hostkeyalgorithms = getelementptr inbounds %struct.Options* %371, i32 0, i32 35
  store i8** %hostkeyalgorithms, i8*** %charptr, align 8
  br label %parse_keytypes

parse_keytypes:                                   ; preds = %sw.bb1062, %sw.bb1061, %sw.bb459
  %call460 = call i8* @strdelim(i8** %s)
  store i8* %call460, i8** %arg, align 8
  %372 = load i8** %arg, align 8
  %tobool461 = icmp ne i8* %372, null
  br i1 %tobool461, label %lor.lhs.false462, label %if.then466

lor.lhs.false462:                                 ; preds = %parse_keytypes
  %373 = load i8** %arg, align 8
  %374 = load i8* %373, align 1
  %conv463 = sext i8 %374 to i32
  %cmp464 = icmp eq i32 %conv463, 0
  br i1 %cmp464, label %if.then466, label %if.end467

if.then466:                                       ; preds = %lor.lhs.false462, %parse_keytypes
  %375 = load i8** %filename.addr, align 8
  %376 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %375, i32 %376) #11
  unreachable

if.end467:                                        ; preds = %lor.lhs.false462
  %377 = load i8** %arg, align 8
  %378 = load i8* %377, align 1
  %conv468 = sext i8 %378 to i32
  %cmp469 = icmp eq i32 %conv468, 43
  br i1 %cmp469, label %cond.true471, label %cond.false473

cond.true471:                                     ; preds = %if.end467
  %379 = load i8** %arg, align 8
  %add.ptr472 = getelementptr inbounds i8* %379, i64 1
  br label %cond.end474

cond.false473:                                    ; preds = %if.end467
  %380 = load i8** %arg, align 8
  br label %cond.end474

cond.end474:                                      ; preds = %cond.false473, %cond.true471
  %cond475 = phi i8* [ %add.ptr472, %cond.true471 ], [ %380, %cond.false473 ]
  %call476 = call i32 @sshkey_names_valid2(i8* %cond475, i32 1)
  %tobool477 = icmp ne i32 %call476, 0
  br i1 %tobool477, label %if.end484, label %if.then478

if.then478:                                       ; preds = %cond.end474
  %381 = load i8** %filename.addr, align 8
  %382 = load i32* %linenum.addr, align 4
  %383 = load i8** %arg, align 8
  %tobool479 = icmp ne i8* %383, null
  br i1 %tobool479, label %cond.true480, label %cond.false481

cond.true480:                                     ; preds = %if.then478
  %384 = load i8** %arg, align 8
  br label %cond.end482

cond.false481:                                    ; preds = %if.then478
  br label %cond.end482

cond.end482:                                      ; preds = %cond.false481, %cond.true480
  %cond483 = phi i8* [ %384, %cond.true480 ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false481 ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str206, i32 0, i32 0), i8* %381, i32 %382, i8* %cond483) #11
  unreachable

if.end484:                                        ; preds = %cond.end474
  %385 = load i32** %activep.addr, align 8
  %386 = load i32* %385, align 4
  %tobool485 = icmp ne i32 %386, 0
  br i1 %tobool485, label %land.lhs.true486, label %if.end491

land.lhs.true486:                                 ; preds = %if.end484
  %387 = load i8*** %charptr, align 8
  %388 = load i8** %387, align 8
  %cmp487 = icmp eq i8* %388, null
  br i1 %cmp487, label %if.then489, label %if.end491

if.then489:                                       ; preds = %land.lhs.true486
  %389 = load i8** %arg, align 8
  %call490 = call i8* @xstrdup(i8* %389)
  %390 = load i8*** %charptr, align 8
  store i8* %call490, i8** %390, align 8
  br label %if.end491

if.end491:                                        ; preds = %if.then489, %land.lhs.true486, %if.end484
  br label %sw.epilog

sw.bb492:                                         ; preds = %if.end34
  %391 = load %struct.Options** %options.addr, align 8
  %protocol = getelementptr inbounds %struct.Options* %391, i32 0, i32 37
  store i32* %protocol, i32** %intptr, align 8
  %call493 = call i8* @strdelim(i8** %s)
  store i8* %call493, i8** %arg, align 8
  %392 = load i8** %arg, align 8
  %tobool494 = icmp ne i8* %392, null
  br i1 %tobool494, label %lor.lhs.false495, label %if.then499

lor.lhs.false495:                                 ; preds = %sw.bb492
  %393 = load i8** %arg, align 8
  %394 = load i8* %393, align 1
  %conv496 = sext i8 %394 to i32
  %cmp497 = icmp eq i32 %conv496, 0
  br i1 %cmp497, label %if.then499, label %if.end500

if.then499:                                       ; preds = %lor.lhs.false495, %sw.bb492
  %395 = load i8** %filename.addr, align 8
  %396 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %395, i32 %396) #11
  unreachable

if.end500:                                        ; preds = %lor.lhs.false495
  %397 = load i8** %arg, align 8
  %call501 = call i32 @proto_spec(i8* %397)
  store i32 %call501, i32* %value, align 4
  %398 = load i32* %value, align 4
  %cmp502 = icmp eq i32 %398, 0
  br i1 %cmp502, label %if.then504, label %if.end510

if.then504:                                       ; preds = %if.end500
  %399 = load i8** %filename.addr, align 8
  %400 = load i32* %linenum.addr, align 4
  %401 = load i8** %arg, align 8
  %tobool505 = icmp ne i8* %401, null
  br i1 %tobool505, label %cond.true506, label %cond.false507

cond.true506:                                     ; preds = %if.then504
  %402 = load i8** %arg, align 8
  br label %cond.end508

cond.false507:                                    ; preds = %if.then504
  br label %cond.end508

cond.end508:                                      ; preds = %cond.false507, %cond.true506
  %cond509 = phi i8* [ %402, %cond.true506 ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false507 ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str207, i32 0, i32 0), i8* %399, i32 %400, i8* %cond509) #11
  unreachable

if.end510:                                        ; preds = %if.end500
  %403 = load i32** %activep.addr, align 8
  %404 = load i32* %403, align 4
  %tobool511 = icmp ne i32 %404, 0
  br i1 %tobool511, label %land.lhs.true512, label %if.end516

land.lhs.true512:                                 ; preds = %if.end510
  %405 = load i32** %intptr, align 8
  %406 = load i32* %405, align 4
  %cmp513 = icmp eq i32 %406, 0
  br i1 %cmp513, label %if.then515, label %if.end516

if.then515:                                       ; preds = %land.lhs.true512
  %407 = load i32* %value, align 4
  %408 = load i32** %intptr, align 8
  store i32 %407, i32* %408, align 4
  br label %if.end516

if.end516:                                        ; preds = %if.then515, %land.lhs.true512, %if.end510
  br label %sw.epilog

sw.bb517:                                         ; preds = %if.end34
  %409 = load %struct.Options** %options.addr, align 8
  %log_level = getelementptr inbounds %struct.Options* %409, i32 0, i32 26
  store i32* %log_level, i32** %log_level_ptr, align 8
  %call518 = call i8* @strdelim(i8** %s)
  store i8* %call518, i8** %arg, align 8
  %410 = load i8** %arg, align 8
  %call519 = call i32 @log_level_number(i8* %410)
  store i32 %call519, i32* %value, align 4
  %411 = load i32* %value, align 4
  %cmp520 = icmp eq i32 %411, -1
  br i1 %cmp520, label %if.then522, label %if.end528

if.then522:                                       ; preds = %sw.bb517
  %412 = load i8** %filename.addr, align 8
  %413 = load i32* %linenum.addr, align 4
  %414 = load i8** %arg, align 8
  %tobool523 = icmp ne i8* %414, null
  br i1 %tobool523, label %cond.true524, label %cond.false525

cond.true524:                                     ; preds = %if.then522
  %415 = load i8** %arg, align 8
  br label %cond.end526

cond.false525:                                    ; preds = %if.then522
  br label %cond.end526

cond.end526:                                      ; preds = %cond.false525, %cond.true524
  %cond527 = phi i8* [ %415, %cond.true524 ], [ getelementptr inbounds ([7 x i8]* @.str202, i32 0, i32 0), %cond.false525 ]
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str208, i32 0, i32 0), i8* %412, i32 %413, i8* %cond527) #11
  unreachable

if.end528:                                        ; preds = %sw.bb517
  %416 = load i32** %activep.addr, align 8
  %417 = load i32* %416, align 4
  %tobool529 = icmp ne i32 %417, 0
  br i1 %tobool529, label %land.lhs.true530, label %if.end534

land.lhs.true530:                                 ; preds = %if.end528
  %418 = load i32** %log_level_ptr, align 8
  %419 = load i32* %418, align 4
  %cmp531 = icmp eq i32 %419, -1
  br i1 %cmp531, label %if.then533, label %if.end534

if.then533:                                       ; preds = %land.lhs.true530
  %420 = load i32* %value, align 4
  %421 = load i32** %log_level_ptr, align 8
  store i32 %420, i32* %421, align 4
  br label %if.end534

if.end534:                                        ; preds = %if.then533, %land.lhs.true530, %if.end528
  br label %sw.epilog

sw.bb535:                                         ; preds = %if.end34, %if.end34, %if.end34
  %call536 = call i8* @strdelim(i8** %s)
  store i8* %call536, i8** %arg, align 8
  %422 = load i8** %arg, align 8
  %cmp537 = icmp eq i8* %422, null
  br i1 %cmp537, label %if.then543, label %lor.lhs.false539

lor.lhs.false539:                                 ; preds = %sw.bb535
  %423 = load i8** %arg, align 8
  %424 = load i8* %423, align 1
  %conv540 = sext i8 %424 to i32
  %cmp541 = icmp eq i32 %conv540, 0
  br i1 %cmp541, label %if.then543, label %if.end544

if.then543:                                       ; preds = %lor.lhs.false539, %sw.bb535
  %425 = load i8** %filename.addr, align 8
  %426 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([39 x i8]* @.str209, i32 0, i32 0), i8* %425, i32 %426) #11
  unreachable

if.end544:                                        ; preds = %lor.lhs.false539
  %427 = load i32* %opcode, align 4
  %cmp545 = icmp eq i32 %427, 19
  br i1 %cmp545, label %if.then550, label %lor.lhs.false547

lor.lhs.false547:                                 ; preds = %if.end544
  %428 = load i32* %opcode, align 4
  %cmp548 = icmp eq i32 %428, 18
  br i1 %cmp548, label %if.then550, label %if.else561

if.then550:                                       ; preds = %lor.lhs.false547, %if.end544
  %call551 = call i8* @strdelim(i8** %s)
  store i8* %call551, i8** %arg2, align 8
  %429 = load i8** %arg2, align 8
  %cmp552 = icmp eq i8* %429, null
  br i1 %cmp552, label %if.then558, label %lor.lhs.false554

lor.lhs.false554:                                 ; preds = %if.then550
  %430 = load i8** %arg2, align 8
  %431 = load i8* %430, align 1
  %conv555 = sext i8 %431 to i32
  %cmp556 = icmp eq i32 %conv555, 0
  br i1 %cmp556, label %if.then558, label %if.end559

if.then558:                                       ; preds = %lor.lhs.false554, %if.then550
  %432 = load i8** %filename.addr, align 8
  %433 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([41 x i8]* @.str210, i32 0, i32 0), i8* %432, i32 %433) #11
  unreachable

if.end559:                                        ; preds = %lor.lhs.false554
  %arraydecay = getelementptr inbounds [256 x i8]* %fwdarg, i32 0, i32 0
  %434 = load i8** %arg, align 8
  %435 = load i8** %arg2, align 8
  %call560 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 256, i8* getelementptr inbounds ([6 x i8]* @.str211, i32 0, i32 0), i8* %434, i8* %435) #9
  br label %if.end568

if.else561:                                       ; preds = %lor.lhs.false547
  %436 = load i32* %opcode, align 4
  %cmp562 = icmp eq i32 %436, 46
  br i1 %cmp562, label %if.then564, label %if.end567

if.then564:                                       ; preds = %if.else561
  %arraydecay565 = getelementptr inbounds [256 x i8]* %fwdarg, i32 0, i32 0
  %437 = load i8** %arg, align 8
  %call566 = call i64 @strlcpy(i8* %arraydecay565, i8* %437, i64 256)
  br label %if.end567

if.end567:                                        ; preds = %if.then564, %if.else561
  br label %if.end568

if.end568:                                        ; preds = %if.end567, %if.end559
  %arraydecay569 = getelementptr inbounds [256 x i8]* %fwdarg, i32 0, i32 0
  %438 = load i32* %opcode, align 4
  %cmp570 = icmp eq i32 %438, 46
  %cond572 = select i1 %cmp570, i32 1, i32 0
  %439 = load i32* %opcode, align 4
  %cmp573 = icmp eq i32 %439, 18
  %cond575 = select i1 %cmp573, i32 1, i32 0
  %call576 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %arraydecay569, i32 %cond572, i32 %cond575)
  %cmp577 = icmp eq i32 %call576, 0
  br i1 %cmp577, label %if.then579, label %if.end580

if.then579:                                       ; preds = %if.end568
  %440 = load i8** %filename.addr, align 8
  %441 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str212, i32 0, i32 0), i8* %440, i32 %441) #11
  unreachable

if.end580:                                        ; preds = %if.end568
  %442 = load i32** %activep.addr, align 8
  %443 = load i32* %442, align 4
  %tobool581 = icmp ne i32 %443, 0
  br i1 %tobool581, label %if.then582, label %if.end595

if.then582:                                       ; preds = %if.end580
  %444 = load i32* %opcode, align 4
  %cmp583 = icmp eq i32 %444, 19
  br i1 %cmp583, label %if.then588, label %lor.lhs.false585

lor.lhs.false585:                                 ; preds = %if.then582
  %445 = load i32* %opcode, align 4
  %cmp586 = icmp eq i32 %445, 46
  br i1 %cmp586, label %if.then588, label %if.else589

if.then588:                                       ; preds = %lor.lhs.false585, %if.then582
  %446 = load %struct.Options** %options.addr, align 8
  call void @add_local_forward(%struct.Options* %446, %struct.Forward* %fwd)
  br label %if.end594

if.else589:                                       ; preds = %lor.lhs.false585
  %447 = load i32* %opcode, align 4
  %cmp590 = icmp eq i32 %447, 18
  br i1 %cmp590, label %if.then592, label %if.end593

if.then592:                                       ; preds = %if.else589
  %448 = load %struct.Options** %options.addr, align 8
  call void @add_remote_forward(%struct.Options* %448, %struct.Forward* %fwd)
  br label %if.end593

if.end593:                                        ; preds = %if.then592, %if.else589
  br label %if.end594

if.end594:                                        ; preds = %if.end593, %if.then588
  br label %if.end595

if.end595:                                        ; preds = %if.end594, %if.end580
  br label %sw.epilog

sw.bb596:                                         ; preds = %if.end34
  %449 = load %struct.Options** %options.addr, align 8
  %clear_forwardings = getelementptr inbounds %struct.Options* %449, i32 0, i32 65
  store i32* %clear_forwardings, i32** %intptr, align 8
  br label %parse_flag

sw.bb597:                                         ; preds = %if.end34
  %450 = load i32* %cmdline, align 4
  %tobool598 = icmp ne i32 %450, 0
  br i1 %tobool598, label %if.then599, label %if.end600

if.then599:                                       ; preds = %sw.bb597
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([54 x i8]* @.str213, i32 0, i32 0)) #11
  unreachable

if.end600:                                        ; preds = %sw.bb597
  %451 = load i32** %activep.addr, align 8
  store i32 0, i32* %451, align 4
  store i8* null, i8** %arg2, align 8
  br label %while.cond601

while.cond601:                                    ; preds = %if.end631, %if.end600
  %call602 = call i8* @strdelim(i8** %s)
  store i8* %call602, i8** %arg, align 8
  %cmp603 = icmp ne i8* %call602, null
  br i1 %cmp603, label %land.rhs605, label %land.end609

land.rhs605:                                      ; preds = %while.cond601
  %452 = load i8** %arg, align 8
  %453 = load i8* %452, align 1
  %conv606 = sext i8 %453 to i32
  %cmp607 = icmp ne i32 %conv606, 0
  br label %land.end609

land.end609:                                      ; preds = %land.rhs605, %while.cond601
  %454 = phi i1 [ false, %while.cond601 ], [ %cmp607, %land.rhs605 ]
  br i1 %454, label %while.body610, label %while.end632

while.body610:                                    ; preds = %land.end609
  %455 = load i32* %flags.addr, align 4
  %and611 = and i32 %455, 8
  %cmp612 = icmp ne i32 %and611, 0
  br i1 %cmp612, label %if.then614, label %if.end615

if.then614:                                       ; preds = %while.body610
  br label %while.end632

if.end615:                                        ; preds = %while.body610
  %456 = load i8** %arg, align 8
  %457 = load i8* %456, align 1
  %conv616 = sext i8 %457 to i32
  %cmp617 = icmp eq i32 %conv616, 33
  %conv618 = zext i1 %cmp617 to i32
  store i32 %conv618, i32* %negated, align 4
  %458 = load i32* %negated, align 4
  %tobool619 = icmp ne i32 %458, 0
  br i1 %tobool619, label %if.then620, label %if.end621

if.then620:                                       ; preds = %if.end615
  %459 = load i8** %arg, align 8
  %incdec.ptr = getelementptr inbounds i8* %459, i32 1
  store i8* %incdec.ptr, i8** %arg, align 8
  br label %if.end621

if.end621:                                        ; preds = %if.then620, %if.end615
  %460 = load i8** %host.addr, align 8
  %461 = load i8** %arg, align 8
  %call622 = call i32 @match_pattern(i8* %460, i8* %461)
  %tobool623 = icmp ne i32 %call622, 0
  br i1 %tobool623, label %if.then624, label %if.end631

if.then624:                                       ; preds = %if.end621
  %462 = load i32* %negated, align 4
  %tobool625 = icmp ne i32 %462, 0
  br i1 %tobool625, label %if.then626, label %if.end627

if.then626:                                       ; preds = %if.then624
  %463 = load i8** %filename.addr, align 8
  %464 = load i32* %linenum.addr, align 4
  %465 = load i8** %arg, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([72 x i8]* @.str214, i32 0, i32 0), i8* %463, i32 %464, i8* %465)
  %466 = load i32** %activep.addr, align 8
  store i32 0, i32* %466, align 4
  br label %while.end632

if.end627:                                        ; preds = %if.then624
  %467 = load i32** %activep.addr, align 8
  %468 = load i32* %467, align 4
  %tobool628 = icmp ne i32 %468, 0
  br i1 %tobool628, label %if.end630, label %if.then629

if.then629:                                       ; preds = %if.end627
  %469 = load i8** %arg, align 8
  store i8* %469, i8** %arg2, align 8
  br label %if.end630

if.end630:                                        ; preds = %if.then629, %if.end627
  %470 = load i32** %activep.addr, align 8
  store i32 1, i32* %470, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end621
  br label %while.cond601

while.end632:                                     ; preds = %if.then626, %if.then614, %land.end609
  %471 = load i32** %activep.addr, align 8
  %472 = load i32* %471, align 4
  %tobool633 = icmp ne i32 %472, 0
  br i1 %tobool633, label %if.then634, label %if.end635

if.then634:                                       ; preds = %while.end632
  %473 = load i8** %filename.addr, align 8
  %474 = load i32* %linenum.addr, align 4
  %475 = load i8** %arg2, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([44 x i8]* @.str215, i32 0, i32 0), i8* %473, i32 %474, i8* %475)
  br label %if.end635

if.end635:                                        ; preds = %if.then634, %while.end632
  store i32 0, i32* %retval
  br label %return

sw.bb636:                                         ; preds = %if.end34
  %476 = load i32* %cmdline, align 4
  %tobool637 = icmp ne i32 %476, 0
  br i1 %tobool637, label %if.then638, label %if.end639

if.then638:                                       ; preds = %sw.bb636
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([54 x i8]* @.str213, i32 0, i32 0)) #11
  unreachable

if.end639:                                        ; preds = %sw.bb636
  %477 = load %struct.Options** %options.addr, align 8
  %478 = load %struct.passwd** %pw.addr, align 8
  %479 = load i8** %host.addr, align 8
  %480 = load i8** %original_host.addr, align 8
  %481 = load i32* %flags.addr, align 4
  %and640 = and i32 %481, 4
  %482 = load i8** %filename.addr, align 8
  %483 = load i32* %linenum.addr, align 4
  %call641 = call i32 @match_cfg_line(%struct.Options* %477, i8** %s, %struct.passwd* %478, i8* %479, i8* %480, i32 %and640, i8* %482, i32 %483)
  store i32 %call641, i32* %value, align 4
  %484 = load i32* %value, align 4
  %cmp642 = icmp slt i32 %484, 0
  br i1 %cmp642, label %if.then644, label %if.end645

if.then644:                                       ; preds = %if.end639
  %485 = load i8** %filename.addr, align 8
  %486 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str216, i32 0, i32 0), i8* %485, i32 %486) #11
  unreachable

if.end645:                                        ; preds = %if.end639
  %487 = load i32* %flags.addr, align 4
  %and646 = and i32 %487, 8
  %tobool647 = icmp ne i32 %and646, 0
  br i1 %tobool647, label %cond.true648, label %cond.false649

cond.true648:                                     ; preds = %if.end645
  br label %cond.end650

cond.false649:                                    ; preds = %if.end645
  %488 = load i32* %value, align 4
  br label %cond.end650

cond.end650:                                      ; preds = %cond.false649, %cond.true648
  %cond651 = phi i32 [ 0, %cond.true648 ], [ %488, %cond.false649 ]
  %489 = load i32** %activep.addr, align 8
  store i32 %cond651, i32* %489, align 4
  br label %sw.epilog

sw.bb652:                                         ; preds = %if.end34
  %490 = load %struct.Options** %options.addr, align 8
  %escape_char = getelementptr inbounds %struct.Options* %490, i32 0, i32 42
  store i32* %escape_char, i32** %intptr, align 8
  %call653 = call i8* @strdelim(i8** %s)
  store i8* %call653, i8** %arg, align 8
  %491 = load i8** %arg, align 8
  %tobool654 = icmp ne i8* %491, null
  br i1 %tobool654, label %lor.lhs.false655, label %if.then659

lor.lhs.false655:                                 ; preds = %sw.bb652
  %492 = load i8** %arg, align 8
  %493 = load i8* %492, align 1
  %conv656 = sext i8 %493 to i32
  %cmp657 = icmp eq i32 %conv656, 0
  br i1 %cmp657, label %if.then659, label %if.end660

if.then659:                                       ; preds = %lor.lhs.false655, %sw.bb652
  %494 = load i8** %filename.addr, align 8
  %495 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %494, i32 %495) #11
  unreachable

if.end660:                                        ; preds = %lor.lhs.false655
  %496 = load i8** %arg, align 8
  %call661 = call i32 @strcmp(i8* %496, i8* getelementptr inbounds ([5 x i8]* @.str7201, i32 0, i32 0)) #12
  %cmp662 = icmp eq i32 %call661, 0
  br i1 %cmp662, label %if.then664, label %if.else667

if.then664:                                       ; preds = %if.end660
  %497 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %498 = extractvalue { i32, i1 } %497, 0
  %499 = extractvalue { i32, i1 } %497, 1
  %500 = xor i1 %499, true
  br i1 %500, label %cont666, label %trap665

trap665:                                          ; preds = %if.then664
  call void @llvm.trap() #3
  unreachable

cont666:                                          ; preds = %if.then664
  store i32 %498, i32* %value, align 4
  br label %if.end702

if.else667:                                       ; preds = %if.end660
  %501 = load i8** %arg, align 8
  %arrayidx668 = getelementptr inbounds i8* %501, i64 1
  %502 = load i8* %arrayidx668, align 1
  %conv669 = sext i8 %502 to i32
  %cmp670 = icmp eq i32 %conv669, 0
  br i1 %cmp670, label %if.then672, label %if.else675

if.then672:                                       ; preds = %if.else667
  %503 = load i8** %arg, align 8
  %arrayidx673 = getelementptr inbounds i8* %503, i64 0
  %504 = load i8* %arrayidx673, align 1
  %conv674 = zext i8 %504 to i32
  store i32 %conv674, i32* %value, align 4
  br label %if.end701

if.else675:                                       ; preds = %if.else667
  %505 = load i8** %arg, align 8
  %arrayidx676 = getelementptr inbounds i8* %505, i64 0
  %506 = load i8* %arrayidx676, align 1
  %conv677 = sext i8 %506 to i32
  %cmp678 = icmp eq i32 %conv677, 94
  br i1 %cmp678, label %land.lhs.true680, label %if.else699

land.lhs.true680:                                 ; preds = %if.else675
  %507 = load i8** %arg, align 8
  %arrayidx681 = getelementptr inbounds i8* %507, i64 2
  %508 = load i8* %arrayidx681, align 1
  %conv682 = sext i8 %508 to i32
  %cmp683 = icmp eq i32 %conv682, 0
  br i1 %cmp683, label %land.lhs.true685, label %if.else699

land.lhs.true685:                                 ; preds = %land.lhs.true680
  %509 = load i8** %arg, align 8
  %arrayidx686 = getelementptr inbounds i8* %509, i64 1
  %510 = load i8* %arrayidx686, align 1
  %conv687 = zext i8 %510 to i32
  %cmp688 = icmp sge i32 %conv687, 64
  br i1 %cmp688, label %land.lhs.true690, label %if.else699

land.lhs.true690:                                 ; preds = %land.lhs.true685
  %511 = load i8** %arg, align 8
  %arrayidx691 = getelementptr inbounds i8* %511, i64 1
  %512 = load i8* %arrayidx691, align 1
  %conv692 = zext i8 %512 to i32
  %cmp693 = icmp slt i32 %conv692, 128
  br i1 %cmp693, label %if.then695, label %if.else699

if.then695:                                       ; preds = %land.lhs.true690
  %513 = load i8** %arg, align 8
  %arrayidx696 = getelementptr inbounds i8* %513, i64 1
  %514 = load i8* %arrayidx696, align 1
  %conv697 = zext i8 %514 to i32
  %and698 = and i32 %conv697, 31
  store i32 %and698, i32* %value, align 4
  br label %if.end700

if.else699:                                       ; preds = %land.lhs.true690, %land.lhs.true685, %land.lhs.true680, %if.else675
  %515 = load i8** %filename.addr, align 8
  %516 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([38 x i8]* @.str217, i32 0, i32 0), i8* %515, i32 %516) #11
  unreachable

if.end700:                                        ; preds = %if.then695
  br label %if.end701

if.end701:                                        ; preds = %if.end700, %if.then672
  br label %if.end702

if.end702:                                        ; preds = %if.end701, %cont666
  %517 = load i32** %activep.addr, align 8
  %518 = load i32* %517, align 4
  %tobool703 = icmp ne i32 %518, 0
  br i1 %tobool703, label %land.lhs.true704, label %if.end710

land.lhs.true704:                                 ; preds = %if.end702
  %519 = load i32** %intptr, align 8
  %520 = load i32* %519, align 4
  %521 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %522 = extractvalue { i32, i1 } %521, 0
  %523 = extractvalue { i32, i1 } %521, 1
  %524 = xor i1 %523, true
  br i1 %524, label %cont706, label %trap705

trap705:                                          ; preds = %land.lhs.true704
  call void @llvm.trap() #3
  unreachable

cont706:                                          ; preds = %land.lhs.true704
  %cmp707 = icmp eq i32 %520, %522
  br i1 %cmp707, label %if.then709, label %if.end710

if.then709:                                       ; preds = %cont706
  %525 = load i32* %value, align 4
  %526 = load i32** %intptr, align 8
  store i32 %525, i32* %526, align 4
  br label %if.end710

if.end710:                                        ; preds = %if.then709, %cont706, %if.end702
  br label %sw.epilog

sw.bb711:                                         ; preds = %if.end34
  %527 = load %struct.Options** %options.addr, align 8
  %address_family = getelementptr inbounds %struct.Options* %527, i32 0, i32 28
  store i32* %address_family, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([4 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_addressfamily to [4 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb712:                                         ; preds = %if.end34
  %528 = load %struct.Options** %options.addr, align 8
  %enable_ssh_keysign = getelementptr inbounds %struct.Options* %528, i32 0, i32 68
  store i32* %enable_ssh_keysign, i32** %intptr, align 8
  br label %parse_flag

sw.bb713:                                         ; preds = %if.end34
  %529 = load %struct.Options** %options.addr, align 8
  %identities_only = getelementptr inbounds %struct.Options* %529, i32 0, i32 72
  store i32* %identities_only, i32** %intptr, align 8
  br label %parse_flag

sw.bb714:                                         ; preds = %if.end34
  %530 = load %struct.Options** %options.addr, align 8
  %server_alive_interval = getelementptr inbounds %struct.Options* %530, i32 0, i32 73
  store i32* %server_alive_interval, i32** %intptr, align 8
  br label %parse_time

sw.bb715:                                         ; preds = %if.end34
  %531 = load %struct.Options** %options.addr, align 8
  %server_alive_count_max = getelementptr inbounds %struct.Options* %531, i32 0, i32 74
  store i32* %server_alive_count_max, i32** %intptr, align 8
  br label %parse_int

sw.bb716:                                         ; preds = %if.end34
  br label %while.cond717

while.cond717:                                    ; preds = %cont742, %if.then733, %sw.bb716
  %call718 = call i8* @strdelim(i8** %s)
  store i8* %call718, i8** %arg, align 8
  %cmp719 = icmp ne i8* %call718, null
  br i1 %cmp719, label %land.rhs721, label %land.end725

land.rhs721:                                      ; preds = %while.cond717
  %532 = load i8** %arg, align 8
  %533 = load i8* %532, align 1
  %conv722 = sext i8 %533 to i32
  %cmp723 = icmp ne i32 %conv722, 0
  br label %land.end725

land.end725:                                      ; preds = %land.rhs721, %while.cond717
  %534 = phi i1 [ false, %while.cond717 ], [ %cmp723, %land.rhs721 ]
  br i1 %534, label %while.body726, label %while.end745

while.body726:                                    ; preds = %land.end725
  %535 = load i8** %arg, align 8
  %call727 = call i8* @strchr(i8* %535, i32 61) #12
  %cmp728 = icmp ne i8* %call727, null
  br i1 %cmp728, label %if.then730, label %if.end731

if.then730:                                       ; preds = %while.body726
  %536 = load i8** %filename.addr, align 8
  %537 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([38 x i8]* @.str218, i32 0, i32 0), i8* %536, i32 %537) #11
  unreachable

if.end731:                                        ; preds = %while.body726
  %538 = load i32** %activep.addr, align 8
  %539 = load i32* %538, align 4
  %tobool732 = icmp ne i32 %539, 0
  br i1 %tobool732, label %if.end734, label %if.then733

if.then733:                                       ; preds = %if.end731
  br label %while.cond717

if.end734:                                        ; preds = %if.end731
  %540 = load %struct.Options** %options.addr, align 8
  %num_send_env = getelementptr inbounds %struct.Options* %540, i32 0, i32 75
  %541 = load i32* %num_send_env, align 4
  %cmp735 = icmp sge i32 %541, 256
  br i1 %cmp735, label %if.then737, label %if.end738

if.then737:                                       ; preds = %if.end734
  %542 = load i8** %filename.addr, align 8
  %543 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([31 x i8]* @.str219, i32 0, i32 0), i8* %542, i32 %543) #11
  unreachable

if.end738:                                        ; preds = %if.end734
  %544 = load i8** %arg, align 8
  %call739 = call i8* @xstrdup(i8* %544)
  %545 = load %struct.Options** %options.addr, align 8
  %num_send_env740 = getelementptr inbounds %struct.Options* %545, i32 0, i32 75
  %546 = load i32* %num_send_env740, align 4
  %547 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %546, i32 1)
  %548 = extractvalue { i32, i1 } %547, 0
  %549 = extractvalue { i32, i1 } %547, 1
  %550 = xor i1 %549, true
  br i1 %550, label %cont742, label %trap741

trap741:                                          ; preds = %if.end738
  call void @llvm.trap() #3
  unreachable

cont742:                                          ; preds = %if.end738
  store i32 %548, i32* %num_send_env740, align 4
  %idxprom743 = sext i32 %546 to i64
  %551 = load %struct.Options** %options.addr, align 8
  %send_env = getelementptr inbounds %struct.Options* %551, i32 0, i32 76
  %arrayidx744 = getelementptr inbounds [256 x i8*]* %send_env, i32 0, i64 %idxprom743
  store i8* %call739, i8** %arrayidx744, align 8
  br label %while.cond717

while.end745:                                     ; preds = %land.end725
  br label %sw.epilog

sw.bb746:                                         ; preds = %if.end34
  %552 = load %struct.Options** %options.addr, align 8
  %control_path = getelementptr inbounds %struct.Options* %552, i32 0, i32 77
  store i8** %control_path, i8*** %charptr, align 8
  br label %parse_string

sw.bb747:                                         ; preds = %if.end34
  %553 = load %struct.Options** %options.addr, align 8
  %control_master = getelementptr inbounds %struct.Options* %553, i32 0, i32 78
  store i32* %control_master, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([8 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_controlmaster to [8 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb748:                                         ; preds = %if.end34
  %554 = load %struct.Options** %options.addr, align 8
  %control_persist = getelementptr inbounds %struct.Options* %554, i32 0, i32 79
  store i32* %control_persist, i32** %intptr, align 8
  %call749 = call i8* @strdelim(i8** %s)
  store i8* %call749, i8** %arg, align 8
  %555 = load i8** %arg, align 8
  %tobool750 = icmp ne i8* %555, null
  br i1 %tobool750, label %lor.lhs.false751, label %if.then755

lor.lhs.false751:                                 ; preds = %sw.bb748
  %556 = load i8** %arg, align 8
  %557 = load i8* %556, align 1
  %conv752 = sext i8 %557 to i32
  %cmp753 = icmp eq i32 %conv752, 0
  br i1 %cmp753, label %if.then755, label %if.end756

if.then755:                                       ; preds = %lor.lhs.false751, %sw.bb748
  %558 = load i8** %filename.addr, align 8
  %559 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([49 x i8]* @.str220, i32 0, i32 0), i8* %558, i32 %559) #11
  unreachable

if.end756:                                        ; preds = %lor.lhs.false751
  store i32 0, i32* %value, align 4
  store i32 0, i32* %value2, align 4
  %560 = load i8** %arg, align 8
  %call757 = call i32 @strcmp(i8* %560, i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0)) #12
  %cmp758 = icmp eq i32 %call757, 0
  br i1 %cmp758, label %if.then764, label %lor.lhs.false760

lor.lhs.false760:                                 ; preds = %if.end756
  %561 = load i8** %arg, align 8
  %call761 = call i32 @strcmp(i8* %561, i8* getelementptr inbounds ([6 x i8]* @.str167361, i32 0, i32 0)) #12
  %cmp762 = icmp eq i32 %call761, 0
  br i1 %cmp762, label %if.then764, label %if.else765

if.then764:                                       ; preds = %lor.lhs.false760, %if.end756
  store i32 0, i32* %value, align 4
  br label %if.end783

if.else765:                                       ; preds = %lor.lhs.false760
  %562 = load i8** %arg, align 8
  %call766 = call i32 @strcmp(i8* %562, i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0)) #12
  %cmp767 = icmp eq i32 %call766, 0
  br i1 %cmp767, label %if.then773, label %lor.lhs.false769

lor.lhs.false769:                                 ; preds = %if.else765
  %563 = load i8** %arg, align 8
  %call770 = call i32 @strcmp(i8* %563, i8* getelementptr inbounds ([5 x i8]* @.str166360, i32 0, i32 0)) #12
  %cmp771 = icmp eq i32 %call770, 0
  br i1 %cmp771, label %if.then773, label %if.else774

if.then773:                                       ; preds = %lor.lhs.false769, %if.else765
  store i32 1, i32* %value, align 4
  br label %if.end782

if.else774:                                       ; preds = %lor.lhs.false769
  %564 = load i8** %arg, align 8
  %call775 = call i64 @convtime(i8* %564)
  %conv776 = trunc i64 %call775 to i32
  store i32 %conv776, i32* %value2, align 4
  %cmp777 = icmp sge i32 %conv776, 0
  br i1 %cmp777, label %if.then779, label %if.else780

if.then779:                                       ; preds = %if.else774
  store i32 1, i32* %value, align 4
  br label %if.end781

if.else780:                                       ; preds = %if.else774
  %565 = load i8** %filename.addr, align 8
  %566 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([45 x i8]* @.str221, i32 0, i32 0), i8* %565, i32 %566) #11
  unreachable

if.end781:                                        ; preds = %if.then779
  br label %if.end782

if.end782:                                        ; preds = %if.end781, %if.then773
  br label %if.end783

if.end783:                                        ; preds = %if.end782, %if.then764
  %567 = load i32** %activep.addr, align 8
  %568 = load i32* %567, align 4
  %tobool784 = icmp ne i32 %568, 0
  br i1 %tobool784, label %land.lhs.true785, label %if.end791

land.lhs.true785:                                 ; preds = %if.end783
  %569 = load i32** %intptr, align 8
  %570 = load i32* %569, align 4
  %571 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %572 = extractvalue { i32, i1 } %571, 0
  %573 = extractvalue { i32, i1 } %571, 1
  %574 = xor i1 %573, true
  br i1 %574, label %cont787, label %trap786

trap786:                                          ; preds = %land.lhs.true785
  call void @llvm.trap() #3
  unreachable

cont787:                                          ; preds = %land.lhs.true785
  %cmp788 = icmp eq i32 %570, %572
  br i1 %cmp788, label %if.then790, label %if.end791

if.then790:                                       ; preds = %cont787
  %575 = load i32* %value, align 4
  %576 = load i32** %intptr, align 8
  store i32 %575, i32* %576, align 4
  %577 = load i32* %value2, align 4
  %578 = load %struct.Options** %options.addr, align 8
  %control_persist_timeout = getelementptr inbounds %struct.Options* %578, i32 0, i32 80
  store i32 %577, i32* %control_persist_timeout, align 4
  br label %if.end791

if.end791:                                        ; preds = %if.then790, %cont787, %if.end783
  br label %sw.epilog

sw.bb792:                                         ; preds = %if.end34
  %579 = load %struct.Options** %options.addr, align 8
  %hash_known_hosts = getelementptr inbounds %struct.Options* %579, i32 0, i32 81
  store i32* %hash_known_hosts, i32** %intptr, align 8
  br label %parse_flag

sw.bb793:                                         ; preds = %if.end34
  %580 = load %struct.Options** %options.addr, align 8
  %tun_open = getelementptr inbounds %struct.Options* %580, i32 0, i32 82
  store i32* %tun_open, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([7 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_tunnel to [7 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb794:                                         ; preds = %if.end34
  %call795 = call i8* @strdelim(i8** %s)
  store i8* %call795, i8** %arg, align 8
  %581 = load i8** %arg, align 8
  %tobool796 = icmp ne i8* %581, null
  br i1 %tobool796, label %lor.lhs.false797, label %if.then801

lor.lhs.false797:                                 ; preds = %sw.bb794
  %582 = load i8** %arg, align 8
  %583 = load i8* %582, align 1
  %conv798 = sext i8 %583 to i32
  %cmp799 = icmp eq i32 %conv798, 0
  br i1 %cmp799, label %if.then801, label %if.end802

if.then801:                                       ; preds = %lor.lhs.false797, %sw.bb794
  %584 = load i8** %filename.addr, align 8
  %585 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %584, i32 %585) #11
  unreachable

if.end802:                                        ; preds = %lor.lhs.false797
  %586 = load i8** %arg, align 8
  %call803 = call i32 @a2tun(i8* %586, i32* %value2)
  store i32 %call803, i32* %value, align 4
  %587 = load i32* %value, align 4
  %588 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 2147483647, i32 1)
  %589 = extractvalue { i32, i1 } %588, 0
  %590 = extractvalue { i32, i1 } %588, 1
  %591 = xor i1 %590, true
  br i1 %591, label %cont805, label %trap804

trap804:                                          ; preds = %if.end802
  call void @llvm.trap() #3
  unreachable

cont805:                                          ; preds = %if.end802
  %cmp806 = icmp eq i32 %587, %589
  br i1 %cmp806, label %if.then808, label %if.end809

if.then808:                                       ; preds = %cont805
  %592 = load i8** %filename.addr, align 8
  %593 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str222, i32 0, i32 0), i8* %592, i32 %593) #11
  unreachable

if.end809:                                        ; preds = %cont805
  %594 = load i32** %activep.addr, align 8
  %595 = load i32* %594, align 4
  %tobool810 = icmp ne i32 %595, 0
  br i1 %tobool810, label %if.then811, label %if.end812

if.then811:                                       ; preds = %if.end809
  %596 = load i32* %value, align 4
  %597 = load %struct.Options** %options.addr, align 8
  %tun_local = getelementptr inbounds %struct.Options* %597, i32 0, i32 83
  store i32 %596, i32* %tun_local, align 4
  %598 = load i32* %value2, align 4
  %599 = load %struct.Options** %options.addr, align 8
  %tun_remote = getelementptr inbounds %struct.Options* %599, i32 0, i32 84
  store i32 %598, i32* %tun_remote, align 4
  br label %if.end812

if.end812:                                        ; preds = %if.then811, %if.end809
  br label %sw.epilog

sw.bb813:                                         ; preds = %if.end34
  %600 = load %struct.Options** %options.addr, align 8
  %local_command = getelementptr inbounds %struct.Options* %600, i32 0, i32 85
  store i8** %local_command, i8*** %charptr, align 8
  br label %parse_command

sw.bb814:                                         ; preds = %if.end34
  %601 = load %struct.Options** %options.addr, align 8
  %permit_local_command = getelementptr inbounds %struct.Options* %601, i32 0, i32 86
  store i32* %permit_local_command, i32** %intptr, align 8
  br label %parse_flag

sw.bb815:                                         ; preds = %if.end34
  %602 = load %struct.Options** %options.addr, align 8
  %visual_host_key = getelementptr inbounds %struct.Options* %602, i32 0, i32 87
  store i32* %visual_host_key, i32** %intptr, align 8
  br label %parse_flag

sw.bb816:                                         ; preds = %if.end34
  %603 = load i32* %cmdline, align 4
  %tobool817 = icmp ne i32 %603, 0
  br i1 %tobool817, label %if.then818, label %if.end819

if.then818:                                       ; preds = %sw.bb816
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([57 x i8]* @.str223, i32 0, i32 0)) #11
  unreachable

if.end819:                                        ; preds = %sw.bb816
  store i32 0, i32* %value, align 4
  br label %while.cond820

while.cond820:                                    ; preds = %for.end895, %if.then859, %if.end819
  %call821 = call i8* @strdelim(i8** %s)
  store i8* %call821, i8** %arg, align 8
  %cmp822 = icmp ne i8* %call821, null
  br i1 %cmp822, label %land.rhs824, label %land.end828

land.rhs824:                                      ; preds = %while.cond820
  %604 = load i8** %arg, align 8
  %605 = load i8* %604, align 1
  %conv825 = sext i8 %605 to i32
  %cmp826 = icmp ne i32 %conv825, 0
  br label %land.end828

land.end828:                                      ; preds = %land.rhs824, %while.cond820
  %606 = phi i1 [ false, %while.cond820 ], [ %cmp826, %land.rhs824 ]
  br i1 %606, label %while.body829, label %while.end896

while.body829:                                    ; preds = %land.end828
  %607 = load i8** %arg, align 8
  %608 = load i8* %607, align 1
  %conv830 = sext i8 %608 to i32
  %cmp831 = icmp eq i32 %conv830, 126
  br i1 %cmp831, label %land.lhs.true833, label %if.end838

land.lhs.true833:                                 ; preds = %while.body829
  %609 = load i32* %flags.addr, align 4
  %and834 = and i32 %609, 2
  %cmp835 = icmp eq i32 %and834, 0
  br i1 %cmp835, label %if.then837, label %if.end838

if.then837:                                       ; preds = %land.lhs.true833
  %610 = load i8** %filename.addr, align 8
  %611 = load i32* %linenum.addr, align 4
  %612 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str224, i32 0, i32 0), i8* %610, i32 %611, i8* %612) #11
  unreachable

if.end838:                                        ; preds = %land.lhs.true833, %while.body829
  %613 = load i8** %arg, align 8
  %614 = load i8* %613, align 1
  %conv839 = sext i8 %614 to i32
  %cmp840 = icmp ne i32 %conv839, 47
  br i1 %cmp840, label %land.lhs.true842, label %if.else851

land.lhs.true842:                                 ; preds = %if.end838
  %615 = load i8** %arg, align 8
  %616 = load i8* %615, align 1
  %conv843 = sext i8 %616 to i32
  %cmp844 = icmp ne i32 %conv843, 126
  br i1 %cmp844, label %if.then846, label %if.else851

if.then846:                                       ; preds = %land.lhs.true842
  %617 = load i32* %flags.addr, align 4
  %and847 = and i32 %617, 2
  %tobool848 = icmp ne i32 %and847, 0
  %cond849 = select i1 %tobool848, i8* getelementptr inbounds ([7 x i8]* @.str226, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str227, i32 0, i32 0)
  %618 = load i8** %arg, align 8
  %call850 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %arg2, i8* getelementptr inbounds ([6 x i8]* @.str225, i32 0, i32 0), i8* %cond849, i8* %618)
  br label %if.end853

if.else851:                                       ; preds = %land.lhs.true842, %if.end838
  %619 = load i8** %arg, align 8
  %call852 = call i8* @xstrdup(i8* %619)
  store i8* %call852, i8** %arg2, align 8
  br label %if.end853

if.end853:                                        ; preds = %if.else851, %if.then846
  %620 = bitcast %struct._ssh_compat_glob_t* %gl to i8*
  call void @llvm.memset.p0i8.i64(i8* %620, i8 0, i64 80, i32 8, i1 false)
  %621 = load i8** %arg2, align 8
  %call854 = call i32 @_ssh__compat_glob(i8* %621, i32 2048, i32 (i8*, i32)* null, %struct._ssh_compat_glob_t* %gl)
  store i32 %call854, i32* %r, align 4
  %622 = load i32* %r, align 4
  %623 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 3)
  %624 = extractvalue { i32, i1 } %623, 0
  %625 = extractvalue { i32, i1 } %623, 1
  %626 = xor i1 %625, true
  br i1 %626, label %cont856, label %trap855

trap855:                                          ; preds = %if.end853
  call void @llvm.trap() #3
  unreachable

cont856:                                          ; preds = %if.end853
  %cmp857 = icmp eq i32 %622, %624
  br i1 %cmp857, label %if.then859, label %if.else860

if.then859:                                       ; preds = %cont856
  %627 = load i8** %filename.addr, align 8
  %628 = load i32* %linenum.addr, align 4
  %629 = load i8** %arg2, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([44 x i8]* @.str228, i32 0, i32 0), i8* %627, i32 %628, i8* %629)
  br label %while.cond820

if.else860:                                       ; preds = %cont856
  %630 = load i32* %r, align 4
  %cmp861 = icmp ne i32 %630, 0
  br i1 %cmp861, label %if.then866, label %lor.lhs.false863

lor.lhs.false863:                                 ; preds = %if.else860
  %gl_pathc = getelementptr inbounds %struct._ssh_compat_glob_t* %gl, i32 0, i32 0
  %631 = load i32* %gl_pathc, align 4
  %cmp864 = icmp slt i32 %631, 0
  br i1 %cmp864, label %if.then866, label %if.end867

if.then866:                                       ; preds = %lor.lhs.false863, %if.else860
  %632 = load i8** %filename.addr, align 8
  %633 = load i32* %linenum.addr, align 4
  %634 = load i8** %arg2, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str229, i32 0, i32 0), i8* %632, i32 %633, i8* %634) #11
  unreachable

if.end867:                                        ; preds = %lor.lhs.false863
  br label %if.end868

if.end868:                                        ; preds = %if.end867
  %635 = load i8** %arg2, align 8
  call void @free(i8* %635) #9
  %636 = load i32** %activep.addr, align 8
  %637 = load i32* %636, align 4
  store i32 %637, i32* %oactive, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond869

for.cond869:                                      ; preds = %for.inc893, %if.end868
  %638 = load i32* %i, align 4
  %gl_pathc870 = getelementptr inbounds %struct._ssh_compat_glob_t* %gl, i32 0, i32 0
  %639 = load i32* %gl_pathc870, align 4
  %cmp871 = icmp ult i32 %638, %639
  br i1 %cmp871, label %for.body873, label %for.end895

for.body873:                                      ; preds = %for.cond869
  %640 = load i8** %filename.addr, align 8
  %641 = load i32* %linenum.addr, align 4
  %642 = load i32* %i, align 4
  %idxprom874 = zext i32 %642 to i64
  %gl_pathv = getelementptr inbounds %struct._ssh_compat_glob_t* %gl, i32 0, i32 4
  %643 = load i8*** %gl_pathv, align 8
  %arrayidx875 = getelementptr inbounds i8** %643, i64 %idxprom874
  %644 = load i8** %arrayidx875, align 8
  %645 = load i32* %depth.addr, align 4
  %646 = load i32* %oactive, align 4
  %tobool876 = icmp ne i32 %646, 0
  %cond877 = select i1 %tobool876, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str231, i32 0, i32 0)
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([45 x i8]* @.str230, i32 0, i32 0), i8* %640, i32 %641, i8* %644, i32 %645, i8* %cond877)
  %647 = load i32* %i, align 4
  %idxprom878 = zext i32 %647 to i64
  %gl_pathv879 = getelementptr inbounds %struct._ssh_compat_glob_t* %gl, i32 0, i32 4
  %648 = load i8*** %gl_pathv879, align 8
  %arrayidx880 = getelementptr inbounds i8** %648, i64 %idxprom878
  %649 = load i8** %arrayidx880, align 8
  %650 = load %struct.passwd** %pw.addr, align 8
  %651 = load i8** %host.addr, align 8
  %652 = load i8** %original_host.addr, align 8
  %653 = load %struct.Options** %options.addr, align 8
  %654 = load i32* %flags.addr, align 4
  %or = or i32 %654, 1
  %655 = load i32* %oactive, align 4
  %tobool881 = icmp ne i32 %655, 0
  %cond882 = select i1 %tobool881, i32 0, i32 8
  %or883 = or i32 %or, %cond882
  %656 = load i32** %activep.addr, align 8
  %657 = load i32* %depth.addr, align 4
  %658 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %657, i32 1)
  %659 = extractvalue { i32, i1 } %658, 0
  %660 = extractvalue { i32, i1 } %658, 1
  %661 = xor i1 %660, true
  br i1 %661, label %cont885, label %trap884

trap884:                                          ; preds = %for.body873
  call void @llvm.trap() #3
  unreachable

cont885:                                          ; preds = %for.body873
  %call886 = call i32 @read_config_file_depth(i8* %649, %struct.passwd* %650, i8* %651, i8* %652, %struct.Options* %653, i32 %or883, i32* %656, i32 %659)
  store i32 %call886, i32* %r, align 4
  %662 = load i32* %oactive, align 4
  %663 = load i32** %activep.addr, align 8
  store i32 %662, i32* %663, align 4
  %664 = load i32* %r, align 4
  %cmp887 = icmp ne i32 %664, 1
  br i1 %cmp887, label %if.then889, label %if.end892

if.then889:                                       ; preds = %cont885
  %665 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %666 = extractvalue { i32, i1 } %665, 0
  %667 = extractvalue { i32, i1 } %665, 1
  %668 = xor i1 %667, true
  br i1 %668, label %cont891, label %trap890

trap890:                                          ; preds = %if.then889
  call void @llvm.trap() #3
  unreachable

cont891:                                          ; preds = %if.then889
  store i32 %666, i32* %value, align 4
  br label %if.end892

if.end892:                                        ; preds = %cont891, %cont885
  br label %for.inc893

for.inc893:                                       ; preds = %if.end892
  %669 = load i32* %i, align 4
  %inc894 = add i32 %669, 1
  store i32 %inc894, i32* %i, align 4
  br label %for.cond869

for.end895:                                       ; preds = %for.cond869
  call void @_ssh__compat_globfree(%struct._ssh_compat_glob_t* %gl)
  br label %while.cond820

while.end896:                                     ; preds = %land.end828
  %670 = load i32* %value, align 4
  %cmp897 = icmp ne i32 %670, 0
  br i1 %cmp897, label %if.then899, label %if.end900

if.then899:                                       ; preds = %while.end896
  %671 = load i32* %value, align 4
  store i32 %671, i32* %retval
  br label %return

if.end900:                                        ; preds = %while.end896
  br label %sw.epilog

sw.bb901:                                         ; preds = %if.end34
  %call902 = call i8* @strdelim(i8** %s)
  store i8* %call902, i8** %arg, align 8
  %672 = load i8** %arg, align 8
  %call903 = call i32 @parse_ipqos(i8* %672)
  store i32 %call903, i32* %value, align 4
  %673 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %674 = extractvalue { i32, i1 } %673, 0
  %675 = extractvalue { i32, i1 } %673, 1
  %676 = xor i1 %675, true
  br i1 %676, label %cont905, label %trap904

trap904:                                          ; preds = %sw.bb901
  call void @llvm.trap() #3
  unreachable

cont905:                                          ; preds = %sw.bb901
  %cmp906 = icmp eq i32 %call903, %674
  br i1 %cmp906, label %if.then908, label %if.end909

if.then908:                                       ; preds = %cont905
  %677 = load i8** %filename.addr, align 8
  %678 = load i32* %linenum.addr, align 4
  %679 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str232, i32 0, i32 0), i8* %677, i32 %678, i8* %679) #11
  unreachable

if.end909:                                        ; preds = %cont905
  %call910 = call i8* @strdelim(i8** %s)
  store i8* %call910, i8** %arg, align 8
  %680 = load i8** %arg, align 8
  %cmp911 = icmp eq i8* %680, null
  br i1 %cmp911, label %if.then913, label %if.else914

if.then913:                                       ; preds = %if.end909
  %681 = load i32* %value, align 4
  store i32 %681, i32* %value2, align 4
  br label %if.end922

if.else914:                                       ; preds = %if.end909
  %682 = load i8** %arg, align 8
  %call915 = call i32 @parse_ipqos(i8* %682)
  store i32 %call915, i32* %value2, align 4
  %683 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %684 = extractvalue { i32, i1 } %683, 0
  %685 = extractvalue { i32, i1 } %683, 1
  %686 = xor i1 %685, true
  br i1 %686, label %cont917, label %trap916

trap916:                                          ; preds = %if.else914
  call void @llvm.trap() #3
  unreachable

cont917:                                          ; preds = %if.else914
  %cmp918 = icmp eq i32 %call915, %684
  br i1 %cmp918, label %if.then920, label %if.end921

if.then920:                                       ; preds = %cont917
  %687 = load i8** %filename.addr, align 8
  %688 = load i32* %linenum.addr, align 4
  %689 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str232, i32 0, i32 0), i8* %687, i32 %688, i8* %689) #11
  unreachable

if.end921:                                        ; preds = %cont917
  br label %if.end922

if.end922:                                        ; preds = %if.end921, %if.then913
  %690 = load i32** %activep.addr, align 8
  %691 = load i32* %690, align 4
  %tobool923 = icmp ne i32 %691, 0
  br i1 %tobool923, label %if.then924, label %if.end925

if.then924:                                       ; preds = %if.end922
  %692 = load i32* %value, align 4
  %693 = load %struct.Options** %options.addr, align 8
  %ip_qos_interactive = getelementptr inbounds %struct.Options* %693, i32 0, i32 24
  store i32 %692, i32* %ip_qos_interactive, align 4
  %694 = load i32* %value2, align 4
  %695 = load %struct.Options** %options.addr, align 8
  %ip_qos_bulk = getelementptr inbounds %struct.Options* %695, i32 0, i32 25
  store i32 %694, i32* %ip_qos_bulk, align 4
  br label %if.end925

if.end925:                                        ; preds = %if.then924, %if.end922
  br label %sw.epilog

sw.bb926:                                         ; preds = %if.end34
  %696 = load %struct.Options** %options.addr, align 8
  %request_tty = getelementptr inbounds %struct.Options* %696, i32 0, i32 88
  store i32* %request_tty, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([7 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_requesttty to [7 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb927:                                         ; preds = %if.end34
  %697 = load %struct.Options** %options.addr, align 8
  %ignored_unknown928 = getelementptr inbounds %struct.Options* %697, i32 0, i32 106
  store i8** %ignored_unknown928, i8*** %charptr, align 8
  br label %parse_string

sw.bb929:                                         ; preds = %if.end34
  %698 = load %struct.Options** %options.addr, align 8
  %proxy_use_fdpass = getelementptr inbounds %struct.Options* %698, i32 0, i32 89
  store i32* %proxy_use_fdpass, i32** %intptr, align 8
  br label %parse_flag

sw.bb930:                                         ; preds = %if.end34
  %699 = load %struct.Options** %options.addr, align 8
  %num_canonical_domains = getelementptr inbounds %struct.Options* %699, i32 0, i32 90
  %700 = load i32* %num_canonical_domains, align 4
  %cmp931 = icmp ne i32 %700, 0
  %conv932 = zext i1 %cmp931 to i32
  store i32 %conv932, i32* %value, align 4
  br label %while.cond933

while.cond933:                                    ; preds = %cont956, %if.then946, %sw.bb930
  %call934 = call i8* @strdelim(i8** %s)
  store i8* %call934, i8** %arg, align 8
  %cmp935 = icmp ne i8* %call934, null
  br i1 %cmp935, label %land.rhs937, label %land.end941

land.rhs937:                                      ; preds = %while.cond933
  %701 = load i8** %arg, align 8
  %702 = load i8* %701, align 1
  %conv938 = sext i8 %702 to i32
  %cmp939 = icmp ne i32 %conv938, 0
  br label %land.end941

land.end941:                                      ; preds = %land.rhs937, %while.cond933
  %703 = phi i1 [ false, %while.cond933 ], [ %cmp939, %land.rhs937 ]
  br i1 %703, label %while.body942, label %while.end959

while.body942:                                    ; preds = %land.end941
  %704 = load i8** %arg, align 8
  %705 = load i8** %filename.addr, align 8
  %706 = load i32* %linenum.addr, align 4
  call void @valid_domain(i8* %704, i8* %705, i32 %706)
  %707 = load i32** %activep.addr, align 8
  %708 = load i32* %707, align 4
  %tobool943 = icmp ne i32 %708, 0
  br i1 %tobool943, label %lor.lhs.false944, label %if.then946

lor.lhs.false944:                                 ; preds = %while.body942
  %709 = load i32* %value, align 4
  %tobool945 = icmp ne i32 %709, 0
  br i1 %tobool945, label %if.then946, label %if.end947

if.then946:                                       ; preds = %lor.lhs.false944, %while.body942
  br label %while.cond933

if.end947:                                        ; preds = %lor.lhs.false944
  %710 = load %struct.Options** %options.addr, align 8
  %num_canonical_domains948 = getelementptr inbounds %struct.Options* %710, i32 0, i32 90
  %711 = load i32* %num_canonical_domains948, align 4
  %cmp949 = icmp sge i32 %711, 32
  br i1 %cmp949, label %if.then951, label %if.end952

if.then951:                                       ; preds = %if.end947
  %712 = load i8** %filename.addr, align 8
  %713 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str233, i32 0, i32 0), i8* %712, i32 %713) #11
  unreachable

if.end952:                                        ; preds = %if.end947
  %714 = load i8** %arg, align 8
  %call953 = call i8* @xstrdup(i8* %714)
  %715 = load %struct.Options** %options.addr, align 8
  %num_canonical_domains954 = getelementptr inbounds %struct.Options* %715, i32 0, i32 90
  %716 = load i32* %num_canonical_domains954, align 4
  %717 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %716, i32 1)
  %718 = extractvalue { i32, i1 } %717, 0
  %719 = extractvalue { i32, i1 } %717, 1
  %720 = xor i1 %719, true
  br i1 %720, label %cont956, label %trap955

trap955:                                          ; preds = %if.end952
  call void @llvm.trap() #3
  unreachable

cont956:                                          ; preds = %if.end952
  store i32 %718, i32* %num_canonical_domains954, align 4
  %idxprom957 = sext i32 %716 to i64
  %721 = load %struct.Options** %options.addr, align 8
  %canonical_domains = getelementptr inbounds %struct.Options* %721, i32 0, i32 91
  %arrayidx958 = getelementptr inbounds [32 x i8*]* %canonical_domains, i32 0, i64 %idxprom957
  store i8* %call953, i8** %arrayidx958, align 8
  br label %while.cond933

while.end959:                                     ; preds = %land.end941
  br label %sw.epilog

sw.bb960:                                         ; preds = %if.end34
  %722 = load %struct.Options** %options.addr, align 8
  %num_permitted_cnames = getelementptr inbounds %struct.Options* %722, i32 0, i32 95
  %723 = load i32* %num_permitted_cnames, align 4
  %cmp961 = icmp ne i32 %723, 0
  %conv962 = zext i1 %cmp961 to i32
  store i32 %conv962, i32* %value, align 4
  br label %while.cond963

while.cond963:                                    ; preds = %cont1003, %if.then993, %sw.bb960
  %call964 = call i8* @strdelim(i8** %s)
  store i8* %call964, i8** %arg, align 8
  %cmp965 = icmp ne i8* %call964, null
  br i1 %cmp965, label %land.rhs967, label %land.end971

land.rhs967:                                      ; preds = %while.cond963
  %724 = load i8** %arg, align 8
  %725 = load i8* %724, align 1
  %conv968 = sext i8 %725 to i32
  %cmp969 = icmp ne i32 %conv968, 0
  br label %land.end971

land.end971:                                      ; preds = %land.rhs967, %while.cond963
  %726 = phi i1 [ false, %while.cond963 ], [ %cmp969, %land.rhs967 ]
  br i1 %726, label %while.body972, label %while.end1007

while.body972:                                    ; preds = %land.end971
  %727 = load i8** %arg, align 8
  %call973 = call i32 @strcmp(i8* %727, i8* getelementptr inbounds ([2 x i8]* @.str234, i32 0, i32 0)) #12
  %cmp974 = icmp eq i32 %call973, 0
  br i1 %cmp974, label %if.then976, label %if.else977

if.then976:                                       ; preds = %while.body972
  %728 = load i8** %arg, align 8
  store i8* %728, i8** %arg2, align 8
  br label %if.end989

if.else977:                                       ; preds = %while.body972
  %729 = load i8** %arg, align 8
  call void @lowercase(i8* %729)
  %730 = load i8** %arg, align 8
  %call978 = call i8* @strchr(i8* %730, i32 58) #12
  store i8* %call978, i8** %arg2, align 8
  %cmp979 = icmp eq i8* %call978, null
  br i1 %cmp979, label %if.then986, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.else977
  %731 = load i8** %arg2, align 8
  %arrayidx982 = getelementptr inbounds i8* %731, i64 1
  %732 = load i8* %arrayidx982, align 1
  %conv983 = sext i8 %732 to i32
  %cmp984 = icmp eq i32 %conv983, 0
  br i1 %cmp984, label %if.then986, label %if.end987

if.then986:                                       ; preds = %lor.lhs.false981, %if.else977
  %733 = load i8** %filename.addr, align 8
  %734 = load i32* %linenum.addr, align 4
  %735 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([41 x i8]* @.str235, i32 0, i32 0), i8* %733, i32 %734, i8* %735) #11
  unreachable

if.end987:                                        ; preds = %lor.lhs.false981
  %736 = load i8** %arg2, align 8
  store i8 0, i8* %736, align 1
  %737 = load i8** %arg2, align 8
  %incdec.ptr988 = getelementptr inbounds i8* %737, i32 1
  store i8* %incdec.ptr988, i8** %arg2, align 8
  br label %if.end989

if.end989:                                        ; preds = %if.end987, %if.then976
  %738 = load i32** %activep.addr, align 8
  %739 = load i32* %738, align 4
  %tobool990 = icmp ne i32 %739, 0
  br i1 %tobool990, label %lor.lhs.false991, label %if.then993

lor.lhs.false991:                                 ; preds = %if.end989
  %740 = load i32* %value, align 4
  %tobool992 = icmp ne i32 %740, 0
  br i1 %tobool992, label %if.then993, label %if.end994

if.then993:                                       ; preds = %lor.lhs.false991, %if.end989
  br label %while.cond963

if.end994:                                        ; preds = %lor.lhs.false991
  %741 = load %struct.Options** %options.addr, align 8
  %num_permitted_cnames995 = getelementptr inbounds %struct.Options* %741, i32 0, i32 95
  %742 = load i32* %num_permitted_cnames995, align 4
  %cmp996 = icmp sge i32 %742, 32
  br i1 %cmp996, label %if.then998, label %if.end999

if.then998:                                       ; preds = %if.end994
  %743 = load i8** %filename.addr, align 8
  %744 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([39 x i8]* @.str236, i32 0, i32 0), i8* %743, i32 %744) #11
  unreachable

if.end999:                                        ; preds = %if.end994
  %745 = load %struct.Options** %options.addr, align 8
  %permitted_cnames = getelementptr inbounds %struct.Options* %745, i32 0, i32 96
  %arraydecay1000 = getelementptr inbounds [32 x %struct.allowed_cname]* %permitted_cnames, i32 0, i32 0
  %746 = load %struct.Options** %options.addr, align 8
  %num_permitted_cnames1001 = getelementptr inbounds %struct.Options* %746, i32 0, i32 95
  %747 = load i32* %num_permitted_cnames1001, align 4
  %748 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %747, i32 1)
  %749 = extractvalue { i32, i1 } %748, 0
  %750 = extractvalue { i32, i1 } %748, 1
  %751 = xor i1 %750, true
  br i1 %751, label %cont1003, label %trap1002

trap1002:                                         ; preds = %if.end999
  call void @llvm.trap() #3
  unreachable

cont1003:                                         ; preds = %if.end999
  store i32 %749, i32* %num_permitted_cnames1001, align 4
  %idx.ext = sext i32 %747 to i64
  %add.ptr1004 = getelementptr inbounds %struct.allowed_cname* %arraydecay1000, i64 %idx.ext
  store %struct.allowed_cname* %add.ptr1004, %struct.allowed_cname** %cname, align 8
  %752 = load i8** %arg, align 8
  %call1005 = call i8* @xstrdup(i8* %752)
  %753 = load %struct.allowed_cname** %cname, align 8
  %source_list = getelementptr inbounds %struct.allowed_cname* %753, i32 0, i32 0
  store i8* %call1005, i8** %source_list, align 8
  %754 = load i8** %arg2, align 8
  %call1006 = call i8* @xstrdup(i8* %754)
  %755 = load %struct.allowed_cname** %cname, align 8
  %target_list = getelementptr inbounds %struct.allowed_cname* %755, i32 0, i32 1
  store i8* %call1006, i8** %target_list, align 8
  br label %while.cond963

while.end1007:                                    ; preds = %land.end971
  br label %sw.epilog

sw.bb1008:                                        ; preds = %if.end34
  %756 = load %struct.Options** %options.addr, align 8
  %canonicalize_hostname = getelementptr inbounds %struct.Options* %756, i32 0, i32 92
  store i32* %canonicalize_hostname, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([6 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_canonicalizehostname to [6 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb1009:                                        ; preds = %if.end34
  %757 = load %struct.Options** %options.addr, align 8
  %canonicalize_max_dots = getelementptr inbounds %struct.Options* %757, i32 0, i32 93
  store i32* %canonicalize_max_dots, i32** %intptr, align 8
  br label %parse_int

sw.bb1010:                                        ; preds = %if.end34
  %758 = load %struct.Options** %options.addr, align 8
  %canonicalize_fallback_local = getelementptr inbounds %struct.Options* %758, i32 0, i32 94
  store i32* %canonicalize_fallback_local, i32** %intptr, align 8
  br label %parse_flag

sw.bb1011:                                        ; preds = %if.end34
  %call1012 = call i8* @strdelim(i8** %s)
  store i8* %call1012, i8** %arg, align 8
  %759 = load i8** %arg, align 8
  %tobool1013 = icmp ne i8* %759, null
  br i1 %tobool1013, label %lor.lhs.false1014, label %if.then1018

lor.lhs.false1014:                                ; preds = %sw.bb1011
  %760 = load i8** %arg, align 8
  %761 = load i8* %760, align 1
  %conv1015 = sext i8 %761 to i32
  %cmp1016 = icmp eq i32 %conv1015, 0
  br i1 %cmp1016, label %if.then1018, label %if.end1019

if.then1018:                                      ; preds = %lor.lhs.false1014, %sw.bb1011
  %762 = load i8** %filename.addr, align 8
  %763 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([54 x i8]* @.str237, i32 0, i32 0), i8* %762, i32 %763) #11
  unreachable

if.end1019:                                       ; preds = %lor.lhs.false1014
  %764 = load i8** %arg, align 8
  %call1020 = call i64 @strtol(i8* %764, i8** %endofnumber, i32 8) #9
  %conv1021 = trunc i64 %call1020 to i32
  store i32 %conv1021, i32* %value, align 4
  %765 = load i8** %arg, align 8
  %766 = load i8** %endofnumber, align 8
  %cmp1022 = icmp eq i8* %765, %766
  br i1 %cmp1022, label %if.then1030, label %lor.lhs.false1024

lor.lhs.false1024:                                ; preds = %if.end1019
  %767 = load i32* %value, align 4
  %cmp1025 = icmp slt i32 %767, 0
  br i1 %cmp1025, label %if.then1030, label %lor.lhs.false1027

lor.lhs.false1027:                                ; preds = %lor.lhs.false1024
  %768 = load i32* %value, align 4
  %cmp1028 = icmp sgt i32 %768, 511
  br i1 %cmp1028, label %if.then1030, label %if.end1031

if.then1030:                                      ; preds = %lor.lhs.false1027, %lor.lhs.false1024, %if.end1019
  %769 = load i8** %filename.addr, align 8
  %770 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([26 x i8]* @.str238, i32 0, i32 0), i8* %769, i32 %770) #11
  unreachable

if.end1031:                                       ; preds = %lor.lhs.false1027
  %771 = load i32* %value, align 4
  %772 = load %struct.Options** %options.addr, align 8
  %fwd_opts1032 = getelementptr inbounds %struct.Options* %772, i32 0, i32 6
  %streamlocal_bind_mask = getelementptr inbounds %struct.ForwardOptions* %fwd_opts1032, i32 0, i32 1
  store i32 %771, i32* %streamlocal_bind_mask, align 4
  br label %sw.epilog

sw.bb1033:                                        ; preds = %if.end34
  %773 = load %struct.Options** %options.addr, align 8
  %fwd_opts1034 = getelementptr inbounds %struct.Options* %773, i32 0, i32 6
  %streamlocal_bind_unlink = getelementptr inbounds %struct.ForwardOptions* %fwd_opts1034, i32 0, i32 2
  store i32* %streamlocal_bind_unlink, i32** %intptr, align 8
  br label %parse_flag

sw.bb1035:                                        ; preds = %if.end34
  %774 = load %struct.Options** %options.addr, align 8
  %revoked_host_keys = getelementptr inbounds %struct.Options* %774, i32 0, i32 97
  store i8** %revoked_host_keys, i8*** %charptr, align 8
  br label %parse_string

sw.bb1036:                                        ; preds = %if.end34
  %775 = load %struct.Options** %options.addr, align 8
  %fingerprint_hash = getelementptr inbounds %struct.Options* %775, i32 0, i32 98
  store i32* %fingerprint_hash, i32** %intptr, align 8
  %call1037 = call i8* @strdelim(i8** %s)
  store i8* %call1037, i8** %arg, align 8
  %776 = load i8** %arg, align 8
  %tobool1038 = icmp ne i8* %776, null
  br i1 %tobool1038, label %lor.lhs.false1039, label %if.then1043

lor.lhs.false1039:                                ; preds = %sw.bb1036
  %777 = load i8** %arg, align 8
  %778 = load i8* %777, align 1
  %conv1040 = sext i8 %778 to i32
  %cmp1041 = icmp eq i32 %conv1040, 0
  br i1 %cmp1041, label %if.then1043, label %if.end1044

if.then1043:                                      ; preds = %lor.lhs.false1039, %sw.bb1036
  %779 = load i8** %filename.addr, align 8
  %780 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str191385, i32 0, i32 0), i8* %779, i32 %780) #11
  unreachable

if.end1044:                                       ; preds = %lor.lhs.false1039
  %781 = load i8** %arg, align 8
  %call1045 = call i32 @ssh_digest_alg_by_name(i8* %781)
  store i32 %call1045, i32* %value, align 4
  %782 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %783 = extractvalue { i32, i1 } %782, 0
  %784 = extractvalue { i32, i1 } %782, 1
  %785 = xor i1 %784, true
  br i1 %785, label %cont1047, label %trap1046

trap1046:                                         ; preds = %if.end1044
  call void @llvm.trap() #3
  unreachable

cont1047:                                         ; preds = %if.end1044
  %cmp1048 = icmp eq i32 %call1045, %783
  br i1 %cmp1048, label %if.then1050, label %if.end1051

if.then1050:                                      ; preds = %cont1047
  %786 = load i8** %filename.addr, align 8
  %787 = load i32* %linenum.addr, align 4
  %788 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([45 x i8]* @.str239, i32 0, i32 0), i8* %786, i32 %787, i8* %788) #11
  unreachable

if.end1051:                                       ; preds = %cont1047
  %789 = load i32** %activep.addr, align 8
  %790 = load i32* %789, align 4
  %tobool1052 = icmp ne i32 %790, 0
  br i1 %tobool1052, label %land.lhs.true1053, label %if.end1059

land.lhs.true1053:                                ; preds = %if.end1051
  %791 = load i32** %intptr, align 8
  %792 = load i32* %791, align 4
  %793 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %794 = extractvalue { i32, i1 } %793, 0
  %795 = extractvalue { i32, i1 } %793, 1
  %796 = xor i1 %795, true
  br i1 %796, label %cont1055, label %trap1054

trap1054:                                         ; preds = %land.lhs.true1053
  call void @llvm.trap() #3
  unreachable

cont1055:                                         ; preds = %land.lhs.true1053
  %cmp1056 = icmp eq i32 %792, %794
  br i1 %cmp1056, label %if.then1058, label %if.end1059

if.then1058:                                      ; preds = %cont1055
  %797 = load i32* %value, align 4
  %798 = load i32** %intptr, align 8
  store i32 %797, i32* %798, align 4
  br label %if.end1059

if.end1059:                                       ; preds = %if.then1058, %cont1055, %if.end1051
  br label %sw.epilog

sw.bb1060:                                        ; preds = %if.end34
  %799 = load %struct.Options** %options.addr, align 8
  %update_hostkeys = getelementptr inbounds %struct.Options* %799, i32 0, i32 99
  store i32* %update_hostkeys, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([6 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_yesnoask to [6 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb1061:                                        ; preds = %if.end34
  %800 = load %struct.Options** %options.addr, align 8
  %hostbased_key_types = getelementptr inbounds %struct.Options* %800, i32 0, i32 100
  store i8** %hostbased_key_types, i8*** %charptr, align 8
  br label %parse_keytypes

sw.bb1062:                                        ; preds = %if.end34
  %801 = load %struct.Options** %options.addr, align 8
  %pubkey_key_types = getelementptr inbounds %struct.Options* %801, i32 0, i32 101
  store i8** %pubkey_key_types, i8*** %charptr, align 8
  br label %parse_keytypes

sw.bb1063:                                        ; preds = %if.end34
  %802 = load %struct.Options** %options.addr, align 8
  %add_keys_to_agent = getelementptr inbounds %struct.Options* %802, i32 0, i32 59
  store i32* %add_keys_to_agent, i32** %intptr, align 8
  store %struct.multistate* getelementptr inbounds ([7 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_yesnoaskconfirm to [7 x %struct.multistate]*), i32 0, i32 0), %struct.multistate** %multistate_ptr, align 8
  br label %parse_multistate

sw.bb1064:                                        ; preds = %if.end34
  %803 = load %struct.Options** %options.addr, align 8
  %identity_agent = getelementptr inbounds %struct.Options* %803, i32 0, i32 60
  store i8** %identity_agent, i8*** %charptr, align 8
  br label %parse_string

sw.bb1065:                                        ; preds = %if.end34
  %804 = load i8** %filename.addr, align 8
  %805 = load i32* %linenum.addr, align 4
  %806 = load i8** %keyword, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([35 x i8]* @.str240, i32 0, i32 0), i8* %804, i32 %805, i8* %806)
  store i32 0, i32* %retval
  br label %return

sw.bb1066:                                        ; preds = %if.end34
  %807 = load i8** %filename.addr, align 8
  %808 = load i32* %linenum.addr, align 4
  %809 = load i8** %keyword, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str241, i32 0, i32 0), i8* %807, i32 %808, i8* %809)
  store i32 0, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end34
  %810 = load i32* %opcode, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str242, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @__func__.process_config_line_depth, i32 0, i32 0), i32 %810) #11
  unreachable

sw.epilog:                                        ; preds = %if.end1059, %if.end1031, %while.end1007, %while.end959, %if.end925, %if.end900, %if.end812, %if.end791, %while.end745, %if.end710, %cond.end650, %if.end595, %if.end534, %if.end516, %if.end491, %if.end458, %if.end424, %if.end390, %if.end356, %if.end330, %if.end236, %if.end219, %if.end202, %if.end186, %if.then183, %if.end110, %if.end67
  %call1067 = call i8* @strdelim(i8** %s)
  store i8* %call1067, i8** %arg, align 8
  %cmp1068 = icmp ne i8* %call1067, null
  br i1 %cmp1068, label %land.lhs.true1070, label %if.end1075

land.lhs.true1070:                                ; preds = %sw.epilog
  %811 = load i8** %arg, align 8
  %812 = load i8* %811, align 1
  %conv1071 = sext i8 %812 to i32
  %cmp1072 = icmp ne i32 %conv1071, 0
  br i1 %cmp1072, label %if.then1074, label %if.end1075

if.then1074:                                      ; preds = %land.lhs.true1070
  %813 = load i8** %filename.addr, align 8
  %814 = load i32* %linenum.addr, align 4
  %815 = load i8** %arg, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([50 x i8]* @.str243, i32 0, i32 0), i8* %813, i32 %814, i8* %815) #11
  unreachable

if.end1075:                                       ; preds = %land.lhs.true1070, %sw.epilog
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end1075, %sw.bb1066, %sw.bb1065, %if.then899, %if.end635, %if.end296, %if.end281, %if.end257, %sw.bb36, %cont, %if.then33, %if.then15, %if.then2
  %816 = load i32* %retval
  ret i32 %816
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @read_config_file_depth(i8* %filename, %struct.passwd* %pw, i8* %host, i8* %original_host, %struct.Options* %options, i32 %flags, i32* %activep, i32 %depth) #0 {
entry:
  %retval = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %pw.addr = alloca %struct.passwd*, align 8
  %host.addr = alloca i8*, align 8
  %original_host.addr = alloca i8*, align 8
  %options.addr = alloca %struct.Options*, align 8
  %flags.addr = alloca i32, align 4
  %activep.addr = alloca i32*, align 8
  %depth.addr = alloca i32, align 4
  %f = alloca %struct._IO_FILE*, align 8
  %line = alloca [1024 x i8], align 16
  %linenum = alloca i32, align 4
  %bad_options = alloca i32, align 4
  %sb = alloca %struct.stat, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  store i8* %original_host, i8** %original_host.addr, align 8
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  store i32* %activep, i32** %activep.addr, align 8
  store i32 %depth, i32* %depth.addr, align 4
  store i32 0, i32* %bad_options, align 4
  %0 = load i32* %depth.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32* %depth.addr, align 4
  %cmp1 = icmp sgt i32 %1, 16
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str179373, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8** %filename.addr, align 8
  %call = call %struct._IO_FILE* @fopen(i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str180374, i32 0, i32 0))
  store %struct._IO_FILE* %call, %struct._IO_FILE** %f, align 8
  %cmp2 = icmp eq %struct._IO_FILE* %call, null
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.end
  %3 = load i32* %flags.addr, align 4
  %and = and i32 %3, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then5, label %if.end22

if.then5:                                         ; preds = %if.end4
  %4 = load %struct._IO_FILE** %f, align 8
  %call6 = call i32 @fileno(%struct._IO_FILE* %4) #9
  %call7 = call i32 @fstat(i32 %call6, %struct.stat* %sb) #9
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %6 = extractvalue { i32, i1 } %5, 0
  %7 = extractvalue { i32, i1 } %5, 1
  %8 = xor i1 %7, true
  br i1 %8, label %cont, label %trap

trap:                                             ; preds = %if.then5
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then5
  %cmp8 = icmp eq i32 %call7, %6
  br i1 %cmp8, label %if.then9, label %if.end12

if.then9:                                         ; preds = %cont
  %9 = load i8** %filename.addr, align 8
  %call10 = call i32* @__errno_location() #2
  %10 = load i32* %call10, align 4
  %call11 = call i8* @strerror(i32 %10) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([13 x i8]* @.str181375, i32 0, i32 0), i8* %9, i8* %call11) #11
  unreachable

if.end12:                                         ; preds = %cont
  %st_uid = getelementptr inbounds %struct.stat* %sb, i32 0, i32 4
  %11 = load i32* %st_uid, align 4
  %cmp13 = icmp ne i32 %11, 0
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false17

land.lhs.true:                                    ; preds = %if.end12
  %st_uid14 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 4
  %12 = load i32* %st_uid14, align 4
  %call15 = call i32 @getuid() #9
  %cmp16 = icmp ne i32 %12, %call15
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %land.lhs.true, %if.end12
  %st_mode = getelementptr inbounds %struct.stat* %sb, i32 0, i32 3
  %13 = load i32* %st_mode, align 4
  %and18 = and i32 %13, 18
  %cmp19 = icmp ne i32 %and18, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %lor.lhs.false17, %land.lhs.true
  %14 = load i8** %filename.addr, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([31 x i8]* @.str182376, i32 0, i32 0), i8* %14) #11
  unreachable

if.end21:                                         ; preds = %lor.lhs.false17
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.end4
  %15 = load i8** %filename.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([34 x i8]* @.str183377, i32 0, i32 0), i8* %15)
  store i32 0, i32* %linenum, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end33, %if.end22
  %arraydecay = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %16 = load %struct._IO_FILE** %f, align 8
  %call23 = call i8* @fgets(i8* %arraydecay, i32 1024, %struct._IO_FILE* %16)
  %tobool24 = icmp ne i8* %call23, null
  br i1 %tobool24, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %17 = load i32* %linenum, align 4
  %18 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 1)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont26, label %trap25

trap25:                                           ; preds = %while.body
  call void @llvm.trap() #3
  unreachable

cont26:                                           ; preds = %while.body
  store i32 %19, i32* %linenum, align 4
  %22 = load %struct.Options** %options.addr, align 8
  %23 = load %struct.passwd** %pw.addr, align 8
  %24 = load i8** %host.addr, align 8
  %25 = load i8** %original_host.addr, align 8
  %arraydecay27 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %26 = load i8** %filename.addr, align 8
  %27 = load i32* %linenum, align 4
  %28 = load i32** %activep.addr, align 8
  %29 = load i32* %flags.addr, align 4
  %30 = load i32* %depth.addr, align 4
  %call28 = call i32 @process_config_line_depth(%struct.Options* %22, %struct.passwd* %23, i8* %24, i8* %25, i8* %arraydecay27, i8* %26, i32 %27, i32* %28, i32 %29, i32 %30)
  %cmp29 = icmp ne i32 %call28, 0
  br i1 %cmp29, label %if.then30, label %if.end33

if.then30:                                        ; preds = %cont26
  %31 = load i32* %bad_options, align 4
  %32 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 1)
  %33 = extractvalue { i32, i1 } %32, 0
  %34 = extractvalue { i32, i1 } %32, 1
  %35 = xor i1 %34, true
  br i1 %35, label %cont32, label %trap31

trap31:                                           ; preds = %if.then30
  call void @llvm.trap() #3
  unreachable

cont32:                                           ; preds = %if.then30
  store i32 %33, i32* %bad_options, align 4
  br label %if.end33

if.end33:                                         ; preds = %cont32, %cont26
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %36 = load %struct._IO_FILE** %f, align 8
  %call34 = call i32 @fclose(%struct._IO_FILE* %36)
  %37 = load i32* %bad_options, align 4
  %cmp35 = icmp sgt i32 %37, 0
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %while.end
  %38 = load i8** %filename.addr, align 8
  %39 = load i32* %bad_options, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str184378, i32 0, i32 0), i8* %38, i32 %39) #11
  unreachable

if.end37:                                         ; preds = %while.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end37, %if.then3
  %40 = load i32* %retval
  ret i32 %40
}

; Function Attrs: nounwind sspreq uwtable
define internal void @clear_forwardings(%struct.Options* %options) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %i = alloca i32, align 4
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %entry
  %0 = load i32* %i, align 4
  %1 = load %struct.Options** %options.addr, align 8
  %num_local_forwards = getelementptr inbounds %struct.Options* %1, i32 0, i32 61
  %2 = load i32* %num_local_forwards, align 4
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.Options** %options.addr, align 8
  %local_forwards = getelementptr inbounds %struct.Options* %4, i32 0, i32 62
  %5 = load %struct.Forward** %local_forwards, align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %5, i64 %idxprom
  %listen_host = getelementptr inbounds %struct.Forward* %arrayidx, i32 0, i32 0
  %6 = load i8** %listen_host, align 8
  call void @free(i8* %6) #9
  %7 = load i32* %i, align 4
  %idxprom1 = sext i32 %7 to i64
  %8 = load %struct.Options** %options.addr, align 8
  %local_forwards2 = getelementptr inbounds %struct.Options* %8, i32 0, i32 62
  %9 = load %struct.Forward** %local_forwards2, align 8
  %arrayidx3 = getelementptr inbounds %struct.Forward* %9, i64 %idxprom1
  %listen_path = getelementptr inbounds %struct.Forward* %arrayidx3, i32 0, i32 2
  %10 = load i8** %listen_path, align 8
  call void @free(i8* %10) #9
  %11 = load i32* %i, align 4
  %idxprom4 = sext i32 %11 to i64
  %12 = load %struct.Options** %options.addr, align 8
  %local_forwards5 = getelementptr inbounds %struct.Options* %12, i32 0, i32 62
  %13 = load %struct.Forward** %local_forwards5, align 8
  %arrayidx6 = getelementptr inbounds %struct.Forward* %13, i64 %idxprom4
  %connect_host = getelementptr inbounds %struct.Forward* %arrayidx6, i32 0, i32 3
  %14 = load i8** %connect_host, align 8
  call void @free(i8* %14) #9
  %15 = load i32* %i, align 4
  %idxprom7 = sext i32 %15 to i64
  %16 = load %struct.Options** %options.addr, align 8
  %local_forwards8 = getelementptr inbounds %struct.Options* %16, i32 0, i32 62
  %17 = load %struct.Forward** %local_forwards8, align 8
  %arrayidx9 = getelementptr inbounds %struct.Forward* %17, i64 %idxprom7
  %connect_path = getelementptr inbounds %struct.Forward* %arrayidx9, i32 0, i32 5
  %18 = load i8** %connect_path, align 8
  call void @free(i8* %18) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32* %i, align 4
  %20 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 1)
  %21 = extractvalue { i32, i1 } %20, 0
  %22 = extractvalue { i32, i1 } %20, 1
  %23 = xor i1 %22, true
  br i1 %23, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %21, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.Options** %options.addr, align 8
  %num_local_forwards10 = getelementptr inbounds %struct.Options* %24, i32 0, i32 61
  %25 = load i32* %num_local_forwards10, align 4
  %cmp11 = icmp sgt i32 %25, 0
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %26 = load %struct.Options** %options.addr, align 8
  %local_forwards12 = getelementptr inbounds %struct.Options* %26, i32 0, i32 62
  %27 = load %struct.Forward** %local_forwards12, align 8
  %28 = bitcast %struct.Forward* %27 to i8*
  call void @free(i8* %28) #9
  %29 = load %struct.Options** %options.addr, align 8
  %local_forwards13 = getelementptr inbounds %struct.Options* %29, i32 0, i32 62
  store %struct.Forward* null, %struct.Forward** %local_forwards13, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %30 = load %struct.Options** %options.addr, align 8
  %num_local_forwards14 = getelementptr inbounds %struct.Options* %30, i32 0, i32 61
  store i32 0, i32* %num_local_forwards14, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %cont35, %if.end
  %31 = load i32* %i, align 4
  %32 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards = getelementptr inbounds %struct.Options* %32, i32 0, i32 63
  %33 = load i32* %num_remote_forwards, align 4
  %cmp16 = icmp slt i32 %31, %33
  br i1 %cmp16, label %for.body17, label %for.end36

for.body17:                                       ; preds = %for.cond15
  %34 = load i32* %i, align 4
  %idxprom18 = sext i32 %34 to i64
  %35 = load %struct.Options** %options.addr, align 8
  %remote_forwards = getelementptr inbounds %struct.Options* %35, i32 0, i32 64
  %36 = load %struct.Forward** %remote_forwards, align 8
  %arrayidx19 = getelementptr inbounds %struct.Forward* %36, i64 %idxprom18
  %listen_host20 = getelementptr inbounds %struct.Forward* %arrayidx19, i32 0, i32 0
  %37 = load i8** %listen_host20, align 8
  call void @free(i8* %37) #9
  %38 = load i32* %i, align 4
  %idxprom21 = sext i32 %38 to i64
  %39 = load %struct.Options** %options.addr, align 8
  %remote_forwards22 = getelementptr inbounds %struct.Options* %39, i32 0, i32 64
  %40 = load %struct.Forward** %remote_forwards22, align 8
  %arrayidx23 = getelementptr inbounds %struct.Forward* %40, i64 %idxprom21
  %listen_path24 = getelementptr inbounds %struct.Forward* %arrayidx23, i32 0, i32 2
  %41 = load i8** %listen_path24, align 8
  call void @free(i8* %41) #9
  %42 = load i32* %i, align 4
  %idxprom25 = sext i32 %42 to i64
  %43 = load %struct.Options** %options.addr, align 8
  %remote_forwards26 = getelementptr inbounds %struct.Options* %43, i32 0, i32 64
  %44 = load %struct.Forward** %remote_forwards26, align 8
  %arrayidx27 = getelementptr inbounds %struct.Forward* %44, i64 %idxprom25
  %connect_host28 = getelementptr inbounds %struct.Forward* %arrayidx27, i32 0, i32 3
  %45 = load i8** %connect_host28, align 8
  call void @free(i8* %45) #9
  %46 = load i32* %i, align 4
  %idxprom29 = sext i32 %46 to i64
  %47 = load %struct.Options** %options.addr, align 8
  %remote_forwards30 = getelementptr inbounds %struct.Options* %47, i32 0, i32 64
  %48 = load %struct.Forward** %remote_forwards30, align 8
  %arrayidx31 = getelementptr inbounds %struct.Forward* %48, i64 %idxprom29
  %connect_path32 = getelementptr inbounds %struct.Forward* %arrayidx31, i32 0, i32 5
  %49 = load i8** %connect_path32, align 8
  call void @free(i8* %49) #9
  br label %for.inc33

for.inc33:                                        ; preds = %for.body17
  %50 = load i32* %i, align 4
  %51 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 1)
  %52 = extractvalue { i32, i1 } %51, 0
  %53 = extractvalue { i32, i1 } %51, 1
  %54 = xor i1 %53, true
  br i1 %54, label %cont35, label %trap34

trap34:                                           ; preds = %for.inc33
  call void @llvm.trap() #3
  unreachable

cont35:                                           ; preds = %for.inc33
  store i32 %52, i32* %i, align 4
  br label %for.cond15

for.end36:                                        ; preds = %for.cond15
  %55 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards37 = getelementptr inbounds %struct.Options* %55, i32 0, i32 63
  %56 = load i32* %num_remote_forwards37, align 4
  %cmp38 = icmp sgt i32 %56, 0
  br i1 %cmp38, label %if.then39, label %if.end42

if.then39:                                        ; preds = %for.end36
  %57 = load %struct.Options** %options.addr, align 8
  %remote_forwards40 = getelementptr inbounds %struct.Options* %57, i32 0, i32 64
  %58 = load %struct.Forward** %remote_forwards40, align 8
  %59 = bitcast %struct.Forward* %58 to i8*
  call void @free(i8* %59) #9
  %60 = load %struct.Options** %options.addr, align 8
  %remote_forwards41 = getelementptr inbounds %struct.Options* %60, i32 0, i32 64
  store %struct.Forward* null, %struct.Forward** %remote_forwards41, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %for.end36
  %61 = load %struct.Options** %options.addr, align 8
  %num_remote_forwards43 = getelementptr inbounds %struct.Options* %61, i32 0, i32 63
  store i32 0, i32* %num_remote_forwards43, align 4
  %62 = load %struct.Options** %options.addr, align 8
  %tun_open = getelementptr inbounds %struct.Options* %62, i32 0, i32 82
  store i32 0, i32* %tun_open, align 4
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @parse_fwd_field(i8** %p, %struct.fwdarg* %fwd) #0 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca i8**, align 8
  %fwd.addr = alloca %struct.fwdarg*, align 8
  %ep = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %ispath = alloca i32, align 4
  store i8** %p, i8*** %p.addr, align 8
  store %struct.fwdarg* %fwd, %struct.fwdarg** %fwd.addr, align 8
  %0 = load i8*** %p.addr, align 8
  %1 = load i8** %0, align 8
  store i8* %1, i8** %cp, align 8
  store i32 0, i32* %ispath, align 4
  %2 = load i8** %cp, align 8
  %3 = load i8* %2, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i8*** %p.addr, align 8
  store i8* null, i8** %4, align 8
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %6 = extractvalue { i32, i1 } %5, 0
  %7 = extractvalue { i32, i1 } %5, 1
  %8 = xor i1 %7, true
  br i1 %8, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %6, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i8** %cp, align 8
  %10 = load i8* %9, align 1
  %conv2 = sext i8 %10 to i32
  %cmp3 = icmp eq i32 %conv2, 91
  br i1 %cmp3, label %if.then5, label %if.end41

if.then5:                                         ; preds = %if.end
  %11 = load i8** %cp, align 8
  %add.ptr = getelementptr inbounds i8* %11, i64 1
  store i8* %add.ptr, i8** %ep, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then5
  %12 = load i8** %ep, align 8
  %13 = load i8* %12, align 1
  %conv6 = sext i8 %13 to i32
  %cmp7 = icmp ne i32 %conv6, 93
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %14 = load i8** %ep, align 8
  %15 = load i8* %14, align 1
  %conv9 = sext i8 %15 to i32
  %cmp10 = icmp ne i32 %conv9, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %16 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ]
  br i1 %16, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %17 = load i8** %ep, align 8
  %18 = load i8* %17, align 1
  %conv12 = sext i8 %18 to i32
  %cmp13 = icmp eq i32 %conv12, 47
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.body
  store i32 1, i32* %ispath, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end16
  %19 = load i8** %ep, align 8
  %incdec.ptr = getelementptr inbounds i8* %19, i32 1
  store i8* %incdec.ptr, i8** %ep, align 8
  br label %for.cond

for.end:                                          ; preds = %land.end
  %20 = load i8** %ep, align 8
  %arrayidx = getelementptr inbounds i8* %20, i64 0
  %21 = load i8* %arrayidx, align 1
  %conv17 = sext i8 %21 to i32
  %cmp18 = icmp ne i32 %conv17, 93
  br i1 %cmp18, label %if.then28, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %22 = load i8** %ep, align 8
  %arrayidx20 = getelementptr inbounds i8* %22, i64 1
  %23 = load i8* %arrayidx20, align 1
  %conv21 = sext i8 %23 to i32
  %cmp22 = icmp ne i32 %conv21, 58
  br i1 %cmp22, label %land.lhs.true, label %if.end31

land.lhs.true:                                    ; preds = %lor.lhs.false
  %24 = load i8** %ep, align 8
  %arrayidx24 = getelementptr inbounds i8* %24, i64 1
  %25 = load i8* %arrayidx24, align 1
  %conv25 = sext i8 %25 to i32
  %cmp26 = icmp ne i32 %conv25, 0
  br i1 %cmp26, label %if.then28, label %if.end31

if.then28:                                        ; preds = %land.lhs.true, %for.end
  %26 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %27 = extractvalue { i32, i1 } %26, 0
  %28 = extractvalue { i32, i1 } %26, 1
  %29 = xor i1 %28, true
  br i1 %29, label %cont30, label %trap29

trap29:                                           ; preds = %if.then28
  call void @llvm.trap() #3
  unreachable

cont30:                                           ; preds = %if.then28
  store i32 %27, i32* %retval
  br label %return

if.end31:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %30 = load i8** %ep, align 8
  %incdec.ptr32 = getelementptr inbounds i8* %30, i32 1
  store i8* %incdec.ptr32, i8** %ep, align 8
  store i8 0, i8* %30, align 1
  %31 = load i8** %ep, align 8
  %32 = load i8* %31, align 1
  %conv33 = sext i8 %32 to i32
  %cmp34 = icmp ne i32 %conv33, 0
  br i1 %cmp34, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.end31
  %33 = load i8** %ep, align 8
  %incdec.ptr37 = getelementptr inbounds i8* %33, i32 1
  store i8* %incdec.ptr37, i8** %ep, align 8
  store i8 0, i8* %33, align 1
  br label %if.end38

if.end38:                                         ; preds = %if.then36, %if.end31
  %34 = load i8** %cp, align 8
  %add.ptr39 = getelementptr inbounds i8* %34, i64 1
  %35 = load %struct.fwdarg** %fwd.addr, align 8
  %arg = getelementptr inbounds %struct.fwdarg* %35, i32 0, i32 0
  store i8* %add.ptr39, i8** %arg, align 8
  %36 = load i32* %ispath, align 4
  %37 = load %struct.fwdarg** %fwd.addr, align 8
  %ispath40 = getelementptr inbounds %struct.fwdarg* %37, i32 0, i32 1
  store i32 %36, i32* %ispath40, align 4
  %38 = load i8** %ep, align 8
  %39 = load i8*** %p.addr, align 8
  store i8* %38, i8** %39, align 8
  store i32 0, i32* %retval
  br label %return

if.end41:                                         ; preds = %if.end
  %40 = load i8*** %p.addr, align 8
  %41 = load i8** %40, align 8
  store i8* %41, i8** %cp, align 8
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc60, %if.end41
  %42 = load i8** %cp, align 8
  %43 = load i8* %42, align 1
  %conv43 = sext i8 %43 to i32
  %cmp44 = icmp ne i32 %conv43, 0
  br i1 %cmp44, label %for.body46, label %for.end62

for.body46:                                       ; preds = %for.cond42
  %44 = load i8** %cp, align 8
  %45 = load i8* %44, align 1
  %conv47 = sext i8 %45 to i32
  switch i32 %conv47, label %sw.epilog [
    i32 92, label %sw.bb
    i32 47, label %sw.bb57
    i32 58, label %sw.bb58
  ]

sw.bb:                                            ; preds = %for.body46
  %46 = load i8** %cp, align 8
  %47 = load i8** %cp, align 8
  %add.ptr48 = getelementptr inbounds i8* %47, i64 1
  %48 = load i8** %cp, align 8
  %add.ptr49 = getelementptr inbounds i8* %48, i64 1
  %call = call i64 @strlen(i8* %add.ptr49) #12
  %add = add i64 %call, 1
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %46, i8* %add.ptr48, i64 %add, i32 1, i1 false)
  %49 = load i8** %cp, align 8
  %50 = load i8* %49, align 1
  %conv50 = sext i8 %50 to i32
  %cmp51 = icmp eq i32 %conv50, 0
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %sw.bb
  %51 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %52 = extractvalue { i32, i1 } %51, 0
  %53 = extractvalue { i32, i1 } %51, 1
  %54 = xor i1 %53, true
  br i1 %54, label %cont55, label %trap54

trap54:                                           ; preds = %if.then53
  call void @llvm.trap() #3
  unreachable

cont55:                                           ; preds = %if.then53
  store i32 %52, i32* %retval
  br label %return

if.end56:                                         ; preds = %sw.bb
  br label %sw.epilog

sw.bb57:                                          ; preds = %for.body46
  store i32 1, i32* %ispath, align 4
  br label %sw.epilog

sw.bb58:                                          ; preds = %for.body46
  %55 = load i8** %cp, align 8
  %incdec.ptr59 = getelementptr inbounds i8* %55, i32 1
  store i8* %incdec.ptr59, i8** %cp, align 8
  store i8 0, i8* %55, align 1
  br label %done

sw.epilog:                                        ; preds = %sw.bb57, %if.end56, %for.body46
  br label %for.inc60

for.inc60:                                        ; preds = %sw.epilog
  %56 = load i8** %cp, align 8
  %incdec.ptr61 = getelementptr inbounds i8* %56, i32 1
  store i8* %incdec.ptr61, i8** %cp, align 8
  br label %for.cond42

for.end62:                                        ; preds = %for.cond42
  br label %done

done:                                             ; preds = %for.end62, %sw.bb58
  %57 = load i8*** %p.addr, align 8
  %58 = load i8** %57, align 8
  %59 = load %struct.fwdarg** %fwd.addr, align 8
  %arg63 = getelementptr inbounds %struct.fwdarg* %59, i32 0, i32 0
  store i8* %58, i8** %arg63, align 8
  %60 = load i32* %ispath, align 4
  %61 = load %struct.fwdarg** %fwd.addr, align 8
  %ispath64 = getelementptr inbounds %struct.fwdarg* %61, i32 0, i32 1
  store i32 %60, i32* %ispath64, align 4
  %62 = load i8** %cp, align 8
  %63 = load i8*** %p.addr, align 8
  store i8* %62, i8** %63, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %done, %cont55, %if.end38, %cont30, %cont
  %64 = load i32* %retval
  ret i32 %64
}

; Function Attrs: nounwind sspreq uwtable
define internal void @dump_cfg_string(i32 %code, i8* %val) #0 {
entry:
  %code.addr = alloca i32, align 4
  %val.addr = alloca i8*, align 8
  store i32 %code, i32* %code.addr, align 4
  store i8* %val, i8** %val.addr, align 8
  %0 = load i8** %val.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* %code.addr, align 4
  %call = call i8* @lookup_opcode_name(i32 %1)
  %2 = load i8** %val.addr, align 8
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str158352, i32 0, i32 0), i8* %call, i8* %2)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @dump_cfg_int(i32 %code, i32 %val) #0 {
entry:
  %code.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %val, i32* %val.addr, align 4
  %0 = load i32* %code.addr, align 4
  %call = call i8* @lookup_opcode_name(i32 %0)
  %1 = load i32* %val.addr, align 4
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str178372, i32 0, i32 0), i8* %call, i32 %1)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @dump_cfg_fmtint(i32 %code, i32 %val) #0 {
entry:
  %code.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %val, i32* %val.addr, align 4
  %0 = load i32* %code.addr, align 4
  %call = call i8* @lookup_opcode_name(i32 %0)
  %1 = load i32* %code.addr, align 4
  %2 = load i32* %val.addr, align 4
  %call1 = call i8* @fmt_intarg(i32 %1, i32 %2)
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str158352, i32 0, i32 0), i8* %call, i8* %call1)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @dump_cfg_forwards(i32 %code, i32 %count, %struct.Forward* %fwds) #0 {
entry:
  %code.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %fwds.addr = alloca %struct.Forward*, align 8
  %fwd = alloca %struct.Forward*, align 8
  %i = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %count, i32* %count.addr, align 4
  store %struct.Forward* %fwds, %struct.Forward** %fwds.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* %count.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = zext i32 %2 to i64
  %3 = load %struct.Forward** %fwds.addr, align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %3, i64 %idxprom
  store %struct.Forward* %arrayidx, %struct.Forward** %fwd, align 8
  %4 = load i32* %code.addr, align 4
  %cmp1 = icmp eq i32 %4, 46
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.Forward** %fwd, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %5, i32 0, i32 3
  %6 = load i8** %connect_host, align 8
  %call = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([6 x i8]* @.str24218, i32 0, i32 0)) #12
  %cmp2 = icmp ne i32 %call, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc

if.end:                                           ; preds = %land.lhs.true, %for.body
  %7 = load i32* %code.addr, align 4
  %cmp3 = icmp eq i32 %7, 19
  br i1 %cmp3, label %land.lhs.true4, label %if.end9

land.lhs.true4:                                   ; preds = %if.end
  %8 = load %struct.Forward** %fwd, align 8
  %connect_host5 = getelementptr inbounds %struct.Forward* %8, i32 0, i32 3
  %9 = load i8** %connect_host5, align 8
  %call6 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([6 x i8]* @.str24218, i32 0, i32 0)) #12
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true4
  br label %for.inc

if.end9:                                          ; preds = %land.lhs.true4, %if.end
  %10 = load i32* %code.addr, align 4
  %call10 = call i8* @lookup_opcode_name(i32 %10)
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str50244, i32 0, i32 0), i8* %call10)
  %11 = load %struct.Forward** %fwd, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %11, i32 0, i32 1
  %12 = load i32* %listen_port, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont, label %trap

trap:                                             ; preds = %if.end9
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end9
  %cmp12 = icmp eq i32 %12, %14
  br i1 %cmp12, label %if.then13, label %if.else

if.then13:                                        ; preds = %cont
  %17 = load %struct.Forward** %fwd, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %17, i32 0, i32 2
  %18 = load i8** %listen_path, align 8
  %call14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str51245, i32 0, i32 0), i8* %18)
  br label %if.end24

if.else:                                          ; preds = %cont
  %19 = load %struct.Forward** %fwd, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %19, i32 0, i32 0
  %20 = load i8** %listen_host, align 8
  %cmp15 = icmp eq i8* %20, null
  br i1 %cmp15, label %if.then16, label %if.else19

if.then16:                                        ; preds = %if.else
  %21 = load %struct.Forward** %fwd, align 8
  %listen_port17 = getelementptr inbounds %struct.Forward* %21, i32 0, i32 1
  %22 = load i32* %listen_port17, align 4
  %call18 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str28222, i32 0, i32 0), i32 %22)
  br label %if.end23

if.else19:                                        ; preds = %if.else
  %23 = load %struct.Forward** %fwd, align 8
  %listen_host20 = getelementptr inbounds %struct.Forward* %23, i32 0, i32 0
  %24 = load i8** %listen_host20, align 8
  %25 = load %struct.Forward** %fwd, align 8
  %listen_port21 = getelementptr inbounds %struct.Forward* %25, i32 0, i32 1
  %26 = load i32* %listen_port21, align 4
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str159353, i32 0, i32 0), i8* %24, i32 %26)
  br label %if.end23

if.end23:                                         ; preds = %if.else19, %if.then16
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then13
  %27 = load i32* %code.addr, align 4
  %cmp25 = icmp ne i32 %27, 46
  br i1 %cmp25, label %if.then26, label %if.end44

if.then26:                                        ; preds = %if.end24
  %28 = load %struct.Forward** %fwd, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %28, i32 0, i32 4
  %29 = load i32* %connect_port, align 4
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont28, label %trap27

trap27:                                           ; preds = %if.then26
  call void @llvm.trap() #3
  unreachable

cont28:                                           ; preds = %if.then26
  %cmp29 = icmp eq i32 %29, %31
  br i1 %cmp29, label %if.then30, label %if.else32

if.then30:                                        ; preds = %cont28
  %34 = load %struct.Forward** %fwd, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %34, i32 0, i32 5
  %35 = load i8** %connect_path, align 8
  %call31 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str51245, i32 0, i32 0), i8* %35)
  br label %if.end43

if.else32:                                        ; preds = %cont28
  %36 = load %struct.Forward** %fwd, align 8
  %connect_host33 = getelementptr inbounds %struct.Forward* %36, i32 0, i32 3
  %37 = load i8** %connect_host33, align 8
  %cmp34 = icmp eq i8* %37, null
  br i1 %cmp34, label %if.then35, label %if.else38

if.then35:                                        ; preds = %if.else32
  %38 = load %struct.Forward** %fwd, align 8
  %connect_port36 = getelementptr inbounds %struct.Forward* %38, i32 0, i32 4
  %39 = load i32* %connect_port36, align 4
  %call37 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str28222, i32 0, i32 0), i32 %39)
  br label %if.end42

if.else38:                                        ; preds = %if.else32
  %40 = load %struct.Forward** %fwd, align 8
  %connect_host39 = getelementptr inbounds %struct.Forward* %40, i32 0, i32 3
  %41 = load i8** %connect_host39, align 8
  %42 = load %struct.Forward** %fwd, align 8
  %connect_port40 = getelementptr inbounds %struct.Forward* %42, i32 0, i32 4
  %43 = load i32* %connect_port40, align 4
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str159353, i32 0, i32 0), i8* %41, i32 %43)
  br label %if.end42

if.end42:                                         ; preds = %if.else38, %if.then35
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then30
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end24
  %call45 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str31225, i32 0, i32 0))
  br label %for.inc

for.inc:                                          ; preds = %if.end44, %if.then8, %if.then
  %44 = load i32* %i, align 4
  %inc = add i32 %44, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @dump_cfg_strarray(i32 %code, i32 %count, i8** %vals) #0 {
entry:
  %code.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %vals.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %count, i32* %count.addr, align 4
  store i8** %vals, i8*** %vals.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* %count.addr, align 4
  %cmp = icmp ult i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %code.addr, align 4
  %call = call i8* @lookup_opcode_name(i32 %2)
  %3 = load i32* %i, align 4
  %idxprom = zext i32 %3 to i64
  %4 = load i8*** %vals.addr, align 8
  %arrayidx = getelementptr inbounds i8** %4, i64 %idxprom
  %5 = load i8** %arrayidx, align 8
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str158352, i32 0, i32 0), i8* %call, i8* %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32* %i, align 4
  %inc = add i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @dump_cfg_strarray_oneline(i32 %code, i32 %count, i8** %vals) #0 {
entry:
  %code.addr = alloca i32, align 4
  %count.addr = alloca i32, align 4
  %vals.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %count, i32* %count.addr, align 4
  store i8** %vals, i8*** %vals.addr, align 8
  %0 = load i32* %code.addr, align 4
  %call = call i8* @lookup_opcode_name(i32 %0)
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str50244, i32 0, i32 0), i8* %call)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* %count.addr, align 4
  %cmp = icmp ult i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4
  %idxprom = zext i32 %3 to i64
  %4 = load i8*** %vals.addr, align 8
  %arrayidx = getelementptr inbounds i8** %4, i64 %idxprom
  %5 = load i8** %arrayidx, align 8
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str51245, i32 0, i32 0), i8* %5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32* %i, align 4
  %inc = add i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str31225, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @parse_token(i8* %cp, i8* %filename, i32 %linenum, i8* %ignored_unknown) #0 {
entry:
  %retval = alloca i32, align 4
  %cp.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %linenum.addr = alloca i32, align 4
  %ignored_unknown.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %cp, i8** %cp.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %linenum, i32* %linenum.addr, align 4
  store i8* %ignored_unknown, i8** %ignored_unknown.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %entry
  %0 = load i32* %i, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [107 x %struct.anon.28]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @keywords to [107 x %struct.anon.28]*), i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.anon.28* %arrayidx, i32 0, i32 0
  %1 = load i8** %name, align 8
  %tobool = icmp ne i8* %1, null
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8** %cp.addr, align 8
  %3 = load i32* %i, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [107 x %struct.anon.28]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @keywords to [107 x %struct.anon.28]*), i32 0, i64 %idxprom1
  %name3 = getelementptr inbounds %struct.anon.28* %arrayidx2, i32 0, i32 0
  %4 = load i8** %name3, align 8
  %call = call i32 @strcmp(i8* %2, i8* %4) #12
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %i, align 4
  %idxprom4 = sext i32 %5 to i64
  %arrayidx5 = getelementptr inbounds [107 x %struct.anon.28]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @keywords to [107 x %struct.anon.28]*), i32 0, i64 %idxprom4
  %opcode = getelementptr inbounds %struct.anon.28* %arrayidx5, i32 0, i32 1
  %6 = load i32* %opcode, align 4
  store i32 %6, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32* %i, align 4
  %8 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 1)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %9, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %12 = load i8** %ignored_unknown.addr, align 8
  %cmp6 = icmp ne i8* %12, null
  br i1 %cmp6, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %for.end
  %13 = load i8** %cp.addr, align 8
  %14 = load i8** %ignored_unknown.addr, align 8
  %call7 = call i32 @match_pattern_list(i8* %13, i8* %14, i32 1)
  %cmp8 = icmp eq i32 %call7, 1
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %land.lhs.true
  store i32 92, i32* %retval
  br label %return

if.end10:                                         ; preds = %land.lhs.true, %for.end
  %15 = load i8** %filename.addr, align 8
  %16 = load i32* %linenum.addr, align 4
  %17 = load i8** %cp.addr, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str286, i32 0, i32 0), i8* %15, i32 %16, i8* %17)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %18 = load i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @match_cfg_line(%struct.Options* %options, i8** %condition, %struct.passwd* %pw, i8* %host_arg, i8* %original_host, i32 %post_canon, i8* %filename, i32 %linenum) #0 {
entry:
  %options.addr = alloca %struct.Options*, align 8
  %condition.addr = alloca i8**, align 8
  %pw.addr = alloca %struct.passwd*, align 8
  %host_arg.addr = alloca i8*, align 8
  %original_host.addr = alloca i8*, align 8
  %post_canon.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %linenum.addr = alloca i32, align 4
  %arg = alloca i8*, align 8
  %oattrib = alloca i8*, align 8
  %attrib = alloca i8*, align 8
  %cmd = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %host = alloca i8*, align 8
  %criteria = alloca i8*, align 8
  %ruser = alloca i8*, align 8
  %r = alloca i32, align 4
  %port = alloca i32, align 4
  %this_result = alloca i32, align 4
  %result = alloca i32, align 4
  %attributes = alloca i32, align 4
  %negate = alloca i32, align 4
  %thishost = alloca [1025 x i8], align 16
  %shorthost = alloca [1025 x i8], align 16
  %portstr = alloca [32 x i8], align 16
  store %struct.Options* %options, %struct.Options** %options.addr, align 8
  store i8** %condition, i8*** %condition.addr, align 8
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i8* %host_arg, i8** %host_arg.addr, align 8
  store i8* %original_host, i8** %original_host.addr, align 8
  store i32 %post_canon, i32* %post_canon.addr, align 4
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %linenum, i32* %linenum.addr, align 4
  %0 = load i8*** %condition.addr, align 8
  %1 = load i8** %0, align 8
  store i8* %1, i8** %cp, align 8
  store i32 1, i32* %result, align 4
  store i32 0, i32* %attributes, align 4
  %2 = load %struct.Options** %options.addr, align 8
  %port1 = getelementptr inbounds %struct.Options* %2, i32 0, i32 27
  %3 = load i32* %port1, align 4
  %cmp = icmp sle i32 %3, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %call = call i32 @default_ssh_port()
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load %struct.Options** %options.addr, align 8
  %port2 = getelementptr inbounds %struct.Options* %4, i32 0, i32 27
  %5 = load i32* %port2, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %5, %cond.false ]
  store i32 %cond, i32* %port, align 4
  %6 = load %struct.Options** %options.addr, align 8
  %user = getelementptr inbounds %struct.Options* %6, i32 0, i32 41
  %7 = load i8** %user, align 8
  %cmp3 = icmp eq i8* %7, null
  br i1 %cmp3, label %cond.true4, label %cond.false5

cond.true4:                                       ; preds = %cond.end
  %8 = load %struct.passwd** %pw.addr, align 8
  %pw_name = getelementptr inbounds %struct.passwd* %8, i32 0, i32 0
  %9 = load i8** %pw_name, align 8
  br label %cond.end7

cond.false5:                                      ; preds = %cond.end
  %10 = load %struct.Options** %options.addr, align 8
  %user6 = getelementptr inbounds %struct.Options* %10, i32 0, i32 41
  %11 = load i8** %user6, align 8
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false5, %cond.true4
  %cond8 = phi i8* [ %9, %cond.true4 ], [ %11, %cond.false5 ]
  store i8* %cond8, i8** %ruser, align 8
  %12 = load i32* %post_canon.addr, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end7
  %13 = load %struct.Options** %options.addr, align 8
  %hostname = getelementptr inbounds %struct.Options* %13, i32 0, i32 38
  %14 = load i8** %hostname, align 8
  %call9 = call i8* @xstrdup(i8* %14)
  store i8* %call9, i8** %host, align 8
  br label %if.end17

if.else:                                          ; preds = %cond.end7
  %15 = load %struct.Options** %options.addr, align 8
  %hostname10 = getelementptr inbounds %struct.Options* %15, i32 0, i32 38
  %16 = load i8** %hostname10, align 8
  %cmp11 = icmp ne i8* %16, null
  br i1 %cmp11, label %if.then12, label %if.else15

if.then12:                                        ; preds = %if.else
  %17 = load %struct.Options** %options.addr, align 8
  %hostname13 = getelementptr inbounds %struct.Options* %17, i32 0, i32 38
  %18 = load i8** %hostname13, align 8
  %19 = load i8** %host_arg.addr, align 8
  %call14 = call i8* (i8*, ...)* @percent_expand(i8* %18, i8* getelementptr inbounds ([2 x i8]* @.str249, i32 0, i32 0), i8* %19, i8* null)
  store i8* %call14, i8** %host, align 8
  br label %if.end

if.else15:                                        ; preds = %if.else
  %20 = load i8** %host_arg.addr, align 8
  %call16 = call i8* @xstrdup(i8* %20)
  store i8* %call16, i8** %host, align 8
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then12
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %21 = load i8** %cp, align 8
  %22 = load i8** %host, align 8
  %23 = load i8** %original_host.addr, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([46 x i8]* @.str250, i32 0, i32 0), i8* %21, i8* %22, i8* %23)
  br label %while.cond

while.cond:                                       ; preds = %if.end190, %if.then165, %if.end60, %if.end17
  %call18 = call i8* @strdelim(i8** %cp)
  store i8* %call18, i8** %attrib, align 8
  store i8* %call18, i8** %oattrib, align 8
  %tobool19 = icmp ne i8* %call18, null
  br i1 %tobool19, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %24 = load i8** %attrib, align 8
  %25 = load i8* %24, align 1
  %conv = sext i8 %25 to i32
  %cmp20 = icmp ne i32 %conv, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %26 = phi i1 [ false, %while.cond ], [ %cmp20, %land.rhs ]
  br i1 %26, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  store i8* null, i8** %criteria, align 8
  store i32 1, i32* %this_result, align 4
  %27 = load i8** %attrib, align 8
  %arrayidx = getelementptr inbounds i8* %27, i64 0
  %28 = load i8* %arrayidx, align 1
  %conv22 = sext i8 %28 to i32
  %cmp23 = icmp eq i32 %conv22, 33
  %conv24 = zext i1 %cmp23 to i32
  store i32 %conv24, i32* %negate, align 4
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %while.body
  %29 = load i8** %attrib, align 8
  %incdec.ptr = getelementptr inbounds i8* %29, i32 1
  store i8* %incdec.ptr, i8** %attrib, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %while.body
  %30 = load i8** %attrib, align 8
  %call27 = call i32 @strcasecmp(i8* %30, i8* getelementptr inbounds ([4 x i8]* @.str251, i32 0, i32 0)) #12
  %cmp28 = icmp eq i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.end46

if.then30:                                        ; preds = %if.end26
  %31 = load i32* %attributes, align 4
  %cmp31 = icmp sgt i32 %31, 1
  br i1 %cmp31, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then30
  %call33 = call i8* @strdelim(i8** %cp)
  store i8* %call33, i8** %arg, align 8
  %cmp34 = icmp ne i8* %call33, null
  br i1 %cmp34, label %land.lhs.true, label %if.end40

land.lhs.true:                                    ; preds = %lor.lhs.false
  %32 = load i8** %arg, align 8
  %33 = load i8* %32, align 1
  %conv36 = sext i8 %33 to i32
  %cmp37 = icmp ne i32 %conv36, 0
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %land.lhs.true, %if.then30
  %34 = load i8** %filename.addr, align 8
  %35 = load i32* %linenum.addr, align 4
  %36 = load i8** %oattrib, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([68 x i8]* @.str252, i32 0, i32 0), i8* %34, i32 %35, i8* %36)
  %37 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %38 = extractvalue { i32, i1 } %37, 0
  %39 = extractvalue { i32, i1 } %37, 1
  %40 = xor i1 %39, true
  br i1 %40, label %cont, label %trap

trap:                                             ; preds = %if.then39
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then39
  store i32 %38, i32* %result, align 4
  br label %out

if.end40:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %41 = load i32* %result, align 4
  %tobool41 = icmp ne i32 %41, 0
  br i1 %tobool41, label %if.then42, label %if.end45

if.then42:                                        ; preds = %if.end40
  %42 = load i32* %negate, align 4
  %tobool43 = icmp ne i32 %42, 0
  %cond44 = select i1 %tobool43, i32 0, i32 1
  store i32 %cond44, i32* %result, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then42, %if.end40
  br label %out

if.end46:                                         ; preds = %if.end26
  %43 = load i32* %attributes, align 4
  %44 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 1)
  %45 = extractvalue { i32, i1 } %44, 0
  %46 = extractvalue { i32, i1 } %44, 1
  %47 = xor i1 %46, true
  br i1 %47, label %cont48, label %trap47

trap47:                                           ; preds = %if.end46
  call void @llvm.trap() #3
  unreachable

cont48:                                           ; preds = %if.end46
  store i32 %45, i32* %attributes, align 4
  %48 = load i8** %attrib, align 8
  %call49 = call i32 @strcasecmp(i8* %48, i8* getelementptr inbounds ([10 x i8]* @.str253, i32 0, i32 0)) #12
  %cmp50 = icmp eq i32 %call49, 0
  br i1 %cmp50, label %if.then52, label %if.end63

if.then52:                                        ; preds = %cont48
  %49 = load i32* %post_canon.addr, align 4
  %tobool53 = icmp ne i32 %49, 0
  %lnot = xor i1 %tobool53, true
  %lnot54 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot54 to i32
  store i32 %lnot.ext, i32* %r, align 4
  %50 = load i32* %r, align 4
  %51 = load i32* %negate, align 4
  %tobool55 = icmp ne i32 %51, 0
  %cond56 = select i1 %tobool55, i32 1, i32 0
  %cmp57 = icmp eq i32 %50, %cond56
  br i1 %cmp57, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.then52
  store i32 0, i32* %result, align 4
  store i32 0, i32* %this_result, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.then59, %if.then52
  %52 = load i8** %filename.addr, align 8
  %53 = load i32* %linenum.addr, align 4
  %54 = load i32* %this_result, align 4
  %tobool61 = icmp ne i32 %54, 0
  %cond62 = select i1 %tobool61, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str255, i32 0, i32 0)
  %55 = load i8** %oattrib, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([31 x i8]* @.str254, i32 0, i32 0), i8* %52, i32 %53, i8* %cond62, i8* %55)
  br label %while.cond

if.end63:                                         ; preds = %cont48
  %call64 = call i8* @strdelim(i8** %cp)
  store i8* %call64, i8** %arg, align 8
  %cmp65 = icmp eq i8* %call64, null
  br i1 %cmp65, label %if.then71, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %if.end63
  %56 = load i8** %arg, align 8
  %57 = load i8* %56, align 1
  %conv68 = sext i8 %57 to i32
  %cmp69 = icmp eq i32 %conv68, 0
  br i1 %cmp69, label %if.then71, label %if.end74

if.then71:                                        ; preds = %lor.lhs.false67, %if.end63
  %58 = load i8** %attrib, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str256, i32 0, i32 0), i8* %58)
  %59 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %60 = extractvalue { i32, i1 } %59, 0
  %61 = extractvalue { i32, i1 } %59, 1
  %62 = xor i1 %61, true
  br i1 %62, label %cont73, label %trap72

trap72:                                           ; preds = %if.then71
  call void @llvm.trap() #3
  unreachable

cont73:                                           ; preds = %if.then71
  store i32 %60, i32* %result, align 4
  br label %out

if.end74:                                         ; preds = %lor.lhs.false67
  %63 = load i8** %attrib, align 8
  %call75 = call i32 @strcasecmp(i8* %63, i8* getelementptr inbounds ([5 x i8]* @.str97291, i32 0, i32 0)) #12
  %cmp76 = icmp eq i32 %call75, 0
  br i1 %cmp76, label %if.then78, label %if.else89

if.then78:                                        ; preds = %if.end74
  %64 = load i8** %host, align 8
  %call79 = call i8* @xstrdup(i8* %64)
  store i8* %call79, i8** %criteria, align 8
  %65 = load i8** %host, align 8
  %66 = load i8** %arg, align 8
  %call80 = call i32 @match_hostname(i8* %65, i8* %66)
  %cmp81 = icmp eq i32 %call80, 1
  %conv82 = zext i1 %cmp81 to i32
  store i32 %conv82, i32* %r, align 4
  %67 = load i32* %r, align 4
  %68 = load i32* %negate, align 4
  %tobool83 = icmp ne i32 %68, 0
  %cond84 = select i1 %tobool83, i32 1, i32 0
  %cmp85 = icmp eq i32 %67, %cond84
  br i1 %cmp85, label %if.then87, label %if.end88

if.then87:                                        ; preds = %if.then78
  store i32 0, i32* %result, align 4
  store i32 0, i32* %this_result, align 4
  br label %if.end88

if.end88:                                         ; preds = %if.then87, %if.then78
  br label %if.end190

if.else89:                                        ; preds = %if.end74
  %69 = load i8** %attrib, align 8
  %call90 = call i32 @strcasecmp(i8* %69, i8* getelementptr inbounds ([13 x i8]* @.str257, i32 0, i32 0)) #12
  %cmp91 = icmp eq i32 %call90, 0
  br i1 %cmp91, label %if.then93, label %if.else104

if.then93:                                        ; preds = %if.else89
  %70 = load i8** %original_host.addr, align 8
  %call94 = call i8* @xstrdup(i8* %70)
  store i8* %call94, i8** %criteria, align 8
  %71 = load i8** %original_host.addr, align 8
  %72 = load i8** %arg, align 8
  %call95 = call i32 @match_hostname(i8* %71, i8* %72)
  %cmp96 = icmp eq i32 %call95, 1
  %conv97 = zext i1 %cmp96 to i32
  store i32 %conv97, i32* %r, align 4
  %73 = load i32* %r, align 4
  %74 = load i32* %negate, align 4
  %tobool98 = icmp ne i32 %74, 0
  %cond99 = select i1 %tobool98, i32 1, i32 0
  %cmp100 = icmp eq i32 %73, %cond99
  br i1 %cmp100, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.then93
  store i32 0, i32* %result, align 4
  store i32 0, i32* %this_result, align 4
  br label %if.end103

if.end103:                                        ; preds = %if.then102, %if.then93
  br label %if.end189

if.else104:                                       ; preds = %if.else89
  %75 = load i8** %attrib, align 8
  %call105 = call i32 @strcasecmp(i8* %75, i8* getelementptr inbounds ([5 x i8]* @.str96290, i32 0, i32 0)) #12
  %cmp106 = icmp eq i32 %call105, 0
  br i1 %cmp106, label %if.then108, label %if.else119

if.then108:                                       ; preds = %if.else104
  %76 = load i8** %ruser, align 8
  %call109 = call i8* @xstrdup(i8* %76)
  store i8* %call109, i8** %criteria, align 8
  %77 = load i8** %ruser, align 8
  %78 = load i8** %arg, align 8
  %call110 = call i32 @match_pattern_list(i8* %77, i8* %78, i32 0)
  %cmp111 = icmp eq i32 %call110, 1
  %conv112 = zext i1 %cmp111 to i32
  store i32 %conv112, i32* %r, align 4
  %79 = load i32* %r, align 4
  %80 = load i32* %negate, align 4
  %tobool113 = icmp ne i32 %80, 0
  %cond114 = select i1 %tobool113, i32 1, i32 0
  %cmp115 = icmp eq i32 %79, %cond114
  br i1 %cmp115, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.then108
  store i32 0, i32* %result, align 4
  store i32 0, i32* %this_result, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.then117, %if.then108
  br label %if.end188

if.else119:                                       ; preds = %if.else104
  %81 = load i8** %attrib, align 8
  %call120 = call i32 @strcasecmp(i8* %81, i8* getelementptr inbounds ([10 x i8]* @.str258, i32 0, i32 0)) #12
  %cmp121 = icmp eq i32 %call120, 0
  br i1 %cmp121, label %if.then123, label %if.else136

if.then123:                                       ; preds = %if.else119
  %82 = load %struct.passwd** %pw.addr, align 8
  %pw_name124 = getelementptr inbounds %struct.passwd* %82, i32 0, i32 0
  %83 = load i8** %pw_name124, align 8
  %call125 = call i8* @xstrdup(i8* %83)
  store i8* %call125, i8** %criteria, align 8
  %84 = load %struct.passwd** %pw.addr, align 8
  %pw_name126 = getelementptr inbounds %struct.passwd* %84, i32 0, i32 0
  %85 = load i8** %pw_name126, align 8
  %86 = load i8** %arg, align 8
  %call127 = call i32 @match_pattern_list(i8* %85, i8* %86, i32 0)
  %cmp128 = icmp eq i32 %call127, 1
  %conv129 = zext i1 %cmp128 to i32
  store i32 %conv129, i32* %r, align 4
  %87 = load i32* %r, align 4
  %88 = load i32* %negate, align 4
  %tobool130 = icmp ne i32 %88, 0
  %cond131 = select i1 %tobool130, i32 1, i32 0
  %cmp132 = icmp eq i32 %87, %cond131
  br i1 %cmp132, label %if.then134, label %if.end135

if.then134:                                       ; preds = %if.then123
  store i32 0, i32* %result, align 4
  store i32 0, i32* %this_result, align 4
  br label %if.end135

if.end135:                                        ; preds = %if.then134, %if.then123
  br label %if.end187

if.else136:                                       ; preds = %if.else119
  %89 = load i8** %attrib, align 8
  %call137 = call i32 @strcasecmp(i8* %89, i8* getelementptr inbounds ([5 x i8]* @.str259, i32 0, i32 0)) #12
  %cmp138 = icmp eq i32 %call137, 0
  br i1 %cmp138, label %if.then140, label %if.else183

if.then140:                                       ; preds = %if.else136
  %arraydecay = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call141 = call i32 @gethostname(i8* %arraydecay, i64 1025) #9
  %90 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %91 = extractvalue { i32, i1 } %90, 0
  %92 = extractvalue { i32, i1 } %90, 1
  %93 = xor i1 %92, true
  br i1 %93, label %cont143, label %trap142

trap142:                                          ; preds = %if.then140
  call void @llvm.trap() #3
  unreachable

cont143:                                          ; preds = %if.then140
  %cmp144 = icmp eq i32 %call141, %91
  br i1 %cmp144, label %if.then146, label %if.end149

if.then146:                                       ; preds = %cont143
  %call147 = call i32* @__errno_location() #2
  %94 = load i32* %call147, align 4
  %call148 = call i8* @strerror(i32 %94) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str260, i32 0, i32 0), i8* %call148) #11
  unreachable

if.end149:                                        ; preds = %cont143
  %arraydecay150 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i32 0
  %arraydecay151 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call152 = call i64 @strlcpy(i8* %arraydecay150, i8* %arraydecay151, i64 1025)
  %arraydecay153 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %call154 = call i64 @strcspn(i8* %arraydecay153, i8* getelementptr inbounds ([2 x i8]* @.str261, i32 0, i32 0)) #12
  %arrayidx155 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i64 %call154
  store i8 0, i8* %arrayidx155, align 1
  %arraydecay156 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %95 = load i32* %port, align 4
  %call157 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay156, i64 32, i8* getelementptr inbounds ([3 x i8]* @.str42236, i32 0, i32 0), i32 %95) #9
  %96 = load i8** %arg, align 8
  %arraydecay158 = getelementptr inbounds [1025 x i8]* %shorthost, i32 0, i32 0
  %97 = load %struct.passwd** %pw.addr, align 8
  %pw_dir = getelementptr inbounds %struct.passwd* %97, i32 0, i32 5
  %98 = load i8** %pw_dir, align 8
  %99 = load i8** %host, align 8
  %arraydecay159 = getelementptr inbounds [1025 x i8]* %thishost, i32 0, i32 0
  %100 = load i8** %original_host.addr, align 8
  %arraydecay160 = getelementptr inbounds [32 x i8]* %portstr, i32 0, i32 0
  %101 = load i8** %ruser, align 8
  %102 = load %struct.passwd** %pw.addr, align 8
  %pw_name161 = getelementptr inbounds %struct.passwd* %102, i32 0, i32 0
  %103 = load i8** %pw_name161, align 8
  %call162 = call i8* (i8*, ...)* @percent_expand(i8* %96, i8* getelementptr inbounds ([2 x i8]* @.str262, i32 0, i32 0), i8* %arraydecay158, i8* getelementptr inbounds ([2 x i8]* @.str263, i32 0, i32 0), i8* %98, i8* getelementptr inbounds ([2 x i8]* @.str249, i32 0, i32 0), i8* %99, i8* getelementptr inbounds ([2 x i8]* @.str264, i32 0, i32 0), i8* %arraydecay159, i8* getelementptr inbounds ([2 x i8]* @.str265, i32 0, i32 0), i8* %100, i8* getelementptr inbounds ([2 x i8]* @.str266, i32 0, i32 0), i8* %arraydecay160, i8* getelementptr inbounds ([2 x i8]* @.str180374, i32 0, i32 0), i8* %101, i8* getelementptr inbounds ([2 x i8]* @.str267, i32 0, i32 0), i8* %103, i8* null)
  store i8* %call162, i8** %cmd, align 8
  %104 = load i32* %result, align 4
  %cmp163 = icmp ne i32 %104, 1
  br i1 %cmp163, label %if.then165, label %if.end166

if.then165:                                       ; preds = %if.end149
  %105 = load i8** %filename.addr, align 8
  %106 = load i32* %linenum.addr, align 4
  %107 = load i8** %cmd, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([38 x i8]* @.str268, i32 0, i32 0), i8* %105, i32 %106, i8* %107)
  %108 = load i8** %cmd, align 8
  call void @free(i8* %108) #9
  br label %while.cond

if.end166:                                        ; preds = %if.end149
  %109 = load i8** %cmd, align 8
  %call167 = call i32 @execute_in_shell(i8* %109)
  store i32 %call167, i32* %r, align 4
  %110 = load i32* %r, align 4
  %111 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %112 = extractvalue { i32, i1 } %111, 0
  %113 = extractvalue { i32, i1 } %111, 1
  %114 = xor i1 %113, true
  br i1 %114, label %cont169, label %trap168

trap168:                                          ; preds = %if.end166
  call void @llvm.trap() #3
  unreachable

cont169:                                          ; preds = %if.end166
  %cmp170 = icmp eq i32 %110, %112
  br i1 %cmp170, label %if.then172, label %if.end173

if.then172:                                       ; preds = %cont169
  %115 = load i8** %filename.addr, align 8
  %116 = load i32* %linenum.addr, align 4
  %117 = load i8** %cmd, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str269, i32 0, i32 0), i8* %115, i32 %116, i8* %117) #11
  unreachable

if.end173:                                        ; preds = %cont169
  %118 = load i8** %cmd, align 8
  %call174 = call i8* @xstrdup(i8* %118)
  store i8* %call174, i8** %criteria, align 8
  %119 = load i8** %cmd, align 8
  call void @free(i8* %119) #9
  %120 = load i32* %r, align 4
  %cmp175 = icmp eq i32 %120, 0
  %conv176 = zext i1 %cmp175 to i32
  store i32 %conv176, i32* %r, align 4
  %121 = load i32* %r, align 4
  %122 = load i32* %negate, align 4
  %tobool177 = icmp ne i32 %122, 0
  %cond178 = select i1 %tobool177, i32 1, i32 0
  %cmp179 = icmp eq i32 %121, %cond178
  br i1 %cmp179, label %if.then181, label %if.end182

if.then181:                                       ; preds = %if.end173
  store i32 0, i32* %result, align 4
  store i32 0, i32* %this_result, align 4
  br label %if.end182

if.end182:                                        ; preds = %if.then181, %if.end173
  br label %if.end186

if.else183:                                       ; preds = %if.else136
  %123 = load i8** %attrib, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str270, i32 0, i32 0), i8* %123)
  %124 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %125 = extractvalue { i32, i1 } %124, 0
  %126 = extractvalue { i32, i1 } %124, 1
  %127 = xor i1 %126, true
  br i1 %127, label %cont185, label %trap184

trap184:                                          ; preds = %if.else183
  call void @llvm.trap() #3
  unreachable

cont185:                                          ; preds = %if.else183
  store i32 %125, i32* %result, align 4
  br label %out

if.end186:                                        ; preds = %if.end182
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end135
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.end118
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.end103
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end88
  %128 = load i8** %filename.addr, align 8
  %129 = load i32* %linenum.addr, align 4
  %130 = load i32* %this_result, align 4
  %tobool191 = icmp ne i32 %130, 0
  %cond192 = select i1 %tobool191, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str255, i32 0, i32 0)
  %131 = load i8** %oattrib, align 8
  %132 = load i8** %criteria, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([41 x i8]* @.str271, i32 0, i32 0), i8* %128, i32 %129, i8* %cond192, i8* %131, i8* %132)
  %133 = load i8** %criteria, align 8
  call void @free(i8* %133) #9
  br label %while.cond

while.end:                                        ; preds = %land.end
  %134 = load i32* %attributes, align 4
  %cmp193 = icmp eq i32 %134, 0
  br i1 %cmp193, label %if.then195, label %if.end198

if.then195:                                       ; preds = %while.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str272, i32 0, i32 0))
  %135 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %136 = extractvalue { i32, i1 } %135, 0
  %137 = extractvalue { i32, i1 } %135, 1
  %138 = xor i1 %137, true
  br i1 %138, label %cont197, label %trap196

trap196:                                          ; preds = %if.then195
  call void @llvm.trap() #3
  unreachable

cont197:                                          ; preds = %if.then195
  store i32 %136, i32* %result, align 4
  br label %out

if.end198:                                        ; preds = %while.end
  br label %out

out:                                              ; preds = %if.end198, %cont197, %cont185, %cont73, %if.end45, %cont
  %139 = load i32* %result, align 4
  %140 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %141 = extractvalue { i32, i1 } %140, 0
  %142 = extractvalue { i32, i1 } %140, 1
  %143 = xor i1 %142, true
  br i1 %143, label %cont200, label %trap199

trap199:                                          ; preds = %out
  call void @llvm.trap() #3
  unreachable

cont200:                                          ; preds = %out
  %cmp201 = icmp ne i32 %139, %141
  br i1 %cmp201, label %if.then203, label %if.end206

if.then203:                                       ; preds = %cont200
  %144 = load i32* %result, align 4
  %tobool204 = icmp ne i32 %144, 0
  %cond205 = select i1 %tobool204, i8* getelementptr inbounds ([1 x i8]* @.str44238, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str255, i32 0, i32 0)
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([14 x i8]* @.str273, i32 0, i32 0), i8* %cond205)
  br label %if.end206

if.end206:                                        ; preds = %if.then203, %cont200
  %145 = load i8** %cp, align 8
  %146 = load i8*** %condition.addr, align 8
  store i8* %145, i8** %146, align 8
  %147 = load i8** %host, align 8
  call void @free(i8* %147) #9
  %148 = load i32* %result, align 4
  ret i32 %148
}

; Function Attrs: nounwind sspreq uwtable
define internal void @valid_domain(i8* %name, i8* %filename, i32 %linenum) #0 {
entry:
  %name.addr = alloca i8*, align 8
  %filename.addr = alloca i8*, align 8
  %linenum.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %l = alloca i64, align 8
  %c = alloca i8, align 1
  %last = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i32 %linenum, i32* %linenum.addr, align 4
  %0 = load i8** %name.addr, align 8
  %call = call i64 @strlen(i8* %0) #12
  store i64 %call, i64* %l, align 8
  store i8 0, i8* %last, align 1
  %1 = load i64* %l, align 8
  %cmp = icmp eq i64 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8** %filename.addr, align 8
  %3 = load i32* %linenum.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str245, i32 0, i32 0), i8* %2, i32 %3) #11
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i8** %name.addr, align 8
  %arrayidx = getelementptr inbounds i8* %4, i64 0
  %5 = load i8* %arrayidx, align 1
  %conv = zext i8 %5 to i32
  %idxprom = sext i32 %conv to i64
  %call1 = call i16** @__ctype_b_loc() #2
  %6 = load i16** %call1, align 8
  %arrayidx2 = getelementptr inbounds i16* %6, i64 %idxprom
  %7 = load i16* %arrayidx2, align 2
  %conv3 = zext i16 %7 to i32
  %and = and i32 %conv3, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %8 = load i8** %name.addr, align 8
  %arrayidx4 = getelementptr inbounds i8* %8, i64 0
  %9 = load i8* %arrayidx4, align 1
  %conv5 = zext i8 %9 to i32
  %idxprom6 = sext i32 %conv5 to i64
  %call7 = call i16** @__ctype_b_loc() #2
  %10 = load i16** %call7, align 8
  %arrayidx8 = getelementptr inbounds i16* %10, i64 %idxprom6
  %11 = load i16* %arrayidx8, align 2
  %conv9 = zext i16 %11 to i32
  %and10 = and i32 %conv9, 2048
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.end13, label %if.then12

if.then12:                                        ; preds = %land.lhs.true
  %12 = load i8** %filename.addr, align 8
  %13 = load i32* %linenum.addr, align 4
  %14 = load i8** %name.addr, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([67 x i8]* @.str246, i32 0, i32 0), i8* %12, i32 %13, i8* %14) #11
  unreachable

if.end13:                                         ; preds = %land.lhs.true, %if.end
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end13
  %15 = load i64* %i, align 8
  %16 = load i64* %l, align 8
  %cmp14 = icmp ult i64 %15, %16
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %17 = load i64* %i, align 8
  %18 = load i8** %name.addr, align 8
  %arrayidx16 = getelementptr inbounds i8* %18, i64 %17
  %19 = load i8* %arrayidx16, align 1
  %conv17 = zext i8 %19 to i32
  %call18 = call i32 @tolower(i32 %conv17) #9
  %conv19 = trunc i32 %call18 to i8
  store i8 %conv19, i8* %c, align 1
  %20 = load i8* %c, align 1
  %21 = load i64* %i, align 8
  %22 = load i8** %name.addr, align 8
  %arrayidx20 = getelementptr inbounds i8* %22, i64 %21
  store i8 %20, i8* %arrayidx20, align 1
  %23 = load i8* %last, align 1
  %conv21 = zext i8 %23 to i32
  %cmp22 = icmp eq i32 %conv21, 46
  br i1 %cmp22, label %land.lhs.true24, label %if.end29

land.lhs.true24:                                  ; preds = %for.body
  %24 = load i8* %c, align 1
  %conv25 = zext i8 %24 to i32
  %cmp26 = icmp eq i32 %conv25, 46
  br i1 %cmp26, label %if.then28, label %if.end29

if.then28:                                        ; preds = %land.lhs.true24
  %25 = load i8** %filename.addr, align 8
  %26 = load i32* %linenum.addr, align 4
  %27 = load i8** %name.addr, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([69 x i8]* @.str247, i32 0, i32 0), i8* %25, i32 %26, i8* %27) #11
  unreachable

if.end29:                                         ; preds = %land.lhs.true24, %for.body
  %28 = load i8* %c, align 1
  %conv30 = zext i8 %28 to i32
  %cmp31 = icmp ne i32 %conv30, 46
  br i1 %cmp31, label %land.lhs.true33, label %if.end50

land.lhs.true33:                                  ; preds = %if.end29
  %29 = load i8* %c, align 1
  %conv34 = zext i8 %29 to i32
  %cmp35 = icmp ne i32 %conv34, 45
  br i1 %cmp35, label %land.lhs.true37, label %if.end50

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %30 = load i8* %c, align 1
  %conv38 = zext i8 %30 to i32
  %idxprom39 = sext i32 %conv38 to i64
  %call40 = call i16** @__ctype_b_loc() #2
  %31 = load i16** %call40, align 8
  %arrayidx41 = getelementptr inbounds i16* %31, i64 %idxprom39
  %32 = load i16* %arrayidx41, align 2
  %conv42 = zext i16 %32 to i32
  %and43 = and i32 %conv42, 8
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.end50, label %land.lhs.true45

land.lhs.true45:                                  ; preds = %land.lhs.true37
  %33 = load i8* %c, align 1
  %conv46 = zext i8 %33 to i32
  %cmp47 = icmp ne i32 %conv46, 95
  br i1 %cmp47, label %if.then49, label %if.end50

if.then49:                                        ; preds = %land.lhs.true45
  %34 = load i8** %filename.addr, align 8
  %35 = load i32* %linenum.addr, align 4
  %36 = load i8** %name.addr, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([65 x i8]* @.str248, i32 0, i32 0), i8* %34, i32 %35, i8* %36) #11
  unreachable

if.end50:                                         ; preds = %land.lhs.true45, %land.lhs.true37, %land.lhs.true33, %if.end29
  %37 = load i8* %c, align 1
  store i8 %37, i8* %last, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end50
  %38 = load i64* %i, align 8
  %inc = add i64 %38, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %39 = load i64* %l, align 8
  %sub = sub i64 %39, 1
  %40 = load i8** %name.addr, align 8
  %arrayidx51 = getelementptr inbounds i8* %40, i64 %sub
  %41 = load i8* %arrayidx51, align 1
  %conv52 = sext i8 %41 to i32
  %cmp53 = icmp eq i32 %conv52, 46
  br i1 %cmp53, label %if.then55, label %if.end58

if.then55:                                        ; preds = %for.end
  %42 = load i64* %l, align 8
  %sub56 = sub i64 %42, 1
  %43 = load i8** %name.addr, align 8
  %arrayidx57 = getelementptr inbounds i8* %43, i64 %sub56
  store i8 0, i8* %arrayidx57, align 1
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %for.end
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @lookup_opcode_name(i32 %code) #0 {
entry:
  %retval = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %idxprom = zext i32 %0 to i64
  %arrayidx = getelementptr inbounds [107 x %struct.anon.28]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @keywords to [107 x %struct.anon.28]*), i32 0, i64 %idxprom
  %name = getelementptr inbounds %struct.anon.28* %arrayidx, i32 0, i32 0
  %1 = load i8** %name, align 8
  %cmp = icmp ne i8* %1, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom1 = zext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [107 x %struct.anon.28]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @keywords to [107 x %struct.anon.28]*), i32 0, i64 %idxprom1
  %opcode = getelementptr inbounds %struct.anon.28* %arrayidx2, i32 0, i32 1
  %3 = load i32* %opcode, align 4
  %4 = load i32* %code.addr, align 4
  %cmp3 = icmp eq i32 %3, %4
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %i, align 4
  %idxprom4 = zext i32 %5 to i64
  %arrayidx5 = getelementptr inbounds [107 x %struct.anon.28]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @keywords to [107 x %struct.anon.28]*), i32 0, i64 %idxprom4
  %name6 = getelementptr inbounds %struct.anon.28* %arrayidx5, i32 0, i32 0
  %6 = load i8** %name6, align 8
  store i8* %6, i8** %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32* %i, align 4
  %inc = add i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8* getelementptr inbounds ([8 x i8]* @.str52246, i32 0, i32 0), i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %8 = load i8** %retval
  ret i8* %8
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @fmt_intarg(i32 %code, i32 %val) #0 {
entry:
  %retval = alloca i8*, align 8
  %code.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  store i32 %val, i32* %val.addr, align 4
  %0 = load i32* %val.addr, align 4
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %cmp = icmp eq i32 %0, %2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  store i8* getelementptr inbounds ([6 x i8]* @.str160354, i32 0, i32 0), i8** %retval
  br label %return

if.end:                                           ; preds = %cont
  %5 = load i32* %code.addr, align 4
  switch i32 %5, label %sw.default17 [
    i32 58, label %sw.bb
    i32 56, label %sw.bb1
    i32 32, label %sw.bb1
    i32 88, label %sw.bb1
    i32 66, label %sw.bb3
    i32 69, label %sw.bb5
    i32 76, label %sw.bb7
    i32 80, label %sw.bb9
    i32 87, label %sw.bb11
    i32 40, label %sw.bb13
  ]

sw.bb:                                            ; preds = %if.end
  %6 = load i32* %val.addr, align 4
  %call = call i8* @fmt_multistate_int(i32 %6, %struct.multistate* getelementptr inbounds ([4 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_addressfamily to [4 x %struct.multistate]*), i32 0, i32 0))
  store i8* %call, i8** %retval
  br label %return

sw.bb1:                                           ; preds = %if.end, %if.end, %if.end
  %7 = load i32* %val.addr, align 4
  %call2 = call i8* @fmt_multistate_int(i32 %7, %struct.multistate* getelementptr inbounds ([6 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_yesnoask to [6 x %struct.multistate]*), i32 0, i32 0))
  store i8* %call2, i8** %retval
  br label %return

sw.bb3:                                           ; preds = %if.end
  %8 = load i32* %val.addr, align 4
  %call4 = call i8* @fmt_multistate_int(i32 %8, %struct.multistate* getelementptr inbounds ([8 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_controlmaster to [8 x %struct.multistate]*), i32 0, i32 0))
  store i8* %call4, i8** %retval
  br label %return

sw.bb5:                                           ; preds = %if.end
  %9 = load i32* %val.addr, align 4
  %call6 = call i8* @fmt_multistate_int(i32 %9, %struct.multistate* getelementptr inbounds ([7 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_tunnel to [7 x %struct.multistate]*), i32 0, i32 0))
  store i8* %call6, i8** %retval
  br label %return

sw.bb7:                                           ; preds = %if.end
  %10 = load i32* %val.addr, align 4
  %call8 = call i8* @fmt_multistate_int(i32 %10, %struct.multistate* getelementptr inbounds ([7 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_requesttty to [7 x %struct.multistate]*), i32 0, i32 0))
  store i8* %call8, i8** %retval
  br label %return

sw.bb9:                                           ; preds = %if.end
  %11 = load i32* %val.addr, align 4
  %call10 = call i8* @fmt_multistate_int(i32 %11, %struct.multistate* getelementptr inbounds ([6 x %struct.multistate]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @multistate_canonicalizehostname to [6 x %struct.multistate]*), i32 0, i32 0))
  store i8* %call10, i8** %retval
  br label %return

sw.bb11:                                          ; preds = %if.end
  %12 = load i32* %val.addr, align 4
  %call12 = call i8* @ssh_digest_alg_name(i32 %12)
  store i8* %call12, i8** %retval
  br label %return

sw.bb13:                                          ; preds = %if.end
  %13 = load i32* %val.addr, align 4
  switch i32 %13, label %sw.default [
    i32 1, label %sw.bb14
    i32 4, label %sw.bb15
    i32 5, label %sw.bb16
  ]

sw.bb14:                                          ; preds = %sw.bb13
  store i8* getelementptr inbounds ([2 x i8]* @.str161355, i32 0, i32 0), i8** %retval
  br label %return

sw.bb15:                                          ; preds = %sw.bb13
  store i8* getelementptr inbounds ([2 x i8]* @.str162356, i32 0, i32 0), i8** %retval
  br label %return

sw.bb16:                                          ; preds = %sw.bb13
  store i8* getelementptr inbounds ([4 x i8]* @.str163357, i32 0, i32 0), i8** %retval
  br label %return

sw.default:                                       ; preds = %sw.bb13
  store i8* getelementptr inbounds ([8 x i8]* @.str52246, i32 0, i32 0), i8** %retval
  br label %return

sw.default17:                                     ; preds = %if.end
  %14 = load i32* %val.addr, align 4
  switch i32 %14, label %sw.default20 [
    i32 0, label %sw.bb18
    i32 1, label %sw.bb19
  ]

sw.bb18:                                          ; preds = %sw.default17
  store i8* getelementptr inbounds ([3 x i8]* @.str164358, i32 0, i32 0), i8** %retval
  br label %return

sw.bb19:                                          ; preds = %sw.default17
  store i8* getelementptr inbounds ([4 x i8]* @.str165359, i32 0, i32 0), i8** %retval
  br label %return

sw.default20:                                     ; preds = %sw.default17
  store i8* getelementptr inbounds ([8 x i8]* @.str52246, i32 0, i32 0), i8** %retval
  br label %return

return:                                           ; preds = %sw.default20, %sw.bb19, %sw.bb18, %sw.default, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb, %if.then
  %15 = load i8** %retval
  ret i8* %15
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @execute_in_shell(i8* %cmd) #0 {
entry:
  %retval = alloca i32, align 4
  %cmd.addr = alloca i8*, align 8
  %shell = alloca i8*, align 8
  %pid = alloca i32, align 4
  %devnull = alloca i32, align 4
  %status = alloca i32, align 4
  %argv = alloca [4 x i8*], align 16
  %.compoundliteral = alloca %union.anon.0, align 4
  %.compoundliteral67 = alloca %union.anon.1, align 4
  %.compoundliteral71 = alloca %union.anon.2, align 4
  store i8* %cmd, i8** %cmd.addr, align 8
  %call = call i8* @getenv(i8* getelementptr inbounds ([6 x i8]* @.str274, i32 0, i32 0)) #9
  store i8* %call, i8** %shell, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8]* @.str275, i32 0, i32 0), i8** %shell, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str276, i32 0, i32 0), i32 2)
  store i32 %call1, i32* %devnull, align 4
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp2 = icmp eq i32 %call1, %1
  br i1 %cmp2, label %if.then3, label %if.end6

if.then3:                                         ; preds = %cont
  %call4 = call i32* @__errno_location() #2
  %4 = load i32* %call4, align 4
  %call5 = call i8* @strerror(i32 %4) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str277, i32 0, i32 0), i8* %call5) #11
  unreachable

if.end6:                                          ; preds = %cont
  %5 = load i8** %cmd.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([28 x i8]* @.str278, i32 0, i32 0), i8* %5)
  %call7 = call i32 @fork() #9
  store i32 %call7, i32* %pid, align 4
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.then9, label %if.end43

if.then9:                                         ; preds = %if.end6
  %6 = load i32* @original_real_uid, align 4
  call void @permanently_drop_suid(i32 %6)
  %7 = load i32* %devnull, align 4
  %call10 = call i32 @dup2(i32 %7, i32 0) #9
  %8 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont12, label %trap11

trap11:                                           ; preds = %if.then9
  call void @llvm.trap() #3
  unreachable

cont12:                                           ; preds = %if.then9
  %cmp13 = icmp eq i32 %call10, %9
  br i1 %cmp13, label %if.then14, label %if.end17

if.then14:                                        ; preds = %cont12
  %call15 = call i32* @__errno_location() #2
  %12 = load i32* %call15, align 4
  %call16 = call i8* @strerror(i32 %12) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([9 x i8]* @.str279, i32 0, i32 0), i8* %call16) #11
  unreachable

if.end17:                                         ; preds = %cont12
  %13 = load i32* %devnull, align 4
  %call18 = call i32 @dup2(i32 %13, i32 1) #9
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %15 = extractvalue { i32, i1 } %14, 0
  %16 = extractvalue { i32, i1 } %14, 1
  %17 = xor i1 %16, true
  br i1 %17, label %cont20, label %trap19

trap19:                                           ; preds = %if.end17
  call void @llvm.trap() #3
  unreachable

cont20:                                           ; preds = %if.end17
  %cmp21 = icmp eq i32 %call18, %15
  br i1 %cmp21, label %if.then22, label %if.end25

if.then22:                                        ; preds = %cont20
  %call23 = call i32* @__errno_location() #2
  %18 = load i32* %call23, align 4
  %call24 = call i8* @strerror(i32 %18) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([9 x i8]* @.str279, i32 0, i32 0), i8* %call24) #11
  unreachable

if.end25:                                         ; preds = %cont20
  %19 = load i32* %devnull, align 4
  %cmp26 = icmp sgt i32 %19, 2
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end25
  %20 = load i32* %devnull, align 4
  %call28 = call i32 @close(i32 %20)
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end25
  %21 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 2, i32 1)
  %22 = extractvalue { i32, i1 } %21, 0
  %23 = extractvalue { i32, i1 } %21, 1
  %24 = xor i1 %23, true
  br i1 %24, label %cont31, label %trap30

trap30:                                           ; preds = %if.end29
  call void @llvm.trap() #3
  unreachable

cont31:                                           ; preds = %if.end29
  call void @closefrom(i32 %22)
  %25 = load i8** %shell, align 8
  %arrayidx = getelementptr inbounds [4 x i8*]* %argv, i32 0, i64 0
  store i8* %25, i8** %arrayidx, align 8
  %arrayidx32 = getelementptr inbounds [4 x i8*]* %argv, i32 0, i64 1
  store i8* getelementptr inbounds ([3 x i8]* @.str280, i32 0, i32 0), i8** %arrayidx32, align 8
  %26 = load i8** %cmd.addr, align 8
  %call33 = call i8* @xstrdup(i8* %26)
  %arrayidx34 = getelementptr inbounds [4 x i8*]* %argv, i32 0, i64 2
  store i8* %call33, i8** %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds [4 x i8*]* %argv, i32 0, i64 3
  store i8* null, i8** %arrayidx35, align 8
  %arrayidx36 = getelementptr inbounds [4 x i8*]* %argv, i32 0, i64 0
  %27 = load i8** %arrayidx36, align 8
  %arraydecay = getelementptr inbounds [4 x i8*]* %argv, i32 0, i32 0
  %call37 = call i32 @execv(i8* %27, i8** %arraydecay) #9
  %28 = load i8** %cmd.addr, align 8
  %call38 = call i32* @__errno_location() #2
  %29 = load i32* %call38, align 4
  %call39 = call i8* @strerror(i32 %29) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str281, i32 0, i32 0), i8* %28, i8* %call39)
  %call40 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 15, void (i32)* null)
  %call41 = call i32 @getpid() #9
  %call42 = call i32 @kill(i32 %call41, i32 15) #9
  call void @_exit(i32 1) #11
  unreachable

if.end43:                                         ; preds = %if.end6
  %30 = load i32* %pid, align 4
  %cmp44 = icmp slt i32 %30, 0
  br i1 %cmp44, label %if.then45, label %if.end48

if.then45:                                        ; preds = %if.end43
  %call46 = call i32* @__errno_location() #2
  %31 = load i32* %call46, align 4
  %call47 = call i8* @strerror(i32 %31) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str282, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.execute_in_shell, i32 0, i32 0), i8* %call47) #11
  unreachable

if.end48:                                         ; preds = %if.end43
  %32 = load i32* %devnull, align 4
  %call49 = call i32 @close(i32 %32)
  br label %while.cond

while.cond:                                       ; preds = %if.end61, %if.end48
  %33 = load i32* %pid, align 4
  %call50 = call i32 @waitpid(i32 %33, i32* %status, i32 0)
  %34 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %35 = extractvalue { i32, i1 } %34, 0
  %36 = extractvalue { i32, i1 } %34, 1
  %37 = xor i1 %36, true
  br i1 %37, label %cont52, label %trap51

trap51:                                           ; preds = %while.cond
  call void @llvm.trap() #3
  unreachable

cont52:                                           ; preds = %while.cond
  %cmp53 = icmp eq i32 %call50, %35
  br i1 %cmp53, label %while.body, label %while.end

while.body:                                       ; preds = %cont52
  %call54 = call i32* @__errno_location() #2
  %38 = load i32* %call54, align 4
  %cmp55 = icmp ne i32 %38, 4
  br i1 %cmp55, label %land.lhs.true, label %if.end61

land.lhs.true:                                    ; preds = %while.body
  %call56 = call i32* @__errno_location() #2
  %39 = load i32* %call56, align 4
  %cmp57 = icmp ne i32 %39, 11
  br i1 %cmp57, label %if.then58, label %if.end61

if.then58:                                        ; preds = %land.lhs.true
  %call59 = call i32* @__errno_location() #2
  %40 = load i32* %call59, align 4
  %call60 = call i8* @strerror(i32 %40) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str283, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.execute_in_shell, i32 0, i32 0), i8* %call60) #11
  unreachable

if.end61:                                         ; preds = %land.lhs.true, %while.body
  br label %while.cond

while.end:                                        ; preds = %cont52
  %__in = bitcast %union.anon.0* %.compoundliteral to i32*
  %41 = load i32* %status, align 4
  store i32 %41, i32* %__in, align 4
  %__i = bitcast %union.anon.0* %.compoundliteral to i32*
  %42 = load i32* %__i, align 4
  %and = and i32 %42, 127
  %cmp62 = icmp eq i32 %and, 0
  br i1 %cmp62, label %if.end66, label %if.then63

if.then63:                                        ; preds = %while.end
  %43 = load i8** %cmd.addr, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str284, i32 0, i32 0), i8* %43)
  %44 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %45 = extractvalue { i32, i1 } %44, 0
  %46 = extractvalue { i32, i1 } %44, 1
  %47 = xor i1 %46, true
  br i1 %47, label %cont65, label %trap64

trap64:                                           ; preds = %if.then63
  call void @llvm.trap() #3
  unreachable

cont65:                                           ; preds = %if.then63
  store i32 %45, i32* %retval
  br label %return

if.end66:                                         ; preds = %while.end
  %__in68 = bitcast %union.anon.1* %.compoundliteral67 to i32*
  %48 = load i32* %status, align 4
  store i32 %48, i32* %__in68, align 4
  %__i69 = bitcast %union.anon.1* %.compoundliteral67 to i32*
  %49 = load i32* %__i69, align 4
  %and70 = and i32 %49, 65280
  %shr = ashr i32 %and70, 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([27 x i8]* @.str285, i32 0, i32 0), i32 %shr)
  %__in72 = bitcast %union.anon.2* %.compoundliteral71 to i32*
  %50 = load i32* %status, align 4
  store i32 %50, i32* %__in72, align 4
  %__i73 = bitcast %union.anon.2* %.compoundliteral71 to i32*
  %51 = load i32* %__i73, align 4
  %and74 = and i32 %51, 65280
  %shr75 = ashr i32 %and74, 8
  store i32 %shr75, i32* %retval
  br label %return

return:                                           ; preds = %if.end66, %cont65
  %52 = load i32* %retval
  ret i32 %52
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @fmt_multistate_int(i32 %val, %struct.multistate* %m) #0 {
entry:
  %retval = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  %m.addr = alloca %struct.multistate*, align 8
  %i = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  store %struct.multistate* %m, %struct.multistate** %m.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %idxprom = zext i32 %0 to i64
  %1 = load %struct.multistate** %m.addr, align 8
  %arrayidx = getelementptr inbounds %struct.multistate* %1, i64 %idxprom
  %key = getelementptr inbounds %struct.multistate* %arrayidx, i32 0, i32 0
  %2 = load i8** %key, align 8
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4
  %idxprom1 = zext i32 %3 to i64
  %4 = load %struct.multistate** %m.addr, align 8
  %arrayidx2 = getelementptr inbounds %struct.multistate* %4, i64 %idxprom1
  %value = getelementptr inbounds %struct.multistate* %arrayidx2, i32 0, i32 1
  %5 = load i32* %value, align 4
  %6 = load i32* %val.addr, align 4
  %cmp3 = icmp eq i32 %5, %6
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %7 = load i32* %i, align 4
  %idxprom4 = zext i32 %7 to i64
  %8 = load %struct.multistate** %m.addr, align 8
  %arrayidx5 = getelementptr inbounds %struct.multistate* %8, i64 %idxprom4
  %key6 = getelementptr inbounds %struct.multistate* %arrayidx5, i32 0, i32 0
  %9 = load i8** %key6, align 8
  store i8* %9, i8** %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32* %i, align 4
  %inc = add i32 %10, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i8* getelementptr inbounds ([8 x i8]* @.str52246, i32 0, i32 0), i8** %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %11 = load i8** %retval
  ret i8* %11
}

; Function Attrs: nounwind sspreq uwtable
define i32 @client_x11_get_proto(i8* %display, i8* %xauth_path, i32 %trusted, i32 %timeout, i8** %_proto, i8** %_data) #0 {
entry:
  %retval = alloca i32, align 4
  %display.addr = alloca i8*, align 8
  %xauth_path.addr = alloca i8*, align 8
  %trusted.addr = alloca i32, align 4
  %timeout.addr = alloca i32, align 4
  %_proto.addr = alloca i8**, align 8
  %_data.addr = alloca i8**, align 8
  %cmd = alloca [1024 x i8], align 16
  %line = alloca [512 x i8], align 16
  %xdisplay = alloca [512 x i8], align 16
  %xauthfile = alloca [4096 x i8], align 16
  %xauthdir = alloca [4096 x i8], align 16
  %f = alloca %struct._IO_FILE*, align 8
  %got_data = alloca i32, align 4
  %generated = alloca i32, align 4
  %do_unlink = alloca i32, align 4
  %r = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  %now = alloca i32, align 4
  %x11_timeout_real = alloca i32, align 4
  %rnd = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  store i8* %display, i8** %display.addr, align 8
  store i8* %xauth_path, i8** %xauth_path.addr, align 8
  store i32 %trusted, i32* %trusted.addr, align 4
  store i32 %timeout, i32* %timeout.addr, align 4
  store i8** %_proto, i8*** %_proto.addr, align 8
  store i8** %_data, i8*** %_data.addr, align 8
  store i32 0, i32* %got_data, align 4
  store i32 0, i32* %generated, align 4
  store i32 0, i32* %do_unlink, align 4
  %0 = load i8*** %_proto.addr, align 8
  store i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.proto, i32 0, i32 0), i8** %0, align 8
  %1 = load i8*** %_data.addr, align 8
  store i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.data, i32 0, i32 0), i8** %1, align 8
  %arrayidx = getelementptr inbounds [4096 x i8]* %xauthdir, i32 0, i64 0
  store i8 0, i8* %arrayidx, align 1
  %arrayidx1 = getelementptr inbounds [4096 x i8]* %xauthfile, i32 0, i64 0
  store i8 0, i8* %arrayidx1, align 1
  store i8 0, i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.data, i32 0, i64 0), align 1
  store i8 0, i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.proto, i32 0, i64 0), align 1
  %2 = load i8** %display.addr, align 8
  %call = call i32 @client_x11_display_valid(i8* %2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end3, label %if.then

if.then:                                          ; preds = %entry
  %3 = load i8** %display.addr, align 8
  %cmp = icmp ne i8* %3, null
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %4 = load i8** %display.addr, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([47 x i8]* @.str415, i32 0, i32 0), i8* %4)
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %6 = extractvalue { i32, i1 } %5, 0
  %7 = extractvalue { i32, i1 } %5, 1
  %8 = xor i1 %7, true
  br i1 %8, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  store i32 %6, i32* %retval
  br label %return

if.end3:                                          ; preds = %entry
  %9 = load i8** %xauth_path.addr, align 8
  %cmp4 = icmp ne i8* %9, null
  br i1 %cmp4, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.end3
  %10 = load i8** %xauth_path.addr, align 8
  %call5 = call i32 @stat(i8* %10, %struct.stat* %st) #9
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = extractvalue { i32, i1 } %11, 1
  %14 = xor i1 %13, true
  br i1 %14, label %cont7, label %trap6

trap6:                                            ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont7:                                            ; preds = %land.lhs.true
  %cmp8 = icmp eq i32 %call5, %12
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %cont7
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([18 x i8]* @.str1416, i32 0, i32 0))
  store i8* null, i8** %xauth_path.addr, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %cont7, %if.end3
  %15 = load i8** %xauth_path.addr, align 8
  %cmp11 = icmp ne i8* %15, null
  br i1 %cmp11, label %if.then12, label %if.end124

if.then12:                                        ; preds = %if.end10
  %16 = load i8** %display.addr, align 8
  %call13 = call i32 @strncmp(i8* %16, i8* getelementptr inbounds ([11 x i8]* @.str2417, i32 0, i32 0), i64 10) #12
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then15, label %if.end25

if.then15:                                        ; preds = %if.then12
  %arraydecay = getelementptr inbounds [512 x i8]* %xdisplay, i32 0, i32 0
  %17 = load i8** %display.addr, align 8
  %add.ptr = getelementptr inbounds i8* %17, i64 10
  %call16 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 512, i8* getelementptr inbounds ([8 x i8]* @.str3418, i32 0, i32 0), i8* %add.ptr) #9
  store i32 %call16, i32* %r, align 4
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then15
  %18 = load i32* %r, align 4
  %conv = sext i32 %18 to i64
  %cmp18 = icmp uge i64 %conv, 512
  br i1 %cmp18, label %if.then20, label %if.end23

if.then20:                                        ; preds = %lor.lhs.false, %if.then15
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str4419, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.client_x11_get_proto, i32 0, i32 0))
  %19 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont22, label %trap21

trap21:                                           ; preds = %if.then20
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %if.then20
  store i32 %20, i32* %retval
  br label %return

if.end23:                                         ; preds = %lor.lhs.false
  %arraydecay24 = getelementptr inbounds [512 x i8]* %xdisplay, i32 0, i32 0
  store i8* %arraydecay24, i8** %display.addr, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.end23, %if.then12
  %23 = load i32* %trusted.addr, align 4
  %cmp26 = icmp eq i32 %23, 0
  br i1 %cmp26, label %if.then28, label %if.end93

if.then28:                                        ; preds = %if.end25
  %arraydecay29 = getelementptr inbounds [4096 x i8]* %xauthdir, i32 0, i32 0
  call void @mktemp_proto(i8* %arraydecay29, i64 4096)
  %arraydecay30 = getelementptr inbounds [4096 x i8]* %xauthdir, i32 0, i32 0
  %call31 = call i8* @mkdtemp(i8* %arraydecay30) #9
  %cmp32 = icmp eq i8* %call31, null
  br i1 %cmp32, label %if.then34, label %if.end39

if.then34:                                        ; preds = %if.then28
  %call35 = call i32* @__errno_location() #2
  %24 = load i32* %call35, align 4
  %call36 = call i8* @strerror(i32 %24) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([16 x i8]* @.str5420, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.client_x11_get_proto, i32 0, i32 0), i8* %call36)
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont38, label %trap37

trap37:                                           ; preds = %if.then34
  call void @llvm.trap() #3
  unreachable

cont38:                                           ; preds = %if.then34
  store i32 %26, i32* %retval
  br label %return

if.end39:                                         ; preds = %if.then28
  store i32 1, i32* %do_unlink, align 4
  %arraydecay40 = getelementptr inbounds [4096 x i8]* %xauthfile, i32 0, i32 0
  %arraydecay41 = getelementptr inbounds [4096 x i8]* %xauthdir, i32 0, i32 0
  %call42 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay40, i64 4096, i8* getelementptr inbounds ([13 x i8]* @.str6421, i32 0, i32 0), i8* %arraydecay41) #9
  store i32 %call42, i32* %r, align 4
  %cmp43 = icmp slt i32 %call42, 0
  br i1 %cmp43, label %if.then49, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.end39
  %29 = load i32* %r, align 4
  %conv46 = sext i32 %29 to i64
  %cmp47 = icmp uge i64 %conv46, 4096
  br i1 %cmp47, label %if.then49, label %if.end56

if.then49:                                        ; preds = %lor.lhs.false45, %if.end39
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([28 x i8]* @.str7422, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.client_x11_get_proto, i32 0, i32 0))
  %arraydecay50 = getelementptr inbounds [4096 x i8]* %xauthfile, i32 0, i32 0
  %call51 = call i32 @unlink(i8* %arraydecay50) #9
  %arraydecay52 = getelementptr inbounds [4096 x i8]* %xauthdir, i32 0, i32 0
  %call53 = call i32 @rmdir(i8* %arraydecay52) #9
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont55, label %trap54

trap54:                                           ; preds = %if.then49
  call void @llvm.trap() #3
  unreachable

cont55:                                           ; preds = %if.then49
  store i32 %31, i32* %retval
  br label %return

if.end56:                                         ; preds = %lor.lhs.false45
  %34 = load i32* %timeout.addr, align 4
  %cmp57 = icmp uge i32 %34, -61
  br i1 %cmp57, label %if.then59, label %if.else

if.then59:                                        ; preds = %if.end56
  store i32 -1, i32* %x11_timeout_real, align 4
  br label %if.end60

if.else:                                          ; preds = %if.end56
  %35 = load i32* %timeout.addr, align 4
  %add = add i32 %35, 60
  store i32 %add, i32* %x11_timeout_real, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then59
  %arraydecay61 = getelementptr inbounds [1024 x i8]* %cmd, i32 0, i32 0
  %36 = load i8** %xauth_path.addr, align 8
  %arraydecay62 = getelementptr inbounds [4096 x i8]* %xauthfile, i32 0, i32 0
  %37 = load i8** %display.addr, align 8
  %38 = load i32* %x11_timeout_real, align 4
  %call63 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay61, i64 1024, i8* getelementptr inbounds ([73 x i8]* @.str8423, i32 0, i32 0), i8* %36, i8* %arraydecay62, i8* %37, i32 %38) #9
  store i32 %call63, i32* %r, align 4
  %cmp64 = icmp slt i32 %call63, 0
  br i1 %cmp64, label %if.then70, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %if.end60
  %39 = load i32* %r, align 4
  %conv67 = sext i32 %39 to i64
  %cmp68 = icmp uge i64 %conv67, 1024
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %lor.lhs.false66, %if.end60
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str9424, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.client_x11_get_proto, i32 0, i32 0)) #11
  unreachable

if.end71:                                         ; preds = %lor.lhs.false66
  %arraydecay72 = getelementptr inbounds [1024 x i8]* %cmd, i32 0, i32 0
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([7 x i8]* @.str10425, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.client_x11_get_proto, i32 0, i32 0), i8* %arraydecay72)
  %40 = load i32* @x11_refuse_time, align 4
  %cmp73 = icmp eq i32 %40, 0
  br i1 %cmp73, label %if.then75, label %if.end86

if.then75:                                        ; preds = %if.end71
  %call76 = call i64 @monotime()
  %41 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %call76, i64 1)
  %42 = extractvalue { i64, i1 } %41, 0
  %43 = extractvalue { i64, i1 } %41, 1
  %44 = xor i1 %43, true
  br i1 %44, label %cont78, label %trap77

trap77:                                           ; preds = %if.then75
  call void @llvm.trap() #3
  unreachable

cont78:                                           ; preds = %if.then75
  %conv79 = trunc i64 %42 to i32
  store i32 %conv79, i32* %now, align 4
  %45 = load i32* %timeout.addr, align 4
  %sub = sub i32 -1, %45
  %46 = load i32* %now, align 4
  %cmp80 = icmp ult i32 %sub, %46
  br i1 %cmp80, label %if.then82, label %if.else83

if.then82:                                        ; preds = %cont78
  store i32 -1, i32* @x11_refuse_time, align 4
  br label %if.end85

if.else83:                                        ; preds = %cont78
  %47 = load i32* %now, align 4
  %48 = load i32* %timeout.addr, align 4
  %add84 = add i32 %47, %48
  store i32 %add84, i32* @x11_refuse_time, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.else83, %if.then82
  %49 = load i32* @x11_refuse_time, align 4
  call void @channel_set_x11_refuse_time(i32 %49)
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end71
  %arraydecay87 = getelementptr inbounds [1024 x i8]* %cmd, i32 0, i32 0
  %call88 = call i32 @system(i8* %arraydecay87)
  %cmp89 = icmp eq i32 %call88, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end86
  store i32 1, i32* %generated, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end86
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.end25
  %50 = load i32* %trusted.addr, align 4
  %tobool94 = icmp ne i32 %50, 0
  br i1 %tobool94, label %if.then97, label %lor.lhs.false95

lor.lhs.false95:                                  ; preds = %if.end93
  %51 = load i32* %generated, align 4
  %tobool96 = icmp ne i32 %51, 0
  br i1 %tobool96, label %if.then97, label %if.end123

if.then97:                                        ; preds = %lor.lhs.false95, %if.end93
  %arraydecay98 = getelementptr inbounds [1024 x i8]* %cmd, i32 0, i32 0
  %52 = load i8** %xauth_path.addr, align 8
  %53 = load i32* %generated, align 4
  %tobool99 = icmp ne i32 %53, 0
  %cond = select i1 %tobool99, i8* getelementptr inbounds ([4 x i8]* @.str12427, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str13428, i32 0, i32 0)
  %54 = load i32* %generated, align 4
  %tobool100 = icmp ne i32 %54, 0
  br i1 %tobool100, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then97
  %arraydecay101 = getelementptr inbounds [4096 x i8]* %xauthfile, i32 0, i32 0
  br label %cond.end

cond.false:                                       ; preds = %if.then97
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond102 = phi i8* [ %arraydecay101, %cond.true ], [ getelementptr inbounds ([1 x i8]* @.str13428, i32 0, i32 0), %cond.false ]
  %55 = load i8** %display.addr, align 8
  %call103 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay98, i64 1024, i8* getelementptr inbounds ([28 x i8]* @.str11426, i32 0, i32 0), i8* %52, i8* %cond, i8* %cond102, i8* %55) #9
  %arraydecay104 = getelementptr inbounds [1024 x i8]* %cmd, i32 0, i32 0
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([18 x i8]* @.str14429, i32 0, i32 0), i8* %arraydecay104)
  %arraydecay105 = getelementptr inbounds [1024 x i8]* %cmd, i32 0, i32 0
  %call106 = call %struct._IO_FILE* @popen(i8* %arraydecay105, i8* getelementptr inbounds ([2 x i8]* @.str15430, i32 0, i32 0))
  store %struct._IO_FILE* %call106, %struct._IO_FILE** %f, align 8
  %56 = load %struct._IO_FILE** %f, align 8
  %tobool107 = icmp ne %struct._IO_FILE* %56, null
  br i1 %tobool107, label %land.lhs.true108, label %if.end118

land.lhs.true108:                                 ; preds = %cond.end
  %arraydecay109 = getelementptr inbounds [512 x i8]* %line, i32 0, i32 0
  %57 = load %struct._IO_FILE** %f, align 8
  %call110 = call i8* @fgets(i8* %arraydecay109, i32 512, %struct._IO_FILE* %57)
  %tobool111 = icmp ne i8* %call110, null
  br i1 %tobool111, label %land.lhs.true112, label %if.end118

land.lhs.true112:                                 ; preds = %land.lhs.true108
  %arraydecay113 = getelementptr inbounds [512 x i8]* %line, i32 0, i32 0
  %call114 = call i32 (i8*, i8*, ...)* @sscanf(i8* %arraydecay113, i8* getelementptr inbounds ([16 x i8]* @.str16431, i32 0, i32 0), i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.proto, i32 0, i32 0), i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.data, i32 0, i32 0)) #9
  %cmp115 = icmp eq i32 %call114, 2
  br i1 %cmp115, label %if.then117, label %if.end118

if.then117:                                       ; preds = %land.lhs.true112
  store i32 1, i32* %got_data, align 4
  br label %if.end118

if.end118:                                        ; preds = %if.then117, %land.lhs.true112, %land.lhs.true108, %cond.end
  %58 = load %struct._IO_FILE** %f, align 8
  %tobool119 = icmp ne %struct._IO_FILE* %58, null
  br i1 %tobool119, label %if.then120, label %if.end122

if.then120:                                       ; preds = %if.end118
  %59 = load %struct._IO_FILE** %f, align 8
  %call121 = call i32 @pclose(%struct._IO_FILE* %59)
  br label %if.end122

if.end122:                                        ; preds = %if.then120, %if.end118
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %lor.lhs.false95
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end10
  %60 = load i32* %do_unlink, align 4
  %tobool125 = icmp ne i32 %60, 0
  br i1 %tobool125, label %if.then126, label %if.end131

if.then126:                                       ; preds = %if.end124
  %arraydecay127 = getelementptr inbounds [4096 x i8]* %xauthfile, i32 0, i32 0
  %call128 = call i32 @unlink(i8* %arraydecay127) #9
  %arraydecay129 = getelementptr inbounds [4096 x i8]* %xauthdir, i32 0, i32 0
  %call130 = call i32 @rmdir(i8* %arraydecay129) #9
  br label %if.end131

if.end131:                                        ; preds = %if.then126, %if.end124
  %61 = load i32* %trusted.addr, align 4
  %tobool132 = icmp ne i32 %61, 0
  br i1 %tobool132, label %if.end138, label %land.lhs.true133

land.lhs.true133:                                 ; preds = %if.end131
  %62 = load i32* %got_data, align 4
  %tobool134 = icmp ne i32 %62, 0
  br i1 %tobool134, label %if.end138, label %if.then135

if.then135:                                       ; preds = %land.lhs.true133
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([77 x i8]* @.str17432, i32 0, i32 0))
  %63 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %64 = extractvalue { i32, i1 } %63, 0
  %65 = extractvalue { i32, i1 } %63, 1
  %66 = xor i1 %65, true
  br i1 %66, label %cont137, label %trap136

trap136:                                          ; preds = %if.then135
  call void @llvm.trap() #3
  unreachable

cont137:                                          ; preds = %if.then135
  store i32 %64, i32* %retval
  br label %return

if.end138:                                        ; preds = %land.lhs.true133, %if.end131
  %67 = load i32* %got_data, align 4
  %tobool139 = icmp ne i32 %67, 0
  br i1 %tobool139, label %if.end153, label %if.then140

if.then140:                                       ; preds = %if.end138
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([75 x i8]* @.str18433, i32 0, i32 0))
  %call141 = call i64 @strlcpy(i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.proto, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str19434, i32 0, i32 0), i64 512)
  %arraydecay142 = getelementptr inbounds [16 x i8]* %rnd, i32 0, i32 0
  call void @arc4random_buf(i8* %arraydecay142, i64 16)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then140
  %68 = load i32* %i, align 4
  %conv143 = zext i32 %68 to i64
  %cmp144 = icmp ult i64 %conv143, 16
  br i1 %cmp144, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %69 = load i32* %i, align 4
  %mul = mul i32 2, %69
  %idx.ext = zext i32 %mul to i64
  %add.ptr146 = getelementptr inbounds i8* getelementptr inbounds ([512 x i8]* @client_x11_get_proto.data, i32 0, i32 0), i64 %idx.ext
  %70 = load i32* %i, align 4
  %mul147 = mul i32 2, %70
  %conv148 = zext i32 %mul147 to i64
  %sub149 = sub i64 512, %conv148
  %71 = load i32* %i, align 4
  %idxprom = zext i32 %71 to i64
  %arrayidx150 = getelementptr inbounds [16 x i8]* %rnd, i32 0, i64 %idxprom
  %72 = load i8* %arrayidx150, align 1
  %conv151 = zext i8 %72 to i32
  %call152 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %add.ptr146, i64 %sub149, i8* getelementptr inbounds ([5 x i8]* @.str20435, i32 0, i32 0), i32 %conv151) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %73 = load i32* %i, align 4
  %inc = add i32 %73, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end153

if.end153:                                        ; preds = %for.end, %if.end138
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end153, %cont137, %cont55, %cont38, %cont22, %cont
  %74 = load i32* %retval
  ret i32 %74
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8*, i8*, i64) #8

declare void @mktemp_proto(i8*, i64) #1

; Function Attrs: nounwind
declare i8* @mkdtemp(i8*) #4

; Function Attrs: nounwind
declare i32 @rmdir(i8*) #4

declare i64 @monotime() #1

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #2

declare void @channel_set_x11_refuse_time(i32) #1

declare i32 @system(i8*) #1

declare %struct._IO_FILE* @popen(i8*, i8*) #1

; Function Attrs: nounwind
declare i32 @sscanf(i8*, i8*, ...) #4

declare i32 @pclose(%struct._IO_FILE*) #1

declare void @arc4random_buf(i8*, i64) #1

; Function Attrs: nounwind sspreq uwtable
define void @client_expect_confirm(i32 %id, i8* %request, i32 %action) #0 {
entry:
  %id.addr = alloca i32, align 4
  %request.addr = alloca i8*, align 8
  %action.addr = alloca i32, align 4
  %cr = alloca %struct.channel_reply_ctx*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i8* %request, i8** %request.addr, align 8
  store i32 %action, i32* %action.addr, align 4
  %call = call i8* @xcalloc(i64 1, i64 16)
  %0 = bitcast i8* %call to %struct.channel_reply_ctx*
  store %struct.channel_reply_ctx* %0, %struct.channel_reply_ctx** %cr, align 8
  %1 = load i8** %request.addr, align 8
  %2 = load %struct.channel_reply_ctx** %cr, align 8
  %request_type = getelementptr inbounds %struct.channel_reply_ctx* %2, i32 0, i32 0
  store i8* %1, i8** %request_type, align 8
  %3 = load i32* %action.addr, align 4
  %4 = load %struct.channel_reply_ctx** %cr, align 8
  %action1 = getelementptr inbounds %struct.channel_reply_ctx* %4, i32 0, i32 2
  store i32 %3, i32* %action1, align 4
  %5 = load i32* %id.addr, align 4
  %6 = load %struct.channel_reply_ctx** %cr, align 8
  %7 = bitcast %struct.channel_reply_ctx* %6 to i8*
  call void @channel_register_status_confirm(i32 %5, void (i32, %struct.Channel.80*, i8*)* @client_status_confirm, void (%struct.Channel.80*, i8*)* @client_abandon_status_confirm, i8* %7)
  ret void
}

declare void @channel_register_status_confirm(i32, void (i32, %struct.Channel.80*, i8*)*, void (%struct.Channel.80*, i8*)*, i8*) #1

; Function Attrs: nounwind sspreq uwtable
define void @client_register_global_confirm(void (i32, i32, i8*)* %cb, i8* %ctx) #0 {
entry:
  %cb.addr = alloca void (i32, i32, i8*)*, align 8
  %ctx.addr = alloca i8*, align 8
  %gc = alloca %struct.global_confirm*, align 8
  %last_gc = alloca %struct.global_confirm*, align 8
  store void (i32, i32, i8*)* %cb, void (i32, i32, i8*)** %cb.addr, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  %0 = load %struct.global_confirm*** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 1), align 8
  %1 = bitcast %struct.global_confirm** %0 to %struct.global_confirms*
  %tqh_last = getelementptr inbounds %struct.global_confirms* %1, i32 0, i32 1
  %2 = load %struct.global_confirm*** %tqh_last, align 8
  %3 = load %struct.global_confirm** %2, align 8
  store %struct.global_confirm* %3, %struct.global_confirm** %last_gc, align 8
  %4 = load %struct.global_confirm** %last_gc, align 8
  %tobool = icmp ne %struct.global_confirm* %4, null
  br i1 %tobool, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.global_confirm** %last_gc, align 8
  %cb1 = getelementptr inbounds %struct.global_confirm* %5, i32 0, i32 1
  %6 = load void (i32, i32, i8*)** %cb1, align 8
  %7 = load void (i32, i32, i8*)** %cb.addr, align 8
  %cmp = icmp eq void (i32, i32, i8*)* %6, %7
  br i1 %cmp, label %land.lhs.true2, label %if.end8

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct.global_confirm** %last_gc, align 8
  %ctx3 = getelementptr inbounds %struct.global_confirm* %8, i32 0, i32 2
  %9 = load i8** %ctx3, align 8
  %10 = load i8** %ctx.addr, align 8
  %cmp4 = icmp eq i8* %9, %10
  br i1 %cmp4, label %if.then, label %if.end8

if.then:                                          ; preds = %land.lhs.true2
  %11 = load %struct.global_confirm** %last_gc, align 8
  %ref_count = getelementptr inbounds %struct.global_confirm* %11, i32 0, i32 3
  %12 = load i32* %ref_count, align 4
  %13 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 1)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %14, i32* %ref_count, align 4
  %cmp5 = icmp sge i32 %14, 2147483647
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %cont
  %17 = load %struct.global_confirm** %last_gc, align 8
  %ref_count7 = getelementptr inbounds %struct.global_confirm* %17, i32 0, i32 3
  %18 = load i32* %ref_count7, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str21436, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @__func__.client_register_global_confirm, i32 0, i32 0), i32 %18) #11
  unreachable

if.end:                                           ; preds = %cont
  br label %do.end

if.end8:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %call = call i8* @xcalloc(i64 1, i64 40)
  %19 = bitcast i8* %call to %struct.global_confirm*
  store %struct.global_confirm* %19, %struct.global_confirm** %gc, align 8
  %20 = load void (i32, i32, i8*)** %cb.addr, align 8
  %21 = load %struct.global_confirm** %gc, align 8
  %cb9 = getelementptr inbounds %struct.global_confirm* %21, i32 0, i32 1
  store void (i32, i32, i8*)* %20, void (i32, i32, i8*)** %cb9, align 8
  %22 = load i8** %ctx.addr, align 8
  %23 = load %struct.global_confirm** %gc, align 8
  %ctx10 = getelementptr inbounds %struct.global_confirm* %23, i32 0, i32 2
  store i8* %22, i8** %ctx10, align 8
  %24 = load %struct.global_confirm** %gc, align 8
  %ref_count11 = getelementptr inbounds %struct.global_confirm* %24, i32 0, i32 3
  store i32 1, i32* %ref_count11, align 4
  br label %do.body

do.body:                                          ; preds = %if.end8
  %25 = load %struct.global_confirm** %gc, align 8
  %entry12 = getelementptr inbounds %struct.global_confirm* %25, i32 0, i32 0
  %tqe_next = getelementptr inbounds %struct.anon.0.29* %entry12, i32 0, i32 0
  store %struct.global_confirm* null, %struct.global_confirm** %tqe_next, align 8
  %26 = load %struct.global_confirm*** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 1), align 8
  %27 = load %struct.global_confirm** %gc, align 8
  %entry13 = getelementptr inbounds %struct.global_confirm* %27, i32 0, i32 0
  %tqe_prev = getelementptr inbounds %struct.anon.0.29* %entry13, i32 0, i32 1
  store %struct.global_confirm** %26, %struct.global_confirm*** %tqe_prev, align 8
  %28 = load %struct.global_confirm** %gc, align 8
  %29 = load %struct.global_confirm*** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 1), align 8
  store %struct.global_confirm* %28, %struct.global_confirm** %29, align 8
  %30 = load %struct.global_confirm** %gc, align 8
  %entry14 = getelementptr inbounds %struct.global_confirm* %30, i32 0, i32 0
  %tqe_next15 = getelementptr inbounds %struct.anon.0.29* %entry14, i32 0, i32 0
  store %struct.global_confirm** %tqe_next15, %struct.global_confirm*** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 1), align 8
  br label %do.end

do.end:                                           ; preds = %do.body, %if.end
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define i8* @client_new_escape_filter_ctx(i32 %escape_char) #0 {
entry:
  %escape_char.addr = alloca i32, align 4
  %ret = alloca %struct.escape_filter_ctx*, align 8
  store i32 %escape_char, i32* %escape_char.addr, align 4
  %call = call i8* @xcalloc(i64 1, i64 8)
  %0 = bitcast i8* %call to %struct.escape_filter_ctx*
  store %struct.escape_filter_ctx* %0, %struct.escape_filter_ctx** %ret, align 8
  %1 = load %struct.escape_filter_ctx** %ret, align 8
  %escape_pending = getelementptr inbounds %struct.escape_filter_ctx* %1, i32 0, i32 0
  store i32 0, i32* %escape_pending, align 4
  %2 = load i32* %escape_char.addr, align 4
  %3 = load %struct.escape_filter_ctx** %ret, align 8
  %escape_char1 = getelementptr inbounds %struct.escape_filter_ctx* %3, i32 0, i32 1
  store i32 %2, i32* %escape_char1, align 4
  %4 = load %struct.escape_filter_ctx** %ret, align 8
  %5 = bitcast %struct.escape_filter_ctx* %4 to i8*
  ret i8* %5
}

; Function Attrs: nounwind sspreq uwtable
define void @client_filter_cleanup(i32 %cid, i8* %ctx) #0 {
entry:
  %cid.addr = alloca i32, align 4
  %ctx.addr = alloca i8*, align 8
  store i32 %cid, i32* %cid.addr, align 4
  store i8* %ctx, i8** %ctx.addr, align 8
  %0 = load i8** %ctx.addr, align 8
  call void @free(i8* %0) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define i32 @client_simple_escape_filter(%struct.Channel.80* %c, i8* %buf, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.Channel.80*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.Channel.80* %c, %struct.Channel.80** %c.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  %0 = load %struct.Channel.80** %c.addr, align 8
  %extended_usage = getelementptr inbounds %struct.Channel.80* %0, i32 0, i32 30
  %1 = load i32* %extended_usage, align 4
  %cmp = icmp ne i32 %1, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %struct.Channel.80** %c.addr, align 8
  %3 = load %struct.Channel.80** %c.addr, align 8
  %input = getelementptr inbounds %struct.Channel.80* %3, i32 0, i32 16
  %4 = load %struct.Channel.80** %c.addr, align 8
  %output = getelementptr inbounds %struct.Channel.80* %4, i32 0, i32 17
  %5 = load %struct.Channel.80** %c.addr, align 8
  %extended = getelementptr inbounds %struct.Channel.80* %5, i32 0, i32 18
  %6 = load i8** %buf.addr, align 8
  %7 = load i32* %len.addr, align 4
  %call = call i32 @process_escapes(%struct.Channel.80* %2, %struct.sshbuf* %input, %struct.sshbuf* %output, %struct.sshbuf* %extended, i8* %6, i32 %7)
  store i32 %call, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind sspreq uwtable
define i32 @client_loop(i32 %have_pty, i32 %escape_char_arg, i32 %ssh2_chan_id) #0 {
entry:
  %have_pty.addr = alloca i32, align 4
  %escape_char_arg.addr = alloca i32, align 4
  %ssh2_chan_id.addr = alloca i32, align 4
  %readset = alloca %struct.fd_set*, align 8
  %writeset = alloca %struct.fd_set*, align 8
  %start_time = alloca double, align 8
  %total_time = alloca double, align 8
  %r = alloca i32, align 4
  %max_fd = alloca i32, align 4
  %max_fd2 = alloca i32, align 4
  %len = alloca i32, align 4
  %ibytes = alloca i64, align 8
  %obytes = alloca i64, align 8
  %nalloc = alloca i32, align 4
  %buf = alloca [100 x i8], align 16
  store i32 %have_pty, i32* %have_pty.addr, align 4
  store i32 %escape_char_arg, i32* %escape_char_arg.addr, align 4
  store i32 %ssh2_chan_id, i32* %ssh2_chan_id.addr, align 4
  store %struct.fd_set* null, %struct.fd_set** %readset, align 8
  store %struct.fd_set* null, %struct.fd_set** %writeset, align 8
  store i32 0, i32* %max_fd, align 4
  store i32 0, i32* %max_fd2, align 4
  store i32 0, i32* %nalloc, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([30 x i8]* @.str22437, i32 0, i32 0))
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call = call i32 @option_clear_or_none(i8* %1)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([11 x i8]* @.str23438, i32 0, i32 0))
  %call2 = call i32 @pledge(i8* getelementptr inbounds ([62 x i8]* @.str24439, i32 0, i32 0), i8** null)
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  %cmp = icmp eq i32 %call2, %3
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %cont
  %call4 = call i32* @__errno_location() #2
  %6 = load i32* %call4, align 4
  %call5 = call i8* @strerror(i32 %6) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str25440, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.client_loop, i32 0, i32 0), i8* %call5) #11
  unreachable

if.end:                                           ; preds = %cont
  br label %if.end54

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool6 = icmp ne i32 %7, 0
  br i1 %tobool6, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 86), align 4
  %tobool7 = icmp ne i32 %8, 0
  br i1 %tobool7, label %if.then8, label %if.else17

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([13 x i8]* @.str26441, i32 0, i32 0))
  %call9 = call i32 @pledge(i8* getelementptr inbounds ([52 x i8]* @.str27442, i32 0, i32 0), i8** null)
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %10 = extractvalue { i32, i1 } %9, 0
  %11 = extractvalue { i32, i1 } %9, 1
  %12 = xor i1 %11, true
  br i1 %12, label %cont11, label %trap10

trap10:                                           ; preds = %if.then8
  call void @llvm.trap() #3
  unreachable

cont11:                                           ; preds = %if.then8
  %cmp12 = icmp eq i32 %call9, %10
  br i1 %cmp12, label %if.then13, label %if.end16

if.then13:                                        ; preds = %cont11
  %call14 = call i32* @__errno_location() #2
  %13 = load i32* %call14, align 4
  %call15 = call i8* @strerror(i32 %13) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str25440, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.client_loop, i32 0, i32 0), i8* %call15) #11
  unreachable

if.end16:                                         ; preds = %cont11
  br label %if.end53

if.else17:                                        ; preds = %lor.lhs.false
  %14 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %tobool18 = icmp ne i32 %14, 0
  br i1 %tobool18, label %if.then19, label %if.else28

if.then19:                                        ; preds = %if.else17
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([24 x i8]* @.str28443, i32 0, i32 0))
  %call20 = call i32 @pledge(i8* getelementptr inbounds ([47 x i8]* @.str29444, i32 0, i32 0), i8** null)
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %16 = extractvalue { i32, i1 } %15, 0
  %17 = extractvalue { i32, i1 } %15, 1
  %18 = xor i1 %17, true
  br i1 %18, label %cont22, label %trap21

trap21:                                           ; preds = %if.then19
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %if.then19
  %cmp23 = icmp eq i32 %call20, %16
  br i1 %cmp23, label %if.then24, label %if.end27

if.then24:                                        ; preds = %cont22
  %call25 = call i32* @__errno_location() #2
  %19 = load i32* %call25, align 4
  %call26 = call i8* @strerror(i32 %19) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str25440, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.client_loop, i32 0, i32 0), i8* %call26) #11
  unreachable

if.end27:                                         ; preds = %cont22
  br label %if.end52

if.else28:                                        ; preds = %if.else17
  %20 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call29 = call i32 @option_clear_or_none(i8* %20)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %lor.lhs.false31, label %if.then33

lor.lhs.false31:                                  ; preds = %if.else28
  %21 = load i32* @fork_after_authentication_flag, align 4
  %tobool32 = icmp ne i32 %21, 0
  br i1 %tobool32, label %if.then33, label %if.else42

if.then33:                                        ; preds = %lor.lhs.false31, %if.else28
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([13 x i8]* @.str30445, i32 0, i32 0))
  %call34 = call i32 @pledge(i8* getelementptr inbounds ([35 x i8]* @.str31446, i32 0, i32 0), i8** null)
  %22 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %23 = extractvalue { i32, i1 } %22, 0
  %24 = extractvalue { i32, i1 } %22, 1
  %25 = xor i1 %24, true
  br i1 %25, label %cont36, label %trap35

trap35:                                           ; preds = %if.then33
  call void @llvm.trap() #3
  unreachable

cont36:                                           ; preds = %if.then33
  %cmp37 = icmp eq i32 %call34, %23
  br i1 %cmp37, label %if.then38, label %if.end41

if.then38:                                        ; preds = %cont36
  %call39 = call i32* @__errno_location() #2
  %26 = load i32* %call39, align 4
  %call40 = call i8* @strerror(i32 %26) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str25440, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.client_loop, i32 0, i32 0), i8* %call40) #11
  unreachable

if.end41:                                         ; preds = %cont36
  br label %if.end51

if.else42:                                        ; preds = %lor.lhs.false31
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([16 x i8]* @.str32447, i32 0, i32 0))
  %call43 = call i32 @pledge(i8* getelementptr inbounds ([24 x i8]* @.str33448, i32 0, i32 0), i8** null)
  %27 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  %30 = xor i1 %29, true
  br i1 %30, label %cont45, label %trap44

trap44:                                           ; preds = %if.else42
  call void @llvm.trap() #3
  unreachable

cont45:                                           ; preds = %if.else42
  %cmp46 = icmp eq i32 %call43, %28
  br i1 %cmp46, label %if.then47, label %if.end50

if.then47:                                        ; preds = %cont45
  %call48 = call i32* @__errno_location() #2
  %31 = load i32* %call48, align 4
  %call49 = call i8* @strerror(i32 %31) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str25440, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.client_loop, i32 0, i32 0), i8* %call49) #11
  unreachable

if.end50:                                         ; preds = %cont45
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end41
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end27
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end16
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end
  %call55 = call i64 @clock() #9
  store i64 %call55, i64* @shen_end, align 8
  %32 = load i64* @shen_end, align 8
  %33 = load i64* @shen_start, align 8
  %34 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %32, i64 %33)
  %35 = extractvalue { i64, i1 } %34, 0
  %36 = extractvalue { i64, i1 } %34, 1
  %37 = xor i1 %36, true
  br i1 %37, label %cont57, label %trap56

trap56:                                           ; preds = %if.end54
  call void @llvm.trap() #3
  unreachable

cont57:                                           ; preds = %if.end54
  %conv = sitofp i64 %35 to double
  %div = fdiv double %conv, 1.000000e+06
  store double %div, double* @cpu_time_used, align 8
  %38 = load double* @cpu_time_used, align 8
  %call58 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str34449, i32 0, i32 0), double %38)
  %call59 = call double @get_current_time()
  store double %call59, double* %start_time, align 8
  store i32 0, i32* @escape_pending1, align 4
  store i32 1, i32* @last_was_cr, align 4
  %39 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont61, label %trap60

trap60:                                           ; preds = %cont57
  call void @llvm.trap() #3
  unreachable

cont61:                                           ; preds = %cont57
  store i32 %40, i32* @exit_status, align 4
  store i32 0, i32* @stdin_eof, align 4
  %43 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 64, i32 1024)
  %44 = extractvalue { i32, i1 } %43, 0
  %45 = extractvalue { i32, i1 } %43, 1
  %46 = xor i1 %45, true
  br i1 %46, label %cont63, label %trap62

trap62:                                           ; preds = %cont61
  call void @llvm.trap() #3
  unreachable

cont63:                                           ; preds = %cont61
  store i32 %44, i32* @buffer_high, align 4
  %47 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call64 = call i32 @ssh_packet_get_connection_in(%struct.ssh.68* %47)
  store i32 %call64, i32* @connection_in, align 4
  %48 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call65 = call i32 @ssh_packet_get_connection_out(%struct.ssh.68* %48)
  store i32 %call65, i32* @connection_out, align 4
  %49 = load i32* @connection_in, align 4
  %50 = load i32* @connection_out, align 4
  %cmp66 = icmp sgt i32 %49, %50
  br i1 %cmp66, label %cond.true, label %cond.false

cond.true:                                        ; preds = %cont63
  %51 = load i32* @connection_in, align 4
  br label %cond.end

cond.false:                                       ; preds = %cont63
  %52 = load i32* @connection_out, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %51, %cond.true ], [ %52, %cond.false ]
  store i32 %cond, i32* %max_fd, align 4
  %53 = load i32* @compat20, align 4
  %tobool68 = icmp ne i32 %53, 0
  br i1 %tobool68, label %if.end115, label %if.then69

if.then69:                                        ; preds = %cond.end
  %54 = load %struct._IO_FILE** @stdin, align 8
  %call70 = call i32 @fileno(%struct._IO_FILE* %54) #9
  %call71 = call i32 @isatty(i32 %call70) #9
  %tobool72 = icmp ne i32 %call71, 0
  br i1 %tobool72, label %if.end76, label %if.then73

if.then73:                                        ; preds = %if.then69
  %55 = load %struct._IO_FILE** @stdin, align 8
  %call74 = call i32 @fileno(%struct._IO_FILE* %55) #9
  %call75 = call i32 @set_nonblock(i32 %call74)
  br label %if.end76

if.end76:                                         ; preds = %if.then73, %if.then69
  %56 = load %struct._IO_FILE** @stdout, align 8
  %call77 = call i32 @fileno(%struct._IO_FILE* %56) #9
  %call78 = call i32 @isatty(i32 %call77) #9
  %tobool79 = icmp ne i32 %call78, 0
  br i1 %tobool79, label %if.end83, label %if.then80

if.then80:                                        ; preds = %if.end76
  %57 = load %struct._IO_FILE** @stdout, align 8
  %call81 = call i32 @fileno(%struct._IO_FILE* %57) #9
  %call82 = call i32 @set_nonblock(i32 %call81)
  br label %if.end83

if.end83:                                         ; preds = %if.then80, %if.end76
  %58 = load %struct._IO_FILE** @stderr, align 8
  %call84 = call i32 @fileno(%struct._IO_FILE* %58) #9
  %call85 = call i32 @isatty(i32 %call84) #9
  %tobool86 = icmp ne i32 %call85, 0
  br i1 %tobool86, label %if.end90, label %if.then87

if.then87:                                        ; preds = %if.end83
  %59 = load %struct._IO_FILE** @stderr, align 8
  %call88 = call i32 @fileno(%struct._IO_FILE* %59) #9
  %call89 = call i32 @set_nonblock(i32 %call88)
  br label %if.end90

if.end90:                                         ; preds = %if.then87, %if.end83
  %60 = load i32* %max_fd, align 4
  %61 = load %struct._IO_FILE** @stdin, align 8
  %call91 = call i32 @fileno(%struct._IO_FILE* %61) #9
  %cmp92 = icmp sgt i32 %60, %call91
  br i1 %cmp92, label %cond.true94, label %cond.false95

cond.true94:                                      ; preds = %if.end90
  %62 = load i32* %max_fd, align 4
  br label %cond.end97

cond.false95:                                     ; preds = %if.end90
  %63 = load %struct._IO_FILE** @stdin, align 8
  %call96 = call i32 @fileno(%struct._IO_FILE* %63) #9
  br label %cond.end97

cond.end97:                                       ; preds = %cond.false95, %cond.true94
  %cond98 = phi i32 [ %62, %cond.true94 ], [ %call96, %cond.false95 ]
  store i32 %cond98, i32* %max_fd, align 4
  %64 = load i32* %max_fd, align 4
  %65 = load %struct._IO_FILE** @stdout, align 8
  %call99 = call i32 @fileno(%struct._IO_FILE* %65) #9
  %cmp100 = icmp sgt i32 %64, %call99
  br i1 %cmp100, label %cond.true102, label %cond.false103

cond.true102:                                     ; preds = %cond.end97
  %66 = load i32* %max_fd, align 4
  br label %cond.end105

cond.false103:                                    ; preds = %cond.end97
  %67 = load %struct._IO_FILE** @stdout, align 8
  %call104 = call i32 @fileno(%struct._IO_FILE* %67) #9
  br label %cond.end105

cond.end105:                                      ; preds = %cond.false103, %cond.true102
  %cond106 = phi i32 [ %66, %cond.true102 ], [ %call104, %cond.false103 ]
  store i32 %cond106, i32* %max_fd, align 4
  %68 = load i32* %max_fd, align 4
  %69 = load %struct._IO_FILE** @stderr, align 8
  %call107 = call i32 @fileno(%struct._IO_FILE* %69) #9
  %cmp108 = icmp sgt i32 %68, %call107
  br i1 %cmp108, label %cond.true110, label %cond.false111

cond.true110:                                     ; preds = %cond.end105
  %70 = load i32* %max_fd, align 4
  br label %cond.end113

cond.false111:                                    ; preds = %cond.end105
  %71 = load %struct._IO_FILE** @stderr, align 8
  %call112 = call i32 @fileno(%struct._IO_FILE* %71) #9
  br label %cond.end113

cond.end113:                                      ; preds = %cond.false111, %cond.true110
  %cond114 = phi i32 [ %70, %cond.true110 ], [ %call112, %cond.false111 ]
  store i32 %cond114, i32* %max_fd, align 4
  br label %if.end115

if.end115:                                        ; preds = %cond.end113, %cond.end
  store volatile i32 0, i32* @quit_pending, align 4
  %72 = load i32* %escape_char_arg.addr, align 4
  store i32 %72, i32* @escape_char1, align 4
  call void @sshbuf_init(%struct.sshbuf* @stdin_buffer)
  call void @sshbuf_init(%struct.sshbuf* @stdout_buffer)
  call void @sshbuf_init(%struct.sshbuf* @stderr_buffer)
  call void @client_init_dispatch()
  %call116 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 1, void (i32)* inttoptr (i64 1 to void (i32)*))
  %cmp117 = icmp ne void (i32)* %call116, inttoptr (i64 1 to void (i32)*)
  br i1 %cmp117, label %if.then119, label %if.end121

if.then119:                                       ; preds = %if.end115
  %call120 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 1, void (i32)* @signal_handler)
  br label %if.end121

if.end121:                                        ; preds = %if.then119, %if.end115
  %call122 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*))
  %cmp123 = icmp ne void (i32)* %call122, inttoptr (i64 1 to void (i32)*)
  br i1 %cmp123, label %if.then125, label %if.end127

if.then125:                                       ; preds = %if.end121
  %call126 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 2, void (i32)* @signal_handler)
  br label %if.end127

if.end127:                                        ; preds = %if.then125, %if.end121
  %call128 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 3, void (i32)* inttoptr (i64 1 to void (i32)*))
  %cmp129 = icmp ne void (i32)* %call128, inttoptr (i64 1 to void (i32)*)
  br i1 %cmp129, label %if.then131, label %if.end133

if.then131:                                       ; preds = %if.end127
  %call132 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 3, void (i32)* @signal_handler)
  br label %if.end133

if.end133:                                        ; preds = %if.then131, %if.end127
  %call134 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 15, void (i32)* inttoptr (i64 1 to void (i32)*))
  %cmp135 = icmp ne void (i32)* %call134, inttoptr (i64 1 to void (i32)*)
  br i1 %cmp135, label %if.then137, label %if.end139

if.then137:                                       ; preds = %if.end133
  %call138 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 15, void (i32)* @signal_handler)
  br label %if.end139

if.end139:                                        ; preds = %if.then137, %if.end133
  %call140 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 28, void (i32)* @window_change_handler)
  %73 = load i32* %have_pty.addr, align 4
  %tobool141 = icmp ne i32 %73, 0
  br i1 %tobool141, label %if.then142, label %if.end145

if.then142:                                       ; preds = %if.end139
  %74 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp143 = icmp eq i32 %74, 3
  %conv144 = zext i1 %cmp143 to i32
  call void @enter_raw_mode(i32 %conv144)
  br label %if.end145

if.end145:                                        ; preds = %if.then142, %if.end139
  %75 = load i32* @compat20, align 4
  %tobool146 = icmp ne i32 %75, 0
  br i1 %tobool146, label %if.then147, label %if.else161

if.then147:                                       ; preds = %if.end145
  %76 = load i32* %ssh2_chan_id.addr, align 4
  store i32 %76, i32* @session_ident, align 4
  %77 = load i32* @session_ident, align 4
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %79 = extractvalue { i32, i1 } %78, 0
  %80 = extractvalue { i32, i1 } %78, 1
  %81 = xor i1 %80, true
  br i1 %81, label %cont149, label %trap148

trap148:                                          ; preds = %if.then147
  call void @llvm.trap() #3
  unreachable

cont149:                                          ; preds = %if.then147
  %cmp150 = icmp ne i32 %77, %79
  br i1 %cmp150, label %if.then152, label %if.end160

if.then152:                                       ; preds = %cont149
  %82 = load i32* %escape_char_arg.addr, align 4
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %84 = extractvalue { i32, i1 } %83, 0
  %85 = extractvalue { i32, i1 } %83, 1
  %86 = xor i1 %85, true
  br i1 %86, label %cont154, label %trap153

trap153:                                          ; preds = %if.then152
  call void @llvm.trap() #3
  unreachable

cont154:                                          ; preds = %if.then152
  %cmp155 = icmp ne i32 %82, %84
  br i1 %cmp155, label %if.then157, label %if.end159

if.then157:                                       ; preds = %cont154
  %87 = load i32* @session_ident, align 4
  %88 = load i32* %escape_char_arg.addr, align 4
  %call158 = call i8* @client_new_escape_filter_ctx(i32 %88)
  call void @channel_register_filter(i32 %87, i32 (%struct.Channel.80*, i8*, i32)* @client_simple_escape_filter, i8* (%struct.Channel.80*, i8**, i32*)* null, void (i32, i8*)* @client_filter_cleanup, i8* %call158)
  br label %if.end159

if.end159:                                        ; preds = %if.then157, %cont154
  %89 = load i32* @session_ident, align 4
  call void @channel_register_cleanup(i32 %89, void (i32, i8*)* @client_channel_closed, i32 0)
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %cont149
  br label %if.end162

if.else161:                                       ; preds = %if.end145
  call void @client_check_initial_eof_on_stdin()
  br label %if.end162

if.end162:                                        ; preds = %if.else161, %if.end160
  br label %while.cond

while.cond:                                       ; preds = %if.end223, %if.end162
  %90 = load volatile i32* @quit_pending, align 4
  %tobool163 = icmp ne i32 %90, 0
  %lnot = xor i1 %tobool163, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  call void @client_process_buffered_input_packets()
  %91 = load i32* @compat20, align 4
  %tobool164 = icmp ne i32 %91, 0
  br i1 %tobool164, label %land.lhs.true165, label %if.end171

land.lhs.true165:                                 ; preds = %while.body
  %92 = load i32* @session_closed, align 4
  %tobool166 = icmp ne i32 %92, 0
  br i1 %tobool166, label %land.lhs.true167, label %if.end171

land.lhs.true167:                                 ; preds = %land.lhs.true165
  %call168 = call i32 @channel_still_open()
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.end171, label %if.then170

if.then170:                                       ; preds = %land.lhs.true167
  br label %while.end

if.end171:                                        ; preds = %land.lhs.true167, %land.lhs.true165, %while.body
  %93 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call172 = call i32 @ssh_packet_is_rekeying(%struct.ssh.68* %93)
  %tobool173 = icmp ne i32 %call172, 0
  br i1 %tobool173, label %if.then174, label %if.else175

if.then174:                                       ; preds = %if.end171
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([21 x i8]* @.str35450, i32 0, i32 0))
  br label %if.end196

if.else175:                                       ; preds = %if.end171
  %94 = load i32* @need_rekeying, align 4
  %tobool176 = icmp ne i32 %94, 0
  br i1 %tobool176, label %if.then177, label %if.else184

if.then177:                                       ; preds = %if.else175
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([14 x i8]* @.str36451, i32 0, i32 0))
  %95 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call178 = call i32 @kex_start_rekex(%struct.ssh.68* %95)
  store i32 %call178, i32* %r, align 4
  %cmp179 = icmp ne i32 %call178, 0
  br i1 %cmp179, label %if.then181, label %if.end183

if.then181:                                       ; preds = %if.then177
  %96 = load i32* %r, align 4
  %call182 = call i8* @ssh_err(i32 %96)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str37452, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.client_loop, i32 0, i32 0), i8* %call182) #11
  unreachable

if.end183:                                        ; preds = %if.then177
  store i32 0, i32* @need_rekeying, align 4
  br label %if.end195

if.else184:                                       ; preds = %if.else175
  %97 = load i32* @compat20, align 4
  %tobool185 = icmp ne i32 %97, 0
  br i1 %tobool185, label %if.end187, label %if.then186

if.then186:                                       ; preds = %if.else184
  call void @client_make_packets_from_stdin_data()
  br label %if.end187

if.end187:                                        ; preds = %if.then186, %if.else184
  %98 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call188 = call i32 @ssh_packet_not_very_much_data_to_write(%struct.ssh.68* %98)
  %tobool189 = icmp ne i32 %call188, 0
  br i1 %tobool189, label %if.then190, label %if.end191

if.then190:                                       ; preds = %if.end187
  call void @channel_output_poll()
  br label %if.end191

if.end191:                                        ; preds = %if.then190, %if.end187
  call void @client_check_window_change()
  %99 = load volatile i32* @quit_pending, align 4
  %tobool192 = icmp ne i32 %99, 0
  br i1 %tobool192, label %if.then193, label %if.end194

if.then193:                                       ; preds = %if.end191
  br label %while.end

if.end194:                                        ; preds = %if.end191
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.end183
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then174
  %100 = load i32* %max_fd, align 4
  store i32 %100, i32* %max_fd2, align 4
  %101 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call197 = call i32 @ssh_packet_is_rekeying(%struct.ssh.68* %101)
  call void @client_wait_until_can_do_something(%struct.fd_set** %readset, %struct.fd_set** %writeset, i32* %max_fd2, i32* %nalloc, i32 %call197)
  %102 = load volatile i32* @quit_pending, align 4
  %tobool198 = icmp ne i32 %102, 0
  br i1 %tobool198, label %if.then199, label %if.end200

if.then199:                                       ; preds = %if.end196
  br label %while.end

if.end200:                                        ; preds = %if.end196
  %103 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call201 = call i32 @ssh_packet_is_rekeying(%struct.ssh.68* %103)
  %tobool202 = icmp ne i32 %call201, 0
  br i1 %tobool202, label %if.end204, label %if.then203

if.then203:                                       ; preds = %if.end200
  %104 = load %struct.fd_set** %readset, align 8
  %105 = load %struct.fd_set** %writeset, align 8
  call void @channel_after_select(%struct.fd_set* %104, %struct.fd_set* %105)
  br label %if.end204

if.end204:                                        ; preds = %if.then203, %if.end200
  %106 = load %struct.fd_set** %readset, align 8
  call void @client_process_net_input(%struct.fd_set* %106)
  %107 = load volatile i32* @quit_pending, align 4
  %tobool205 = icmp ne i32 %107, 0
  br i1 %tobool205, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.end204
  br label %while.end

if.end207:                                        ; preds = %if.end204
  %108 = load i32* @compat20, align 4
  %tobool208 = icmp ne i32 %108, 0
  br i1 %tobool208, label %if.end210, label %if.then209

if.then209:                                       ; preds = %if.end207
  %109 = load %struct.fd_set** %readset, align 8
  call void @client_process_input(%struct.fd_set* %109)
  %110 = load %struct.fd_set** %writeset, align 8
  call void @client_process_output(%struct.fd_set* %110)
  br label %if.end210

if.end210:                                        ; preds = %if.then209, %if.end207
  %111 = load i32* @connection_out, align 4
  %112 = load %struct.fd_set** %writeset, align 8
  %call211 = call i32 @kludge_FD_ISSET(i32 %111, %struct.fd_set* %112)
  %tobool212 = icmp ne i32 %call211, 0
  br i1 %tobool212, label %if.then213, label %if.end214

if.then213:                                       ; preds = %if.end210
  call void @packet_write_poll()
  br label %if.end214

if.end214:                                        ; preds = %if.then213, %if.end210
  %113 = load i64* @control_persist_exit_time, align 8
  %cmp215 = icmp sgt i64 %113, 0
  br i1 %cmp215, label %if.then217, label %if.end223

if.then217:                                       ; preds = %if.end214
  %call218 = call i64 @monotime()
  %114 = load i64* @control_persist_exit_time, align 8
  %cmp219 = icmp sge i64 %call218, %114
  br i1 %cmp219, label %if.then221, label %if.end222

if.then221:                                       ; preds = %if.then217
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([31 x i8]* @.str38453, i32 0, i32 0))
  br label %while.end

if.end222:                                        ; preds = %if.then217
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %if.end214
  br label %while.cond

while.end:                                        ; preds = %if.then221, %if.then206, %if.then199, %if.then193, %if.then170, %while.cond
  %115 = load %struct.fd_set** %readset, align 8
  %116 = bitcast %struct.fd_set* %115 to i8*
  call void @free(i8* %116) #9
  %117 = load %struct.fd_set** %writeset, align 8
  %118 = bitcast %struct.fd_set* %117 to i8*
  call void @free(i8* %118) #9
  %call224 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 28, void (i32)* null)
  %119 = load i32* @compat20, align 4
  %tobool225 = icmp ne i32 %119, 0
  br i1 %tobool225, label %if.then226, label %if.end227

if.then226:                                       ; preds = %while.end
  %120 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %120, i8 zeroext 1)
  %121 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %121, i32 11)
  %122 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %122, i8* getelementptr inbounds ([21 x i8]* @.str39454, i32 0, i32 0))
  %123 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %123, i8* getelementptr inbounds ([1 x i8]* @.str13428, i32 0, i32 0))
  %124 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %124)
  call void @packet_write_wait()
  br label %if.end227

if.end227:                                        ; preds = %if.then226, %while.end
  call void @channel_free_all()
  %125 = load i32* %have_pty.addr, align 4
  %tobool228 = icmp ne i32 %125, 0
  br i1 %tobool228, label %if.then229, label %if.end232

if.then229:                                       ; preds = %if.end227
  %126 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp230 = icmp eq i32 %126, 3
  %conv231 = zext i1 %cmp230 to i32
  call void @leave_raw_mode(i32 %conv231)
  br label %if.end232

if.end232:                                        ; preds = %if.then229, %if.end227
  %127 = load %struct._IO_FILE** @stdin, align 8
  %call233 = call i32 @fileno(%struct._IO_FILE* %127) #9
  %call234 = call i32 @isatty(i32 %call233) #9
  %tobool235 = icmp ne i32 %call234, 0
  br i1 %tobool235, label %if.end239, label %if.then236

if.then236:                                       ; preds = %if.end232
  %128 = load %struct._IO_FILE** @stdin, align 8
  %call237 = call i32 @fileno(%struct._IO_FILE* %128) #9
  %call238 = call i32 @unset_nonblock(i32 %call237)
  br label %if.end239

if.end239:                                        ; preds = %if.then236, %if.end232
  %129 = load %struct._IO_FILE** @stdout, align 8
  %call240 = call i32 @fileno(%struct._IO_FILE* %129) #9
  %call241 = call i32 @isatty(i32 %call240) #9
  %tobool242 = icmp ne i32 %call241, 0
  br i1 %tobool242, label %if.end246, label %if.then243

if.then243:                                       ; preds = %if.end239
  %130 = load %struct._IO_FILE** @stdout, align 8
  %call244 = call i32 @fileno(%struct._IO_FILE* %130) #9
  %call245 = call i32 @unset_nonblock(i32 %call244)
  br label %if.end246

if.end246:                                        ; preds = %if.then243, %if.end239
  %131 = load %struct._IO_FILE** @stderr, align 8
  %call247 = call i32 @fileno(%struct._IO_FILE* %131) #9
  %call248 = call i32 @isatty(i32 %call247) #9
  %tobool249 = icmp ne i32 %call248, 0
  br i1 %tobool249, label %if.end253, label %if.then250

if.then250:                                       ; preds = %if.end246
  %132 = load %struct._IO_FILE** @stderr, align 8
  %call251 = call i32 @fileno(%struct._IO_FILE* %132) #9
  %call252 = call i32 @unset_nonblock(i32 %call251)
  br label %if.end253

if.end253:                                        ; preds = %if.then250, %if.end246
  %133 = load i32* @no_shell_flag, align 4
  %tobool254 = icmp ne i32 %133, 0
  br i1 %tobool254, label %land.lhs.true255, label %if.end259

land.lhs.true255:                                 ; preds = %if.end253
  %134 = load volatile i32* @received_signal, align 4
  %cmp256 = icmp eq i32 %134, 15
  br i1 %cmp256, label %if.then258, label %if.end259

if.then258:                                       ; preds = %land.lhs.true255
  store volatile i32 0, i32* @received_signal, align 4
  store i32 0, i32* @exit_status, align 4
  br label %if.end259

if.end259:                                        ; preds = %if.then258, %land.lhs.true255, %if.end253
  %135 = load volatile i32* @received_signal, align 4
  %tobool260 = icmp ne i32 %135, 0
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.end259
  %136 = load volatile i32* @received_signal, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str40455, i32 0, i32 0), i32 %136) #11
  unreachable

if.end262:                                        ; preds = %if.end259
  %137 = load i32* %have_pty.addr, align 4
  %tobool263 = icmp ne i32 %137, 0
  br i1 %tobool263, label %land.lhs.true264, label %if.end273

land.lhs.true264:                                 ; preds = %if.end262
  %138 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp265 = icmp ne i32 %138, 0
  br i1 %cmp265, label %if.then267, label %if.end273

if.then267:                                       ; preds = %land.lhs.true264
  %arraydecay = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %139 = load i8** @host, align 8
  %call268 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 100, i8* getelementptr inbounds ([30 x i8]* @.str41456, i32 0, i32 0), i8* %139) #9
  %arraydecay269 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %arraydecay270 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %call271 = call i64 @strlen(i8* %arraydecay270) #12
  %conv272 = trunc i64 %call271 to i32
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %arraydecay269, i32 %conv272)
  br label %if.end273

if.end273:                                        ; preds = %if.then267, %land.lhs.true264, %if.end262
  %call274 = call i64 @sshbuf_len(%struct.sshbuf* @stdout_buffer)
  %conv275 = trunc i64 %call274 to i32
  %cmp276 = icmp ugt i32 %conv275, 0
  br i1 %cmp276, label %if.then278, label %if.end296

if.then278:                                       ; preds = %if.end273
  %140 = load %struct._IO_FILE** @stdout, align 8
  %call279 = call i32 @fileno(%struct._IO_FILE* %140) #9
  %call280 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @stdout_buffer)
  %call281 = call i64 @sshbuf_len(%struct.sshbuf* @stdout_buffer)
  %conv282 = trunc i64 %call281 to i32
  %conv283 = zext i32 %conv282 to i64
  %call284 = call i64 @atomicio(i64 (i32, i8*, i64)* @write, i32 %call279, i8* %call280, i64 %conv283)
  %conv285 = trunc i64 %call284 to i32
  store i32 %conv285, i32* %len, align 4
  %141 = load i32* %len, align 4
  %cmp286 = icmp slt i32 %141, 0
  br i1 %cmp286, label %if.then293, label %lor.lhs.false288

lor.lhs.false288:                                 ; preds = %if.then278
  %142 = load i32* %len, align 4
  %call289 = call i64 @sshbuf_len(%struct.sshbuf* @stdout_buffer)
  %conv290 = trunc i64 %call289 to i32
  %cmp291 = icmp ne i32 %142, %conv290
  br i1 %cmp291, label %if.then293, label %if.else294

if.then293:                                       ; preds = %lor.lhs.false288, %if.then278
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str42457, i32 0, i32 0))
  br label %if.end295

if.else294:                                       ; preds = %lor.lhs.false288
  %143 = load i32* %len, align 4
  call void @buffer_consume(%struct.sshbuf* @stdout_buffer, i32 %143)
  br label %if.end295

if.end295:                                        ; preds = %if.else294, %if.then293
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.end273
  %call297 = call i64 @sshbuf_len(%struct.sshbuf* @stderr_buffer)
  %conv298 = trunc i64 %call297 to i32
  %cmp299 = icmp ugt i32 %conv298, 0
  br i1 %cmp299, label %if.then301, label %if.end319

if.then301:                                       ; preds = %if.end296
  %144 = load %struct._IO_FILE** @stderr, align 8
  %call302 = call i32 @fileno(%struct._IO_FILE* %144) #9
  %call303 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @stderr_buffer)
  %call304 = call i64 @sshbuf_len(%struct.sshbuf* @stderr_buffer)
  %conv305 = trunc i64 %call304 to i32
  %conv306 = zext i32 %conv305 to i64
  %call307 = call i64 @atomicio(i64 (i32, i8*, i64)* @write, i32 %call302, i8* %call303, i64 %conv306)
  %conv308 = trunc i64 %call307 to i32
  store i32 %conv308, i32* %len, align 4
  %145 = load i32* %len, align 4
  %cmp309 = icmp slt i32 %145, 0
  br i1 %cmp309, label %if.then316, label %lor.lhs.false311

lor.lhs.false311:                                 ; preds = %if.then301
  %146 = load i32* %len, align 4
  %call312 = call i64 @sshbuf_len(%struct.sshbuf* @stderr_buffer)
  %conv313 = trunc i64 %call312 to i32
  %cmp314 = icmp ne i32 %146, %conv313
  br i1 %cmp314, label %if.then316, label %if.else317

if.then316:                                       ; preds = %lor.lhs.false311, %if.then301
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str43458, i32 0, i32 0))
  br label %if.end318

if.else317:                                       ; preds = %lor.lhs.false311
  %147 = load i32* %len, align 4
  call void @buffer_consume(%struct.sshbuf* @stderr_buffer, i32 %147)
  br label %if.end318

if.end318:                                        ; preds = %if.else317, %if.then316
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.end296
  %arraydecay320 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  call void @explicit_bzero(i8* %arraydecay320, i64 100)
  call void @sshbuf_free(%struct.sshbuf* @stdin_buffer)
  call void @sshbuf_free(%struct.sshbuf* @stdout_buffer)
  call void @sshbuf_free(%struct.sshbuf* @stderr_buffer)
  %call321 = call double @get_current_time()
  %148 = load double* %start_time, align 8
  %sub = fsub double %call321, %148
  store double %sub, double* %total_time, align 8
  %149 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_packet_get_bytes(%struct.ssh.68* %149, i64* %ibytes, i64* %obytes)
  %150 = load i64* %obytes, align 8
  %151 = load i64* %ibytes, align 8
  %152 = load double* %total_time, align 8
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([61 x i8]* @.str44459, i32 0, i32 0), i64 %150, i64 %151, double %152)
  %153 = load double* %total_time, align 8
  %cmp322 = fcmp ogt double %153, 0.000000e+00
  br i1 %cmp322, label %if.then324, label %if.end329

if.then324:                                       ; preds = %if.end319
  %154 = load i64* %obytes, align 8
  %conv325 = uitofp i64 %154 to double
  %155 = load double* %total_time, align 8
  %div326 = fdiv double %conv325, %155
  %156 = load i64* %ibytes, align 8
  %conv327 = uitofp i64 %156 to double
  %157 = load double* %total_time, align 8
  %div328 = fdiv double %conv327, %157
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([43 x i8]* @.str45460, i32 0, i32 0), double %div326, double %div328)
  br label %if.end329

if.end329:                                        ; preds = %if.then324, %if.end319
  %158 = load i32* @exit_status, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([15 x i8]* @.str46461, i32 0, i32 0), i32 %158)
  %159 = load i32* @exit_status, align 4
  ret i32 %159
}

declare i32 @pledge(i8*, i8**) #1

; Function Attrs: nounwind
declare i64 @clock() #4

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #2

declare i32 @ssh_packet_get_connection_in(%struct.ssh.68*) #1

declare i32 @ssh_packet_get_connection_out(%struct.ssh.68*) #1

declare void @channel_register_filter(i32, i32 (%struct.Channel.80*, i8*, i32)*, i8* (%struct.Channel.80*, i8**, i32*)*, void (i32, i8*)*, i8*) #1

declare i32 @channel_still_open() #1

declare i32 @ssh_packet_is_rekeying(%struct.ssh.68*) #1

declare i32 @kex_start_rekex(%struct.ssh.68*) #1

declare i32 @ssh_packet_not_very_much_data_to_write(%struct.ssh.68*) #1

declare void @channel_output_poll() #1

declare void @channel_after_select(%struct.fd_set*, %struct.fd_set*) #1

declare i32 @kludge_FD_ISSET(i32, %struct.fd_set*) #1

declare void @packet_write_poll() #1

declare void @channel_free_all() #1

declare i32 @unset_nonblock(i32) #1

declare i64 @atomicio(i64 (i32, i8*, i64)*, i32, i8*, i64) #1

declare i64 @write(i32, i8*, i64) #1

declare void @buffer_consume(%struct.sshbuf*, i32) #1

declare void @sshbuf_free(%struct.sshbuf*) #1

declare void @ssh_packet_get_bytes(%struct.ssh.68*, i64*, i64*) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @client_request_tun_fwd(i32 %tun_mode, i32 %local_tun, i32 %remote_tun) #0 {
entry:
  %retval = alloca i32, align 4
  %tun_mode.addr = alloca i32, align 4
  %local_tun.addr = alloca i32, align 4
  %remote_tun.addr = alloca i32, align 4
  %c = alloca %struct.Channel.80*, align 8
  %fd = alloca i32, align 4
  store i32 %tun_mode, i32* %tun_mode.addr, align 4
  store i32 %local_tun, i32* %local_tun.addr, align 4
  store i32 %remote_tun, i32* %remote_tun.addr, align 4
  %0 = load i32* %tun_mode.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @compat20, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.end2, label %if.then1

if.then1:                                         ; preds = %if.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([50 x i8]* @.str47462, i32 0, i32 0))
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %if.then1
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then1
  store i32 %3, i32* %retval
  br label %return

if.end2:                                          ; preds = %if.end
  %6 = load i32* %local_tun.addr, align 4
  %7 = load i32* %tun_mode.addr, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([34 x i8]* @.str48463, i32 0, i32 0), i32 %6, i32 %7)
  %8 = load i32* %local_tun.addr, align 4
  %9 = load i32* %tun_mode.addr, align 4
  %call = call i32 @tun_open(i32 %8, i32 %9)
  store i32 %call, i32* %fd, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %11 = extractvalue { i32, i1 } %10, 0
  %12 = extractvalue { i32, i1 } %10, 1
  %13 = xor i1 %12, true
  br i1 %13, label %cont4, label %trap3

trap3:                                            ; preds = %if.end2
  call void @llvm.trap() #3
  unreachable

cont4:                                            ; preds = %if.end2
  %cmp5 = icmp eq i32 %call, %11
  br i1 %cmp5, label %if.then6, label %if.end9

if.then6:                                         ; preds = %cont4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([27 x i8]* @.str49464, i32 0, i32 0))
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %15 = extractvalue { i32, i1 } %14, 0
  %16 = extractvalue { i32, i1 } %14, 1
  %17 = xor i1 %16, true
  br i1 %17, label %cont8, label %trap7

trap7:                                            ; preds = %if.then6
  call void @llvm.trap() #3
  unreachable

cont8:                                            ; preds = %if.then6
  store i32 %15, i32* %retval
  br label %return

if.end9:                                          ; preds = %cont4
  %18 = load i32* %fd, align 4
  %19 = load i32* %fd, align 4
  %20 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %21 = extractvalue { i32, i1 } %20, 0
  %22 = extractvalue { i32, i1 } %20, 1
  %23 = xor i1 %22, true
  br i1 %23, label %cont11, label %trap10

trap10:                                           ; preds = %if.end9
  call void @llvm.trap() #3
  unreachable

cont11:                                           ; preds = %if.end9
  %24 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %25 = extractvalue { i32, i1 } %24, 0
  %26 = extractvalue { i32, i1 } %24, 1
  %27 = xor i1 %26, true
  br i1 %27, label %cont13, label %trap12

trap12:                                           ; preds = %cont11
  call void @llvm.trap() #3
  unreachable

cont13:                                           ; preds = %cont11
  %28 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 64, i32 %25)
  %29 = extractvalue { i32, i1 } %28, 0
  %30 = extractvalue { i32, i1 } %28, 1
  %31 = xor i1 %30, true
  br i1 %31, label %cont15, label %trap14

trap14:                                           ; preds = %cont13
  call void @llvm.trap() #3
  unreachable

cont15:                                           ; preds = %cont13
  %32 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %33 = extractvalue { i32, i1 } %32, 0
  %34 = extractvalue { i32, i1 } %32, 1
  %35 = xor i1 %34, true
  br i1 %35, label %cont17, label %trap16

trap16:                                           ; preds = %cont15
  call void @llvm.trap() #3
  unreachable

cont17:                                           ; preds = %cont15
  %call18 = call %struct.Channel.80* bitcast (%struct.Channel* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)* @channel_new to %struct.Channel.80* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)*)(i8* getelementptr inbounds ([4 x i8]* @.str50465, i32 0, i32 0), i32 3, i32 %18, i32 %19, i32 %21, i32 %29, i32 %33, i32 0, i8* getelementptr inbounds ([4 x i8]* @.str50465, i32 0, i32 0), i32 1)
  store %struct.Channel.80* %call18, %struct.Channel.80** %c, align 8
  %36 = load %struct.Channel.80** %c, align 8
  %datagram = getelementptr inbounds %struct.Channel.80* %36, i32 0, i32 42
  store i32 1, i32* %datagram, align 4
  %37 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  %cmp19 = icmp eq i32 %37, 1
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %cont17
  %38 = load %struct.Channel.80** %c, align 8
  %self = getelementptr inbounds %struct.Channel.80* %38, i32 0, i32 1
  %39 = load i32* %self, align 4
  call void @channel_register_filter(i32 %39, i32 (%struct.Channel.80*, i8*, i32)* @sys_tun_infilter, i8* (%struct.Channel.80*, i8**, i32*)* @sys_tun_outfilter, void (i32, i8*)* null, i8* null)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %cont17
  %40 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %40, i8 zeroext 90)
  %41 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %41, i8* getelementptr inbounds ([16 x i8]* @.str51466, i32 0, i32 0))
  %42 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %43 = load %struct.Channel.80** %c, align 8
  %self22 = getelementptr inbounds %struct.Channel.80* %43, i32 0, i32 1
  %44 = load i32* %self22, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %42, i32 %44)
  %45 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %46 = load %struct.Channel.80** %c, align 8
  %local_window_max = getelementptr inbounds %struct.Channel.80* %46, i32 0, i32 27
  %47 = load i32* %local_window_max, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %45, i32 %47)
  %48 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %49 = load %struct.Channel.80** %c, align 8
  %local_maxpacket = getelementptr inbounds %struct.Channel.80* %49, i32 0, i32 29
  %50 = load i32* %local_maxpacket, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %48, i32 %50)
  %51 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %52 = load i32* %tun_mode.addr, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %51, i32 %52)
  %53 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %54 = load i32* %remote_tun.addr, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %53, i32 %54)
  %55 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %55)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end21, %cont8, %cont, %if.then
  %56 = load i32* %retval
  ret i32 %56
}

declare i32 @tun_open(i32, i32) #1

declare i32 @sys_tun_infilter(%struct.Channel.80*, i8*, i32) #1

declare i8* @sys_tun_outfilter(%struct.Channel.80*, i8**, i32*) #1

; Function Attrs: nounwind sspreq uwtable
define void @client_session2_setup(i32 %id, i32 %want_tty, i32 %want_subsystem, i8* %term, %struct.termios* %tiop, i32 %in_fd, %struct.sshbuf* %cmd, i8** %env) #0 {
entry:
  %id.addr = alloca i32, align 4
  %want_tty.addr = alloca i32, align 4
  %want_subsystem.addr = alloca i32, align 4
  %term.addr = alloca i8*, align 8
  %tiop.addr = alloca %struct.termios*, align 8
  %in_fd.addr = alloca i32, align 4
  %cmd.addr = alloca %struct.sshbuf*, align 8
  %env.addr = alloca i8**, align 8
  %len = alloca i32, align 4
  %c = alloca %struct.Channel.80*, align 8
  %ws = alloca %struct.winsize, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %matched = alloca i32, align 4
  %name = alloca i8*, align 8
  %val = alloca i8*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i32 %want_tty, i32* %want_tty.addr, align 4
  store i32 %want_subsystem, i32* %want_subsystem.addr, align 4
  store i8* %term, i8** %term.addr, align 8
  store %struct.termios* %tiop, %struct.termios** %tiop.addr, align 8
  store i32 %in_fd, i32* %in_fd.addr, align 4
  store %struct.sshbuf* %cmd, %struct.sshbuf** %cmd.addr, align 8
  store i8** %env, i8*** %env.addr, align 8
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  %0 = load i32* %id.addr, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([10 x i8]* @.str52467, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_session2_setup, i32 0, i32 0), i32 %0)
  %1 = load i32* %id.addr, align 4
  %call = call %struct.Channel.80* @channel_lookup(i32 %1)
  store %struct.Channel.80* %call, %struct.Channel.80** %c, align 8
  %cmp = icmp eq %struct.Channel.80* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32* %id.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([51 x i8]* @.str53468, i32 0, i32 0), i32 %2) #11
  unreachable

if.end:                                           ; preds = %entry
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %4 = load i32* %want_tty.addr, align 4
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 24), align 4
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 25), align 4
  call void bitcast (void (%struct.ssh*, i32, i32, i32)* @ssh_packet_set_interactive to void (%struct.ssh.68*, i32, i32, i32)*)(%struct.ssh.68* %3, i32 %4, i32 %5, i32 %6)
  %7 = load i32* %want_tty.addr, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then1, label %if.end15

if.then1:                                         ; preds = %if.end
  %8 = load i32* %in_fd.addr, align 4
  %call2 = call i32 (i32, i64, ...)* @ioctl(i32 %8, i64 21523, %struct.winsize* %ws) #9
  %cmp3 = icmp slt i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.then1
  %9 = bitcast %struct.winsize* %ws to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 8, i32 2, i1 false)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.then1
  %10 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %10, i8* getelementptr inbounds ([8 x i8]* @.str54469, i32 0, i32 0), i32 1)
  %11 = load i32* %id.addr, align 4
  call void @client_expect_confirm(i32 %11, i8* getelementptr inbounds ([15 x i8]* @.str55470, i32 0, i32 0), i32 2)
  %12 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %13 = load i8** %term.addr, align 8
  %cmp6 = icmp ne i8* %13, null
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end5
  %14 = load i8** %term.addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %14, %cond.true ], [ getelementptr inbounds ([1 x i8]* @.str13428, i32 0, i32 0), %cond.false ]
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %12, i8* %cond)
  %15 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_col = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 1
  %16 = load i16* %ws_col, align 2
  %conv = zext i16 %16 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %15, i32 %conv)
  %17 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_row = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 0
  %18 = load i16* %ws_row, align 2
  %conv7 = zext i16 %18 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %17, i32 %conv7)
  %19 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_xpixel = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 2
  %20 = load i16* %ws_xpixel, align 2
  %conv8 = zext i16 %20 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %19, i32 %conv8)
  %21 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_ypixel = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 3
  %22 = load i16* %ws_ypixel, align 2
  %conv9 = zext i16 %22 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %21, i32 %conv9)
  %23 = load %struct.termios** %tiop.addr, align 8
  %cmp10 = icmp eq %struct.termios* %23, null
  br i1 %cmp10, label %if.then12, label %if.end14

if.then12:                                        ; preds = %cond.end
  %call13 = call %struct.termios* @get_saved_tio()
  store %struct.termios* %call13, %struct.termios** %tiop.addr, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %cond.end
  %24 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %25 = extractvalue { i32, i1 } %24, 0
  %26 = extractvalue { i32, i1 } %24, 1
  %27 = xor i1 %26, true
  br i1 %27, label %cont, label %trap

trap:                                             ; preds = %if.end14
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end14
  %28 = load %struct.termios** %tiop.addr, align 8
  call void @tty_make_modes(i32 %25, %struct.termios* %28)
  %29 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %29)
  %30 = load %struct.Channel.80** %c, align 8
  %client_tty = getelementptr inbounds %struct.Channel.80* %30, i32 0, i32 12
  store i32 1, i32* %client_tty, align 4
  br label %if.end15

if.end15:                                         ; preds = %cont, %if.end
  %31 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 75), align 4
  %cmp16 = icmp ne i32 %31, 0
  br i1 %cmp16, label %land.lhs.true, label %if.end50

land.lhs.true:                                    ; preds = %if.end15
  %32 = load i8*** %env.addr, align 8
  %cmp18 = icmp ne i8** %32, null
  br i1 %cmp18, label %if.then20, label %if.end50

if.then20:                                        ; preds = %land.lhs.true
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([21 x i8]* @.str56471, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont48, %if.then20
  %33 = load i32* %i, align 4
  %idxprom = sext i32 %33 to i64
  %34 = load i8*** %env.addr, align 8
  %arrayidx = getelementptr inbounds i8** %34, i64 %idxprom
  %35 = load i8** %arrayidx, align 8
  %cmp21 = icmp ne i8* %35, null
  br i1 %cmp21, label %for.body, label %for.end49

for.body:                                         ; preds = %for.cond
  %36 = load i32* %i, align 4
  %idxprom23 = sext i32 %36 to i64
  %37 = load i8*** %env.addr, align 8
  %arrayidx24 = getelementptr inbounds i8** %37, i64 %idxprom23
  %38 = load i8** %arrayidx24, align 8
  %call25 = call i8* @xstrdup(i8* %38)
  store i8* %call25, i8** %name, align 8
  %39 = load i8** %name, align 8
  %call26 = call i8* @strchr(i8* %39, i32 61) #12
  store i8* %call26, i8** %val, align 8
  %cmp27 = icmp eq i8* %call26, null
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %for.body
  %40 = load i8** %name, align 8
  call void @free(i8* %40) #9
  br label %for.inc46

if.end30:                                         ; preds = %for.body
  %41 = load i8** %val, align 8
  %incdec.ptr = getelementptr inbounds i8* %41, i32 1
  store i8* %incdec.ptr, i8** %val, align 8
  store i8 0, i8* %41, align 1
  store i32 0, i32* %matched, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %cont42, %if.end30
  %42 = load i32* %j, align 4
  %43 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 75), align 4
  %cmp32 = icmp slt i32 %42, %43
  br i1 %cmp32, label %for.body34, label %for.end

for.body34:                                       ; preds = %for.cond31
  %44 = load i8** %name, align 8
  %45 = load i32* %j, align 4
  %idxprom35 = sext i32 %45 to i64
  %arrayidx36 = getelementptr inbounds [256 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 76), i32 0, i64 %idxprom35
  %46 = load i8** %arrayidx36, align 8
  %call37 = call i32 @match_pattern(i8* %44, i8* %46)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %for.body34
  store i32 1, i32* %matched, align 4
  br label %for.end

if.end40:                                         ; preds = %for.body34
  br label %for.inc

for.inc:                                          ; preds = %if.end40
  %47 = load i32* %j, align 4
  %48 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 1)
  %49 = extractvalue { i32, i1 } %48, 0
  %50 = extractvalue { i32, i1 } %48, 1
  %51 = xor i1 %50, true
  br i1 %51, label %cont42, label %trap41

trap41:                                           ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont42:                                           ; preds = %for.inc
  store i32 %49, i32* %j, align 4
  br label %for.cond31

for.end:                                          ; preds = %if.then39, %for.cond31
  %52 = load i32* %matched, align 4
  %tobool43 = icmp ne i32 %52, 0
  br i1 %tobool43, label %if.end45, label %if.then44

if.then44:                                        ; preds = %for.end
  %53 = load i8** %name, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([15 x i8]* @.str57472, i32 0, i32 0), i8* %53)
  %54 = load i8** %name, align 8
  call void @free(i8* %54) #9
  br label %for.inc46

if.end45:                                         ; preds = %for.end
  %55 = load i8** %name, align 8
  %56 = load i8** %val, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([20 x i8]* @.str58473, i32 0, i32 0), i8* %55, i8* %56)
  %57 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %57, i8* getelementptr inbounds ([4 x i8]* @.str59474, i32 0, i32 0), i32 0)
  %58 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %59 = load i8** %name, align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %58, i8* %59)
  %60 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %61 = load i8** %val, align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %60, i8* %61)
  %62 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %62)
  %63 = load i8** %name, align 8
  call void @free(i8* %63) #9
  br label %for.inc46

for.inc46:                                        ; preds = %if.end45, %if.then44, %if.then29
  %64 = load i32* %i, align 4
  %65 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 1)
  %66 = extractvalue { i32, i1 } %65, 0
  %67 = extractvalue { i32, i1 } %65, 1
  %68 = xor i1 %67, true
  br i1 %68, label %cont48, label %trap47

trap47:                                           ; preds = %for.inc46
  call void @llvm.trap() #3
  unreachable

cont48:                                           ; preds = %for.inc46
  store i32 %66, i32* %i, align 4
  br label %for.cond

for.end49:                                        ; preds = %for.cond
  br label %if.end50

if.end50:                                         ; preds = %for.end49, %land.lhs.true, %if.end15
  %69 = load %struct.sshbuf** %cmd.addr, align 8
  %call51 = call i64 @sshbuf_len(%struct.sshbuf* %69)
  %conv52 = trunc i64 %call51 to i32
  store i32 %conv52, i32* %len, align 4
  %70 = load i32* %len, align 4
  %cmp53 = icmp sgt i32 %70, 0
  br i1 %cmp53, label %if.then55, label %if.else68

if.then55:                                        ; preds = %if.end50
  %71 = load i32* %len, align 4
  %cmp56 = icmp sgt i32 %71, 900
  br i1 %cmp56, label %if.then58, label %if.end59

if.then58:                                        ; preds = %if.then55
  store i32 900, i32* %len, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.then58, %if.then55
  %72 = load i32* %want_subsystem.addr, align 4
  %tobool60 = icmp ne i32 %72, 0
  br i1 %tobool60, label %if.then61, label %if.else

if.then61:                                        ; preds = %if.end59
  %73 = load i32* %len, align 4
  %74 = load %struct.sshbuf** %cmd.addr, align 8
  %call62 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %74)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([24 x i8]* @.str60475, i32 0, i32 0), i32 %73, i8* %call62)
  %75 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %75, i8* getelementptr inbounds ([10 x i8]* @.str61476, i32 0, i32 0), i32 1)
  %76 = load i32* %id.addr, align 4
  call void @client_expect_confirm(i32 %76, i8* getelementptr inbounds ([10 x i8]* @.str61476, i32 0, i32 0), i32 1)
  br label %if.end64

if.else:                                          ; preds = %if.end59
  %77 = load i32* %len, align 4
  %78 = load %struct.sshbuf** %cmd.addr, align 8
  %call63 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %78)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([22 x i8]* @.str62477, i32 0, i32 0), i32 %77, i8* %call63)
  %79 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %79, i8* getelementptr inbounds ([5 x i8]* @.str63478, i32 0, i32 0), i32 1)
  %80 = load i32* %id.addr, align 4
  call void @client_expect_confirm(i32 %80, i8* getelementptr inbounds ([5 x i8]* @.str63478, i32 0, i32 0), i32 1)
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.then61
  %81 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %82 = load %struct.sshbuf** %cmd.addr, align 8
  %call65 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %82)
  %83 = load %struct.sshbuf** %cmd.addr, align 8
  %call66 = call i64 @sshbuf_len(%struct.sshbuf* %83)
  %conv67 = trunc i64 %call66 to i32
  call void bitcast (void (%struct.ssh*, i8*, i32)* @ssh_packet_put_string to void (%struct.ssh.68*, i8*, i32)*)(%struct.ssh.68* %81, i8* %call65, i32 %conv67)
  %84 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %84)
  br label %if.end69

if.else68:                                        ; preds = %if.end50
  %85 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %85, i8* getelementptr inbounds ([6 x i8]* @.str64479, i32 0, i32 0), i32 1)
  %86 = load i32* %id.addr, align 4
  call void @client_expect_confirm(i32 %86, i8* getelementptr inbounds ([6 x i8]* @.str64479, i32 0, i32 0), i32 1)
  %87 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %87)
  br label %if.end69

if.end69:                                         ; preds = %if.else68, %if.end64
  ret void
}

declare %struct.Channel.80* @channel_lookup(i32) #1

; Function Attrs: nounwind sspreq uwtable
define void @client_stop_mux() #0 {
entry:
  %0 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp = icmp ne i8* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @muxserver_sock, align 4
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %land.lhs.true
  %cmp1 = icmp ne i32 %1, %3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %6 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call = call i32 @unlink(i8* %6) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %cont, %entry
  %7 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 79), align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32* @no_shell_flag, align 4
  %tobool2 = icmp ne i32 %8, 0
  br i1 %tobool2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 1, i32* @session_closed, align 4
  call void (i8*, ...)* @setproctitle(i8* getelementptr inbounds ([14 x i8]* @.str65480, i32 0, i32 0))
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %lor.lhs.false
  ret void
}

; Function Attrs: noreturn nounwind sspreq uwtable
define void @cleanup_exit(i32 %i) #10 {
entry:
  %i.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp = icmp eq i32 %0, 3
  %conv = zext i1 %cmp to i32
  call void @leave_raw_mode(i32 %conv)
  call void @leave_non_blocking()
  %1 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp1 = icmp ne i8* %1, null
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* @muxserver_sock, align 4
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %land.lhs.true
  %cmp3 = icmp ne i32 %2, %4
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %7 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call = call i32 @unlink(i8* %7) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %cont, %entry
  call void @ssh_kill_proxy_command()
  %8 = load i32* %i.addr, align 4
  call void @_exit(i32 %8) #11
  unreachable

return:                                           ; No predecessors!
  ret void
}

declare void @ssh_dispatch_set(%struct.ssh.68*, i32, i32 (i32, i32, i8*)*) #1

declare i32 @channel_input_ieof(i32, i32, i8*) #1

declare i32 @channel_input_oclose(i32, i32, i8*) #1

declare void @ssh_dispatch_init(%struct.ssh.68*, i32 (i32, i32, i8*)*) #1

declare i32 @channel_input_close(i32, i32, i8*) #1

declare i32 @channel_input_close_confirmation(i32, i32, i8*) #1

declare i32 @channel_input_data(i32, i32, i8*) #1

declare i32 @channel_input_open_confirmation(i32, i32, i8*) #1

declare i32 @channel_input_open_failure(i32, i32, i8*) #1

declare i32 @channel_input_port_open(i32, i32, i8*) #1

declare i32 @deny_input_open(i32, i32, i8*) #1

declare i32 @x11_input_open(i32, i32, i8*) #1

declare i8* @ssh_packet_get_string(%struct.ssh.68*, i32*) #1

declare i32 @dispatch_protocol_error(i32, i32, i8*) #1

declare i32 @channel_input_extended_data(i32, i32, i8*) #1

declare i32 @channel_input_window_adjust(i32, i32, i8*) #1

declare i32 @channel_input_status_confirm(i32, i32, i8*) #1

declare i32 @kex_input_kexinit(i32, i32, i8*) #1

declare void @ssh_packet_set_alive_timeouts(%struct.ssh.68*, i32) #1

declare i8* @ssh_packet_get_cstring(%struct.ssh.68*, i32*) #1

declare i32 @packet_get_char() #1

declare i32 @sshpkt_get_string_direct(%struct.ssh.68*, i8**, i64*) #1

declare i32 @sshkey_from_blob(i8*, i64, %struct.sshkey**) #1

declare i8* @sshkey_fingerprint(%struct.sshkey*, i32, i32) #1

declare i8* @sshkey_ssh_name(%struct.sshkey*) #1

declare i32 @sshkey_equal(%struct.sshkey*, %struct.sshkey*) #1

declare i8* @reallocarray(i8*, i64, i64) #1

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #4

declare i32 @hostkeys_foreach(i8*, i32 (%struct.hostkey_foreach_line*, i8*)*, i8*, i8*, i8*, i32) #1

declare i32 @sshpkt_start(%struct.ssh.68*, i8 zeroext) #1

declare i32 @sshpkt_put_cstring(%struct.ssh.68*, i8*) #1

declare i32 @sshpkt_put_u8(%struct.ssh.68*, i8 zeroext) #1

declare %struct.sshbuf* @sshbuf_new() #1

declare void @sshbuf_reset(%struct.sshbuf*) #1

declare i32 @sshkey_putb(%struct.sshkey*, %struct.sshbuf*) #1

declare i32 @sshpkt_put_stringb(%struct.ssh.68*, %struct.sshbuf*) #1

declare i32 @sshpkt_send(%struct.ssh.68*) #1

declare i32 @sshbuf_put_cstring(%struct.sshbuf*, i8*) #1

declare i32 @sshbuf_put_string(%struct.sshbuf*, i8*, i64) #1

declare i32 @sshkey_puts(%struct.sshkey*, %struct.sshbuf*) #1

declare i32 @sshkey_verify(%struct.sshkey*, i8*, i64, i8*, i64, i32) #1

declare i8* @sshbuf_ptr(%struct.sshbuf*) #1

declare i8* @read_passphrase(i8*, i32) #1

declare i32 @hostfile_replace_entries(i8*, i8*, i8*, %struct.sshkey**, i64, i32, i32, i32) #1

declare i32 @channel_proxy_upstream(%struct.Channel.80*, i32, i32, i8*) #1

declare void @chan_rcvd_eow(%struct.Channel.80*) #1

declare i32 @x11_connect_display() #1

declare i8* @ssh_packet_get_string_ptr(%struct.ssh.68*, i32*) #1

declare %struct.Channel.80* @channel_connect_by_listen_path(i8*, i8*, i8*) #1

declare %struct.Channel.80* @channel_connect_by_listen_address(i8*, i16 zeroext, i8*, i8*) #1

declare i32 @sshbuf_put_u8(%struct.sshbuf*, i8 zeroext) #1

declare i32 @sshbuf_put_u32(%struct.sshbuf*, i32) #1

declare i32 @sshbuf_put_stringb(%struct.sshbuf*, %struct.sshbuf*) #1

declare i64 @read(i32, i8*, i64) #1

declare void @packet_process_incoming(i8*, i32) #1

declare void @channel_prepare_select(%struct.fd_set**, %struct.fd_set**, i32*, i32*, i64*, i32) #1

declare i32 @channel_not_very_much_buffered_data() #1

declare void @kludge_FD_SET(i32, %struct.fd_set*) #1

declare i32 @ssh_packet_have_data_to_write(%struct.ssh.68*) #1

declare i64 @ssh_packet_get_rekey_timeout(%struct.ssh.68*) #1

declare i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #1

declare i32 @ssh_packet_inc_alive_timeouts(%struct.ssh.68*) #1

declare void @channel_send_window_changes() #1

declare i32 @ssh_packet_get_maxsize(%struct.ssh.68*) #1

declare void @ssh_dispatch_run_fatal(%struct.ssh.68*, i32, i32*, i8*) #1

declare void @channel_cancel_cleanup(i32) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #4

declare void @chan_read_failed(%struct.Channel.80*) #1

declare void @chan_write_failed(%struct.Channel.80*) #1

declare void @chan_ibuf_empty(%struct.Channel.80*) #1

declare void @log_change_level(i32) #1

declare void @channel_stop_listening() #1

declare i8* @channel_open_message() #1

declare void @buffer_put_char(%struct.sshbuf*, i32) #1

declare i32 @channel_request_rforward_cancel(%struct.Forward*) #1

declare i32 @channel_cancel_lport_listener(%struct.Forward*, i32, %struct.ForwardOptions*) #1

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_x11_display_valid(i8* %display) #0 {
entry:
  %retval = alloca i32, align 4
  %display.addr = alloca i8*, align 8
  %i = alloca i64, align 8
  %dlen = alloca i64, align 8
  store i8* %display, i8** %display.addr, align 8
  %0 = load i8** %display.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i8** %display.addr, align 8
  %call = call i64 @strlen(i8* %1) #12
  store i64 %call, i64* %dlen, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i64* %i, align 8
  %3 = load i64* %dlen, align 8
  %cmp1 = icmp ult i64 %2, %3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8
  %5 = load i8** %display.addr, align 8
  %arrayidx = getelementptr inbounds i8* %5, i64 %4
  %6 = load i8* %arrayidx, align 1
  %conv = zext i8 %6 to i32
  %idxprom = sext i32 %conv to i64
  %call2 = call i16** @__ctype_b_loc() #2
  %7 = load i16** %call2, align 8
  %arrayidx3 = getelementptr inbounds i16* %7, i64 %idxprom
  %8 = load i16* %arrayidx3, align 2
  %conv4 = zext i16 %8 to i32
  %and = and i32 %conv4, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end13, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %9 = load i64* %i, align 8
  %10 = load i8** %display.addr, align 8
  %arrayidx5 = getelementptr inbounds i8* %10, i64 %9
  %11 = load i8* %arrayidx5, align 1
  %conv6 = sext i8 %11 to i32
  %call7 = call i8* @strchr(i8* getelementptr inbounds ([6 x i8]* @.str205620, i32 0, i32 0), i32 %conv6) #12
  %cmp8 = icmp eq i8* %call7, null
  br i1 %cmp8, label %if.then10, label %if.end13

if.then10:                                        ; preds = %land.lhs.true
  %12 = load i64* %i, align 8
  %13 = load i8** %display.addr, align 8
  %arrayidx11 = getelementptr inbounds i8* %13, i64 %12
  %14 = load i8* %arrayidx11, align 1
  %conv12 = sext i8 %14 to i32
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([34 x i8]* @.str206621, i32 0, i32 0), i32 %conv12)
  store i32 0, i32* %retval
  br label %return

if.end13:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %15 = load i64* %i, align 8
  %inc = add i64 %15, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then10, %if.then
  %16 = load i32* %retval
  ret i32 %16
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_status_confirm(i32 %type, %struct.Channel.80* %c, i8* %ctx) #0 {
entry:
  %type.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel.80*, align 8
  %ctx.addr = alloca i8*, align 8
  %cr = alloca %struct.channel_reply_ctx*, align 8
  %errmsg = alloca [256 x i8], align 16
  %tochan = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store %struct.Channel.80* %c, %struct.Channel.80** %c.addr, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  %0 = load i8** %ctx.addr, align 8
  %1 = bitcast i8* %0 to %struct.channel_reply_ctx*
  store %struct.channel_reply_ctx* %1, %struct.channel_reply_ctx** %cr, align 8
  %2 = load %struct.channel_reply_ctx** %cr, align 8
  %action = getelementptr inbounds %struct.channel_reply_ctx* %2, i32 0, i32 2
  %3 = load i32* %action, align 4
  %cmp = icmp eq i32 %3, 2
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp1 = icmp eq i32 %4, 3
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp2 = icmp eq i32 %5, 2
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load %struct.channel_reply_ctx** %cr, align 8
  %action3 = getelementptr inbounds %struct.channel_reply_ctx* %6, i32 0, i32 2
  store i32 1, i32* %action3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %7 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp4 = icmp sge i32 %7, 2
  br i1 %cmp4, label %land.lhs.true5, label %land.end

land.lhs.true5:                                   ; preds = %if.end
  %8 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel.80* %8, i32 0, i32 10
  %9 = load i32* %ctl_chan, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %11 = extractvalue { i32, i1 } %10, 0
  %12 = extractvalue { i32, i1 } %10, 1
  %13 = xor i1 %12, true
  br i1 %13, label %cont, label %trap

trap:                                             ; preds = %land.lhs.true5
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %land.lhs.true5
  %cmp6 = icmp ne i32 %9, %11
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %cont
  %14 = load %struct.Channel.80** %c.addr, align 8
  %extended_usage = getelementptr inbounds %struct.Channel.80* %14, i32 0, i32 30
  %15 = load i32* %extended_usage, align 4
  %cmp7 = icmp eq i32 %15, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cont, %if.end
  %16 = phi i1 [ false, %cont ], [ false, %if.end ], [ %cmp7, %land.rhs ]
  %land.ext = zext i1 %16 to i32
  store i32 %land.ext, i32* %tochan, align 4
  %17 = load i32* %type.addr, align 4
  %cmp8 = icmp eq i32 %17, 99
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %land.end
  %18 = load %struct.channel_reply_ctx** %cr, align 8
  %request_type = getelementptr inbounds %struct.channel_reply_ctx* %18, i32 0, i32 0
  %19 = load i8** %request_type, align 8
  %20 = load %struct.Channel.80** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel.80* %20, i32 0, i32 1
  %21 = load i32* %self, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([34 x i8]* @.str201616, i32 0, i32 0), i8* %19, i32 %21)
  br label %if.end54

if.else:                                          ; preds = %land.end
  %22 = load i32* %type.addr, align 4
  %cmp10 = icmp eq i32 %22, 100
  br i1 %cmp10, label %if.then11, label %if.end53

if.then11:                                        ; preds = %if.else
  %23 = load i32* %tochan, align 4
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %if.then12, label %if.else14

if.then12:                                        ; preds = %if.then11
  %arraydecay = getelementptr inbounds [256 x i8]* %errmsg, i32 0, i32 0
  %24 = load %struct.channel_reply_ctx** %cr, align 8
  %request_type13 = getelementptr inbounds %struct.channel_reply_ctx* %24, i32 0, i32 0
  %25 = load i8** %request_type13, align 8
  %call = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 256, i8* getelementptr inbounds ([20 x i8]* @.str202617, i32 0, i32 0), i8* %25) #9
  br label %if.end19

if.else14:                                        ; preds = %if.then11
  %arraydecay15 = getelementptr inbounds [256 x i8]* %errmsg, i32 0, i32 0
  %26 = load %struct.channel_reply_ctx** %cr, align 8
  %request_type16 = getelementptr inbounds %struct.channel_reply_ctx* %26, i32 0, i32 0
  %27 = load i8** %request_type16, align 8
  %28 = load %struct.Channel.80** %c.addr, align 8
  %self17 = getelementptr inbounds %struct.Channel.80* %28, i32 0, i32 1
  %29 = load i32* %self17, align 4
  %call18 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay15, i64 256, i8* getelementptr inbounds ([32 x i8]* @.str203618, i32 0, i32 0), i8* %27, i32 %29) #9
  br label %if.end19

if.end19:                                         ; preds = %if.else14, %if.then12
  %30 = load %struct.channel_reply_ctx** %cr, align 8
  %action20 = getelementptr inbounds %struct.channel_reply_ctx* %30, i32 0, i32 2
  %31 = load i32* %action20, align 4
  %cmp21 = icmp eq i32 %31, 1
  br i1 %cmp21, label %land.lhs.true22, label %if.end27

land.lhs.true22:                                  ; preds = %if.end19
  %32 = load %struct.Channel.80** %c.addr, align 8
  %self23 = getelementptr inbounds %struct.Channel.80* %32, i32 0, i32 1
  %33 = load i32* %self23, align 4
  %34 = load i32* @session_ident, align 4
  %cmp24 = icmp eq i32 %33, %34
  br i1 %cmp24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %land.lhs.true22
  %arraydecay26 = getelementptr inbounds [256 x i8]* %errmsg, i32 0, i32 0
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([3 x i8]* @.str204619, i32 0, i32 0), i8* %arraydecay26) #11
  unreachable

if.end27:                                         ; preds = %land.lhs.true22, %if.end19
  %35 = load i32* %tochan, align 4
  %tobool28 = icmp ne i32 %35, 0
  br i1 %tobool28, label %if.then29, label %if.else33

if.then29:                                        ; preds = %if.end27
  %36 = load %struct.Channel.80** %c.addr, align 8
  %extended = getelementptr inbounds %struct.Channel.80* %36, i32 0, i32 18
  %arraydecay30 = getelementptr inbounds [256 x i8]* %errmsg, i32 0, i32 0
  %arraydecay31 = getelementptr inbounds [256 x i8]* %errmsg, i32 0, i32 0
  %call32 = call i64 @strlen(i8* %arraydecay31) #12
  %conv = trunc i64 %call32 to i32
  call void @buffer_append(%struct.sshbuf* %extended, i8* %arraydecay30, i32 %conv)
  br label %if.end35

if.else33:                                        ; preds = %if.end27
  %arraydecay34 = getelementptr inbounds [256 x i8]* %errmsg, i32 0, i32 0
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([3 x i8]* @.str204619, i32 0, i32 0), i8* %arraydecay34)
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then29
  %37 = load %struct.channel_reply_ctx** %cr, align 8
  %action36 = getelementptr inbounds %struct.channel_reply_ctx* %37, i32 0, i32 2
  %38 = load i32* %action36, align 4
  %cmp37 = icmp eq i32 %38, 2
  br i1 %cmp37, label %if.then39, label %if.else46

if.then39:                                        ; preds = %if.end35
  %39 = load %struct.Channel.80** %c.addr, align 8
  %self40 = getelementptr inbounds %struct.Channel.80* %39, i32 0, i32 1
  %40 = load i32* %self40, align 4
  %41 = load i32* @session_ident, align 4
  %cmp41 = icmp eq i32 %40, %41
  br i1 %cmp41, label %if.then43, label %if.else44

if.then43:                                        ; preds = %if.then39
  call void @leave_raw_mode(i32 0)
  br label %if.end45

if.else44:                                        ; preds = %if.then39
  %42 = load %struct.Channel.80** %c.addr, align 8
  call void bitcast (void (%struct.Channel*)* @mux_tty_alloc_failed to void (%struct.Channel.80*)*)(%struct.Channel.80* %42)
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.then43
  br label %if.end52

if.else46:                                        ; preds = %if.end35
  %43 = load %struct.channel_reply_ctx** %cr, align 8
  %action47 = getelementptr inbounds %struct.channel_reply_ctx* %43, i32 0, i32 2
  %44 = load i32* %action47, align 4
  %cmp48 = icmp eq i32 %44, 1
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.else46
  %45 = load %struct.Channel.80** %c.addr, align 8
  call void @chan_read_failed(%struct.Channel.80* %45)
  %46 = load %struct.Channel.80** %c.addr, align 8
  call void @chan_write_failed(%struct.Channel.80* %46)
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.else46
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end45
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then9
  %47 = load %struct.channel_reply_ctx** %cr, align 8
  %48 = bitcast %struct.channel_reply_ctx* %47 to i8*
  call void @free(i8* %48) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_abandon_status_confirm(%struct.Channel.80* %c, i8* %ctx) #0 {
entry:
  %c.addr = alloca %struct.Channel.80*, align 8
  %ctx.addr = alloca i8*, align 8
  store %struct.Channel.80* %c, %struct.Channel.80** %c.addr, align 8
  store i8* %ctx, i8** %ctx.addr, align 8
  %0 = load i8** %ctx.addr, align 8
  call void @free(i8* %0) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_escapes(%struct.Channel.80* %c, %struct.sshbuf* %bin, %struct.sshbuf* %bout, %struct.sshbuf* %berr, i8* %buf, i32 %len) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.Channel.80*, align 8
  %bin.addr = alloca %struct.sshbuf*, align 8
  %bout.addr = alloca %struct.sshbuf*, align 8
  %berr.addr = alloca %struct.sshbuf*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %string = alloca [1024 x i8], align 16
  %pid = alloca i32, align 4
  %bytes = alloca i32, align 4
  %i = alloca i32, align 4
  %ch = alloca i8, align 1
  %s = alloca i8*, align 8
  %escape_pendingp = alloca i32*, align 8
  %escape_char = alloca i32, align 4
  %efc = alloca %struct.escape_filter_ctx*, align 8
  %b = alloca [16 x i8], align 16
  store %struct.Channel.80* %c, %struct.Channel.80** %c.addr, align 8
  store %struct.sshbuf* %bin, %struct.sshbuf** %bin.addr, align 8
  store %struct.sshbuf* %bout, %struct.sshbuf** %bout.addr, align 8
  store %struct.sshbuf* %berr, %struct.sshbuf** %berr.addr, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %len, i32* %len.addr, align 4
  store i32 0, i32* %bytes, align 4
  %0 = load %struct.Channel.80** %c.addr, align 8
  %cmp = icmp eq %struct.Channel.80* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32* @escape_pending1, i32** %escape_pendingp, align 8
  %1 = load i32* @escape_char1, align 4
  store i32 %1, i32* %escape_char, align 4
  br label %if.end5

if.else:                                          ; preds = %entry
  %2 = load %struct.Channel.80** %c.addr, align 8
  %filter_ctx = getelementptr inbounds %struct.Channel.80* %2, i32 0, i32 40
  %3 = load i8** %filter_ctx, align 8
  %cmp1 = icmp eq i8* %3, null
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.else
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else
  %4 = load %struct.Channel.80** %c.addr, align 8
  %filter_ctx3 = getelementptr inbounds %struct.Channel.80* %4, i32 0, i32 40
  %5 = load i8** %filter_ctx3, align 8
  %6 = bitcast i8* %5 to %struct.escape_filter_ctx*
  store %struct.escape_filter_ctx* %6, %struct.escape_filter_ctx** %efc, align 8
  %7 = load %struct.escape_filter_ctx** %efc, align 8
  %escape_pending = getelementptr inbounds %struct.escape_filter_ctx* %7, i32 0, i32 0
  store i32* %escape_pending, i32** %escape_pendingp, align 8
  %8 = load %struct.escape_filter_ctx** %efc, align 8
  %escape_char4 = getelementptr inbounds %struct.escape_filter_ctx* %8, i32 0, i32 1
  %9 = load i32* %escape_char4, align 4
  store i32 %9, i32* %escape_char, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %10 = load i32* %len.addr, align 4
  %cmp6 = icmp sle i32 %10, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval
  br label %return

if.end8:                                          ; preds = %if.end5
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end8
  %11 = load i32* %i, align 4
  %12 = load i32* %len.addr, align 4
  %cmp9 = icmp ult i32 %11, %12
  br i1 %cmp9, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32* %i, align 4
  %idxprom = zext i32 %13 to i64
  %14 = load i8** %buf.addr, align 8
  %arrayidx = getelementptr inbounds i8* %14, i64 %idxprom
  %15 = load i8* %arrayidx, align 1
  store i8 %15, i8* %ch, align 1
  %16 = load i32** %escape_pendingp, align 8
  %17 = load i32* %16, align 4
  %tobool = icmp ne i32 %17, 0
  br i1 %tobool, label %if.then10, label %if.else210

if.then10:                                        ; preds = %for.body
  %18 = load i32** %escape_pendingp, align 8
  store i32 0, i32* %18, align 4
  %19 = load i8* %ch, align 1
  %conv = zext i8 %19 to i32
  switch i32 %conv, label %sw.default [
    i32 46, label %sw.bb
    i32 26, label %sw.bb27
    i32 66, label %sw.bb63
    i32 82, label %sw.bb74
    i32 86, label %sw.bb82
    i32 118, label %sw.bb82
    i32 38, label %sw.bb131
    i32 63, label %sw.bb175
    i32 35, label %sw.bb183
    i32 67, label %sw.bb193
  ]

sw.bb:                                            ; preds = %if.then10
  %arraydecay = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %20 = load i32* %escape_char, align 4
  %call = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([6 x i8]* @.str149564, i32 0, i32 0), i32 %20) #9
  %21 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay11 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay12 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call13 = call i64 @strlen(i8* %arraydecay12) #12
  %conv14 = trunc i64 %call13 to i32
  call void @buffer_append(%struct.sshbuf* %21, i8* %arraydecay11, i32 %conv14)
  %22 = load %struct.Channel.80** %c.addr, align 8
  %tobool15 = icmp ne %struct.Channel.80* %22, null
  br i1 %tobool15, label %land.lhs.true, label %if.else23

land.lhs.true:                                    ; preds = %sw.bb
  %23 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel.80* %23, i32 0, i32 10
  %24 = load i32* %ctl_chan, align 4
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont, label %trap

trap:                                             ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %land.lhs.true
  %cmp16 = icmp ne i32 %24, %26
  br i1 %cmp16, label %if.then18, label %if.else23

if.then18:                                        ; preds = %cont
  %29 = load %struct.Channel.80** %c.addr, align 8
  call void @chan_read_failed(%struct.Channel.80* %29)
  %30 = load %struct.Channel.80** %c.addr, align 8
  call void @chan_write_failed(%struct.Channel.80* %30)
  %31 = load %struct.Channel.80** %c.addr, align 8
  %detach_user = getelementptr inbounds %struct.Channel.80* %31, i32 0, i32 35
  %32 = load void (i32, i8*)** %detach_user, align 8
  %tobool19 = icmp ne void (i32, i8*)* %32, null
  br i1 %tobool19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.then18
  %33 = load %struct.Channel.80** %c.addr, align 8
  %detach_user21 = getelementptr inbounds %struct.Channel.80* %33, i32 0, i32 35
  %34 = load void (i32, i8*)** %detach_user21, align 8
  %35 = load %struct.Channel.80** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel.80* %35, i32 0, i32 1
  %36 = load i32* %self, align 4
  call void %34(i32 %36, i8* null)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.then18
  %37 = load %struct.Channel.80** %c.addr, align 8
  %type = getelementptr inbounds %struct.Channel.80* %37, i32 0, i32 0
  store i32 17, i32* %type, align 4
  %38 = load %struct.Channel.80** %c.addr, align 8
  %input = getelementptr inbounds %struct.Channel.80* %38, i32 0, i32 16
  call void @sshbuf_reset(%struct.sshbuf* %input)
  %39 = load %struct.Channel.80** %c.addr, align 8
  call void @chan_ibuf_empty(%struct.Channel.80* %39)
  store i32 0, i32* %retval
  br label %return

if.else23:                                        ; preds = %cont, %sw.bb
  store volatile i32 1, i32* @quit_pending, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.else23
  %40 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %41 = extractvalue { i32, i1 } %40, 0
  %42 = extractvalue { i32, i1 } %40, 1
  %43 = xor i1 %42, true
  br i1 %43, label %cont26, label %trap25

trap25:                                           ; preds = %if.end24
  call void @llvm.trap() #3
  unreachable

cont26:                                           ; preds = %if.end24
  store i32 %41, i32* %retval
  br label %return

sw.bb27:                                          ; preds = %if.then10
  %44 = load %struct.Channel.80** %c.addr, align 8
  %tobool28 = icmp ne %struct.Channel.80* %44, null
  br i1 %tobool28, label %land.lhs.true29, label %if.end56

land.lhs.true29:                                  ; preds = %sw.bb27
  %45 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan30 = getelementptr inbounds %struct.Channel.80* %45, i32 0, i32 10
  %46 = load i32* %ctl_chan30, align 4
  %47 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %48 = extractvalue { i32, i1 } %47, 0
  %49 = extractvalue { i32, i1 } %47, 1
  %50 = xor i1 %49, true
  br i1 %50, label %cont32, label %trap31

trap31:                                           ; preds = %land.lhs.true29
  call void @llvm.trap() #3
  unreachable

cont32:                                           ; preds = %land.lhs.true29
  %cmp33 = icmp ne i32 %46, %48
  br i1 %cmp33, label %if.then35, label %if.end56

if.then35:                                        ; preds = %cont32
  br label %noescape

noescape:                                         ; preds = %if.then201, %if.then139, %if.then90, %if.then35
  %51 = load i8* %ch, align 1
  %conv36 = zext i8 %51 to i32
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 90, i32 64)
  %53 = extractvalue { i32, i1 } %52, 0
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = xor i1 %54, true
  br i1 %55, label %cont38, label %trap37

trap37:                                           ; preds = %noescape
  call void @llvm.trap() #3
  unreachable

cont38:                                           ; preds = %noescape
  %cmp39 = icmp eq i32 %conv36, %53
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %cont38
  %arraydecay42 = getelementptr inbounds [16 x i8]* %b, i32 0, i32 0
  %call43 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay42, i64 16, i8* getelementptr inbounds ([3 x i8]* @.str150565, i32 0, i32 0)) #9
  br label %if.end48

if.else44:                                        ; preds = %cont38
  %arraydecay45 = getelementptr inbounds [16 x i8]* %b, i32 0, i32 0
  %56 = load i8* %ch, align 1
  %conv46 = zext i8 %56 to i32
  %call47 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay45, i64 16, i8* getelementptr inbounds ([3 x i8]* @.str151566, i32 0, i32 0), i32 %conv46) #9
  br label %if.end48

if.end48:                                         ; preds = %if.else44, %if.then41
  %arraydecay49 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %57 = load i32* %escape_char, align 4
  %arraydecay50 = getelementptr inbounds [16 x i8]* %b, i32 0, i32 0
  %call51 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay49, i64 1024, i8* getelementptr inbounds ([52 x i8]* @.str152567, i32 0, i32 0), i32 %57, i8* %arraydecay50) #9
  %58 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay52 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay53 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call54 = call i64 @strlen(i8* %arraydecay53) #12
  %conv55 = trunc i64 %call54 to i32
  call void @buffer_append(%struct.sshbuf* %58, i8* %arraydecay52, i32 %conv55)
  br label %for.inc

if.end56:                                         ; preds = %cont32, %sw.bb27
  %arraydecay57 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %59 = load i32* %escape_char, align 4
  %call58 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay57, i64 1024, i8* getelementptr inbounds ([21 x i8]* @.str153568, i32 0, i32 0), i32 %59) #9
  %60 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay59 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay60 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call61 = call i64 @strlen(i8* %arraydecay60) #12
  %conv62 = trunc i64 %call61 to i32
  call void @buffer_append(%struct.sshbuf* %60, i8* %arraydecay59, i32 %conv62)
  %61 = load %struct.sshbuf** %bin.addr, align 8
  %62 = load %struct.sshbuf** %bout.addr, align 8
  %63 = load %struct.sshbuf** %berr.addr, align 8
  call void @client_suspend_self(%struct.sshbuf* %61, %struct.sshbuf* %62, %struct.sshbuf* %63)
  br label %for.inc

sw.bb63:                                          ; preds = %if.then10
  %64 = load i32* @compat20, align 4
  %tobool64 = icmp ne i32 %64, 0
  br i1 %tobool64, label %if.then65, label %if.end73

if.then65:                                        ; preds = %sw.bb63
  %arraydecay66 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %65 = load i32* %escape_char, align 4
  %call67 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay66, i64 1024, i8* getelementptr inbounds ([6 x i8]* @.str154569, i32 0, i32 0), i32 %65) #9
  %66 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay68 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay69 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call70 = call i64 @strlen(i8* %arraydecay69) #12
  %conv71 = trunc i64 %call70 to i32
  call void @buffer_append(%struct.sshbuf* %66, i8* %arraydecay68, i32 %conv71)
  %67 = load %struct.Channel.80** %c.addr, align 8
  %self72 = getelementptr inbounds %struct.Channel.80* %67, i32 0, i32 1
  %68 = load i32* %self72, align 4
  call void @channel_request_start(i32 %68, i8* getelementptr inbounds ([6 x i8]* @.str155570, i32 0, i32 0), i32 0)
  %69 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %69, i32 1000)
  %70 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %70)
  br label %if.end73

if.end73:                                         ; preds = %if.then65, %sw.bb63
  br label %for.inc

sw.bb74:                                          ; preds = %if.then10
  %71 = load i32* @compat20, align 4
  %tobool75 = icmp ne i32 %71, 0
  br i1 %tobool75, label %if.then76, label %if.end81

if.then76:                                        ; preds = %sw.bb74
  %72 = load i32* @datafellows, align 4
  %and = and i32 %72, 32768
  %tobool77 = icmp ne i32 %and, 0
  br i1 %tobool77, label %if.then78, label %if.else79

if.then78:                                        ; preds = %if.then76
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([34 x i8]* @.str156571, i32 0, i32 0))
  br label %if.end80

if.else79:                                        ; preds = %if.then76
  store i32 1, i32* @need_rekeying, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %sw.bb74
  br label %for.inc

sw.bb82:                                          ; preds = %if.then10, %if.then10
  %73 = load %struct.Channel.80** %c.addr, align 8
  %tobool83 = icmp ne %struct.Channel.80* %73, null
  br i1 %tobool83, label %land.lhs.true84, label %if.end91

land.lhs.true84:                                  ; preds = %sw.bb82
  %74 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan85 = getelementptr inbounds %struct.Channel.80* %74, i32 0, i32 10
  %75 = load i32* %ctl_chan85, align 4
  %76 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %77 = extractvalue { i32, i1 } %76, 0
  %78 = extractvalue { i32, i1 } %76, 1
  %79 = xor i1 %78, true
  br i1 %79, label %cont87, label %trap86

trap86:                                           ; preds = %land.lhs.true84
  call void @llvm.trap() #3
  unreachable

cont87:                                           ; preds = %land.lhs.true84
  %cmp88 = icmp ne i32 %75, %77
  br i1 %cmp88, label %if.then90, label %if.end91

if.then90:                                        ; preds = %cont87
  br label %noescape

if.end91:                                         ; preds = %cont87, %sw.bb82
  %call92 = call i32 @log_is_on_stderr()
  %tobool93 = icmp ne i32 %call92, 0
  br i1 %tobool93, label %if.end102, label %if.then94

if.then94:                                        ; preds = %if.end91
  %arraydecay95 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %80 = load i32* %escape_char, align 4
  %81 = load i8* %ch, align 1
  %conv96 = zext i8 %81 to i32
  %call97 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay95, i64 1024, i8* getelementptr inbounds ([27 x i8]* @.str157572, i32 0, i32 0), i32 %80, i32 %conv96) #9
  %82 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay98 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay99 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call100 = call i64 @strlen(i8* %arraydecay99) #12
  %conv101 = trunc i64 %call100 to i32
  call void @buffer_append(%struct.sshbuf* %82, i8* %arraydecay98, i32 %conv101)
  br label %for.inc

if.end102:                                        ; preds = %if.end91
  %83 = load i8* %ch, align 1
  %conv103 = zext i8 %83 to i32
  %cmp104 = icmp eq i32 %conv103, 86
  br i1 %cmp104, label %land.lhs.true106, label %if.end112

land.lhs.true106:                                 ; preds = %if.end102
  %84 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp107 = icmp sgt i32 %84, 0
  br i1 %cmp107, label %if.then109, label %if.end112

if.then109:                                       ; preds = %land.lhs.true106
  %85 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %86 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 -1)
  %87 = extractvalue { i32, i1 } %86, 0
  %88 = extractvalue { i32, i1 } %86, 1
  %89 = xor i1 %88, true
  br i1 %89, label %cont111, label %trap110

trap110:                                          ; preds = %if.then109
  call void @llvm.trap() #3
  unreachable

cont111:                                          ; preds = %if.then109
  store i32 %87, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  call void @log_change_level(i32 %87)
  br label %if.end112

if.end112:                                        ; preds = %cont111, %land.lhs.true106, %if.end102
  %90 = load i8* %ch, align 1
  %conv113 = zext i8 %90 to i32
  %cmp114 = icmp eq i32 %conv113, 118
  br i1 %cmp114, label %land.lhs.true116, label %if.end122

land.lhs.true116:                                 ; preds = %if.end112
  %91 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp117 = icmp slt i32 %91, 7
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %land.lhs.true116
  %92 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %93 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 1)
  %94 = extractvalue { i32, i1 } %93, 0
  %95 = extractvalue { i32, i1 } %93, 1
  %96 = xor i1 %95, true
  br i1 %96, label %cont121, label %trap120

trap120:                                          ; preds = %if.then119
  call void @llvm.trap() #3
  unreachable

cont121:                                          ; preds = %if.then119
  store i32 %94, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  call void @log_change_level(i32 %94)
  br label %if.end122

if.end122:                                        ; preds = %cont121, %land.lhs.true116, %if.end112
  %arraydecay123 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %97 = load i32* %escape_char, align 4
  %98 = load i8* %ch, align 1
  %conv124 = zext i8 %98 to i32
  %99 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %call125 = call i8* @log_level_name(i32 %99)
  %call126 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay123, i64 1024, i8* getelementptr inbounds ([21 x i8]* @.str158573, i32 0, i32 0), i32 %97, i32 %conv124, i8* %call125) #9
  %100 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay127 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay128 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call129 = call i64 @strlen(i8* %arraydecay128) #12
  %conv130 = trunc i64 %call129 to i32
  call void @buffer_append(%struct.sshbuf* %100, i8* %arraydecay127, i32 %conv130)
  br label %for.inc

sw.bb131:                                         ; preds = %if.then10
  %101 = load %struct.Channel.80** %c.addr, align 8
  %tobool132 = icmp ne %struct.Channel.80* %101, null
  br i1 %tobool132, label %land.lhs.true133, label %if.end140

land.lhs.true133:                                 ; preds = %sw.bb131
  %102 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan134 = getelementptr inbounds %struct.Channel.80* %102, i32 0, i32 10
  %103 = load i32* %ctl_chan134, align 4
  %104 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %105 = extractvalue { i32, i1 } %104, 0
  %106 = extractvalue { i32, i1 } %104, 1
  %107 = xor i1 %106, true
  br i1 %107, label %cont136, label %trap135

trap135:                                          ; preds = %land.lhs.true133
  call void @llvm.trap() #3
  unreachable

cont136:                                          ; preds = %land.lhs.true133
  %cmp137 = icmp ne i32 %103, %105
  br i1 %cmp137, label %if.then139, label %if.end140

if.then139:                                       ; preds = %cont136
  br label %noescape

if.end140:                                        ; preds = %cont136, %sw.bb131
  %108 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp141 = icmp eq i32 %108, 3
  %conv142 = zext i1 %cmp141 to i32
  call void @leave_raw_mode(i32 %conv142)
  call void @channel_stop_listening()
  %arraydecay143 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %109 = load i32* %escape_char, align 4
  %call144 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay143, i64 1024, i8* getelementptr inbounds ([20 x i8]* @.str159574, i32 0, i32 0), i32 %109) #9
  %110 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay145 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay146 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call147 = call i64 @strlen(i8* %arraydecay146) #12
  %conv148 = trunc i64 %call147 to i32
  call void @buffer_append(%struct.sshbuf* %110, i8* %arraydecay145, i32 %conv148)
  %call149 = call i32 @fork() #9
  store i32 %call149, i32* %pid, align 4
  %111 = load i32* %pid, align 4
  %cmp150 = icmp slt i32 %111, 0
  br i1 %cmp150, label %if.then152, label %if.end155

if.then152:                                       ; preds = %if.end140
  %call153 = call i32* @__errno_location() #2
  %112 = load i32* %call153, align 4
  %call154 = call i8* @strerror(i32 %112) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str160575, i32 0, i32 0), i8* %call154)
  br label %for.inc

if.end155:                                        ; preds = %if.end140
  %113 = load i32* %pid, align 4
  %cmp156 = icmp ne i32 %113, 0
  br i1 %cmp156, label %if.then158, label %if.end159

if.then158:                                       ; preds = %if.end155
  call void @exit(i32 0) #3
  unreachable

if.end159:                                        ; preds = %if.end155
  %114 = load i32* @compat20, align 4
  %tobool160 = icmp ne i32 %114, 0
  br i1 %tobool160, label %if.then161, label %if.else164

if.then161:                                       ; preds = %if.end159
  %115 = load %struct.sshbuf** %bin.addr, align 8
  call void @buffer_append(%struct.sshbuf* %115, i8* getelementptr inbounds ([2 x i8]* @.str161576, i32 0, i32 0), i32 1)
  %116 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %117 = extractvalue { i32, i1 } %116, 0
  %118 = extractvalue { i32, i1 } %116, 1
  %119 = xor i1 %118, true
  br i1 %119, label %cont163, label %trap162

trap162:                                          ; preds = %if.then161
  call void @llvm.trap() #3
  unreachable

cont163:                                          ; preds = %if.then161
  store i32 %117, i32* %retval
  br label %return

if.else164:                                       ; preds = %if.end159
  %120 = load i32* @stdin_eof, align 4
  %tobool165 = icmp ne i32 %120, 0
  br i1 %tobool165, label %if.end173, label %if.then166

if.then166:                                       ; preds = %if.else164
  %121 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %121, i8 zeroext 16)
  %122 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*, i32)* @ssh_packet_put_string to void (%struct.ssh.68*, i8*, i32)*)(%struct.ssh.68* %122, i8* getelementptr inbounds ([2 x i8]* @.str161576, i32 0, i32 0), i32 1)
  %123 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %123)
  store i32 1, i32* @stdin_eof, align 4
  %124 = load %struct.sshbuf** %bin.addr, align 8
  %call167 = call i64 @sshbuf_len(%struct.sshbuf* %124)
  %conv168 = trunc i64 %call167 to i32
  %cmp169 = icmp eq i32 %conv168, 0
  br i1 %cmp169, label %if.then171, label %if.end172

if.then171:                                       ; preds = %if.then166
  %125 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %125, i8 zeroext 19)
  %126 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %126)
  br label %if.end172

if.end172:                                        ; preds = %if.then171, %if.then166
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.else164
  br label %if.end174

if.end174:                                        ; preds = %if.end173
  br label %for.inc

sw.bb175:                                         ; preds = %if.then10
  %127 = load %struct.sshbuf** %berr.addr, align 8
  %128 = load i32* %escape_char, align 4
  %129 = load i32* @compat20, align 4
  %130 = load %struct.Channel.80** %c.addr, align 8
  %tobool176 = icmp ne %struct.Channel.80* %130, null
  br i1 %tobool176, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %sw.bb175
  %131 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan177 = getelementptr inbounds %struct.Channel.80* %131, i32 0, i32 10
  %132 = load i32* %ctl_chan177, align 4
  %133 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %134 = extractvalue { i32, i1 } %133, 0
  %135 = extractvalue { i32, i1 } %133, 1
  %136 = xor i1 %135, true
  br i1 %136, label %cont179, label %trap178

trap178:                                          ; preds = %land.rhs
  call void @llvm.trap() #3
  unreachable

cont179:                                          ; preds = %land.rhs
  %cmp180 = icmp ne i32 %132, %134
  br label %land.end

land.end:                                         ; preds = %cont179, %sw.bb175
  %137 = phi i1 [ false, %sw.bb175 ], [ %cmp180, %cont179 ]
  %land.ext = zext i1 %137 to i32
  %call182 = call i32 @log_is_on_stderr()
  call void @print_escape_help(%struct.sshbuf* %127, i32 %128, i32 %129, i32 %land.ext, i32 %call182)
  br label %for.inc

sw.bb183:                                         ; preds = %if.then10
  %arraydecay184 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %138 = load i32* %escape_char, align 4
  %call185 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay184, i64 1024, i8* getelementptr inbounds ([6 x i8]* @.str162577, i32 0, i32 0), i32 %138) #9
  %139 = load %struct.sshbuf** %berr.addr, align 8
  %arraydecay186 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay187 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call188 = call i64 @strlen(i8* %arraydecay187) #12
  %conv189 = trunc i64 %call188 to i32
  call void @buffer_append(%struct.sshbuf* %139, i8* %arraydecay186, i32 %conv189)
  %call190 = call i8* @channel_open_message()
  store i8* %call190, i8** %s, align 8
  %140 = load %struct.sshbuf** %berr.addr, align 8
  %141 = load i8** %s, align 8
  %142 = load i8** %s, align 8
  %call191 = call i64 @strlen(i8* %142) #12
  %conv192 = trunc i64 %call191 to i32
  call void @buffer_append(%struct.sshbuf* %140, i8* %141, i32 %conv192)
  %143 = load i8** %s, align 8
  call void @free(i8* %143) #9
  br label %for.inc

sw.bb193:                                         ; preds = %if.then10
  %144 = load %struct.Channel.80** %c.addr, align 8
  %tobool194 = icmp ne %struct.Channel.80* %144, null
  br i1 %tobool194, label %land.lhs.true195, label %if.end202

land.lhs.true195:                                 ; preds = %sw.bb193
  %145 = load %struct.Channel.80** %c.addr, align 8
  %ctl_chan196 = getelementptr inbounds %struct.Channel.80* %145, i32 0, i32 10
  %146 = load i32* %ctl_chan196, align 4
  %147 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %148 = extractvalue { i32, i1 } %147, 0
  %149 = extractvalue { i32, i1 } %147, 1
  %150 = xor i1 %149, true
  br i1 %150, label %cont198, label %trap197

trap197:                                          ; preds = %land.lhs.true195
  call void @llvm.trap() #3
  unreachable

cont198:                                          ; preds = %land.lhs.true195
  %cmp199 = icmp ne i32 %146, %148
  br i1 %cmp199, label %if.then201, label %if.end202

if.then201:                                       ; preds = %cont198
  br label %noescape

if.end202:                                        ; preds = %cont198, %sw.bb193
  call void @process_cmdline()
  br label %for.inc

sw.default:                                       ; preds = %if.then10
  %151 = load i8* %ch, align 1
  %conv203 = zext i8 %151 to i32
  %152 = load i32* %escape_char, align 4
  %cmp204 = icmp ne i32 %conv203, %152
  br i1 %cmp204, label %if.then206, label %if.end209

if.then206:                                       ; preds = %sw.default
  %153 = load %struct.sshbuf** %bin.addr, align 8
  %154 = load i32* %escape_char, align 4
  call void @buffer_put_char(%struct.sshbuf* %153, i32 %154)
  %155 = load i32* %bytes, align 4
  %156 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %155, i32 1)
  %157 = extractvalue { i32, i1 } %156, 0
  %158 = extractvalue { i32, i1 } %156, 1
  %159 = xor i1 %158, true
  br i1 %159, label %cont208, label %trap207

trap207:                                          ; preds = %if.then206
  call void @llvm.trap() #3
  unreachable

cont208:                                          ; preds = %if.then206
  store i32 %157, i32* %bytes, align 4
  br label %if.end209

if.end209:                                        ; preds = %cont208, %sw.default
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end209
  br label %if.end218

if.else210:                                       ; preds = %for.body
  %160 = load i32* @last_was_cr, align 4
  %tobool211 = icmp ne i32 %160, 0
  br i1 %tobool211, label %land.lhs.true212, label %if.end217

land.lhs.true212:                                 ; preds = %if.else210
  %161 = load i8* %ch, align 1
  %conv213 = zext i8 %161 to i32
  %162 = load i32* %escape_char, align 4
  %cmp214 = icmp eq i32 %conv213, %162
  br i1 %cmp214, label %if.then216, label %if.end217

if.then216:                                       ; preds = %land.lhs.true212
  %163 = load i32** %escape_pendingp, align 8
  store i32 1, i32* %163, align 4
  br label %for.inc

if.end217:                                        ; preds = %land.lhs.true212, %if.else210
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %sw.epilog
  %164 = load i8* %ch, align 1
  %conv219 = zext i8 %164 to i32
  %cmp220 = icmp eq i32 %conv219, 13
  br i1 %cmp220, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %if.end218
  %165 = load i8* %ch, align 1
  %conv222 = zext i8 %165 to i32
  %cmp223 = icmp eq i32 %conv222, 10
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %if.end218
  %166 = phi i1 [ true, %if.end218 ], [ %cmp223, %lor.rhs ]
  %lor.ext = zext i1 %166 to i32
  store i32 %lor.ext, i32* @last_was_cr, align 4
  %167 = load %struct.sshbuf** %bin.addr, align 8
  %168 = load i8* %ch, align 1
  %conv225 = zext i8 %168 to i32
  call void @buffer_put_char(%struct.sshbuf* %167, i32 %conv225)
  %169 = load i32* %bytes, align 4
  %170 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 1)
  %171 = extractvalue { i32, i1 } %170, 0
  %172 = extractvalue { i32, i1 } %170, 1
  %173 = xor i1 %172, true
  br i1 %173, label %cont227, label %trap226

trap226:                                          ; preds = %lor.end
  call void @llvm.trap() #3
  unreachable

cont227:                                          ; preds = %lor.end
  store i32 %171, i32* %bytes, align 4
  br label %for.inc

for.inc:                                          ; preds = %cont227, %if.then216, %if.end202, %sw.bb183, %land.end, %if.end174, %if.then152, %if.end122, %if.then94, %if.end81, %if.end73, %if.end56, %if.end48
  %174 = load i32* %i, align 4
  %inc = add i32 %174, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %175 = load i32* %bytes, align 4
  store i32 %175, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %cont163, %cont26, %if.end22, %if.then7, %if.then2
  %176 = load i32* %retval
  ret i32 %176
}

; Function Attrs: nounwind sspreq uwtable
define internal double @get_current_time() #0 {
entry:
  %tv = alloca %struct.timeval, align 8
  %call = call i32 @gettimeofday(%struct.timeval* %tv, %struct.timezone* null) #9
  %tv_sec = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 0
  %0 = load i64* %tv_sec, align 8
  %conv = sitofp i64 %0 to double
  %tv_usec = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 1
  %1 = load i64* %tv_usec, align 8
  %conv1 = sitofp i64 %1 to double
  %div = fdiv double %conv1, 1.000000e+06
  %add = fadd double %conv, %div
  ret double %add
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_init_dispatch() #0 {
entry:
  %0 = load i32* @compat20, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @client_init_dispatch_20()
  br label %if.end4

if.else:                                          ; preds = %entry
  %1 = load i32* @compat13, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  call void @client_init_dispatch_13()
  br label %if.end

if.else3:                                         ; preds = %if.else
  call void @client_init_dispatch_15()
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @signal_handler(i32 %sig) #0 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  %0 = load i32* %sig.addr, align 4
  store volatile i32 %0, i32* @received_signal, align 4
  store volatile i32 1, i32* @quit_pending, align 4
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @window_change_handler(i32 %sig) #0 {
entry:
  %sig.addr = alloca i32, align 4
  store i32 %sig, i32* %sig.addr, align 4
  store volatile i32 1, i32* @received_window_change_signal, align 4
  %call = call void (i32)* (i32, void (i32)*)* @mysignal(i32 28, void (i32)* @window_change_handler)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_channel_closed(i32 %id, i8* %arg) #0 {
entry:
  %id.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i32* %id.addr, align 4
  call void @channel_cancel_cleanup(i32 %0)
  store i32 1, i32* @session_closed, align 4
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp = icmp eq i32 %1, 3
  %conv = zext i1 %cmp to i32
  call void @leave_raw_mode(i32 %conv)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_check_initial_eof_on_stdin() #0 {
entry:
  %len = alloca i32, align 4
  %buf = alloca [1 x i8], align 1
  %0 = load i32* @stdin_null_flag, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([13 x i8]* @.str148563, i32 0, i32 0))
  store i32 1, i32* @stdin_eof, align 4
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %1, i8 zeroext 19)
  %2 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %2)
  br label %if.end16

if.else:                                          ; preds = %entry
  call void @enter_non_blocking()
  %3 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %3) #9
  %arraydecay = getelementptr inbounds [1 x i8]* %buf, i32 0, i32 0
  %call1 = call i64 @read(i32 %call, i8* %arraydecay, i64 1)
  %conv = trunc i64 %call1 to i32
  store i32 %conv, i32* %len, align 4
  %4 = load i32* %len, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then3, label %if.else4

if.then3:                                         ; preds = %if.else
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([13 x i8]* @.str148563, i32 0, i32 0))
  store i32 1, i32* @stdin_eof, align 4
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %5, i8 zeroext 19)
  %6 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %6)
  br label %if.end15

if.else4:                                         ; preds = %if.else
  %7 = load i32* %len, align 4
  %cmp5 = icmp sgt i32 %7, 0
  br i1 %cmp5, label %if.then7, label %if.end14

if.then7:                                         ; preds = %if.else4
  %arrayidx = getelementptr inbounds [1 x i8]* %buf, i32 0, i64 0
  %8 = load i8* %arrayidx, align 1
  %conv8 = zext i8 %8 to i32
  %9 = load i32* @escape_char1, align 4
  %cmp9 = icmp eq i32 %conv8, %9
  br i1 %cmp9, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.then7
  store i32 1, i32* @escape_pending1, align 4
  br label %if.end

if.else12:                                        ; preds = %if.then7
  %arraydecay13 = getelementptr inbounds [1 x i8]* %buf, i32 0, i32 0
  call void @buffer_append(%struct.sshbuf* @stdin_buffer, i8* %arraydecay13, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then11
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.else4
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then3
  call void @leave_non_blocking()
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_process_buffered_input_packets() #0 {
entry:
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %2 = bitcast %struct.ssh.68* %1 to i8*
  call void @ssh_dispatch_run_fatal(%struct.ssh.68* %0, i32 1, i32* @quit_pending, i8* %2)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_make_packets_from_stdin_data() #0 {
entry:
  %len = alloca i32, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end16, %entry
  %call = call i64 @sshbuf_len(%struct.sshbuf* @stdin_buffer)
  %conv = trunc i64 %call to i32
  %cmp = icmp ugt i32 %conv, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call2 = call i32 @ssh_packet_not_very_much_data_to_write(%struct.ssh.68* %0)
  %tobool = icmp ne i32 %call2, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %1 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ]
  br i1 %1, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %call3 = call i64 @sshbuf_len(%struct.sshbuf* @stdin_buffer)
  %conv4 = trunc i64 %call3 to i32
  store i32 %conv4, i32* %len, align 4
  %2 = load i32* %len, align 4
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call5 = call i32 @ssh_packet_get_maxsize(%struct.ssh.68* %3)
  %cmp6 = icmp ugt i32 %2, %call5
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call8 = call i32 @ssh_packet_get_maxsize(%struct.ssh.68* %4)
  store i32 %call8, i32* %len, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %5, i8 zeroext 16)
  %6 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call9 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @stdin_buffer)
  %7 = load i32* %len, align 4
  call void bitcast (void (%struct.ssh*, i8*, i32)* @ssh_packet_put_string to void (%struct.ssh.68*, i8*, i32)*)(%struct.ssh.68* %6, i8* %call9, i32 %7)
  %8 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %8)
  %9 = load i32* %len, align 4
  call void @buffer_consume(%struct.sshbuf* @stdin_buffer, i32 %9)
  %10 = load i32* @stdin_eof, align 4
  %tobool10 = icmp ne i32 %10, 0
  br i1 %tobool10, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %if.end
  %call11 = call i64 @sshbuf_len(%struct.sshbuf* @stdin_buffer)
  %conv12 = trunc i64 %call11 to i32
  %cmp13 = icmp eq i32 %conv12, 0
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %land.lhs.true
  %11 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %11, i8 zeroext 19)
  %12 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %12)
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %if.end
  br label %while.cond

while.end:                                        ; preds = %land.end
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_check_window_change() #0 {
entry:
  %ws = alloca %struct.winsize, align 2
  %0 = load volatile i32* @received_window_change_signal, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %if.end9

if.end:                                           ; preds = %entry
  store volatile i32 0, i32* @received_window_change_signal, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([36 x i8]* @.str147562, i32 0, i32 0))
  %1 = load i32* @compat20, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  call void @channel_send_window_changes()
  br label %if.end9

if.else:                                          ; preds = %if.end
  %2 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %2) #9
  %call3 = call i32 (i32, i64, ...)* @ioctl(i32 %call, i64 21523, %struct.winsize* %ws) #9
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  br label %if.end9

if.end5:                                          ; preds = %if.else
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %3, i8 zeroext 11)
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_row = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 0
  %5 = load i16* %ws_row, align 2
  %conv = zext i16 %5 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %4, i32 %conv)
  %6 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_col = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 1
  %7 = load i16* %ws_col, align 2
  %conv6 = zext i16 %7 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %6, i32 %conv6)
  %8 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_xpixel = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 2
  %9 = load i16* %ws_xpixel, align 2
  %conv7 = zext i16 %9 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %8, i32 %conv7)
  %10 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %ws_ypixel = getelementptr inbounds %struct.winsize* %ws, i32 0, i32 3
  %11 = load i16* %ws_ypixel, align 2
  %conv8 = zext i16 %11 to i32
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %10, i32 %conv8)
  %12 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %12)
  br label %if.end9

if.end9:                                          ; preds = %if.end5, %if.then4, %if.then2, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_wait_until_can_do_something(%struct.fd_set** %readsetp, %struct.fd_set** %writesetp, i32* %maxfdp, i32* %nallocp, i32 %rekeying) #0 {
entry:
  %readsetp.addr = alloca %struct.fd_set**, align 8
  %writesetp.addr = alloca %struct.fd_set**, align 8
  %maxfdp.addr = alloca i32*, align 8
  %nallocp.addr = alloca i32*, align 8
  %rekeying.addr = alloca i32, align 4
  %tv = alloca %struct.timeval, align 8
  %tvp = alloca %struct.timeval*, align 8
  %timeout_secs = alloca i32, align 4
  %minwait_secs = alloca i64, align 8
  %server_alive_time = alloca i64, align 8
  %now = alloca i64, align 8
  %ret = alloca i32, align 4
  %buf = alloca [100 x i8], align 16
  store %struct.fd_set** %readsetp, %struct.fd_set*** %readsetp.addr, align 8
  store %struct.fd_set** %writesetp, %struct.fd_set*** %writesetp.addr, align 8
  store i32* %maxfdp, i32** %maxfdp.addr, align 8
  store i32* %nallocp, i32** %nallocp.addr, align 8
  store i32 %rekeying, i32* %rekeying.addr, align 4
  store i64 0, i64* %minwait_secs, align 8
  store i64 0, i64* %server_alive_time, align 8
  %call = call i64 @monotime()
  store i64 %call, i64* %now, align 8
  %0 = load %struct.fd_set*** %readsetp.addr, align 8
  %1 = load %struct.fd_set*** %writesetp.addr, align 8
  %2 = load i32** %maxfdp.addr, align 8
  %3 = load i32** %nallocp.addr, align 8
  %4 = load i32* %rekeying.addr, align 4
  call void @channel_prepare_select(%struct.fd_set** %0, %struct.fd_set** %1, i32* %2, i32* %3, i64* %minwait_secs, i32 %4)
  %5 = load i32* @compat20, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call1 = call i64 @sshbuf_len(%struct.sshbuf* @stdout_buffer)
  %conv = trunc i64 %call1 to i32
  %6 = load i32* @buffer_high, align 4
  %cmp = icmp ult i32 %conv, %6
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %call3 = call i64 @sshbuf_len(%struct.sshbuf* @stderr_buffer)
  %conv4 = trunc i64 %call3 to i32
  %7 = load i32* @buffer_high, align 4
  %cmp5 = icmp ult i32 %conv4, %7
  br i1 %cmp5, label %land.lhs.true7, label %if.end

land.lhs.true7:                                   ; preds = %land.lhs.true
  %call8 = call i32 @channel_not_very_much_buffered_data()
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end

if.then10:                                        ; preds = %land.lhs.true7
  %8 = load i32* @connection_in, align 4
  %9 = load %struct.fd_set*** %readsetp.addr, align 8
  %10 = load %struct.fd_set** %9, align 8
  call void @kludge_FD_SET(i32 %8, %struct.fd_set* %10)
  br label %if.end

if.end:                                           ; preds = %if.then10, %land.lhs.true7, %land.lhs.true, %if.then
  %11 = load i32* @stdin_eof, align 4
  %tobool11 = icmp ne i32 %11, 0
  br i1 %tobool11, label %if.end17, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %if.end
  %12 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call13 = call i32 @ssh_packet_not_very_much_data_to_write(%struct.ssh.68* %12)
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %land.lhs.true12
  %13 = load %struct._IO_FILE** @stdin, align 8
  %call16 = call i32 @fileno(%struct._IO_FILE* %13) #9
  %14 = load %struct.fd_set*** %readsetp.addr, align 8
  %15 = load %struct.fd_set** %14, align 8
  call void @kludge_FD_SET(i32 %call16, %struct.fd_set* %15)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %land.lhs.true12, %if.end
  %call18 = call i64 @sshbuf_len(%struct.sshbuf* @stdout_buffer)
  %conv19 = trunc i64 %call18 to i32
  %cmp20 = icmp ugt i32 %conv19, 0
  br i1 %cmp20, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end17
  %16 = load %struct._IO_FILE** @stdout, align 8
  %call23 = call i32 @fileno(%struct._IO_FILE* %16) #9
  %17 = load %struct.fd_set*** %writesetp.addr, align 8
  %18 = load %struct.fd_set** %17, align 8
  call void @kludge_FD_SET(i32 %call23, %struct.fd_set* %18)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end17
  %call25 = call i64 @sshbuf_len(%struct.sshbuf* @stderr_buffer)
  %conv26 = trunc i64 %call25 to i32
  %cmp27 = icmp ugt i32 %conv26, 0
  br i1 %cmp27, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end24
  %19 = load %struct._IO_FILE** @stderr, align 8
  %call30 = call i32 @fileno(%struct._IO_FILE* %19) #9
  %20 = load %struct.fd_set*** %writesetp.addr, align 8
  %21 = load %struct.fd_set** %20, align 8
  call void @kludge_FD_SET(i32 %call30, %struct.fd_set* %21)
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end24
  br label %if.end44

if.else:                                          ; preds = %entry
  %22 = load i32* @session_closed, align 4
  %tobool32 = icmp ne i32 %22, 0
  br i1 %tobool32, label %land.lhs.true33, label %if.else42

land.lhs.true33:                                  ; preds = %if.else
  %call34 = call i32 @channel_still_open()
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.else42, label %land.lhs.true36

land.lhs.true36:                                  ; preds = %land.lhs.true33
  %23 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call37 = call i32 @ssh_packet_have_data_to_write(%struct.ssh.68* %23)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.else42, label %if.then39

if.then39:                                        ; preds = %land.lhs.true36
  %24 = load %struct.fd_set*** %readsetp.addr, align 8
  %25 = load %struct.fd_set** %24, align 8
  %26 = bitcast %struct.fd_set* %25 to i8*
  %27 = load i32** %nallocp.addr, align 8
  %28 = load i32* %27, align 4
  %conv40 = zext i32 %28 to i64
  call void @llvm.memset.p0i8.i64(i8* %26, i8 0, i64 %conv40, i32 8, i1 false)
  %29 = load %struct.fd_set*** %writesetp.addr, align 8
  %30 = load %struct.fd_set** %29, align 8
  %31 = bitcast %struct.fd_set* %30 to i8*
  %32 = load i32** %nallocp.addr, align 8
  %33 = load i32* %32, align 4
  %conv41 = zext i32 %33 to i64
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 %conv41, i32 8, i1 false)
  br label %if.end143

if.else42:                                        ; preds = %land.lhs.true36, %land.lhs.true33, %if.else
  %34 = load i32* @connection_in, align 4
  %35 = load %struct.fd_set*** %readsetp.addr, align 8
  %36 = load %struct.fd_set** %35, align 8
  call void @kludge_FD_SET(i32 %34, %struct.fd_set* %36)
  br label %if.end43

if.end43:                                         ; preds = %if.else42
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end31
  %37 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call45 = call i32 @ssh_packet_have_data_to_write(%struct.ssh.68* %37)
  %tobool46 = icmp ne i32 %call45, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %if.end44
  %38 = load i32* @connection_out, align 4
  %39 = load %struct.fd_set*** %writesetp.addr, align 8
  %40 = load %struct.fd_set** %39, align 8
  call void @kludge_FD_SET(i32 %38, %struct.fd_set* %40)
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end44
  store i32 2147483647, i32* %timeout_secs, align 4
  %41 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 73), align 4
  %cmp49 = icmp sgt i32 %41, 0
  br i1 %cmp49, label %land.lhs.true51, label %if.end55

land.lhs.true51:                                  ; preds = %if.end48
  %42 = load i32* @compat20, align 4
  %tobool52 = icmp ne i32 %42, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %land.lhs.true51
  %43 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 73), align 4
  store i32 %43, i32* %timeout_secs, align 4
  %44 = load i64* %now, align 8
  %45 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 73), align 4
  %conv54 = sext i32 %45 to i64
  %46 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %44, i64 %conv54)
  %47 = extractvalue { i64, i1 } %46, 0
  %48 = extractvalue { i64, i1 } %46, 1
  %49 = xor i1 %48, true
  br i1 %49, label %cont, label %trap

trap:                                             ; preds = %if.then53
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then53
  store i64 %47, i64* %server_alive_time, align 8
  br label %if.end55

if.end55:                                         ; preds = %cont, %land.lhs.true51, %if.end48
  %50 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 70), align 4
  %cmp56 = icmp sgt i32 %50, 0
  br i1 %cmp56, label %land.lhs.true58, label %if.end70

land.lhs.true58:                                  ; preds = %if.end55
  %51 = load i32* @compat20, align 4
  %tobool59 = icmp ne i32 %51, 0
  br i1 %tobool59, label %land.lhs.true60, label %if.end70

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %52 = load i32* %rekeying.addr, align 4
  %tobool61 = icmp ne i32 %52, 0
  br i1 %tobool61, label %if.end70, label %if.then62

if.then62:                                        ; preds = %land.lhs.true60
  %53 = load i32* %timeout_secs, align 4
  %conv63 = sext i32 %53 to i64
  %54 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call64 = call i64 @ssh_packet_get_rekey_timeout(%struct.ssh.68* %54)
  %cmp65 = icmp slt i64 %conv63, %call64
  br i1 %cmp65, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then62
  %55 = load i32* %timeout_secs, align 4
  %conv67 = sext i32 %55 to i64
  br label %cond.end

cond.false:                                       ; preds = %if.then62
  %56 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call68 = call i64 @ssh_packet_get_rekey_timeout(%struct.ssh.68* %56)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv67, %cond.true ], [ %call68, %cond.false ]
  %conv69 = trunc i64 %cond to i32
  store i32 %conv69, i32* %timeout_secs, align 4
  br label %if.end70

if.end70:                                         ; preds = %cond.end, %land.lhs.true60, %land.lhs.true58, %if.end55
  call void @set_control_persist_exit_time()
  %57 = load i64* @control_persist_exit_time, align 8
  %cmp71 = icmp sgt i64 %57, 0
  br i1 %cmp71, label %if.then73, label %if.end91

if.then73:                                        ; preds = %if.end70
  %58 = load i32* %timeout_secs, align 4
  %conv74 = sext i32 %58 to i64
  %59 = load i64* @control_persist_exit_time, align 8
  %60 = load i64* %now, align 8
  %61 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %59, i64 %60)
  %62 = extractvalue { i64, i1 } %61, 0
  %63 = extractvalue { i64, i1 } %61, 1
  %64 = xor i1 %63, true
  br i1 %64, label %cont76, label %trap75

trap75:                                           ; preds = %if.then73
  call void @llvm.trap() #3
  unreachable

cont76:                                           ; preds = %if.then73
  %cmp77 = icmp slt i64 %conv74, %62
  br i1 %cmp77, label %cond.true79, label %cond.false81

cond.true79:                                      ; preds = %cont76
  %65 = load i32* %timeout_secs, align 4
  %conv80 = sext i32 %65 to i64
  br label %cond.end84

cond.false81:                                     ; preds = %cont76
  %66 = load i64* @control_persist_exit_time, align 8
  %67 = load i64* %now, align 8
  %68 = call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %66, i64 %67)
  %69 = extractvalue { i64, i1 } %68, 0
  %70 = extractvalue { i64, i1 } %68, 1
  %71 = xor i1 %70, true
  br i1 %71, label %cont83, label %trap82

trap82:                                           ; preds = %cond.false81
  call void @llvm.trap() #3
  unreachable

cont83:                                           ; preds = %cond.false81
  br label %cond.end84

cond.end84:                                       ; preds = %cont83, %cond.true79
  %cond85 = phi i64 [ %conv80, %cond.true79 ], [ %69, %cont83 ]
  %conv86 = trunc i64 %cond85 to i32
  store i32 %conv86, i32* %timeout_secs, align 4
  %72 = load i32* %timeout_secs, align 4
  %cmp87 = icmp slt i32 %72, 0
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; preds = %cond.end84
  store i32 0, i32* %timeout_secs, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.then89, %cond.end84
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end70
  %73 = load i64* %minwait_secs, align 8
  %cmp92 = icmp ne i64 %73, 0
  br i1 %cmp92, label %if.then94, label %if.end103

if.then94:                                        ; preds = %if.end91
  %74 = load i32* %timeout_secs, align 4
  %75 = load i64* %minwait_secs, align 8
  %conv95 = trunc i64 %75 to i32
  %cmp96 = icmp slt i32 %74, %conv95
  br i1 %cmp96, label %cond.true98, label %cond.false99

cond.true98:                                      ; preds = %if.then94
  %76 = load i32* %timeout_secs, align 4
  br label %cond.end101

cond.false99:                                     ; preds = %if.then94
  %77 = load i64* %minwait_secs, align 8
  %conv100 = trunc i64 %77 to i32
  br label %cond.end101

cond.end101:                                      ; preds = %cond.false99, %cond.true98
  %cond102 = phi i32 [ %76, %cond.true98 ], [ %conv100, %cond.false99 ]
  store i32 %cond102, i32* %timeout_secs, align 4
  br label %if.end103

if.end103:                                        ; preds = %cond.end101, %if.end91
  %78 = load i32* %timeout_secs, align 4
  %cmp104 = icmp eq i32 %78, 2147483647
  br i1 %cmp104, label %if.then106, label %if.else107

if.then106:                                       ; preds = %if.end103
  store %struct.timeval* null, %struct.timeval** %tvp, align 8
  br label %if.end109

if.else107:                                       ; preds = %if.end103
  %79 = load i32* %timeout_secs, align 4
  %conv108 = sext i32 %79 to i64
  %tv_sec = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 0
  store i64 %conv108, i64* %tv_sec, align 8
  %tv_usec = getelementptr inbounds %struct.timeval* %tv, i32 0, i32 1
  store i64 0, i64* %tv_usec, align 8
  store %struct.timeval* %tv, %struct.timeval** %tvp, align 8
  br label %if.end109

if.end109:                                        ; preds = %if.else107, %if.then106
  %80 = load i32** %maxfdp.addr, align 8
  %81 = load i32* %80, align 4
  %82 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 1)
  %83 = extractvalue { i32, i1 } %82, 0
  %84 = extractvalue { i32, i1 } %82, 1
  %85 = xor i1 %84, true
  br i1 %85, label %cont111, label %trap110

trap110:                                          ; preds = %if.end109
  call void @llvm.trap() #3
  unreachable

cont111:                                          ; preds = %if.end109
  %86 = load %struct.fd_set*** %readsetp.addr, align 8
  %87 = load %struct.fd_set** %86, align 8
  %88 = load %struct.fd_set*** %writesetp.addr, align 8
  %89 = load %struct.fd_set** %88, align 8
  %90 = load %struct.timeval** %tvp, align 8
  %call112 = call i32 @select(i32 %83, %struct.fd_set* %87, %struct.fd_set* %89, %struct.fd_set* null, %struct.timeval* %90)
  store i32 %call112, i32* %ret, align 4
  %91 = load i32* %ret, align 4
  %cmp113 = icmp slt i32 %91, 0
  br i1 %cmp113, label %if.then115, label %if.else130

if.then115:                                       ; preds = %cont111
  %92 = load %struct.fd_set*** %readsetp.addr, align 8
  %93 = load %struct.fd_set** %92, align 8
  %94 = bitcast %struct.fd_set* %93 to i8*
  %95 = load i32** %nallocp.addr, align 8
  %96 = load i32* %95, align 4
  %conv116 = zext i32 %96 to i64
  call void @llvm.memset.p0i8.i64(i8* %94, i8 0, i64 %conv116, i32 8, i1 false)
  %97 = load %struct.fd_set*** %writesetp.addr, align 8
  %98 = load %struct.fd_set** %97, align 8
  %99 = bitcast %struct.fd_set* %98 to i8*
  %100 = load i32** %nallocp.addr, align 8
  %101 = load i32* %100, align 4
  %conv117 = zext i32 %101 to i64
  call void @llvm.memset.p0i8.i64(i8* %99, i8 0, i64 %conv117, i32 8, i1 false)
  %call118 = call i32* @__errno_location() #2
  %102 = load i32* %call118, align 4
  %cmp119 = icmp eq i32 %102, 4
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.then115
  br label %if.end143

if.end122:                                        ; preds = %if.then115
  %arraydecay = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %call123 = call i32* @__errno_location() #2
  %103 = load i32* %call123, align 4
  %call124 = call i8* @strerror(i32 %103) #9
  %call125 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 100, i8* getelementptr inbounds ([13 x i8]* @.str142557, i32 0, i32 0), i8* %call124) #9
  %arraydecay126 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %arraydecay127 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %call128 = call i64 @strlen(i8* %arraydecay127) #12
  %conv129 = trunc i64 %call128 to i32
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %arraydecay126, i32 %conv129)
  store volatile i32 1, i32* @quit_pending, align 4
  br label %if.end143

if.else130:                                       ; preds = %cont111
  %104 = load i32* %ret, align 4
  %cmp131 = icmp eq i32 %104, 0
  br i1 %cmp131, label %if.then133, label %if.end142

if.then133:                                       ; preds = %if.else130
  %105 = load i64* %server_alive_time, align 8
  %cmp134 = icmp ne i64 %105, 0
  br i1 %cmp134, label %land.lhs.true136, label %if.end141

land.lhs.true136:                                 ; preds = %if.then133
  %106 = load i64* %server_alive_time, align 8
  %call137 = call i64 @monotime()
  %cmp138 = icmp sle i64 %106, %call137
  br i1 %cmp138, label %if.then140, label %if.end141

if.then140:                                       ; preds = %land.lhs.true136
  call void @server_alive_check()
  br label %if.end141

if.end141:                                        ; preds = %if.then140, %land.lhs.true136, %if.then133
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.else130
  br label %if.end143

if.end143:                                        ; preds = %if.end142, %if.end122, %if.then121, %if.then39
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_process_net_input(%struct.fd_set* %readset) #0 {
entry:
  %readset.addr = alloca %struct.fd_set*, align 8
  %len = alloca i32, align 4
  %buf = alloca [8192 x i8], align 16
  store %struct.fd_set* %readset, %struct.fd_set** %readset.addr, align 8
  %0 = load i32* @connection_in, align 4
  %1 = load %struct.fd_set** %readset.addr, align 8
  %call = call i32 @kludge_FD_ISSET(i32 %0, %struct.fd_set* %1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end37

if.then:                                          ; preds = %entry
  %2 = load i32* @connection_in, align 4
  %arraydecay = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %call1 = call i64 @read(i32 %2, i8* %arraydecay, i64 8192)
  %conv = trunc i64 %call1 to i32
  store i32 %conv, i32* %len, align 4
  %3 = load i32* %len, align 4
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %arraydecay4 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %4 = load i8** @host, align 8
  %call5 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay4, i64 8192, i8* getelementptr inbounds ([46 x i8]* @.str140555, i32 0, i32 0), i8* %4) #9
  %arraydecay6 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %arraydecay7 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %call8 = call i64 @strlen(i8* %arraydecay7) #12
  %conv9 = trunc i64 %call8 to i32
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %arraydecay6, i32 %conv9)
  store volatile i32 1, i32* @quit_pending, align 4
  br label %if.end37

if.end:                                           ; preds = %if.then
  %5 = load i32* %len, align 4
  %cmp10 = icmp slt i32 %5, 0
  br i1 %cmp10, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end
  %call12 = call i32* @__errno_location() #2
  %6 = load i32* %call12, align 4
  %cmp13 = icmp eq i32 %6, 11
  br i1 %cmp13, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call15 = call i32* @__errno_location() #2
  %7 = load i32* %call15, align 4
  %cmp16 = icmp eq i32 %7, 4
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %call19 = call i32* @__errno_location() #2
  %8 = load i32* %call19, align 4
  %cmp20 = icmp eq i32 %8, 11
  br i1 %cmp20, label %if.then22, label %if.end23

if.then22:                                        ; preds = %lor.lhs.false18, %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %len, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %lor.lhs.false18, %if.end
  %9 = load i32* %len, align 4
  %cmp24 = icmp slt i32 %9, 0
  br i1 %cmp24, label %if.then26, label %if.end35

if.then26:                                        ; preds = %if.end23
  %arraydecay27 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %10 = load i8** @host, align 8
  %call28 = call i32* @__errno_location() #2
  %11 = load i32* %call28, align 4
  %call29 = call i8* @strerror(i32 %11) #9
  %call30 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay27, i64 8192, i8* getelementptr inbounds ([39 x i8]* @.str141556, i32 0, i32 0), i8* %10, i8* %call29) #9
  %arraydecay31 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %call33 = call i64 @strlen(i8* %arraydecay32) #12
  %conv34 = trunc i64 %call33 to i32
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %arraydecay31, i32 %conv34)
  store volatile i32 1, i32* @quit_pending, align 4
  br label %if.end37

if.end35:                                         ; preds = %if.end23
  %arraydecay36 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %12 = load i32* %len, align 4
  call void @packet_process_incoming(i8* %arraydecay36, i32 %12)
  br label %if.end37

if.end37:                                         ; preds = %if.end35, %if.then26, %if.then3, %entry
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_process_input(%struct.fd_set* %readset) #0 {
entry:
  %readset.addr = alloca %struct.fd_set*, align 8
  %len = alloca i32, align 4
  %buf = alloca [8192 x i8], align 16
  store %struct.fd_set* %readset, %struct.fd_set** %readset.addr, align 8
  %0 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9
  %1 = load %struct.fd_set** %readset.addr, align 8
  %call1 = call i32 @kludge_FD_ISSET(i32 %call, %struct.fd_set* %1)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end52

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE** @stdin, align 8
  %call2 = call i32 @fileno(%struct._IO_FILE* %2) #9
  %arraydecay = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %call3 = call i64 @read(i32 %call2, i8* %arraydecay, i64 8192)
  %conv = trunc i64 %call3 to i32
  store i32 %conv, i32* %len, align 4
  %3 = load i32* %len, align 4
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %call5 = call i32* @__errno_location() #2
  %4 = load i32* %call5, align 4
  %cmp6 = icmp eq i32 %4, 11
  br i1 %cmp6, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call8 = call i32* @__errno_location() #2
  %5 = load i32* %call8, align 4
  %cmp9 = icmp eq i32 %5, 4
  br i1 %cmp9, label %if.then15, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %call12 = call i32* @__errno_location() #2
  %6 = load i32* %call12, align 4
  %cmp13 = icmp eq i32 %6, 11
  br i1 %cmp13, label %if.then15, label %if.end

if.then15:                                        ; preds = %lor.lhs.false11, %lor.lhs.false, %land.lhs.true
  br label %if.end52

if.end:                                           ; preds = %lor.lhs.false11, %if.then
  %7 = load i32* %len, align 4
  %cmp16 = icmp sle i32 %7, 0
  br i1 %cmp16, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.end
  %8 = load i32* %len, align 4
  %cmp19 = icmp slt i32 %8, 0
  br i1 %cmp19, label %if.then21, label %if.end30

if.then21:                                        ; preds = %if.then18
  %arraydecay22 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %call23 = call i32* @__errno_location() #2
  %9 = load i32* %call23, align 4
  %call24 = call i8* @strerror(i32 %9) #9
  %call25 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay22, i64 8192, i8* getelementptr inbounds ([15 x i8]* @.str139554, i32 0, i32 0), i8* %call24) #9
  %arraydecay26 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %arraydecay27 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %call28 = call i64 @strlen(i8* %arraydecay27) #12
  %conv29 = trunc i64 %call28 to i32
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %arraydecay26, i32 %conv29)
  br label %if.end30

if.end30:                                         ; preds = %if.then21, %if.then18
  store i32 1, i32* @stdin_eof, align 4
  %call31 = call i64 @sshbuf_len(%struct.sshbuf* @stdin_buffer)
  %conv32 = trunc i64 %call31 to i32
  %cmp33 = icmp eq i32 %conv32, 0
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end30
  %10 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %10, i8 zeroext 19)
  %11 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %11)
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.end30
  br label %if.end51

if.else:                                          ; preds = %if.end
  %12 = load i32* @escape_char1, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont, label %trap

trap:                                             ; preds = %if.else
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.else
  %cmp37 = icmp eq i32 %12, %14
  br i1 %cmp37, label %if.then39, label %if.else41

if.then39:                                        ; preds = %cont
  %arraydecay40 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %17 = load i32* %len, align 4
  call void @buffer_append(%struct.sshbuf* @stdin_buffer, i8* %arraydecay40, i32 %17)
  br label %if.end50

if.else41:                                        ; preds = %cont
  %arraydecay42 = getelementptr inbounds [8192 x i8]* %buf, i32 0, i32 0
  %18 = load i32* %len, align 4
  %call43 = call i32 @process_escapes(%struct.Channel.80* null, %struct.sshbuf* @stdin_buffer, %struct.sshbuf* @stdout_buffer, %struct.sshbuf* @stderr_buffer, i8* %arraydecay42, i32 %18)
  %19 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont45, label %trap44

trap44:                                           ; preds = %if.else41
  call void @llvm.trap() #3
  unreachable

cont45:                                           ; preds = %if.else41
  %cmp46 = icmp eq i32 %call43, %20
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %cont45
  br label %if.end52

if.end49:                                         ; preds = %cont45
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then39
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end36
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then48, %if.then15, %entry
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_process_output(%struct.fd_set* %writeset) #0 {
entry:
  %writeset.addr = alloca %struct.fd_set*, align 8
  %len = alloca i32, align 4
  %buf = alloca [100 x i8], align 16
  store %struct.fd_set* %writeset, %struct.fd_set** %writeset.addr, align 8
  %0 = load %struct._IO_FILE** @stdout, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9
  %1 = load %struct.fd_set** %writeset.addr, align 8
  %call1 = call i32 @kludge_FD_ISSET(i32 %call, %struct.fd_set* %1)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end29

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE** @stdout, align 8
  %call2 = call i32 @fileno(%struct._IO_FILE* %2) #9
  %call3 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @stdout_buffer)
  %call4 = call i64 @sshbuf_len(%struct.sshbuf* @stdout_buffer)
  %conv = trunc i64 %call4 to i32
  %conv5 = zext i32 %conv to i64
  %call6 = call i64 @write(i32 %call2, i8* %call3, i64 %conv5)
  %conv7 = trunc i64 %call6 to i32
  store i32 %conv7, i32* %len, align 4
  %3 = load i32* %len, align 4
  %cmp = icmp sle i32 %3, 0
  br i1 %cmp, label %if.then9, label %if.end28

if.then9:                                         ; preds = %if.then
  %call10 = call i32* @__errno_location() #2
  %4 = load i32* %call10, align 4
  %cmp11 = icmp eq i32 %4, 4
  br i1 %cmp11, label %if.then20, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then9
  %call13 = call i32* @__errno_location() #2
  %5 = load i32* %call13, align 4
  %cmp14 = icmp eq i32 %5, 11
  br i1 %cmp14, label %if.then20, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %call17 = call i32* @__errno_location() #2
  %6 = load i32* %call17, align 4
  %cmp18 = icmp eq i32 %6, 11
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %if.then9
  store i32 0, i32* %len, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false16
  %arraydecay = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %call21 = call i32* @__errno_location() #2
  %7 = load i32* %call21, align 4
  %call22 = call i8* @strerror(i32 %7) #9
  %call23 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 100, i8* getelementptr inbounds ([22 x i8]* @.str138553, i32 0, i32 0), i8* %call22) #9
  %arraydecay24 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %arraydecay25 = getelementptr inbounds [100 x i8]* %buf, i32 0, i32 0
  %call26 = call i64 @strlen(i8* %arraydecay25) #12
  %conv27 = trunc i64 %call26 to i32
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %arraydecay24, i32 %conv27)
  store volatile i32 1, i32* @quit_pending, align 4
  br label %if.end59

if.end:                                           ; preds = %if.then20
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then
  %8 = load i32* %len, align 4
  call void @buffer_consume(%struct.sshbuf* @stdout_buffer, i32 %8)
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %entry
  %9 = load %struct._IO_FILE** @stderr, align 8
  %call30 = call i32 @fileno(%struct._IO_FILE* %9) #9
  %10 = load %struct.fd_set** %writeset.addr, align 8
  %call31 = call i32 @kludge_FD_ISSET(i32 %call30, %struct.fd_set* %10)
  %tobool32 = icmp ne i32 %call31, 0
  br i1 %tobool32, label %if.then33, label %if.end59

if.then33:                                        ; preds = %if.end29
  %11 = load %struct._IO_FILE** @stderr, align 8
  %call34 = call i32 @fileno(%struct._IO_FILE* %11) #9
  %call35 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @stderr_buffer)
  %call36 = call i64 @sshbuf_len(%struct.sshbuf* @stderr_buffer)
  %conv37 = trunc i64 %call36 to i32
  %conv38 = zext i32 %conv37 to i64
  %call39 = call i64 @write(i32 %call34, i8* %call35, i64 %conv38)
  %conv40 = trunc i64 %call39 to i32
  store i32 %conv40, i32* %len, align 4
  %12 = load i32* %len, align 4
  %cmp41 = icmp sle i32 %12, 0
  br i1 %cmp41, label %if.then43, label %if.end58

if.then43:                                        ; preds = %if.then33
  %call44 = call i32* @__errno_location() #2
  %13 = load i32* %call44, align 4
  %cmp45 = icmp eq i32 %13, 4
  br i1 %cmp45, label %if.then55, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.then43
  %call48 = call i32* @__errno_location() #2
  %14 = load i32* %call48, align 4
  %cmp49 = icmp eq i32 %14, 11
  br i1 %cmp49, label %if.then55, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false47
  %call52 = call i32* @__errno_location() #2
  %15 = load i32* %call52, align 4
  %cmp53 = icmp eq i32 %15, 11
  br i1 %cmp53, label %if.then55, label %if.else56

if.then55:                                        ; preds = %lor.lhs.false51, %lor.lhs.false47, %if.then43
  store i32 0, i32* %len, align 4
  br label %if.end57

if.else56:                                        ; preds = %lor.lhs.false51
  store volatile i32 1, i32* @quit_pending, align 4
  br label %if.end59

if.end57:                                         ; preds = %if.then55
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then33
  %16 = load i32* %len, align 4
  call void @buffer_consume(%struct.sshbuf* @stderr_buffer, i32 %16)
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.else56, %if.end29, %if.else
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @leave_non_blocking() #0 {
entry:
  %0 = load i32* @in_non_blocking_mode, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9
  %call1 = call i32 @unset_nonblock(i32 %call)
  store i32 0, i32* @in_non_blocking_mode, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_suspend_self(%struct.sshbuf* %bin, %struct.sshbuf* %bout, %struct.sshbuf* %berr) #0 {
entry:
  %bin.addr = alloca %struct.sshbuf*, align 8
  %bout.addr = alloca %struct.sshbuf*, align 8
  %berr.addr = alloca %struct.sshbuf*, align 8
  store %struct.sshbuf* %bin, %struct.sshbuf** %bin.addr, align 8
  store %struct.sshbuf* %bout, %struct.sshbuf** %bout.addr, align 8
  store %struct.sshbuf* %berr, %struct.sshbuf** %berr.addr, align 8
  %0 = load %struct.sshbuf** %bout.addr, align 8
  %call = call i64 @sshbuf_len(%struct.sshbuf* %0)
  %conv = trunc i64 %call to i32
  %cmp = icmp ugt i32 %conv, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stdout, align 8
  %call2 = call i32 @fileno(%struct._IO_FILE* %1) #9
  %2 = load %struct.sshbuf** %bout.addr, align 8
  %call3 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %2)
  %3 = load %struct.sshbuf** %bout.addr, align 8
  %call4 = call i64 @sshbuf_len(%struct.sshbuf* %3)
  %conv5 = trunc i64 %call4 to i32
  %conv6 = zext i32 %conv5 to i64
  %call7 = call i64 @atomicio(i64 (i32, i8*, i64)* @write, i32 %call2, i8* %call3, i64 %conv6)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sshbuf** %berr.addr, align 8
  %call8 = call i64 @sshbuf_len(%struct.sshbuf* %4)
  %conv9 = trunc i64 %call8 to i32
  %cmp10 = icmp ugt i32 %conv9, 0
  br i1 %cmp10, label %if.then12, label %if.end19

if.then12:                                        ; preds = %if.end
  %5 = load %struct._IO_FILE** @stderr, align 8
  %call13 = call i32 @fileno(%struct._IO_FILE* %5) #9
  %6 = load %struct.sshbuf** %berr.addr, align 8
  %call14 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %6)
  %7 = load %struct.sshbuf** %berr.addr, align 8
  %call15 = call i64 @sshbuf_len(%struct.sshbuf* %7)
  %conv16 = trunc i64 %call15 to i32
  %conv17 = zext i32 %conv16 to i64
  %call18 = call i64 @atomicio(i64 (i32, i8*, i64)* @write, i32 %call13, i8* %call14, i64 %conv17)
  br label %if.end19

if.end19:                                         ; preds = %if.then12, %if.end
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp20 = icmp eq i32 %8, 3
  %conv21 = zext i1 %cmp20 to i32
  call void @leave_raw_mode(i32 %conv21)
  %9 = load %struct.sshbuf** %bin.addr, align 8
  call void @sshbuf_free(%struct.sshbuf* %9)
  %10 = load %struct.sshbuf** %bout.addr, align 8
  call void @sshbuf_free(%struct.sshbuf* %10)
  %11 = load %struct.sshbuf** %berr.addr, align 8
  call void @sshbuf_free(%struct.sshbuf* %11)
  %call22 = call i32 @getpid() #9
  %call23 = call i32 @kill(i32 %call22, i32 20) #9
  store volatile i32 1, i32* @received_window_change_signal, align 4
  %12 = load %struct.sshbuf** %bin.addr, align 8
  call void @sshbuf_init(%struct.sshbuf* %12)
  %13 = load %struct.sshbuf** %bout.addr, align 8
  call void @sshbuf_init(%struct.sshbuf* %13)
  %14 = load %struct.sshbuf** %berr.addr, align 8
  call void @sshbuf_init(%struct.sshbuf* %14)
  %15 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp24 = icmp eq i32 %15, 3
  %conv25 = zext i1 %cmp24 to i32
  call void @enter_raw_mode(i32 %conv25)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @print_escape_help(%struct.sshbuf* %b, i32 %escape_char, i32 %protocol2, i32 %mux_client, i32 %using_stderr) #0 {
entry:
  %b.addr = alloca %struct.sshbuf*, align 8
  %escape_char.addr = alloca i32, align 4
  %protocol2.addr = alloca i32, align 4
  %mux_client.addr = alloca i32, align 4
  %using_stderr.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %suppress_flags = alloca i32, align 4
  %string = alloca [1024 x i8], align 16
  store %struct.sshbuf* %b, %struct.sshbuf** %b.addr, align 8
  store i32 %escape_char, i32* %escape_char.addr, align 4
  store i32 %protocol2, i32* %protocol2.addr, align 4
  store i32 %mux_client, i32* %mux_client.addr, align 4
  store i32 %using_stderr, i32* %using_stderr.addr, align 4
  %arraydecay = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %0 = load i32* %escape_char.addr, align 4
  %call = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([35 x i8]* @.str180595, i32 0, i32 0), i32 %0) #9
  %1 = load %struct.sshbuf** %b.addr, align 8
  %arraydecay1 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call3 = call i64 @strlen(i8* %arraydecay2) #12
  %conv = trunc i64 %call3 to i32
  call void @buffer_append(%struct.sshbuf* %1, i8* %arraydecay1, i32 %conv)
  %2 = load i32* %protocol2.addr, align 4
  %tobool = icmp ne i32 %2, 0
  %cond = select i1 %tobool, i32 0, i32 1
  %3 = load i32* %mux_client.addr, align 4
  %tobool4 = icmp ne i32 %3, 0
  %cond5 = select i1 %tobool4, i32 2, i32 0
  %or = or i32 %cond, %cond5
  %4 = load i32* %mux_client.addr, align 4
  %tobool6 = icmp ne i32 %4, 0
  %cond7 = select i1 %tobool6, i32 0, i32 4
  %or8 = or i32 %or, %cond7
  %5 = load i32* %using_stderr.addr, align 4
  %tobool9 = icmp ne i32 %5, 0
  %cond10 = select i1 %tobool9, i32 0, i32 8
  %or11 = or i32 %or8, %cond10
  store i32 %or11, i32* %suppress_flags, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32* %i, align 4
  %conv12 = zext i32 %6 to i64
  %cmp = icmp ult i64 %conv12, 10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32* %i, align 4
  %idxprom = zext i32 %7 to i64
  %arrayidx = getelementptr inbounds [10 x %struct.escape_help_text]* bitcast (<{ { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] } }>* @esc_txt to [10 x %struct.escape_help_text]*), i32 0, i64 %idxprom
  %flags = getelementptr inbounds %struct.escape_help_text* %arrayidx, i32 0, i32 2
  %8 = load i32* %flags, align 4
  %9 = load i32* %suppress_flags, align 4
  %and = and i32 %8, %9
  %tobool14 = icmp ne i32 %and, 0
  br i1 %tobool14, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %arraydecay15 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %10 = load i32* %escape_char.addr, align 4
  %11 = load i32* %i, align 4
  %idxprom16 = zext i32 %11 to i64
  %arrayidx17 = getelementptr inbounds [10 x %struct.escape_help_text]* bitcast (<{ { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] } }>* @esc_txt to [10 x %struct.escape_help_text]*), i32 0, i64 %idxprom16
  %cmd = getelementptr inbounds %struct.escape_help_text* %arrayidx17, i32 0, i32 0
  %12 = load i8** %cmd, align 8
  %13 = load i32* %i, align 4
  %idxprom18 = zext i32 %13 to i64
  %arrayidx19 = getelementptr inbounds [10 x %struct.escape_help_text]* bitcast (<{ { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] }, { i8*, i8*, i32, [4 x i8] } }>* @esc_txt to [10 x %struct.escape_help_text]*), i32 0, i64 %idxprom18
  %text = getelementptr inbounds %struct.escape_help_text* %arrayidx19, i32 0, i32 1
  %14 = load i8** %text, align 8
  %call20 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay15, i64 1024, i8* getelementptr inbounds ([15 x i8]* @.str181596, i32 0, i32 0), i32 %10, i8* %12, i8* %14) #9
  %15 = load %struct.sshbuf** %b.addr, align 8
  %arraydecay21 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay22 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call23 = call i64 @strlen(i8* %arraydecay22) #12
  %conv24 = trunc i64 %call23 to i32
  call void @buffer_append(%struct.sshbuf* %15, i8* %arraydecay21, i32 %conv24)
  br label %for.inc

for.inc:                                          ; preds = %if.end, %if.then
  %16 = load i32* %i, align 4
  %inc = add i32 %16, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay25 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %17 = load i32* %escape_char.addr, align 4
  %18 = load i32* %escape_char.addr, align 4
  %call26 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay25, i64 1024, i8* getelementptr inbounds ([125 x i8]* @.str182597, i32 0, i32 0), i32 %17, i32 %18) #9
  %19 = load %struct.sshbuf** %b.addr, align 8
  %arraydecay27 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %arraydecay28 = getelementptr inbounds [1024 x i8]* %string, i32 0, i32 0
  %call29 = call i64 @strlen(i8* %arraydecay28) #12
  %conv30 = trunc i64 %call29 to i32
  call void @buffer_append(%struct.sshbuf* %19, i8* %arraydecay27, i32 %conv30)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @process_cmdline() #0 {
entry:
  %handler = alloca void (i32)*, align 8
  %s = alloca i8*, align 8
  %cmd = alloca i8*, align 8
  %ok = alloca i32, align 4
  %delete = alloca i32, align 4
  %local = alloca i32, align 4
  %remote = alloca i32, align 4
  %dynamic = alloca i32, align 4
  %fwd = alloca %struct.Forward, align 8
  store i32 0, i32* %delete, align 4
  store i32 0, i32* %local, align 4
  store i32 0, i32* %remote, align 4
  store i32 0, i32* %dynamic, align 4
  %0 = bitcast %struct.Forward* %fwd to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false)
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp = icmp eq i32 %1, 3
  %conv = zext i1 %cmp to i32
  call void @leave_raw_mode(i32 %conv)
  %call = call void (i32)* (i32, void (i32)*)* @mysignal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*))
  store void (i32)* %call, void (i32)** %handler, align 8
  %call1 = call i8* @read_passphrase(i8* getelementptr inbounds ([8 x i8]* @.str163578, i32 0, i32 0), i32 1)
  store i8* %call1, i8** %s, align 8
  store i8* %call1, i8** %cmd, align 8
  %2 = load i8** %s, align 8
  %cmp2 = icmp eq i8* %2, null
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %out

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %3 = load i8** %s, align 8
  %4 = load i8* %3, align 1
  %conv4 = zext i8 %4 to i32
  %idxprom = sext i32 %conv4 to i64
  %call5 = call i16** @__ctype_b_loc() #2
  %5 = load i16** %call5, align 8
  %arrayidx = getelementptr inbounds i16* %5, i64 %idxprom
  %6 = load i16* %arrayidx, align 2
  %conv6 = zext i16 %6 to i32
  %and = and i32 %conv6, 8192
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %7 = load i8** %s, align 8
  %incdec.ptr = getelementptr inbounds i8* %7, i32 1
  store i8* %incdec.ptr, i8** %s, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %8 = load i8** %s, align 8
  %9 = load i8* %8, align 1
  %conv7 = sext i8 %9 to i32
  %cmp8 = icmp eq i32 %conv7, 45
  br i1 %cmp8, label %if.then10, label %if.end12

if.then10:                                        ; preds = %while.end
  %10 = load i8** %s, align 8
  %incdec.ptr11 = getelementptr inbounds i8* %10, i32 1
  store i8* %incdec.ptr11, i8** %s, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %while.end
  %11 = load i8** %s, align 8
  %12 = load i8* %11, align 1
  %conv13 = sext i8 %12 to i32
  %cmp14 = icmp eq i32 %conv13, 0
  br i1 %cmp14, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end12
  br label %out

if.end17:                                         ; preds = %if.end12
  %13 = load i8** %s, align 8
  %14 = load i8* %13, align 1
  %conv18 = sext i8 %14 to i32
  %cmp19 = icmp eq i32 %conv18, 104
  br i1 %cmp19, label %if.then28, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end17
  %15 = load i8** %s, align 8
  %16 = load i8* %15, align 1
  %conv21 = sext i8 %16 to i32
  %cmp22 = icmp eq i32 %conv21, 72
  br i1 %cmp22, label %if.then28, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %17 = load i8** %s, align 8
  %18 = load i8* %17, align 1
  %conv25 = sext i8 %18 to i32
  %cmp26 = icmp eq i32 %conv25, 63
  br i1 %cmp26, label %if.then28, label %if.end32

if.then28:                                        ; preds = %lor.lhs.false24, %lor.lhs.false, %if.end17
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([10 x i8]* @.str164579, i32 0, i32 0))
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([67 x i8]* @.str165580, i32 0, i32 0))
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([68 x i8]* @.str166581, i32 0, i32 0))
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([69 x i8]* @.str167582, i32 0, i32 0))
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([66 x i8]* @.str168583, i32 0, i32 0))
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([67 x i8]* @.str169584, i32 0, i32 0))
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([68 x i8]* @.str170585, i32 0, i32 0))
  %19 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 86), align 4
  %tobool29 = icmp ne i32 %19, 0
  br i1 %tobool29, label %if.end31, label %if.then30

if.then30:                                        ; preds = %if.then28
  br label %out

if.end31:                                         ; preds = %if.then28
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([67 x i8]* @.str171586, i32 0, i32 0))
  br label %out

if.end32:                                         ; preds = %lor.lhs.false24
  %20 = load i8** %s, align 8
  %21 = load i8* %20, align 1
  %conv33 = sext i8 %21 to i32
  %cmp34 = icmp eq i32 %conv33, 33
  br i1 %cmp34, label %land.lhs.true, label %if.end40

land.lhs.true:                                    ; preds = %if.end32
  %22 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 86), align 4
  %tobool36 = icmp ne i32 %22, 0
  br i1 %tobool36, label %if.then37, label %if.end40

if.then37:                                        ; preds = %land.lhs.true
  %23 = load i8** %s, align 8
  %incdec.ptr38 = getelementptr inbounds i8* %23, i32 1
  store i8* %incdec.ptr38, i8** %s, align 8
  %24 = load i8** %s, align 8
  %call39 = call i32 @ssh_local_cmd(i8* %24)
  br label %out

if.end40:                                         ; preds = %land.lhs.true, %if.end32
  %25 = load i8** %s, align 8
  %26 = load i8* %25, align 1
  %conv41 = sext i8 %26 to i32
  %cmp42 = icmp eq i32 %conv41, 75
  br i1 %cmp42, label %if.then44, label %if.end46

if.then44:                                        ; preds = %if.end40
  store i32 1, i32* %delete, align 4
  %27 = load i8** %s, align 8
  %incdec.ptr45 = getelementptr inbounds i8* %27, i32 1
  store i8* %incdec.ptr45, i8** %s, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %if.end40
  %28 = load i8** %s, align 8
  %29 = load i8* %28, align 1
  %conv47 = sext i8 %29 to i32
  %cmp48 = icmp eq i32 %conv47, 76
  br i1 %cmp48, label %if.then50, label %if.else

if.then50:                                        ; preds = %if.end46
  store i32 1, i32* %local, align 4
  br label %if.end63

if.else:                                          ; preds = %if.end46
  %30 = load i8** %s, align 8
  %31 = load i8* %30, align 1
  %conv51 = sext i8 %31 to i32
  %cmp52 = icmp eq i32 %conv51, 82
  br i1 %cmp52, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.else
  store i32 1, i32* %remote, align 4
  br label %if.end62

if.else55:                                        ; preds = %if.else
  %32 = load i8** %s, align 8
  %33 = load i8* %32, align 1
  %conv56 = sext i8 %33 to i32
  %cmp57 = icmp eq i32 %conv56, 68
  br i1 %cmp57, label %if.then59, label %if.else60

if.then59:                                        ; preds = %if.else55
  store i32 1, i32* %dynamic, align 4
  br label %if.end61

if.else60:                                        ; preds = %if.else55
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([17 x i8]* @.str172587, i32 0, i32 0))
  br label %out

if.end61:                                         ; preds = %if.then59
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then54
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then50
  %34 = load i32* %delete, align 4
  %tobool64 = icmp ne i32 %34, 0
  br i1 %tobool64, label %land.lhs.true65, label %if.end68

land.lhs.true65:                                  ; preds = %if.end63
  %35 = load i32* @compat20, align 4
  %tobool66 = icmp ne i32 %35, 0
  br i1 %tobool66, label %if.end68, label %if.then67

if.then67:                                        ; preds = %land.lhs.true65
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([42 x i8]* @.str173588, i32 0, i32 0))
  br label %out

if.end68:                                         ; preds = %land.lhs.true65, %if.end63
  br label %while.cond69

while.cond69:                                     ; preds = %while.body78, %if.end68
  %36 = load i8** %s, align 8
  %incdec.ptr70 = getelementptr inbounds i8* %36, i32 1
  store i8* %incdec.ptr70, i8** %s, align 8
  %37 = load i8* %incdec.ptr70, align 1
  %conv71 = zext i8 %37 to i32
  %idxprom72 = sext i32 %conv71 to i64
  %call73 = call i16** @__ctype_b_loc() #2
  %38 = load i16** %call73, align 8
  %arrayidx74 = getelementptr inbounds i16* %38, i64 %idxprom72
  %39 = load i16* %arrayidx74, align 2
  %conv75 = zext i16 %39 to i32
  %and76 = and i32 %conv75, 8192
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %while.body78, label %while.end79

while.body78:                                     ; preds = %while.cond69
  br label %while.cond69

while.end79:                                      ; preds = %while.cond69
  %40 = load i32* %delete, align 4
  %tobool80 = icmp ne i32 %40, 0
  br i1 %tobool80, label %if.then81, label %if.else106

if.then81:                                        ; preds = %while.end79
  %41 = load i8** %s, align 8
  %call82 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %41, i32 1, i32 0)
  %tobool83 = icmp ne i32 %call82, 0
  br i1 %tobool83, label %if.end85, label %if.then84

if.then84:                                        ; preds = %if.then81
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([36 x i8]* @.str174589, i32 0, i32 0))
  br label %out

if.end85:                                         ; preds = %if.then81
  %42 = load i32* %remote, align 4
  %tobool86 = icmp ne i32 %42, 0
  br i1 %tobool86, label %if.then87, label %if.else91

if.then87:                                        ; preds = %if.end85
  %call88 = call i32 @channel_request_rforward_cancel(%struct.Forward* %fwd)
  %cmp89 = icmp eq i32 %call88, 0
  %conv90 = zext i1 %cmp89 to i32
  store i32 %conv90, i32* %ok, align 4
  br label %if.end102

if.else91:                                        ; preds = %if.end85
  %43 = load i32* %dynamic, align 4
  %tobool92 = icmp ne i32 %43, 0
  br i1 %tobool92, label %if.then93, label %if.else97

if.then93:                                        ; preds = %if.else91
  %call94 = call i32 @channel_cancel_lport_listener(%struct.Forward* %fwd, i32 0, %struct.ForwardOptions* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6))
  %cmp95 = icmp sgt i32 %call94, 0
  %conv96 = zext i1 %cmp95 to i32
  store i32 %conv96, i32* %ok, align 4
  br label %if.end101

if.else97:                                        ; preds = %if.else91
  %44 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %45 = extractvalue { i32, i1 } %44, 0
  %46 = extractvalue { i32, i1 } %44, 1
  %47 = xor i1 %46, true
  br i1 %47, label %cont, label %trap

trap:                                             ; preds = %if.else97
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.else97
  %call98 = call i32 @channel_cancel_lport_listener(%struct.Forward* %fwd, i32 %45, %struct.ForwardOptions* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6))
  %cmp99 = icmp sgt i32 %call98, 0
  %conv100 = zext i1 %cmp99 to i32
  store i32 %conv100, i32* %ok, align 4
  br label %if.end101

if.end101:                                        ; preds = %cont, %if.then93
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then87
  %48 = load i32* %ok, align 4
  %tobool103 = icmp ne i32 %48, 0
  br i1 %tobool103, label %if.end105, label %if.then104

if.then104:                                       ; preds = %if.end102
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([24 x i8]* @.str175590, i32 0, i32 0))
  br label %out

if.end105:                                        ; preds = %if.end102
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([21 x i8]* @.str176591, i32 0, i32 0))
  br label %if.end126

if.else106:                                       ; preds = %while.end79
  %49 = load i8** %s, align 8
  %50 = load i32* %dynamic, align 4
  %51 = load i32* %remote, align 4
  %call107 = call i32 @parse_forward(%struct.Forward* %fwd, i8* %49, i32 %50, i32 %51)
  %tobool108 = icmp ne i32 %call107, 0
  br i1 %tobool108, label %if.end110, label %if.then109

if.then109:                                       ; preds = %if.else106
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([30 x i8]* @.str177592, i32 0, i32 0))
  br label %out

if.end110:                                        ; preds = %if.else106
  %52 = load i32* %local, align 4
  %tobool111 = icmp ne i32 %52, 0
  br i1 %tobool111, label %if.then114, label %lor.lhs.false112

lor.lhs.false112:                                 ; preds = %if.end110
  %53 = load i32* %dynamic, align 4
  %tobool113 = icmp ne i32 %53, 0
  br i1 %tobool113, label %if.then114, label %if.else119

if.then114:                                       ; preds = %lor.lhs.false112, %if.end110
  %call115 = call i32 @channel_setup_local_fwd_listener(%struct.Forward* %fwd, %struct.ForwardOptions* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6))
  %tobool116 = icmp ne i32 %call115, 0
  br i1 %tobool116, label %if.end118, label %if.then117

if.then117:                                       ; preds = %if.then114
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([24 x i8]* @.str178593, i32 0, i32 0))
  br label %out

if.end118:                                        ; preds = %if.then114
  br label %if.end125

if.else119:                                       ; preds = %lor.lhs.false112
  %call120 = call i32 @channel_request_remote_forwarding(%struct.Forward* %fwd)
  %cmp121 = icmp slt i32 %call120, 0
  br i1 %cmp121, label %if.then123, label %if.end124

if.then123:                                       ; preds = %if.else119
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([24 x i8]* @.str178593, i32 0, i32 0))
  br label %out

if.end124:                                        ; preds = %if.else119
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.end118
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([17 x i8]* @.str179594, i32 0, i32 0))
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.end105
  br label %out

out:                                              ; preds = %if.end126, %if.then123, %if.then117, %if.then109, %if.then104, %if.then84, %if.then67, %if.else60, %if.then37, %if.end31, %if.then30, %if.then16, %if.then
  %54 = load void (i32)** %handler, align 8
  %call127 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 2, void (i32)* %54)
  %55 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp128 = icmp eq i32 %55, 3
  %conv129 = zext i1 %cmp128 to i32
  call void @enter_raw_mode(i32 %conv129)
  %56 = load i8** %cmd, align 8
  call void @free(i8* %56) #9
  %listen_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 0
  %57 = load i8** %listen_host, align 8
  call void @free(i8* %57) #9
  %listen_path = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 2
  %58 = load i8** %listen_path, align 8
  call void @free(i8* %58) #9
  %connect_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 3
  %59 = load i8** %connect_host, align 8
  call void @free(i8* %59) #9
  %connect_path = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 5
  %60 = load i8** %connect_path, align 8
  call void @free(i8* %60) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_init_dispatch_20() #0 {
entry:
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_init(%struct.ssh.68* %0, i32 (i32, i32, i8*)* @dispatch_protocol_error)
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %1, i32 97, i32 (i32, i32, i8*)* @channel_input_oclose)
  %2 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %2, i32 94, i32 (i32, i32, i8*)* @channel_input_data)
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %3, i32 96, i32 (i32, i32, i8*)* @channel_input_ieof)
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %4, i32 95, i32 (i32, i32, i8*)* @channel_input_extended_data)
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %5, i32 90, i32 (i32, i32, i8*)* @client_input_channel_open)
  %6 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %6, i32 91, i32 (i32, i32, i8*)* @channel_input_open_confirmation)
  %7 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %7, i32 92, i32 (i32, i32, i8*)* @channel_input_open_failure)
  %8 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %8, i32 98, i32 (i32, i32, i8*)* @client_input_channel_req)
  %9 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %9, i32 93, i32 (i32, i32, i8*)* @channel_input_window_adjust)
  %10 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %10, i32 99, i32 (i32, i32, i8*)* @channel_input_status_confirm)
  %11 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %11, i32 100, i32 (i32, i32, i8*)* @channel_input_status_confirm)
  %12 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %12, i32 80, i32 (i32, i32, i8*)* @client_input_global_request)
  %13 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %13, i32 20, i32 (i32, i32, i8*)* @kex_input_kexinit)
  %14 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %14, i32 82, i32 (i32, i32, i8*)* @client_global_request_reply)
  %15 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %15, i32 81, i32 (i32, i32, i8*)* @client_global_request_reply)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_init_dispatch_13() #0 {
entry:
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_init(%struct.ssh.68* %0, i32 (i32, i32, i8*)* null)
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %1, i32 24, i32 (i32, i32, i8*)* @channel_input_close)
  %2 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %2, i32 25, i32 (i32, i32, i8*)* @channel_input_close_confirmation)
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %3, i32 23, i32 (i32, i32, i8*)* @channel_input_data)
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %4, i32 21, i32 (i32, i32, i8*)* @channel_input_open_confirmation)
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %5, i32 22, i32 (i32, i32, i8*)* @channel_input_open_failure)
  %6 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %6, i32 29, i32 (i32, i32, i8*)* @channel_input_port_open)
  %7 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %7, i32 20, i32 (i32, i32, i8*)* @client_input_exit_status)
  %8 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %8, i32 18, i32 (i32, i32, i8*)* @client_input_stderr_data)
  %9 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %9, i32 17, i32 (i32, i32, i8*)* @client_input_stdout_data)
  %10 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %11 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool = icmp ne i32 %11, 0
  %cond = select i1 %tobool, i32 (i32, i32, i8*)* @client_input_agent_open, i32 (i32, i32, i8*)* @deny_input_open
  call void @ssh_dispatch_set(%struct.ssh.68* %10, i32 31, i32 (i32, i32, i8*)* %cond)
  %12 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %13 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool1 = icmp ne i32 %13, 0
  %cond2 = select i1 %tobool1, i32 (i32, i32, i8*)* @x11_input_open, i32 (i32, i32, i8*)* @deny_input_open
  call void @ssh_dispatch_set(%struct.ssh.68* %12, i32 27, i32 (i32, i32, i8*)* %cond2)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_init_dispatch_15() #0 {
entry:
  call void @client_init_dispatch_13()
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %0, i32 24, i32 (i32, i32, i8*)* @channel_input_ieof)
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_dispatch_set(%struct.ssh.68* %1, i32 25, i32 (i32, i32, i8*)* @channel_input_oclose)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @enter_non_blocking() #0 {
entry:
  store i32 1, i32* @in_non_blocking_mode, align 4
  %0 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9
  %call1 = call i32 @set_nonblock(i32 %call)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @set_control_persist_exit_time() #0 {
entry:
  %0 = load i32* @muxserver_sock, align 4
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %cmp = icmp eq i32 %0, %2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cont
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 79), align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %lor.lhs.false1, label %if.then

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 80), align 4
  %cmp2 = icmp eq i32 %6, 0
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %cont
  store i64 0, i64* @control_persist_exit_time, align 8
  br label %if.end15

if.else:                                          ; preds = %lor.lhs.false1
  %call = call i32 @channel_still_open()
  %tobool3 = icmp ne i32 %call, 0
  br i1 %tobool3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %if.else
  %7 = load i64* @control_persist_exit_time, align 8
  %cmp5 = icmp sgt i64 %7, 0
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([26 x i8]* @.str145560, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.set_control_persist_exit_time, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then4
  store i64 0, i64* @control_persist_exit_time, align 8
  br label %if.end14

if.else7:                                         ; preds = %if.else
  %8 = load i64* @control_persist_exit_time, align 8
  %cmp8 = icmp sle i64 %8, 0
  br i1 %cmp8, label %if.then9, label %if.end13

if.then9:                                         ; preds = %if.else7
  %call10 = call i64 @monotime()
  %9 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 80), align 4
  %conv = sext i32 %9 to i64
  %10 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %call10, i64 %conv)
  %11 = extractvalue { i64, i1 } %10, 0
  %12 = extractvalue { i64, i1 } %10, 1
  %13 = xor i1 %12, true
  br i1 %13, label %cont12, label %trap11

trap11:                                           ; preds = %if.then9
  call void @llvm.trap() #3
  unreachable

cont12:                                           ; preds = %if.then9
  store i64 %11, i64* @control_persist_exit_time, align 8
  %14 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 80), align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([32 x i8]* @.str146561, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.set_control_persist_exit_time, i32 0, i32 0), i32 %14)
  br label %if.end13

if.end13:                                         ; preds = %cont12, %if.else7
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @server_alive_check() #0 {
entry:
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i32 @ssh_packet_inc_alive_timeouts(%struct.ssh.68* %0)
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 74), align 4
  %cmp = icmp sgt i32 %call, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8** @host, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([35 x i8]* @.str143558, i32 0, i32 0), i8* %2)
  call void @cleanup_exit(i32 255) #11
  unreachable

if.end:                                           ; preds = %entry
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %3, i8 zeroext 80)
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %4, i8* getelementptr inbounds ([22 x i8]* @.str144559, i32 0, i32 0))
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_char to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %5, i32 1)
  %6 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %6)
  call void @client_register_global_confirm(void (i32, i32, i8*)* null, i8* null)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_channel_open(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %c = alloca %struct.Channel.80*, align 8
  %ctype = alloca i8*, align 8
  %rchan = alloca i32, align 4
  %rmaxpack = alloca i32, align 4
  %rwindow = alloca i32, align 4
  %len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i8* @ssh_packet_get_string(%struct.ssh.68* %0, i32* %len)
  store i8* %call, i8** %ctype, align 8
  %call1 = call i32 @packet_get_int()
  store i32 %call1, i32* %rchan, align 4
  %call2 = call i32 @packet_get_int()
  store i32 %call2, i32* %rwindow, align 4
  %call3 = call i32 @packet_get_int()
  store i32 %call3, i32* %rmaxpack, align 4
  %1 = load i8** %ctype, align 8
  %2 = load i32* %rchan, align 4
  %3 = load i32* %rwindow, align 4
  %4 = load i32* %rmaxpack, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([59 x i8]* @.str118533, i32 0, i32 0), i8* %1, i32 %2, i32 %3, i32 %4)
  %5 = load i8** %ctype, align 8
  %call4 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([16 x i8]* @.str119534, i32 0, i32 0)) #12
  %cmp = icmp eq i32 %call4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = load i8** %ctype, align 8
  %7 = load i32* %rchan, align 4
  %8 = load i32* %rwindow, align 4
  %9 = load i32* %rmaxpack, align 4
  %call5 = call %struct.Channel.80* @client_request_forwarded_tcpip(i8* %6, i32 %7, i32 %8, i32 %9)
  store %struct.Channel.80* %call5, %struct.Channel.80** %c, align 8
  br label %if.end22

if.else:                                          ; preds = %entry
  %10 = load i8** %ctype, align 8
  %call6 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([34 x i8]* @.str120535, i32 0, i32 0)) #12
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.else10

if.then8:                                         ; preds = %if.else
  %11 = load i8** %ctype, align 8
  %12 = load i32* %rchan, align 4
  %call9 = call %struct.Channel.80* @client_request_forwarded_streamlocal(i8* %11, i32 %12)
  store %struct.Channel.80* %call9, %struct.Channel.80** %c, align 8
  br label %if.end21

if.else10:                                        ; preds = %if.else
  %13 = load i8** %ctype, align 8
  %call11 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([4 x i8]* @.str121536, i32 0, i32 0)) #12
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.then13, label %if.else15

if.then13:                                        ; preds = %if.else10
  %14 = load i8** %ctype, align 8
  %15 = load i32* %rchan, align 4
  %call14 = call %struct.Channel.80* @client_request_x11(i8* %14, i32 %15)
  store %struct.Channel.80* %call14, %struct.Channel.80** %c, align 8
  br label %if.end20

if.else15:                                        ; preds = %if.else10
  %16 = load i8** %ctype, align 8
  %call16 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([23 x i8]* @.str122537, i32 0, i32 0)) #12
  %cmp17 = icmp eq i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end

if.then18:                                        ; preds = %if.else15
  %17 = load i8** %ctype, align 8
  %18 = load i32* %rchan, align 4
  %call19 = call %struct.Channel.80* @client_request_agent(i8* %17, i32 %18)
  store %struct.Channel.80* %call19, %struct.Channel.80** %c, align 8
  br label %if.end

if.end:                                           ; preds = %if.then18, %if.else15
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then8
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %19 = load %struct.Channel.80** %c, align 8
  %cmp23 = icmp ne %struct.Channel.80* %19, null
  br i1 %cmp23, label %land.lhs.true, label %if.else27

land.lhs.true:                                    ; preds = %if.end22
  %20 = load %struct.Channel.80** %c, align 8
  %type24 = getelementptr inbounds %struct.Channel.80* %20, i32 0, i32 0
  %21 = load i32* %type24, align 4
  %cmp25 = icmp eq i32 %21, 16
  br i1 %cmp25, label %if.then26, label %if.else27

if.then26:                                        ; preds = %land.lhs.true
  %22 = load i8** %ctype, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str123538, i32 0, i32 0), i8* %22)
  br label %if.end39

if.else27:                                        ; preds = %land.lhs.true, %if.end22
  %23 = load %struct.Channel.80** %c, align 8
  %cmp28 = icmp ne %struct.Channel.80* %23, null
  br i1 %cmp28, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.else27
  %24 = load i8** %ctype, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([11 x i8]* @.str124539, i32 0, i32 0), i8* %24)
  %25 = load i32* %rchan, align 4
  %26 = load %struct.Channel.80** %c, align 8
  %remote_id = getelementptr inbounds %struct.Channel.80* %26, i32 0, i32 2
  store i32 %25, i32* %remote_id, align 4
  %27 = load i32* %rwindow, align 4
  %28 = load %struct.Channel.80** %c, align 8
  %remote_window = getelementptr inbounds %struct.Channel.80* %28, i32 0, i32 24
  store i32 %27, i32* %remote_window, align 4
  %29 = load i32* %rmaxpack, align 4
  %30 = load %struct.Channel.80** %c, align 8
  %remote_maxpacket = getelementptr inbounds %struct.Channel.80* %30, i32 0, i32 25
  store i32 %29, i32* %remote_maxpacket, align 4
  %31 = load %struct.Channel.80** %c, align 8
  %type30 = getelementptr inbounds %struct.Channel.80* %31, i32 0, i32 0
  %32 = load i32* %type30, align 4
  %cmp31 = icmp ne i32 %32, 12
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.then29
  %33 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %33, i8 zeroext 91)
  %34 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %35 = load %struct.Channel.80** %c, align 8
  %remote_id33 = getelementptr inbounds %struct.Channel.80* %35, i32 0, i32 2
  %36 = load i32* %remote_id33, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %34, i32 %36)
  %37 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %38 = load %struct.Channel.80** %c, align 8
  %self = getelementptr inbounds %struct.Channel.80* %38, i32 0, i32 1
  %39 = load i32* %self, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %37, i32 %39)
  %40 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %41 = load %struct.Channel.80** %c, align 8
  %local_window = getelementptr inbounds %struct.Channel.80* %41, i32 0, i32 26
  %42 = load i32* %local_window, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %40, i32 %42)
  %43 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %44 = load %struct.Channel.80** %c, align 8
  %local_maxpacket = getelementptr inbounds %struct.Channel.80* %44, i32 0, i32 29
  %45 = load i32* %local_maxpacket, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %43, i32 %45)
  %46 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %46)
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.then29
  br label %if.end38

if.else35:                                        ; preds = %if.else27
  %47 = load i8** %ctype, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([11 x i8]* @.str125540, i32 0, i32 0), i8* %47)
  %48 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %48, i8 zeroext 92)
  %49 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %50 = load i32* %rchan, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %49, i32 %50)
  %51 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %51, i32 1)
  %52 = load i32* @datafellows, align 4
  %and = and i32 %52, 131072
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end37, label %if.then36

if.then36:                                        ; preds = %if.else35
  %53 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %53, i8* getelementptr inbounds ([12 x i8]* @.str126541, i32 0, i32 0))
  %54 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8*)* @ssh_packet_put_cstring to void (%struct.ssh.68*, i8*)*)(%struct.ssh.68* %54, i8* getelementptr inbounds ([1 x i8]* @.str13428, i32 0, i32 0))
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %if.else35
  %55 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %55)
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then26
  %56 = load i8** %ctype, align 8
  call void @free(i8* %56) #9
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_channel_req(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %c = alloca %struct.Channel.80*, align 8
  %exitval = alloca i32, align 4
  %id = alloca i32, align 4
  %reply = alloca i32, align 4
  %success = alloca i32, align 4
  %rtype = alloca i8*, align 8
  %_len = alloca i32, align 4
  %_len32 = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  store i32 0, i32* %success, align 4
  %call = call i32 @packet_get_int()
  store i32 %call, i32* %id, align 4
  %0 = load i32* %id, align 4
  %call1 = call %struct.Channel.80* @channel_lookup(i32 %0)
  store %struct.Channel.80* %call1, %struct.Channel.80** %c, align 8
  %1 = load %struct.Channel.80** %c, align 8
  %2 = load i32* %type.addr, align 4
  %3 = load i32* %seq.addr, align 4
  %4 = load i8** %ctxt.addr, align 8
  %call2 = call i32 @channel_proxy_upstream(%struct.Channel.80* %1, i32 %2, i32 %3, i8* %4)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call3 = call i8* @ssh_packet_get_string(%struct.ssh.68* %5, i32* null)
  store i8* %call3, i8** %rtype, align 8
  %call4 = call i32 @packet_get_char()
  store i32 %call4, i32* %reply, align 4
  %6 = load i32* %id, align 4
  %7 = load i8** %rtype, align 8
  %8 = load i32* %reply, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([55 x i8]* @.str112527, i32 0, i32 0), i32 %6, i8* %7, i32 %8)
  %9 = load i32* %id, align 4
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %11 = extractvalue { i32, i1 } %10, 0
  %12 = extractvalue { i32, i1 } %10, 1
  %13 = xor i1 %12, true
  br i1 %13, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp = icmp eq i32 %9, %11
  br i1 %cmp, label %if.then5, label %if.else

if.then5:                                         ; preds = %cont
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([49 x i8]* @.str113528, i32 0, i32 0))
  br label %if.end41

if.else:                                          ; preds = %cont
  %14 = load %struct.Channel.80** %c, align 8
  %cmp6 = icmp eq %struct.Channel.80* %14, null
  br i1 %cmp6, label %if.then7, label %if.else8

if.then7:                                         ; preds = %if.else
  %15 = load i32* %id, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([54 x i8]* @.str114529, i32 0, i32 0), i32 %15)
  br label %if.end40

if.else8:                                         ; preds = %if.else
  %16 = load i8** %rtype, align 8
  %call9 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([16 x i8]* @.str115530, i32 0, i32 0)) #12
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.else16

if.then11:                                        ; preds = %if.else8
  br label %do.body

do.body:                                          ; preds = %if.then11
  %17 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call12 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %17)
  store i32 %call12, i32* %_len, align 4
  %18 = load i32* %_len, align 4
  %cmp13 = icmp sgt i32 %18, 0
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %do.body
  %19 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %19, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 2157)
  %20 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %20, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end15:                                         ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end15
  %21 = load %struct.Channel.80** %c, align 8
  call void @chan_rcvd_eow(%struct.Channel.80* %21)
  br label %if.end39

if.else16:                                        ; preds = %if.else8
  %22 = load i8** %rtype, align 8
  %call17 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([12 x i8]* @.str116531, i32 0, i32 0)) #12
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end38

if.then19:                                        ; preds = %if.else16
  %call20 = call i32 @packet_get_int()
  store i32 %call20, i32* %exitval, align 4
  %23 = load %struct.Channel.80** %c, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel.80* %23, i32 0, i32 10
  %24 = load i32* %ctl_chan, align 4
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont22, label %trap21

trap21:                                           ; preds = %if.then19
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %if.then19
  %cmp23 = icmp ne i32 %24, %26
  br i1 %cmp23, label %if.then24, label %if.else25

if.then24:                                        ; preds = %cont22
  %29 = load %struct.Channel.80** %c, align 8
  %30 = load i32* %exitval, align 4
  call void bitcast (void (%struct.Channel*, i32)* @mux_exit_message to void (%struct.Channel.80*, i32)*)(%struct.Channel.80* %29, i32 %30)
  store i32 1, i32* %success, align 4
  br label %if.end30

if.else25:                                        ; preds = %cont22
  %31 = load i32* %id, align 4
  %32 = load i32* @session_ident, align 4
  %cmp26 = icmp eq i32 %31, %32
  br i1 %cmp26, label %if.then27, label %if.else28

if.then27:                                        ; preds = %if.else25
  store i32 1, i32* %success, align 4
  %33 = load i32* %exitval, align 4
  store i32 %33, i32* @exit_status, align 4
  br label %if.end29

if.else28:                                        ; preds = %if.else25
  %34 = load i32* %id, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([42 x i8]* @.str117532, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.client_input_channel_req, i32 0, i32 0), i32 %34)
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.then27
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then24
  br label %do.body31

do.body31:                                        ; preds = %if.end30
  %35 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call33 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %35)
  store i32 %call33, i32* %_len32, align 4
  %36 = load i32* %_len32, align 4
  %cmp34 = icmp sgt i32 %36, 0
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %do.body31
  %37 = load i32* %_len32, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %37, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 2173)
  %38 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %38, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end36:                                         ; preds = %do.body31
  br label %do.end37

do.end37:                                         ; preds = %if.end36
  br label %if.end38

if.end38:                                         ; preds = %do.end37, %if.else16
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %do.end
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then7
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then5
  %39 = load i32* %reply, align 4
  %tobool42 = icmp ne i32 %39, 0
  br i1 %tobool42, label %land.lhs.true, label %if.end48

land.lhs.true:                                    ; preds = %if.end41
  %40 = load %struct.Channel.80** %c, align 8
  %cmp43 = icmp ne %struct.Channel.80* %40, null
  br i1 %cmp43, label %land.lhs.true44, label %if.end48

land.lhs.true44:                                  ; preds = %land.lhs.true
  %41 = load %struct.Channel.80** %c, align 8
  %flags = getelementptr inbounds %struct.Channel.80* %41, i32 0, i32 5
  %42 = load i32* %flags, align 4
  %and = and i32 %42, 1
  %tobool45 = icmp ne i32 %and, 0
  br i1 %tobool45, label %if.end48, label %if.then46

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %44 = load i32* %success, align 4
  %tobool47 = icmp ne i32 %44, 0
  %cond = select i1 %tobool47, i32 99, i32 100
  %conv = trunc i32 %cond to i8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %43, i8 zeroext %conv)
  %45 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %46 = load %struct.Channel.80** %c, align 8
  %remote_id = getelementptr inbounds %struct.Channel.80* %46, i32 0, i32 2
  %47 = load i32* %remote_id, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %45, i32 %47)
  %48 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %48)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %land.lhs.true44, %land.lhs.true, %if.end41
  %49 = load i8** %rtype, align 8
  call void @free(i8* %49) #9
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end48, %if.then
  %50 = load i32* %retval
  ret i32 %50
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_global_request(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %rtype = alloca i8*, align 8
  %want_reply = alloca i32, align 4
  %success = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  store i32 0, i32* %success, align 4
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i8* @ssh_packet_get_cstring(%struct.ssh.68* %0, i32* null)
  store i8* %call, i8** %rtype, align 8
  %call1 = call i32 @packet_get_char()
  store i32 %call1, i32* %want_reply, align 4
  %1 = load i8** %rtype, align 8
  %2 = load i32* %want_reply, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([52 x i8]* @.str72487, i32 0, i32 0), i8* %1, i32 %2)
  %3 = load i8** %rtype, align 8
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([24 x i8]* @.str73488, i32 0, i32 0)) #12
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call3 = call i32 @client_input_hostkeys()
  store i32 %call3, i32* %success, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32* %want_reply, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %6 = load i32* %success, align 4
  %tobool5 = icmp ne i32 %6, 0
  %cond = select i1 %tobool5, i32 81, i32 82
  %conv = trunc i32 %cond to i8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %5, i8 zeroext %conv)
  %7 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %7)
  call void @packet_write_wait()
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %8 = load i8** %rtype, align 8
  call void @free(i8* %8) #9
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_global_request_reply(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %gc = alloca %struct.global_confirm*, align 8
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  %0 = load %struct.global_confirm** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 0), align 8
  store %struct.global_confirm* %0, %struct.global_confirm** %gc, align 8
  %cmp = icmp eq %struct.global_confirm* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load %struct.global_confirm** %gc, align 8
  %cb = getelementptr inbounds %struct.global_confirm* %1, i32 0, i32 1
  %2 = load void (i32, i32, i8*)** %cb, align 8
  %cmp1 = icmp ne void (i32, i32, i8*)* %2, null
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %3 = load %struct.global_confirm** %gc, align 8
  %cb3 = getelementptr inbounds %struct.global_confirm* %3, i32 0, i32 1
  %4 = load void (i32, i32, i8*)** %cb3, align 8
  %5 = load i32* %type.addr, align 4
  %6 = load i32* %seq.addr, align 4
  %7 = load %struct.global_confirm** %gc, align 8
  %ctx = getelementptr inbounds %struct.global_confirm* %7, i32 0, i32 2
  %8 = load i8** %ctx, align 8
  call void %4(i32 %5, i32 %6, i8* %8)
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.global_confirm** %gc, align 8
  %ref_count = getelementptr inbounds %struct.global_confirm* %9, i32 0, i32 3
  %10 = load i32* %ref_count, align 4
  %11 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 -1)
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = extractvalue { i32, i1 } %11, 1
  %14 = xor i1 %13, true
  br i1 %14, label %cont, label %trap

trap:                                             ; preds = %if.end4
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end4
  store i32 %12, i32* %ref_count, align 4
  %cmp5 = icmp sle i32 %12, 0
  br i1 %cmp5, label %if.then6, label %if.end22

if.then6:                                         ; preds = %cont
  br label %do.body

do.body:                                          ; preds = %if.then6
  %15 = load %struct.global_confirm** %gc, align 8
  %entry7 = getelementptr inbounds %struct.global_confirm* %15, i32 0, i32 0
  %tqe_next = getelementptr inbounds %struct.anon.0.29* %entry7, i32 0, i32 0
  %16 = load %struct.global_confirm** %tqe_next, align 8
  %cmp8 = icmp ne %struct.global_confirm* %16, null
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %do.body
  %17 = load %struct.global_confirm** %gc, align 8
  %entry10 = getelementptr inbounds %struct.global_confirm* %17, i32 0, i32 0
  %tqe_prev = getelementptr inbounds %struct.anon.0.29* %entry10, i32 0, i32 1
  %18 = load %struct.global_confirm*** %tqe_prev, align 8
  %19 = load %struct.global_confirm** %gc, align 8
  %entry11 = getelementptr inbounds %struct.global_confirm* %19, i32 0, i32 0
  %tqe_next12 = getelementptr inbounds %struct.anon.0.29* %entry11, i32 0, i32 0
  %20 = load %struct.global_confirm** %tqe_next12, align 8
  %entry13 = getelementptr inbounds %struct.global_confirm* %20, i32 0, i32 0
  %tqe_prev14 = getelementptr inbounds %struct.anon.0.29* %entry13, i32 0, i32 1
  store %struct.global_confirm** %18, %struct.global_confirm*** %tqe_prev14, align 8
  br label %if.end17

if.else:                                          ; preds = %do.body
  %21 = load %struct.global_confirm** %gc, align 8
  %entry15 = getelementptr inbounds %struct.global_confirm* %21, i32 0, i32 0
  %tqe_prev16 = getelementptr inbounds %struct.anon.0.29* %entry15, i32 0, i32 1
  %22 = load %struct.global_confirm*** %tqe_prev16, align 8
  store %struct.global_confirm** %22, %struct.global_confirm*** getelementptr inbounds (%struct.global_confirms* @global_confirms, i32 0, i32 1), align 8
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then9
  %23 = load %struct.global_confirm** %gc, align 8
  %entry18 = getelementptr inbounds %struct.global_confirm* %23, i32 0, i32 0
  %tqe_next19 = getelementptr inbounds %struct.anon.0.29* %entry18, i32 0, i32 0
  %24 = load %struct.global_confirm** %tqe_next19, align 8
  %25 = load %struct.global_confirm** %gc, align 8
  %entry20 = getelementptr inbounds %struct.global_confirm* %25, i32 0, i32 0
  %tqe_prev21 = getelementptr inbounds %struct.anon.0.29* %entry20, i32 0, i32 1
  %26 = load %struct.global_confirm*** %tqe_prev21, align 8
  store %struct.global_confirm* %24, %struct.global_confirm** %26, align 8
  br label %do.end

do.end:                                           ; preds = %if.end17
  %27 = load %struct.global_confirm** %gc, align 8
  %28 = bitcast %struct.global_confirm* %27 to i8*
  call void @explicit_bzero(i8* %28, i64 40)
  %29 = load %struct.global_confirm** %gc, align 8
  %30 = bitcast %struct.global_confirm* %29 to i8*
  call void @free(i8* %30) #9
  br label %if.end22

if.end22:                                         ; preds = %do.end, %cont
  %31 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void @ssh_packet_set_alive_timeouts(%struct.ssh.68* %31, i32 0)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end22, %if.then
  %32 = load i32* %retval
  ret i32 %32
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_exit_status(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  %call = call i32 @packet_get_int()
  store i32 %call, i32* @exit_status, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call1 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %0)
  store i32 %call1, i32* %_len, align 4
  %1 = load i32* %_len, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %2 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %2, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1832)
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %3, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %4, i8 zeroext 33)
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %5)
  call void @packet_write_wait()
  store volatile i32 1, i32* @quit_pending, align 4
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_stderr_data(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %data_len = alloca i32, align 4
  %data = alloca i8*, align 8
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i8* @ssh_packet_get_string(%struct.ssh.68* %0, i32* %data_len)
  store i8* %call, i8** %data, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call1 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %1)
  store i32 %call1, i32* %_len, align 4
  %2 = load i32* %_len, align 4
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %3 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %3, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1822)
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %4, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %5 = load i8** %data, align 8
  %6 = load i32* %data_len, align 4
  call void @buffer_append(%struct.sshbuf* @stderr_buffer, i8* %5, i32 %6)
  %7 = load i8** %data, align 8
  %8 = load i32* %data_len, align 4
  %conv = zext i32 %8 to i64
  call void @explicit_bzero(i8* %7, i64 %conv)
  %9 = load i8** %data, align 8
  call void @free(i8* %9) #9
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_stdout_data(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %data_len = alloca i32, align 4
  %data = alloca i8*, align 8
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i8* @ssh_packet_get_string(%struct.ssh.68* %0, i32* %data_len)
  store i8* %call, i8** %data, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call1 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %1)
  store i32 %call1, i32* %_len, align 4
  %2 = load i32* %_len, align 4
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %3 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %3, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1811)
  %4 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %4, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %5 = load i8** %data, align 8
  %6 = load i32* %data_len, align 4
  call void @buffer_append(%struct.sshbuf* @stdout_buffer, i8* %5, i32 %6)
  %7 = load i8** %data, align 8
  %8 = load i32* %data_len, align 4
  %conv = zext i32 %8 to i64
  call void @explicit_bzero(i8* %7, i64 %conv)
  %9 = load i8** %data, align 8
  call void @free(i8* %9) #9
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_agent_open(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %c = alloca %struct.Channel.80*, align 8
  %r = alloca i32, align 4
  %remote_id = alloca i32, align 4
  %sock = alloca i32, align 4
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  %call = call i32 @packet_get_int()
  store i32 %call, i32* %remote_id, align 4
  br label %do.body

do.body:                                          ; preds = %entry
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call1 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %0)
  store i32 %call1, i32* %_len, align 4
  %1 = load i32* %_len, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %2 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %2, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1854)
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %3, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %call2 = call i32 @ssh_get_authentication_socket(i32* %sock)
  store i32 %call2, i32* %r, align 4
  %cmp3 = icmp ne i32 %call2, 0
  br i1 %cmp3, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %do.end
  %4 = load i32* %r, align 4
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 47)
  %6 = extractvalue { i32, i1 } %5, 0
  %7 = extractvalue { i32, i1 } %5, 1
  %8 = xor i1 %7, true
  br i1 %8, label %cont, label %trap

trap:                                             ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %land.lhs.true
  %cmp4 = icmp ne i32 %4, %6
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %cont
  %9 = load i32* %r, align 4
  %call6 = call i8* @ssh_err(i32 %9)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([38 x i8]* @.str69484, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.client_input_agent_open, i32 0, i32 0), i8* %call6)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %cont, %do.end
  %10 = load i32* %sock, align 4
  %cmp8 = icmp sge i32 %10, 0
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %if.end7
  %11 = load i32* %sock, align 4
  %12 = load i32* %sock, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont11, label %trap10

trap10:                                           ; preds = %if.then9
  call void @llvm.trap() #3
  unreachable

cont11:                                           ; preds = %if.then9
  %call12 = call %struct.Channel.80* bitcast (%struct.Channel* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)* @channel_new to %struct.Channel.80* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)*)(i8* getelementptr inbounds ([1 x i8]* @.str13428, i32 0, i32 0), i32 4, i32 %11, i32 %12, i32 %14, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([32 x i8]* @.str70485, i32 0, i32 0), i32 1)
  store %struct.Channel.80* %call12, %struct.Channel.80** %c, align 8
  %17 = load i32* %remote_id, align 4
  %18 = load %struct.Channel.80** %c, align 8
  %remote_id13 = getelementptr inbounds %struct.Channel.80* %18, i32 0, i32 2
  store i32 %17, i32* %remote_id13, align 4
  %19 = load %struct.Channel.80** %c, align 8
  %force_drain = getelementptr inbounds %struct.Channel.80* %19, i32 0, i32 13
  store i32 1, i32* %force_drain, align 4
  br label %if.end14

if.end14:                                         ; preds = %cont11, %if.end7
  %20 = load %struct.Channel.80** %c, align 8
  %cmp15 = icmp eq %struct.Channel.80* %20, null
  br i1 %cmp15, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end14
  %21 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %21, i8 zeroext 22)
  %22 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %23 = load i32* %remote_id, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %22, i32 %23)
  br label %if.end17

if.else:                                          ; preds = %if.end14
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([38 x i8]* @.str71486, i32 0, i32 0))
  %24 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*, i8)* @ssh_packet_start to void (%struct.ssh.68*, i8)*)(%struct.ssh.68* %24, i8 zeroext 21)
  %25 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %26 = load i32* %remote_id, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %25, i32 %26)
  %27 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %28 = load %struct.Channel.80** %c, align 8
  %self = getelementptr inbounds %struct.Channel.80* %28, i32 0, i32 1
  %29 = load i32* %self, align 4
  call void bitcast (void (%struct.ssh*, i32)* @ssh_packet_put_int to void (%struct.ssh.68*, i32)*)(%struct.ssh.68* %27, i32 %29)
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then16
  %30 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void bitcast (void (%struct.ssh*)* @ssh_packet_send to void (%struct.ssh.68*)*)(%struct.ssh.68* %30)
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.Channel.80* @client_request_forwarded_tcpip(i8* %request_type, i32 %rchan, i32 %rwindow, i32 %rmaxpack) #0 {
entry:
  %request_type.addr = alloca i8*, align 8
  %rchan.addr = alloca i32, align 4
  %rwindow.addr = alloca i32, align 4
  %rmaxpack.addr = alloca i32, align 4
  %c = alloca %struct.Channel.80*, align 8
  %b = alloca %struct.sshbuf*, align 8
  %listen_address = alloca i8*, align 8
  %originator_address = alloca i8*, align 8
  %listen_port = alloca i16, align 2
  %originator_port = alloca i16, align 2
  %r = alloca i32, align 4
  %_len = alloca i32, align 4
  store i8* %request_type, i8** %request_type.addr, align 8
  store i32 %rchan, i32* %rchan.addr, align 4
  store i32 %rwindow, i32* %rwindow.addr, align 4
  store i32 %rmaxpack, i32* %rmaxpack.addr, align 4
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  store %struct.sshbuf* null, %struct.sshbuf** %b, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i8* @ssh_packet_get_string(%struct.ssh.68* %0, i32* null)
  store i8* %call, i8** %listen_address, align 8
  %call1 = call i32 @packet_get_int()
  %conv = trunc i32 %call1 to i16
  store i16 %conv, i16* %listen_port, align 2
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call2 = call i8* @ssh_packet_get_string(%struct.ssh.68* %1, i32* null)
  store i8* %call2, i8** %originator_address, align 8
  %call3 = call i32 @packet_get_int()
  %conv4 = trunc i32 %call3 to i16
  store i16 %conv4, i16* %originator_port, align 2
  br label %do.body

do.body:                                          ; preds = %entry
  %2 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call5 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %2)
  store i32 %call5, i32* %_len, align 4
  %3 = load i32* %_len, align 4
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %do.body
  %4 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %4, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1907)
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %5, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %6 = load i8** %listen_address, align 8
  %7 = load i16* %listen_port, align 2
  %conv7 = zext i16 %7 to i32
  %8 = load i8** %originator_address, align 8
  %9 = load i16* %originator_port, align 2
  %conv8 = zext i16 %9 to i32
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([45 x i8]* @.str135550, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @__func__.client_request_forwarded_tcpip, i32 0, i32 0), i8* %6, i32 %conv7, i8* %8, i32 %conv8)
  %10 = load i8** %listen_address, align 8
  %11 = load i16* %listen_port, align 2
  %12 = load i8** %originator_address, align 8
  %call9 = call %struct.Channel.80* @channel_connect_by_listen_address(i8* %10, i16 zeroext %11, i8* getelementptr inbounds ([16 x i8]* @.str119534, i32 0, i32 0), i8* %12)
  store %struct.Channel.80* %call9, %struct.Channel.80** %c, align 8
  %13 = load %struct.Channel.80** %c, align 8
  %cmp10 = icmp ne %struct.Channel.80* %13, null
  br i1 %cmp10, label %land.lhs.true, label %if.end67

land.lhs.true:                                    ; preds = %do.end
  %14 = load %struct.Channel.80** %c, align 8
  %type = getelementptr inbounds %struct.Channel.80* %14, i32 0, i32 0
  %15 = load i32* %type, align 4
  %cmp12 = icmp eq i32 %15, 16
  br i1 %cmp12, label %if.then14, label %if.end67

if.then14:                                        ; preds = %land.lhs.true
  %call15 = call %struct.sshbuf* @sshbuf_new()
  store %struct.sshbuf* %call15, %struct.sshbuf** %b, align 8
  %cmp16 = icmp eq %struct.sshbuf* %call15, null
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; preds = %if.then14
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([16 x i8]* @.str136551, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @__func__.client_request_forwarded_tcpip, i32 0, i32 0))
  br label %out

if.end19:                                         ; preds = %if.then14
  %16 = load %struct.sshbuf** %b, align 8
  %call20 = call i32 @sshbuf_put_u8(%struct.sshbuf* %16, i8 zeroext 0)
  store i32 %call20, i32* %r, align 4
  %cmp21 = icmp ne i32 %call20, 0
  br i1 %cmp21, label %if.then64, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end19
  %17 = load %struct.sshbuf** %b, align 8
  %call23 = call i32 @sshbuf_put_u8(%struct.sshbuf* %17, i8 zeroext 90)
  store i32 %call23, i32* %r, align 4
  %cmp24 = icmp ne i32 %call23, 0
  br i1 %cmp24, label %if.then64, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %18 = load %struct.sshbuf** %b, align 8
  %19 = load i8** %request_type.addr, align 8
  %call27 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %18, i8* %19)
  store i32 %call27, i32* %r, align 4
  %cmp28 = icmp ne i32 %call27, 0
  br i1 %cmp28, label %if.then64, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false26
  %20 = load %struct.sshbuf** %b, align 8
  %21 = load i32* %rchan.addr, align 4
  %call31 = call i32 @sshbuf_put_u32(%struct.sshbuf* %20, i32 %21)
  store i32 %call31, i32* %r, align 4
  %cmp32 = icmp ne i32 %call31, 0
  br i1 %cmp32, label %if.then64, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %lor.lhs.false30
  %22 = load %struct.sshbuf** %b, align 8
  %23 = load i32* %rwindow.addr, align 4
  %call35 = call i32 @sshbuf_put_u32(%struct.sshbuf* %22, i32 %23)
  store i32 %call35, i32* %r, align 4
  %cmp36 = icmp ne i32 %call35, 0
  br i1 %cmp36, label %if.then64, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %24 = load %struct.sshbuf** %b, align 8
  %25 = load i32* %rmaxpack.addr, align 4
  %call39 = call i32 @sshbuf_put_u32(%struct.sshbuf* %24, i32 %25)
  store i32 %call39, i32* %r, align 4
  %cmp40 = icmp ne i32 %call39, 0
  br i1 %cmp40, label %if.then64, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %26 = load %struct.sshbuf** %b, align 8
  %27 = load i8** %listen_address, align 8
  %call43 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %26, i8* %27)
  store i32 %call43, i32* %r, align 4
  %cmp44 = icmp ne i32 %call43, 0
  br i1 %cmp44, label %if.then64, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %lor.lhs.false42
  %28 = load %struct.sshbuf** %b, align 8
  %29 = load i16* %listen_port, align 2
  %conv47 = zext i16 %29 to i32
  %call48 = call i32 @sshbuf_put_u32(%struct.sshbuf* %28, i32 %conv47)
  store i32 %call48, i32* %r, align 4
  %cmp49 = icmp ne i32 %call48, 0
  br i1 %cmp49, label %if.then64, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false46
  %30 = load %struct.sshbuf** %b, align 8
  %31 = load i8** %originator_address, align 8
  %call52 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %30, i8* %31)
  store i32 %call52, i32* %r, align 4
  %cmp53 = icmp ne i32 %call52, 0
  br i1 %cmp53, label %if.then64, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false51
  %32 = load %struct.sshbuf** %b, align 8
  %33 = load i16* %originator_port, align 2
  %conv56 = zext i16 %33 to i32
  %call57 = call i32 @sshbuf_put_u32(%struct.sshbuf* %32, i32 %conv56)
  store i32 %call57, i32* %r, align 4
  %cmp58 = icmp ne i32 %call57, 0
  br i1 %cmp58, label %if.then64, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %lor.lhs.false55
  %34 = load %struct.Channel.80** %c, align 8
  %output = getelementptr inbounds %struct.Channel.80* %34, i32 0, i32 17
  %35 = load %struct.sshbuf** %b, align 8
  %call61 = call i32 @sshbuf_put_stringb(%struct.sshbuf* %output, %struct.sshbuf* %35)
  store i32 %call61, i32* %r, align 4
  %cmp62 = icmp ne i32 %call61, 0
  br i1 %cmp62, label %if.then64, label %if.end66

if.then64:                                        ; preds = %lor.lhs.false60, %lor.lhs.false55, %lor.lhs.false51, %lor.lhs.false46, %lor.lhs.false42, %lor.lhs.false38, %lor.lhs.false34, %lor.lhs.false30, %lor.lhs.false26, %lor.lhs.false, %if.end19
  %36 = load i32* %r, align 4
  %call65 = call i8* @ssh_err(i32 %36)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([29 x i8]* @.str137552, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @__func__.client_request_forwarded_tcpip, i32 0, i32 0), i8* %call65)
  br label %out

if.end66:                                         ; preds = %lor.lhs.false60
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %land.lhs.true, %do.end
  br label %out

out:                                              ; preds = %if.end67, %if.then64, %if.then18
  %37 = load %struct.sshbuf** %b, align 8
  call void @sshbuf_free(%struct.sshbuf* %37)
  %38 = load i8** %originator_address, align 8
  call void @free(i8* %38) #9
  %39 = load i8** %listen_address, align 8
  call void @free(i8* %39) #9
  %40 = load %struct.Channel.80** %c, align 8
  ret %struct.Channel.80* %40
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.Channel.80* @client_request_forwarded_streamlocal(i8* %request_type, i32 %rchan) #0 {
entry:
  %request_type.addr = alloca i8*, align 8
  %rchan.addr = alloca i32, align 4
  %c = alloca %struct.Channel.80*, align 8
  %listen_path = alloca i8*, align 8
  %_len = alloca i32, align 4
  store i8* %request_type, i8** %request_type.addr, align 8
  store i32 %rchan, i32* %rchan.addr, align 4
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call = call i8* @ssh_packet_get_string(%struct.ssh.68* %0, i32* null)
  store i8* %call, i8** %listen_path, align 8
  %1 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call1 = call i8* @ssh_packet_get_string_ptr(%struct.ssh.68* %1, i32* null)
  %cmp = icmp eq i8* %call1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([33 x i8]* @.str133548, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8]* @__func__.client_request_forwarded_streamlocal, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %if.end
  %2 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call2 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %2)
  store i32 %call2, i32* %_len, align 4
  %3 = load i32* %_len, align 4
  %cmp3 = icmp sgt i32 %3, 0
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %do.body
  %4 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %4, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1956)
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %5, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end5:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end5
  %6 = load i8** %listen_path, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([7 x i8]* @.str10425, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8]* @__func__.client_request_forwarded_streamlocal, i32 0, i32 0), i8* %6)
  %7 = load i8** %listen_path, align 8
  %call6 = call %struct.Channel.80* @channel_connect_by_listen_path(i8* %7, i8* getelementptr inbounds ([34 x i8]* @.str120535, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str134549, i32 0, i32 0))
  store %struct.Channel.80* %call6, %struct.Channel.80** %c, align 8
  %8 = load i8** %listen_path, align 8
  call void @free(i8* %8) #9
  %9 = load %struct.Channel.80** %c, align 8
  ret %struct.Channel.80* %9
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.Channel.80* @client_request_x11(i8* %request_type, i32 %rchan) #0 {
entry:
  %retval = alloca %struct.Channel.80*, align 8
  %request_type.addr = alloca i8*, align 8
  %rchan.addr = alloca i32, align 4
  %c = alloca %struct.Channel.80*, align 8
  %originator = alloca i8*, align 8
  %originator_port = alloca i16, align 2
  %sock = alloca i32, align 4
  %_len = alloca i32, align 4
  store i8* %request_type, i8** %request_type.addr, align 8
  store i32 %rchan, i32* %rchan.addr, align 4
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str129544, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([68 x i8]* @.str128543, i32 0, i32 0))
  store %struct.Channel.80* null, %struct.Channel.80** %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @x11_refuse_time, align 4
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %land.lhs.true, label %if.end4

land.lhs.true:                                    ; preds = %if.end
  %call = call i64 @monotime()
  %conv = trunc i64 %call to i32
  %2 = load i32* @x11_refuse_time, align 4
  %cmp1 = icmp uge i32 %conv, %2
  br i1 %cmp1, label %if.then3, label %if.end4

if.then3:                                         ; preds = %land.lhs.true
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([56 x i8]* @.str130545, i32 0, i32 0))
  store %struct.Channel.80* null, %struct.Channel.80** %retval
  br label %return

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %3 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call5 = call i8* @ssh_packet_get_string(%struct.ssh.68* %3, i32* null)
  store i8* %call5, i8** %originator, align 8
  %4 = load i32* @datafellows, align 4
  %and = and i32 %4, 8
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([46 x i8]* @.str131546, i32 0, i32 0))
  store i16 0, i16* %originator_port, align 2
  br label %if.end10

if.else:                                          ; preds = %if.end4
  %call8 = call i32 @packet_get_int()
  %conv9 = trunc i32 %call8 to i16
  store i16 %conv9, i16* %originator_port, align 2
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  br label %do.body

do.body:                                          ; preds = %if.end10
  %5 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  %call11 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %5)
  store i32 %call11, i32* %_len, align 4
  %6 = load i32* %_len, align 4
  %cmp12 = icmp sgt i32 %6, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %do.body
  %7 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %7, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 1992)
  %8 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %8, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end15:                                         ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end15
  %9 = load i8** %originator, align 8
  %10 = load i16* %originator_port, align 2
  %conv16 = zext i16 %10 to i32
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([39 x i8]* @.str132547, i32 0, i32 0), i8* %9, i32 %conv16)
  %11 = load i8** %originator, align 8
  call void @free(i8* %11) #9
  %call17 = call i32 @x11_connect_display()
  store i32 %call17, i32* %sock, align 4
  %12 = load i32* %sock, align 4
  %cmp18 = icmp slt i32 %12, 0
  br i1 %cmp18, label %if.then20, label %if.end21

if.then20:                                        ; preds = %do.end
  store %struct.Channel.80* null, %struct.Channel.80** %retval
  br label %return

if.end21:                                         ; preds = %do.end
  %13 = load i32* %sock, align 4
  %14 = load i32* %sock, align 4
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %16 = extractvalue { i32, i1 } %15, 0
  %17 = extractvalue { i32, i1 } %15, 1
  %18 = xor i1 %17, true
  br i1 %18, label %cont, label %trap

trap:                                             ; preds = %if.end21
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end21
  %19 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont23, label %trap22

trap22:                                           ; preds = %cont
  call void @llvm.trap() #3
  unreachable

cont23:                                           ; preds = %cont
  %23 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 64, i32 %20)
  %24 = extractvalue { i32, i1 } %23, 0
  %25 = extractvalue { i32, i1 } %23, 1
  %26 = xor i1 %25, true
  br i1 %26, label %cont25, label %trap24

trap24:                                           ; preds = %cont23
  call void @llvm.trap() #3
  unreachable

cont25:                                           ; preds = %cont23
  %27 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 16, i32 1024)
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  %30 = xor i1 %29, true
  br i1 %30, label %cont27, label %trap26

trap26:                                           ; preds = %cont25
  call void @llvm.trap() #3
  unreachable

cont27:                                           ; preds = %cont25
  %call28 = call %struct.Channel.80* bitcast (%struct.Channel* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)* @channel_new to %struct.Channel.80* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)*)(i8* getelementptr inbounds ([4 x i8]* @.str121536, i32 0, i32 0), i32 7, i32 %13, i32 %14, i32 %16, i32 %24, i32 %28, i32 0, i8* getelementptr inbounds ([4 x i8]* @.str121536, i32 0, i32 0), i32 1)
  store %struct.Channel.80* %call28, %struct.Channel.80** %c, align 8
  %31 = load %struct.Channel.80** %c, align 8
  %force_drain = getelementptr inbounds %struct.Channel.80* %31, i32 0, i32 13
  store i32 1, i32* %force_drain, align 4
  %32 = load %struct.Channel.80** %c, align 8
  store %struct.Channel.80* %32, %struct.Channel.80** %retval
  br label %return

return:                                           ; preds = %cont27, %if.then20, %if.then3, %if.then
  %33 = load %struct.Channel.80** %retval
  ret %struct.Channel.80* %33
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.Channel.80* @client_request_agent(i8* %request_type, i32 %rchan) #0 {
entry:
  %retval = alloca %struct.Channel.80*, align 8
  %request_type.addr = alloca i8*, align 8
  %rchan.addr = alloca i32, align 4
  %c = alloca %struct.Channel.80*, align 8
  %r = alloca i32, align 4
  %sock = alloca i32, align 4
  store i8* %request_type, i8** %request_type.addr, align 8
  store i32 %rchan, i32* %rchan.addr, align 4
  store %struct.Channel.80* null, %struct.Channel.80** %c, align 8
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([44 x i8]* @.str127542, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([68 x i8]* @.str128543, i32 0, i32 0))
  store %struct.Channel.80* null, %struct.Channel.80** %retval
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @ssh_get_authentication_socket(i32* %sock)
  store i32 %call, i32* %r, align 4
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then1, label %if.end6

if.then1:                                         ; preds = %if.end
  %1 = load i32* %r, align 4
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 47)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %if.then1
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then1
  %cmp2 = icmp ne i32 %1, %3
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %cont
  %6 = load i32* %r, align 4
  %call4 = call i8* @ssh_err(i32 %6)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([38 x i8]* @.str69484, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.client_request_agent, i32 0, i32 0), i8* %call4)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %cont
  store %struct.Channel.80* null, %struct.Channel.80** %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %7 = load i32* %sock, align 4
  %8 = load i32* %sock, align 4
  %9 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %10 = extractvalue { i32, i1 } %9, 0
  %11 = extractvalue { i32, i1 } %9, 1
  %12 = xor i1 %11, true
  br i1 %12, label %cont8, label %trap7

trap7:                                            ; preds = %if.end6
  call void @llvm.trap() #3
  unreachable

cont8:                                            ; preds = %if.end6
  %13 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 16, i32 1024)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont10, label %trap9

trap9:                                            ; preds = %cont8
  call void @llvm.trap() #3
  unreachable

cont10:                                           ; preds = %cont8
  %17 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 4, i32 %14)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont12, label %trap11

trap11:                                           ; preds = %cont10
  call void @llvm.trap() #3
  unreachable

cont12:                                           ; preds = %cont10
  %21 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %22 = extractvalue { i32, i1 } %21, 0
  %23 = extractvalue { i32, i1 } %21, 1
  %24 = xor i1 %23, true
  br i1 %24, label %cont14, label %trap13

trap13:                                           ; preds = %cont12
  call void @llvm.trap() #3
  unreachable

cont14:                                           ; preds = %cont12
  %call15 = call %struct.Channel.80* bitcast (%struct.Channel* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)* @channel_new to %struct.Channel.80* (i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i32)*)(i8* getelementptr inbounds ([32 x i8]* @.str70485, i32 0, i32 0), i32 4, i32 %7, i32 %8, i32 %10, i32 %18, i32 %22, i32 0, i8* getelementptr inbounds ([32 x i8]* @.str70485, i32 0, i32 0), i32 1)
  store %struct.Channel.80* %call15, %struct.Channel.80** %c, align 8
  %25 = load %struct.Channel.80** %c, align 8
  %force_drain = getelementptr inbounds %struct.Channel.80* %25, i32 0, i32 13
  store i32 1, i32* %force_drain, align 4
  %26 = load %struct.Channel.80** %c, align 8
  store %struct.Channel.80* %26, %struct.Channel.80** %retval
  br label %return

return:                                           ; preds = %cont14, %if.end5, %if.then
  %27 = load %struct.Channel.80** %retval
  ret %struct.Channel.80* %27
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @client_input_hostkeys() #0 {
entry:
  %retval = alloca i32, align 4
  %ssh = alloca %struct.ssh.68*, align 8
  %blob = alloca i8*, align 8
  %i = alloca i64, align 8
  %len = alloca i64, align 8
  %buf = alloca %struct.sshbuf*, align 8
  %key = alloca %struct.sshkey*, align 8
  %tmp = alloca %struct.sshkey**, align 8
  %r = alloca i32, align 4
  %fp = alloca i8*, align 8
  %ctx = alloca %struct.hostkeys_update_ctx*, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  store %struct.ssh.68* %0, %struct.ssh.68** %ssh, align 8
  store i8* null, i8** %blob, align 8
  store i64 0, i64* %len, align 8
  store %struct.sshbuf* null, %struct.sshbuf** %buf, align 8
  store %struct.sshkey* null, %struct.sshkey** %key, align 8
  store %struct.hostkeys_update_ctx* null, %struct.hostkeys_update_ctx** %ctx, align 8
  %1 = load i32* @client_input_hostkeys.hostkeys_seen, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([33 x i8]* @.str74489, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 18), align 4
  %tobool4 = icmp ne i32 %3, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %tobool7 = icmp ne i32 %4, 0
  br i1 %tobool7, label %lor.lhs.false, label %if.then9

lor.lhs.false:                                    ; preds = %if.end6
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 45), align 4
  %cmp8 = icmp ule i32 %5, 0
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %lor.lhs.false, %if.end6
  store i32 1, i32* %retval
  br label %return

if.end10:                                         ; preds = %lor.lhs.false
  %call = call i8* @xcalloc(i64 1, i64 64)
  %6 = bitcast i8* %call to %struct.hostkeys_update_ctx*
  store %struct.hostkeys_update_ctx* %6, %struct.hostkeys_update_ctx** %ctx, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end49, %if.then34, %if.then29, %if.end10
  %7 = load %struct.ssh.68** %ssh, align 8
  %call11 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %7)
  %cmp12 = icmp sgt i32 %call11, 0
  br i1 %cmp12, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load %struct.sshkey** %key, align 8
  call void @sshkey_free(%struct.sshkey* %8)
  store %struct.sshkey* null, %struct.sshkey** %key, align 8
  %9 = load %struct.ssh.68** %ssh, align 8
  %call13 = call i32 @sshpkt_get_string_direct(%struct.ssh.68* %9, i8** %blob, i64* %len)
  store i32 %call13, i32* %r, align 4
  %cmp14 = icmp ne i32 %call13, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %while.body
  %10 = load i32* %r, align 4
  %call16 = call i8* @ssh_err(i32 %10)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str75490, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call16)
  br label %out

if.end17:                                         ; preds = %while.body
  %11 = load i8** %blob, align 8
  %12 = load i64* %len, align 8
  %call18 = call i32 @sshkey_from_blob(i8* %11, i64 %12, %struct.sshkey** %key)
  store i32 %call18, i32* %r, align 4
  %cmp19 = icmp ne i32 %call18, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end17
  %13 = load i32* %r, align 4
  %call21 = call i8* @ssh_err(i32 %13)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([18 x i8]* @.str76491, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call21)
  br label %out

if.end22:                                         ; preds = %if.end17
  %14 = load %struct.sshkey** %key, align 8
  %15 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call23 = call i8* @sshkey_fingerprint(%struct.sshkey* %14, i32 %15, i32 0)
  store i8* %call23, i8** %fp, align 8
  %16 = load %struct.sshkey** %key, align 8
  %call24 = call i8* @sshkey_type(%struct.sshkey* %16)
  %17 = load i8** %fp, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([23 x i8]* @.str77492, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call24, i8* %17)
  %18 = load i8** %fp, align 8
  call void @free(i8* %18) #9
  %19 = load %struct.sshkey** %key, align 8
  %call25 = call i8* @sshkey_ssh_name(%struct.sshkey* %19)
  %20 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 35), align 8
  %tobool26 = icmp ne i8* %20, null
  br i1 %tobool26, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end22
  %21 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 35), align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end22
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %21, %cond.true ], [ getelementptr inbounds ([291 x i8]* @.str78493, i32 0, i32 0), %cond.false ]
  %call27 = call i32 @match_pattern_list(i8* %call25, i8* %cond, i32 0)
  %cmp28 = icmp ne i32 %call27, 1
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %cond.end
  %22 = load %struct.sshkey** %key, align 8
  %call30 = call i8* @sshkey_ssh_name(%struct.sshkey* %22)
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([46 x i8]* @.str79494, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call30)
  br label %while.cond

if.end31:                                         ; preds = %cond.end
  %23 = load %struct.sshkey** %key, align 8
  %call32 = call i32 @sshkey_is_cert(%struct.sshkey* %23)
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end31
  %24 = load %struct.sshkey** %key, align 8
  %call35 = call i8* @sshkey_ssh_name(%struct.sshkey* %24)
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([38 x i8]* @.str80495, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call35)
  br label %while.cond

if.end36:                                         ; preds = %if.end31
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end36
  %25 = load i64* %i, align 8
  %26 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys = getelementptr inbounds %struct.hostkeys_update_ctx* %26, i32 0, i32 4
  %27 = load i64* %nkeys, align 8
  %cmp37 = icmp ult i64 %25, %27
  br i1 %cmp37, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %28 = load %struct.sshkey** %key, align 8
  %29 = load i64* %i, align 8
  %30 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys = getelementptr inbounds %struct.hostkeys_update_ctx* %30, i32 0, i32 2
  %31 = load %struct.sshkey*** %keys, align 8
  %arrayidx = getelementptr inbounds %struct.sshkey** %31, i64 %29
  %32 = load %struct.sshkey** %arrayidx, align 8
  %call38 = call i32 @sshkey_equal(%struct.sshkey* %28, %struct.sshkey* %32)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %for.body
  %33 = load %struct.sshkey** %key, align 8
  %call41 = call i8* @sshkey_ssh_name(%struct.sshkey* %33)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str81496, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call41)
  br label %out

if.end42:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end42
  %34 = load i64* %i, align 8
  %inc = add i64 %34, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %35 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys43 = getelementptr inbounds %struct.hostkeys_update_ctx* %35, i32 0, i32 2
  %36 = load %struct.sshkey*** %keys43, align 8
  %37 = bitcast %struct.sshkey** %36 to i8*
  %38 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys44 = getelementptr inbounds %struct.hostkeys_update_ctx* %38, i32 0, i32 4
  %39 = load i64* %nkeys44, align 8
  %add = add i64 %39, 1
  %call45 = call i8* @reallocarray(i8* %37, i64 %add, i64 8)
  %40 = bitcast i8* %call45 to %struct.sshkey**
  store %struct.sshkey** %40, %struct.sshkey*** %tmp, align 8
  %cmp46 = icmp eq %struct.sshkey** %40, null
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %for.end
  %41 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys48 = getelementptr inbounds %struct.hostkeys_update_ctx* %41, i32 0, i32 4
  %42 = load i64* %nkeys48, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str82497, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i64 %42) #11
  unreachable

if.end49:                                         ; preds = %for.end
  %43 = load %struct.sshkey*** %tmp, align 8
  %44 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys50 = getelementptr inbounds %struct.hostkeys_update_ctx* %44, i32 0, i32 2
  store %struct.sshkey** %43, %struct.sshkey*** %keys50, align 8
  %45 = load %struct.sshkey** %key, align 8
  %46 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys51 = getelementptr inbounds %struct.hostkeys_update_ctx* %46, i32 0, i32 4
  %47 = load i64* %nkeys51, align 8
  %inc52 = add i64 %47, 1
  store i64 %inc52, i64* %nkeys51, align 8
  %48 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys53 = getelementptr inbounds %struct.hostkeys_update_ctx* %48, i32 0, i32 2
  %49 = load %struct.sshkey*** %keys53, align 8
  %arrayidx54 = getelementptr inbounds %struct.sshkey** %49, i64 %47
  store %struct.sshkey* %45, %struct.sshkey** %arrayidx54, align 8
  store %struct.sshkey* null, %struct.sshkey** %key, align 8
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %50 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys55 = getelementptr inbounds %struct.hostkeys_update_ctx* %50, i32 0, i32 4
  %51 = load i64* %nkeys55, align 8
  %cmp56 = icmp eq i64 %51, 0
  br i1 %cmp56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %while.end
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([28 x i8]* @.str83498, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0))
  br label %out

if.end58:                                         ; preds = %while.end
  %52 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys59 = getelementptr inbounds %struct.hostkeys_update_ctx* %52, i32 0, i32 4
  %53 = load i64* %nkeys59, align 8
  %call60 = call noalias i8* @calloc(i64 %53, i64 4) #9
  %54 = bitcast i8* %call60 to i32*
  %55 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys_seen = getelementptr inbounds %struct.hostkeys_update_ctx* %55, i32 0, i32 3
  store i32* %54, i32** %keys_seen, align 8
  %cmp61 = icmp eq i32* %54, null
  br i1 %cmp61, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.end58
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([18 x i8]* @.str84499, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0)) #11
  unreachable

if.end63:                                         ; preds = %if.end58
  %56 = load i8** @host, align 8
  %57 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool64 = icmp ne i32 %57, 0
  %cond65 = select i1 %tobool64, %struct.sockaddr* bitcast (%struct.sockaddr_storage* @hostaddr to %struct.sockaddr*), %struct.sockaddr* null
  %58 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %conv = trunc i32 %58 to i16
  %59 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %host_str = getelementptr inbounds %struct.hostkeys_update_ctx* %59, i32 0, i32 0
  %60 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool66 = icmp ne i32 %60, 0
  br i1 %tobool66, label %cond.true67, label %cond.false68

cond.true67:                                      ; preds = %if.end63
  %61 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %ip_str = getelementptr inbounds %struct.hostkeys_update_ctx* %61, i32 0, i32 1
  br label %cond.end69

cond.false68:                                     ; preds = %if.end63
  br label %cond.end69

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond70 = phi i8** [ %ip_str, %cond.true67 ], [ null, %cond.false68 ]
  call void @get_hostfile_hostname_ipaddr(i8* %56, %struct.sockaddr* %cond65, i16 zeroext %conv, i8** %host_str, i8** %cond70)
  %62 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 46, i64 0), align 8
  %63 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %64 = bitcast %struct.hostkeys_update_ctx* %63 to i8*
  %65 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %host_str71 = getelementptr inbounds %struct.hostkeys_update_ctx* %65, i32 0, i32 0
  %66 = load i8** %host_str71, align 8
  %67 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %ip_str72 = getelementptr inbounds %struct.hostkeys_update_ctx* %67, i32 0, i32 1
  %68 = load i8** %ip_str72, align 8
  %call73 = call i32 @hostkeys_foreach(i8* %62, i32 (%struct.hostkey_foreach_line*, i8*)* @hostkeys_find, i8* %64, i8* %66, i8* %68, i32 3)
  store i32 %call73, i32* %r, align 4
  %cmp74 = icmp ne i32 %call73, 0
  br i1 %cmp74, label %if.then76, label %if.end78

if.then76:                                        ; preds = %cond.end69
  %69 = load i32* %r, align 4
  %call77 = call i8* @ssh_err(i32 %69)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str85500, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call77)
  br label %out

if.end78:                                         ; preds = %cond.end69
  %70 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew = getelementptr inbounds %struct.hostkeys_update_ctx* %70, i32 0, i32 5
  store i64 0, i64* %nnew, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc91, %if.end78
  %71 = load i64* %i, align 8
  %72 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys80 = getelementptr inbounds %struct.hostkeys_update_ctx* %72, i32 0, i32 4
  %73 = load i64* %nkeys80, align 8
  %cmp81 = icmp ult i64 %71, %73
  br i1 %cmp81, label %for.body83, label %for.end93

for.body83:                                       ; preds = %for.cond79
  %74 = load i64* %i, align 8
  %75 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys_seen84 = getelementptr inbounds %struct.hostkeys_update_ctx* %75, i32 0, i32 3
  %76 = load i32** %keys_seen84, align 8
  %arrayidx85 = getelementptr inbounds i32* %76, i64 %74
  %77 = load i32* %arrayidx85, align 4
  %tobool86 = icmp ne i32 %77, 0
  br i1 %tobool86, label %if.end90, label %if.then87

if.then87:                                        ; preds = %for.body83
  %78 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew88 = getelementptr inbounds %struct.hostkeys_update_ctx* %78, i32 0, i32 5
  %79 = load i64* %nnew88, align 8
  %inc89 = add i64 %79, 1
  store i64 %inc89, i64* %nnew88, align 8
  br label %if.end90

if.end90:                                         ; preds = %if.then87, %for.body83
  br label %for.inc91

for.inc91:                                        ; preds = %if.end90
  %80 = load i64* %i, align 8
  %inc92 = add i64 %80, 1
  store i64 %inc92, i64* %i, align 8
  br label %for.cond79

for.end93:                                        ; preds = %for.cond79
  %81 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys94 = getelementptr inbounds %struct.hostkeys_update_ctx* %81, i32 0, i32 4
  %82 = load i64* %nkeys94, align 8
  %83 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew95 = getelementptr inbounds %struct.hostkeys_update_ctx* %83, i32 0, i32 5
  %84 = load i64* %nnew95, align 8
  %85 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys96 = getelementptr inbounds %struct.hostkeys_update_ctx* %85, i32 0, i32 4
  %86 = load i64* %nkeys96, align 8
  %87 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew97 = getelementptr inbounds %struct.hostkeys_update_ctx* %87, i32 0, i32 5
  %88 = load i64* %nnew97, align 8
  %sub = sub i64 %86, %88
  %89 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nold = getelementptr inbounds %struct.hostkeys_update_ctx* %89, i32 0, i32 7
  %90 = load i64* %nold, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([63 x i8]* @.str86501, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i64 %82, i64 %84, i64 %sub, i64 %90)
  %91 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew98 = getelementptr inbounds %struct.hostkeys_update_ctx* %91, i32 0, i32 5
  %92 = load i64* %nnew98, align 8
  %cmp99 = icmp eq i64 %92, 0
  br i1 %cmp99, label %land.lhs.true101, label %if.else

land.lhs.true101:                                 ; preds = %for.end93
  %93 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nold102 = getelementptr inbounds %struct.hostkeys_update_ctx* %93, i32 0, i32 7
  %94 = load i64* %nold102, align 8
  %cmp103 = icmp ne i64 %94, 0
  br i1 %cmp103, label %if.then105, label %if.else

if.then105:                                       ; preds = %land.lhs.true101
  %95 = load %struct.hostkeys_update_ctx** %ctx, align 8
  call void @update_known_hosts(%struct.hostkeys_update_ctx* %95)
  br label %if.end164

if.else:                                          ; preds = %land.lhs.true101, %for.end93
  %96 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew106 = getelementptr inbounds %struct.hostkeys_update_ctx* %96, i32 0, i32 5
  %97 = load i64* %nnew106, align 8
  %cmp107 = icmp ne i64 %97, 0
  br i1 %cmp107, label %if.then109, label %if.end163

if.then109:                                       ; preds = %if.else
  %98 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew110 = getelementptr inbounds %struct.hostkeys_update_ctx* %98, i32 0, i32 5
  %99 = load i64* %nnew110, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([50 x i8]* @.str87502, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i64 %99)
  %100 = load %struct.ssh.68** %ssh, align 8
  %call111 = call i32 @sshpkt_start(%struct.ssh.68* %100, i8 zeroext 80)
  store i32 %call111, i32* %r, align 4
  %cmp112 = icmp ne i32 %call111, 0
  br i1 %cmp112, label %if.then122, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %if.then109
  %101 = load %struct.ssh.68** %ssh, align 8
  %call115 = call i32 @sshpkt_put_cstring(%struct.ssh.68* %101, i8* getelementptr inbounds ([30 x i8]* @.str88503, i32 0, i32 0))
  store i32 %call115, i32* %r, align 4
  %cmp116 = icmp ne i32 %call115, 0
  br i1 %cmp116, label %if.then122, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false114
  %102 = load %struct.ssh.68** %ssh, align 8
  %call119 = call i32 @sshpkt_put_u8(%struct.ssh.68* %102, i8 zeroext 1)
  store i32 %call119, i32* %r, align 4
  %cmp120 = icmp ne i32 %call119, 0
  br i1 %cmp120, label %if.then122, label %if.end124

if.then122:                                       ; preds = %lor.lhs.false118, %lor.lhs.false114, %if.then109
  %103 = load i32* %r, align 4
  %call123 = call i8* @ssh_err(i32 %103)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str89504, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call123) #11
  unreachable

if.end124:                                        ; preds = %lor.lhs.false118
  %call125 = call %struct.sshbuf* @sshbuf_new()
  store %struct.sshbuf* %call125, %struct.sshbuf** %buf, align 8
  %cmp126 = icmp eq %struct.sshbuf* %call125, null
  br i1 %cmp126, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.end124
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([15 x i8]* @.str90505, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0)) #11
  unreachable

if.end129:                                        ; preds = %if.end124
  store i64 0, i64* %i, align 8
  br label %for.cond130

for.cond130:                                      ; preds = %for.inc154, %if.end129
  %104 = load i64* %i, align 8
  %105 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys131 = getelementptr inbounds %struct.hostkeys_update_ctx* %105, i32 0, i32 4
  %106 = load i64* %nkeys131, align 8
  %cmp132 = icmp ult i64 %104, %106
  br i1 %cmp132, label %for.body134, label %for.end156

for.body134:                                      ; preds = %for.cond130
  %107 = load i64* %i, align 8
  %108 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys_seen135 = getelementptr inbounds %struct.hostkeys_update_ctx* %108, i32 0, i32 3
  %109 = load i32** %keys_seen135, align 8
  %arrayidx136 = getelementptr inbounds i32* %109, i64 %107
  %110 = load i32* %arrayidx136, align 4
  %tobool137 = icmp ne i32 %110, 0
  br i1 %tobool137, label %if.then138, label %if.end139

if.then138:                                       ; preds = %for.body134
  br label %for.inc154

if.end139:                                        ; preds = %for.body134
  %111 = load %struct.sshbuf** %buf, align 8
  call void @sshbuf_reset(%struct.sshbuf* %111)
  %112 = load i64* %i, align 8
  %113 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys140 = getelementptr inbounds %struct.hostkeys_update_ctx* %113, i32 0, i32 2
  %114 = load %struct.sshkey*** %keys140, align 8
  %arrayidx141 = getelementptr inbounds %struct.sshkey** %114, i64 %112
  %115 = load %struct.sshkey** %arrayidx141, align 8
  %116 = load %struct.sshbuf** %buf, align 8
  %call142 = call i32 @sshkey_putb(%struct.sshkey* %115, %struct.sshbuf* %116)
  store i32 %call142, i32* %r, align 4
  %cmp143 = icmp ne i32 %call142, 0
  br i1 %cmp143, label %if.then145, label %if.end147

if.then145:                                       ; preds = %if.end139
  %117 = load i32* %r, align 4
  %call146 = call i8* @ssh_err(i32 %117)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str91506, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call146) #11
  unreachable

if.end147:                                        ; preds = %if.end139
  %118 = load %struct.ssh.68** %ssh, align 8
  %119 = load %struct.sshbuf** %buf, align 8
  %call148 = call i32 @sshpkt_put_stringb(%struct.ssh.68* %118, %struct.sshbuf* %119)
  store i32 %call148, i32* %r, align 4
  %cmp149 = icmp ne i32 %call148, 0
  br i1 %cmp149, label %if.then151, label %if.end153

if.then151:                                       ; preds = %if.end147
  %120 = load i32* %r, align 4
  %call152 = call i8* @ssh_err(i32 %120)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([26 x i8]* @.str92507, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call152) #11
  unreachable

if.end153:                                        ; preds = %if.end147
  br label %for.inc154

for.inc154:                                       ; preds = %if.end153, %if.then138
  %121 = load i64* %i, align 8
  %inc155 = add i64 %121, 1
  store i64 %inc155, i64* %i, align 8
  br label %for.cond130

for.end156:                                       ; preds = %for.cond130
  %122 = load %struct.ssh.68** %ssh, align 8
  %call157 = call i32 @sshpkt_send(%struct.ssh.68* %122)
  store i32 %call157, i32* %r, align 4
  %cmp158 = icmp ne i32 %call157, 0
  br i1 %cmp158, label %if.then160, label %if.end162

if.then160:                                       ; preds = %for.end156
  %123 = load i32* %r, align 4
  %call161 = call i8* @ssh_err(i32 %123)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str93508, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.client_input_hostkeys, i32 0, i32 0), i8* %call161) #11
  unreachable

if.end162:                                        ; preds = %for.end156
  %124 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %125 = bitcast %struct.hostkeys_update_ctx* %124 to i8*
  call void @client_register_global_confirm(void (i32, i32, i8*)* @client_global_hostkeys_private_confirm, i8* %125)
  store %struct.hostkeys_update_ctx* null, %struct.hostkeys_update_ctx** %ctx, align 8
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.else
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.then105
  br label %out

out:                                              ; preds = %if.end164, %if.then76, %if.then57, %if.then40, %if.then20, %if.then15
  %126 = load %struct.hostkeys_update_ctx** %ctx, align 8
  call void @hostkeys_update_ctx_free(%struct.hostkeys_update_ctx* %126)
  %127 = load %struct.sshkey** %key, align 8
  call void @sshkey_free(%struct.sshkey* %127)
  %128 = load %struct.sshbuf** %buf, align 8
  call void @sshbuf_free(%struct.sshbuf* %128)
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %out, %if.then9, %if.then5
  %129 = load i32* %retval
  ret i32 %129
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @hostkeys_find(%struct.hostkey_foreach_line* %l, i8* %_ctx) #0 {
entry:
  %retval = alloca i32, align 4
  %l.addr = alloca %struct.hostkey_foreach_line*, align 8
  %_ctx.addr = alloca i8*, align 8
  %ctx = alloca %struct.hostkeys_update_ctx*, align 8
  %i = alloca i64, align 8
  %tmp = alloca %struct.sshkey**, align 8
  store %struct.hostkey_foreach_line* %l, %struct.hostkey_foreach_line** %l.addr, align 8
  store i8* %_ctx, i8** %_ctx.addr, align 8
  %0 = load i8** %_ctx.addr, align 8
  %1 = bitcast i8* %0 to %struct.hostkeys_update_ctx*
  store %struct.hostkeys_update_ctx* %1, %struct.hostkeys_update_ctx** %ctx, align 8
  %2 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %status = getelementptr inbounds %struct.hostkey_foreach_line* %2, i32 0, i32 2
  %3 = load i32* %status, align 4
  %cmp = icmp ne i32 %3, 3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %key = getelementptr inbounds %struct.hostkey_foreach_line* %4, i32 0, i32 9
  %5 = load %struct.sshkey** %key, align 8
  %cmp1 = icmp eq %struct.sshkey* %5, null
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %key3 = getelementptr inbounds %struct.hostkey_foreach_line* %6, i32 0, i32 9
  %7 = load %struct.sshkey** %key3, align 8
  %type = getelementptr inbounds %struct.sshkey* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  %cmp4 = icmp eq i32 %8, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i64* %i, align 8
  %10 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys = getelementptr inbounds %struct.hostkeys_update_ctx* %10, i32 0, i32 4
  %11 = load i64* %nkeys, align 8
  %cmp5 = icmp ult i64 %9, %11
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %12 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %key6 = getelementptr inbounds %struct.hostkey_foreach_line* %12, i32 0, i32 9
  %13 = load %struct.sshkey** %key6, align 8
  %14 = load i64* %i, align 8
  %15 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys = getelementptr inbounds %struct.hostkeys_update_ctx* %15, i32 0, i32 2
  %16 = load %struct.sshkey*** %keys, align 8
  %arrayidx = getelementptr inbounds %struct.sshkey** %16, i64 %14
  %17 = load %struct.sshkey** %arrayidx, align 8
  %call = call i32 @sshkey_equal(%struct.sshkey* %13, %struct.sshkey* %17)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then7, label %if.end12

if.then7:                                         ; preds = %for.body
  %18 = load i64* %i, align 8
  %19 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys8 = getelementptr inbounds %struct.hostkeys_update_ctx* %19, i32 0, i32 2
  %20 = load %struct.sshkey*** %keys8, align 8
  %arrayidx9 = getelementptr inbounds %struct.sshkey** %20, i64 %18
  %21 = load %struct.sshkey** %arrayidx9, align 8
  %call10 = call i8* @sshkey_ssh_name(%struct.sshkey* %21)
  %22 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %path = getelementptr inbounds %struct.hostkey_foreach_line* %22, i32 0, i32 0
  %23 = load i8** %path, align 8
  %24 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %linenum = getelementptr inbounds %struct.hostkey_foreach_line* %24, i32 0, i32 1
  %25 = load i64* %linenum, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([27 x i8]* @.str109524, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @__func__.hostkeys_find, i32 0, i32 0), i8* %call10, i8* %23, i64 %25)
  %26 = load i64* %i, align 8
  %27 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys_seen = getelementptr inbounds %struct.hostkeys_update_ctx* %27, i32 0, i32 3
  %28 = load i32** %keys_seen, align 8
  %arrayidx11 = getelementptr inbounds i32* %28, i64 %26
  store i32 1, i32* %arrayidx11, align 4
  store i32 0, i32* %retval
  br label %return

if.end12:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end12
  %29 = load i64* %i, align 8
  %inc = add i64 %29, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %30 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %key13 = getelementptr inbounds %struct.hostkey_foreach_line* %30, i32 0, i32 9
  %31 = load %struct.sshkey** %key13, align 8
  %call14 = call i8* @sshkey_ssh_name(%struct.sshkey* %31)
  %32 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %path15 = getelementptr inbounds %struct.hostkey_foreach_line* %32, i32 0, i32 0
  %33 = load i8** %path15, align 8
  %34 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %linenum16 = getelementptr inbounds %struct.hostkey_foreach_line* %34, i32 0, i32 1
  %35 = load i64* %linenum16, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([32 x i8]* @.str110525, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @__func__.hostkeys_find, i32 0, i32 0), i8* %call14, i8* %33, i64 %35)
  %36 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %old_keys = getelementptr inbounds %struct.hostkeys_update_ctx* %36, i32 0, i32 6
  %37 = load %struct.sshkey*** %old_keys, align 8
  %38 = bitcast %struct.sshkey** %37 to i8*
  %39 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nold = getelementptr inbounds %struct.hostkeys_update_ctx* %39, i32 0, i32 7
  %40 = load i64* %nold, align 8
  %add = add i64 %40, 1
  %call17 = call i8* @reallocarray(i8* %38, i64 %add, i64 8)
  %41 = bitcast i8* %call17 to %struct.sshkey**
  store %struct.sshkey** %41, %struct.sshkey*** %tmp, align 8
  %cmp18 = icmp eq %struct.sshkey** %41, null
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %for.end
  %42 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nold20 = getelementptr inbounds %struct.hostkeys_update_ctx* %42, i32 0, i32 7
  %43 = load i64* %nold20, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([35 x i8]* @.str111526, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @__func__.hostkeys_find, i32 0, i32 0), i64 %43) #11
  unreachable

if.end21:                                         ; preds = %for.end
  %44 = load %struct.sshkey*** %tmp, align 8
  %45 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %old_keys22 = getelementptr inbounds %struct.hostkeys_update_ctx* %45, i32 0, i32 6
  store %struct.sshkey** %44, %struct.sshkey*** %old_keys22, align 8
  %46 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %key23 = getelementptr inbounds %struct.hostkey_foreach_line* %46, i32 0, i32 9
  %47 = load %struct.sshkey** %key23, align 8
  %48 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nold24 = getelementptr inbounds %struct.hostkeys_update_ctx* %48, i32 0, i32 7
  %49 = load i64* %nold24, align 8
  %inc25 = add i64 %49, 1
  store i64 %inc25, i64* %nold24, align 8
  %50 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %old_keys26 = getelementptr inbounds %struct.hostkeys_update_ctx* %50, i32 0, i32 6
  %51 = load %struct.sshkey*** %old_keys26, align 8
  %arrayidx27 = getelementptr inbounds %struct.sshkey** %51, i64 %49
  store %struct.sshkey* %47, %struct.sshkey** %arrayidx27, align 8
  %52 = load %struct.hostkey_foreach_line** %l.addr, align 8
  %key28 = getelementptr inbounds %struct.hostkey_foreach_line* %52, i32 0, i32 9
  store %struct.sshkey* null, %struct.sshkey** %key28, align 8
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end21, %if.then7, %if.then
  %53 = load i32* %retval
  ret i32 %53
}

; Function Attrs: nounwind sspreq uwtable
define internal void @update_known_hosts(%struct.hostkeys_update_ctx* %ctx) #0 {
entry:
  %ctx.addr = alloca %struct.hostkeys_update_ctx*, align 8
  %r = alloca i32, align 4
  %was_raw = alloca i32, align 4
  %loglevel = alloca i32, align 4
  %fp = alloca i8*, align 8
  %response = alloca i8*, align 8
  %i = alloca i64, align 8
  store %struct.hostkeys_update_ctx* %ctx, %struct.hostkeys_update_ctx** %ctx.addr, align 8
  store i32 0, i32* %was_raw, align 4
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %cmp = icmp eq i32 %0, 2
  %cond = select i1 %cmp, i32 3, i32 4
  store i32 %cond, i32* %loglevel, align 4
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64* %i, align 8
  %2 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %nkeys = getelementptr inbounds %struct.hostkeys_update_ctx* %2, i32 0, i32 4
  %3 = load i64* %nkeys, align 8
  %cmp1 = icmp ult i64 %1, %3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8
  %5 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys_seen = getelementptr inbounds %struct.hostkeys_update_ctx* %5, i32 0, i32 3
  %6 = load i32** %keys_seen, align 8
  %arrayidx = getelementptr inbounds i32* %6, i64 %4
  %7 = load i32* %arrayidx, align 4
  %cmp2 = icmp ne i32 %7, 2
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %8 = load i64* %i, align 8
  %9 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys = getelementptr inbounds %struct.hostkeys_update_ctx* %9, i32 0, i32 2
  %10 = load %struct.sshkey*** %keys, align 8
  %arrayidx3 = getelementptr inbounds %struct.sshkey** %10, i64 %8
  %11 = load %struct.sshkey** %arrayidx3, align 8
  %12 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call = call i8* @sshkey_fingerprint(%struct.sshkey* %11, i32 %12, i32 0)
  store i8* %call, i8** %fp, align 8
  %cmp4 = icmp eq i8* %call, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str101516, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.update_known_hosts, i32 0, i32 0)) #11
  unreachable

if.end6:                                          ; preds = %if.end
  %13 = load i32* %loglevel, align 4
  %14 = load i64* %i, align 8
  %15 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys7 = getelementptr inbounds %struct.hostkeys_update_ctx* %15, i32 0, i32 2
  %16 = load %struct.sshkey*** %keys7, align 8
  %arrayidx8 = getelementptr inbounds %struct.sshkey** %16, i64 %14
  %17 = load %struct.sshkey** %arrayidx8, align 8
  %call9 = call i8* @sshkey_type(%struct.sshkey* %17)
  %18 = load i8** %fp, align 8
  call void (i32, i8*, ...)* @do_log2(i32 %13, i8* getelementptr inbounds ([27 x i8]* @.str102517, i32 0, i32 0), i8* %call9, i8* %18)
  %19 = load i8** %fp, align 8
  call void @free(i8* %19) #9
  br label %for.inc

for.inc:                                          ; preds = %if.end6, %if.then
  %20 = load i64* %i, align 8
  %inc = add i64 %20, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc21, %for.end
  %21 = load i64* %i, align 8
  %22 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %nold = getelementptr inbounds %struct.hostkeys_update_ctx* %22, i32 0, i32 7
  %23 = load i64* %nold, align 8
  %cmp11 = icmp ult i64 %21, %23
  br i1 %cmp11, label %for.body12, label %for.end23

for.body12:                                       ; preds = %for.cond10
  %24 = load i64* %i, align 8
  %25 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %old_keys = getelementptr inbounds %struct.hostkeys_update_ctx* %25, i32 0, i32 6
  %26 = load %struct.sshkey*** %old_keys, align 8
  %arrayidx13 = getelementptr inbounds %struct.sshkey** %26, i64 %24
  %27 = load %struct.sshkey** %arrayidx13, align 8
  %28 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call14 = call i8* @sshkey_fingerprint(%struct.sshkey* %27, i32 %28, i32 0)
  store i8* %call14, i8** %fp, align 8
  %cmp15 = icmp eq i8* %call14, null
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %for.body12
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str101516, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.update_known_hosts, i32 0, i32 0)) #11
  unreachable

if.end17:                                         ; preds = %for.body12
  %29 = load i32* %loglevel, align 4
  %30 = load i64* %i, align 8
  %31 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %old_keys18 = getelementptr inbounds %struct.hostkeys_update_ctx* %31, i32 0, i32 6
  %32 = load %struct.sshkey*** %old_keys18, align 8
  %arrayidx19 = getelementptr inbounds %struct.sshkey** %32, i64 %30
  %33 = load %struct.sshkey** %arrayidx19, align 8
  %call20 = call i8* @sshkey_type(%struct.sshkey* %33)
  %34 = load i8** %fp, align 8
  call void (i32, i8*, ...)* @do_log2(i32 %29, i8* getelementptr inbounds ([36 x i8]* @.str103518, i32 0, i32 0), i8* %call20, i8* %34)
  %35 = load i8** %fp, align 8
  call void @free(i8* %35) #9
  br label %for.inc21

for.inc21:                                        ; preds = %if.end17
  %36 = load i64* %i, align 8
  %inc22 = add i64 %36, 1
  store i64 %inc22, i64* %i, align 8
  br label %for.cond10

for.end23:                                        ; preds = %for.cond10
  %37 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %cmp24 = icmp eq i32 %37, 2
  br i1 %cmp24, label %if.then25, label %if.end59

if.then25:                                        ; preds = %for.end23
  %call26 = call %struct.termios* @get_saved_tio()
  %cmp27 = icmp ne %struct.termios* %call26, null
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then25
  call void @leave_raw_mode(i32 1)
  store i32 1, i32* %was_raw, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %if.then25
  store i8* null, i8** %response, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc46, %if.end29
  %38 = load volatile i32* @quit_pending, align 4
  %tobool = icmp ne i32 %38, 0
  br i1 %tobool, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %for.cond30
  %39 = load i64* %i, align 8
  %cmp31 = icmp ult i64 %39, 3
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond30
  %40 = phi i1 [ false, %for.cond30 ], [ %cmp31, %land.rhs ]
  br i1 %40, label %for.body32, label %for.end48

for.body32:                                       ; preds = %land.end
  %41 = load i8** %response, align 8
  call void @free(i8* %41) #9
  %call33 = call i8* @read_passphrase(i8* getelementptr inbounds ([36 x i8]* @.str104519, i32 0, i32 0), i32 1)
  store i8* %call33, i8** %response, align 8
  %42 = load i8** %response, align 8
  %call34 = call i32 @strcasecmp(i8* %42, i8* getelementptr inbounds ([4 x i8]* @.str105520, i32 0, i32 0)) #12
  %cmp35 = icmp eq i32 %call34, 0
  br i1 %cmp35, label %if.then36, label %if.else

if.then36:                                        ; preds = %for.body32
  br label %for.end48

if.else:                                          ; preds = %for.body32
  %43 = load volatile i32* @quit_pending, align 4
  %tobool37 = icmp ne i32 %43, 0
  br i1 %tobool37, label %if.then42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %44 = load i8** %response, align 8
  %cmp38 = icmp eq i8* %44, null
  br i1 %cmp38, label %if.then42, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %lor.lhs.false
  %45 = load i8** %response, align 8
  %call40 = call i32 @strcasecmp(i8* %45, i8* getelementptr inbounds ([3 x i8]* @.str106521, i32 0, i32 0)) #12
  %cmp41 = icmp eq i32 %call40, 0
  br i1 %cmp41, label %if.then42, label %if.else43

if.then42:                                        ; preds = %lor.lhs.false39, %lor.lhs.false, %if.else
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  br label %for.end48

if.else43:                                        ; preds = %lor.lhs.false39
  %46 = load i32* %loglevel, align 4
  call void (i32, i8*, ...)* @do_log2(i32 %46, i8* getelementptr inbounds ([27 x i8]* @.str107522, i32 0, i32 0))
  br label %if.end44

if.end44:                                         ; preds = %if.else43
  br label %if.end45

if.end45:                                         ; preds = %if.end44
  br label %for.inc46

for.inc46:                                        ; preds = %if.end45
  %47 = load i64* %i, align 8
  %inc47 = add i64 %47, 1
  store i64 %inc47, i64* %i, align 8
  br label %for.cond30

for.end48:                                        ; preds = %if.then42, %if.then36, %land.end
  %48 = load volatile i32* @quit_pending, align 4
  %tobool49 = icmp ne i32 %48, 0
  br i1 %tobool49, label %if.then54, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %for.end48
  %49 = load i64* %i, align 8
  %cmp51 = icmp uge i64 %49, 3
  br i1 %cmp51, label %if.then54, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false50
  %50 = load i8** %response, align 8
  %cmp53 = icmp eq i8* %50, null
  br i1 %cmp53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %lor.lhs.false52, %lor.lhs.false50, %for.end48
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %lor.lhs.false52
  %51 = load i8** %response, align 8
  call void @free(i8* %51) #9
  %52 = load i32* %was_raw, align 4
  %tobool56 = icmp ne i32 %52, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end55
  call void @enter_raw_mode(i32 1)
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.end55
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %for.end23
  %53 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %cmp60 = icmp ne i32 %53, 0
  br i1 %cmp60, label %land.lhs.true, label %if.end67

land.lhs.true:                                    ; preds = %if.end59
  %54 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 46, i64 0), align 8
  %55 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %host_str = getelementptr inbounds %struct.hostkeys_update_ctx* %55, i32 0, i32 0
  %56 = load i8** %host_str, align 8
  %57 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %ip_str = getelementptr inbounds %struct.hostkeys_update_ctx* %57, i32 0, i32 1
  %58 = load i8** %ip_str, align 8
  %59 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys61 = getelementptr inbounds %struct.hostkeys_update_ctx* %59, i32 0, i32 2
  %60 = load %struct.sshkey*** %keys61, align 8
  %61 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %nkeys62 = getelementptr inbounds %struct.hostkeys_update_ctx* %61, i32 0, i32 4
  %62 = load i64* %nkeys62, align 8
  %63 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %64 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call63 = call i32 @hostfile_replace_entries(i8* %54, i8* %56, i8* %58, %struct.sshkey** %60, i64 %62, i32 %63, i32 0, i32 %64)
  store i32 %call63, i32* %r, align 4
  %cmp64 = icmp ne i32 %call63, 0
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %land.lhs.true
  %65 = load i32* %r, align 4
  %call66 = call i8* @ssh_err(i32 %65)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([40 x i8]* @.str108523, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.update_known_hosts, i32 0, i32 0), i8* %call66)
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %land.lhs.true, %if.end59
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @client_global_hostkeys_private_confirm(i32 %type, i32 %seq, i8* %_ctx) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %_ctx.addr = alloca i8*, align 8
  %ssh = alloca %struct.ssh.68*, align 8
  %ctx = alloca %struct.hostkeys_update_ctx*, align 8
  %i = alloca i64, align 8
  %ndone = alloca i64, align 8
  %signdata = alloca %struct.sshbuf*, align 8
  %r = alloca i32, align 4
  %sig = alloca i8*, align 8
  %siglen = alloca i64, align 8
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %_ctx, i8** %_ctx.addr, align 8
  %0 = load %struct.ssh.68** bitcast (%struct.ssh** @active_state to %struct.ssh.68**), align 8
  store %struct.ssh.68* %0, %struct.ssh.68** %ssh, align 8
  %1 = load i8** %_ctx.addr, align 8
  %2 = bitcast i8* %1 to %struct.hostkeys_update_ctx*
  store %struct.hostkeys_update_ctx* %2, %struct.hostkeys_update_ctx** %ctx, align 8
  %3 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew = getelementptr inbounds %struct.hostkeys_update_ctx* %3, i32 0, i32 5
  %4 = load i64* %nnew, align 8
  %cmp = icmp eq i64 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([19 x i8]* @.str94509, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  %5 = load i32* %type.addr, align 4
  %cmp1 = icmp ne i32 %5, 81
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([56 x i8]* @.str95510, i32 0, i32 0))
  %6 = load %struct.hostkeys_update_ctx** %ctx, align 8
  call void @hostkeys_update_ctx_free(%struct.hostkeys_update_ctx* %6)
  br label %return

if.end3:                                          ; preds = %if.end
  %call = call %struct.sshbuf* @sshbuf_new()
  store %struct.sshbuf* %call, %struct.sshbuf** %signdata, align 8
  %cmp4 = icmp eq %struct.sshbuf* %call, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str96511, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0)) #11
  unreachable

if.end6:                                          ; preds = %if.end3
  %7 = load %struct.ssh.68** %ssh, align 8
  %kex = getelementptr inbounds %struct.ssh.68* %7, i32 0, i32 1
  %8 = load %struct.kex.64** %kex, align 8
  %session_id_len = getelementptr inbounds %struct.kex.64* %8, i32 0, i32 1
  %9 = load i64* %session_id_len, align 8
  %cmp7 = icmp eq i64 %9, 0
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str97512, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0)) #11
  unreachable

if.end9:                                          ; preds = %if.end6
  store i64 0, i64* %i, align 8
  store i64 0, i64* %ndone, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end9
  %10 = load i64* %i, align 8
  %11 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nkeys = getelementptr inbounds %struct.hostkeys_update_ctx* %11, i32 0, i32 4
  %12 = load i64* %nkeys, align 8
  %cmp10 = icmp ult i64 %10, %12
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i64* %i, align 8
  %14 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys_seen = getelementptr inbounds %struct.hostkeys_update_ctx* %14, i32 0, i32 3
  %15 = load i32** %keys_seen, align 8
  %arrayidx = getelementptr inbounds i32* %15, i64 %13
  %16 = load i32* %arrayidx, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then11, label %if.end12

if.then11:                                        ; preds = %for.body
  br label %for.inc

if.end12:                                         ; preds = %for.body
  %17 = load %struct.sshbuf** %signdata, align 8
  call void @sshbuf_reset(%struct.sshbuf* %17)
  %18 = load %struct.sshbuf** %signdata, align 8
  %call13 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %18, i8* getelementptr inbounds ([30 x i8]* @.str88503, i32 0, i32 0))
  store i32 %call13, i32* %r, align 4
  %cmp14 = icmp ne i32 %call13, 0
  br i1 %cmp14, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end12
  %19 = load %struct.sshbuf** %signdata, align 8
  %20 = load %struct.ssh.68** %ssh, align 8
  %kex15 = getelementptr inbounds %struct.ssh.68* %20, i32 0, i32 1
  %21 = load %struct.kex.64** %kex15, align 8
  %session_id = getelementptr inbounds %struct.kex.64* %21, i32 0, i32 0
  %22 = load i8** %session_id, align 8
  %23 = load %struct.ssh.68** %ssh, align 8
  %kex16 = getelementptr inbounds %struct.ssh.68* %23, i32 0, i32 1
  %24 = load %struct.kex.64** %kex16, align 8
  %session_id_len17 = getelementptr inbounds %struct.kex.64* %24, i32 0, i32 1
  %25 = load i64* %session_id_len17, align 8
  %call18 = call i32 @sshbuf_put_string(%struct.sshbuf* %19, i8* %22, i64 %25)
  store i32 %call18, i32* %r, align 4
  %cmp19 = icmp ne i32 %call18, 0
  br i1 %cmp19, label %if.then24, label %lor.lhs.false20

lor.lhs.false20:                                  ; preds = %lor.lhs.false
  %26 = load i64* %i, align 8
  %27 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys = getelementptr inbounds %struct.hostkeys_update_ctx* %27, i32 0, i32 2
  %28 = load %struct.sshkey*** %keys, align 8
  %arrayidx21 = getelementptr inbounds %struct.sshkey** %28, i64 %26
  %29 = load %struct.sshkey** %arrayidx21, align 8
  %30 = load %struct.sshbuf** %signdata, align 8
  %call22 = call i32 @sshkey_puts(%struct.sshkey* %29, %struct.sshbuf* %30)
  store i32 %call22, i32* %r, align 4
  %cmp23 = icmp ne i32 %call22, 0
  br i1 %cmp23, label %if.then24, label %if.end26

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false, %if.end12
  %31 = load i32* %r, align 4
  %call25 = call i8* @ssh_err(i32 %31)
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str98513, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0), i8* %call25) #11
  unreachable

if.end26:                                         ; preds = %lor.lhs.false20
  %32 = load %struct.ssh.68** %ssh, align 8
  %call27 = call i32 @sshpkt_get_string_direct(%struct.ssh.68* %32, i8** %sig, i64* %siglen)
  store i32 %call27, i32* %r, align 4
  %cmp28 = icmp ne i32 %call27, 0
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end26
  %33 = load i32* %r, align 4
  %call30 = call i8* @ssh_err(i32 %33)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str75490, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0), i8* %call30)
  br label %out

if.end31:                                         ; preds = %if.end26
  %34 = load i64* %i, align 8
  %35 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys32 = getelementptr inbounds %struct.hostkeys_update_ctx* %35, i32 0, i32 2
  %36 = load %struct.sshkey*** %keys32, align 8
  %arrayidx33 = getelementptr inbounds %struct.sshkey** %36, i64 %34
  %37 = load %struct.sshkey** %arrayidx33, align 8
  %38 = load i8** %sig, align 8
  %39 = load i64* %siglen, align 8
  %40 = load %struct.sshbuf** %signdata, align 8
  %call34 = call i8* @sshbuf_ptr(%struct.sshbuf* %40)
  %41 = load %struct.sshbuf** %signdata, align 8
  %call35 = call i64 @sshbuf_len(%struct.sshbuf* %41)
  %call36 = call i32 @sshkey_verify(%struct.sshkey* %37, i8* %38, i64 %39, i8* %call34, i64 %call35, i32 0)
  store i32 %call36, i32* %r, align 4
  %cmp37 = icmp ne i32 %call36, 0
  br i1 %cmp37, label %if.then38, label %if.end42

if.then38:                                        ; preds = %if.end31
  %42 = load i64* %i, align 8
  %43 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys39 = getelementptr inbounds %struct.hostkeys_update_ctx* %43, i32 0, i32 2
  %44 = load %struct.sshkey*** %keys39, align 8
  %arrayidx40 = getelementptr inbounds %struct.sshkey** %44, i64 %42
  %45 = load %struct.sshkey** %arrayidx40, align 8
  %call41 = call i8* @sshkey_type(%struct.sshkey* %45)
  %46 = load i64* %i, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str99514, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0), i8* %call41, i64 %46)
  br label %out

if.end42:                                         ; preds = %if.end31
  %47 = load i64* %i, align 8
  %48 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %keys_seen43 = getelementptr inbounds %struct.hostkeys_update_ctx* %48, i32 0, i32 3
  %49 = load i32** %keys_seen43, align 8
  %arrayidx44 = getelementptr inbounds i32* %49, i64 %47
  store i32 2, i32* %arrayidx44, align 4
  %50 = load i64* %ndone, align 8
  %inc = add i64 %50, 1
  store i64 %inc, i64* %ndone, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end42, %if.then11
  %51 = load i64* %i, align 8
  %inc45 = add i64 %51, 1
  store i64 %inc45, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %52 = load i64* %ndone, align 8
  %53 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew46 = getelementptr inbounds %struct.hostkeys_update_ctx* %53, i32 0, i32 5
  %54 = load i64* %nnew46, align 8
  %cmp47 = icmp ne i64 %52, %54
  br i1 %cmp47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %for.end
  %55 = load i64* %ndone, align 8
  %56 = load %struct.hostkeys_update_ctx** %ctx, align 8
  %nnew49 = getelementptr inbounds %struct.hostkeys_update_ctx* %56, i32 0, i32 5
  %57 = load i64* %nnew49, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([35 x i8]* @.str100515, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8]* @__func__.client_global_hostkeys_private_confirm, i32 0, i32 0), i64 %55, i64 %57) #11
  unreachable

if.end50:                                         ; preds = %for.end
  br label %do.body

do.body:                                          ; preds = %if.end50
  %58 = load %struct.ssh.68** %ssh, align 8
  %call51 = call i32 bitcast (i32 (%struct.ssh*)* @ssh_packet_remaining to i32 (%struct.ssh.68*)*)(%struct.ssh.68* %58)
  store i32 %call51, i32* %_len, align 4
  %59 = load i32* %_len, align 4
  %cmp52 = icmp sgt i32 %59, 0
  br i1 %cmp52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %do.body
  %60 = load i32* %_len, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str66481, i32 0, i32 0), i32 %60, i8* getelementptr inbounds ([13 x i8]* @.str67482, i32 0, i32 0), i32 2392)
  %61 = load %struct.ssh.68** %ssh, align 8
  call void (%struct.ssh.68*, i8*, ...)* bitcast (void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect to void (%struct.ssh.68*, i8*, ...)*)(%struct.ssh.68* %61, i8* getelementptr inbounds ([24 x i8]* @.str68483, i32 0, i32 0)) #11
  unreachable

if.end54:                                         ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end54
  %62 = load %struct.hostkeys_update_ctx** %ctx, align 8
  call void @update_known_hosts(%struct.hostkeys_update_ctx* %62)
  br label %out

out:                                              ; preds = %do.end, %if.then38, %if.then29
  %63 = load %struct.hostkeys_update_ctx** %ctx, align 8
  call void @hostkeys_update_ctx_free(%struct.hostkeys_update_ctx* %63)
  br label %return

return:                                           ; preds = %out, %if.then2
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @hostkeys_update_ctx_free(%struct.hostkeys_update_ctx* %ctx) #0 {
entry:
  %ctx.addr = alloca %struct.hostkeys_update_ctx*, align 8
  %i = alloca i64, align 8
  store %struct.hostkeys_update_ctx* %ctx, %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %0 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %cmp = icmp eq %struct.hostkeys_update_ctx* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i64* %i, align 8
  %2 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %nkeys = getelementptr inbounds %struct.hostkeys_update_ctx* %2, i32 0, i32 4
  %3 = load i64* %nkeys, align 8
  %cmp1 = icmp ult i64 %1, %3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8
  %5 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys = getelementptr inbounds %struct.hostkeys_update_ctx* %5, i32 0, i32 2
  %6 = load %struct.sshkey*** %keys, align 8
  %arrayidx = getelementptr inbounds %struct.sshkey** %6, i64 %4
  %7 = load %struct.sshkey** %arrayidx, align 8
  call void @sshkey_free(%struct.sshkey* %7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i64* %i, align 8
  %inc = add i64 %8, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys2 = getelementptr inbounds %struct.hostkeys_update_ctx* %9, i32 0, i32 2
  %10 = load %struct.sshkey*** %keys2, align 8
  %11 = bitcast %struct.sshkey** %10 to i8*
  call void @free(i8* %11) #9
  %12 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %keys_seen = getelementptr inbounds %struct.hostkeys_update_ctx* %12, i32 0, i32 3
  %13 = load i32** %keys_seen, align 8
  %14 = bitcast i32* %13 to i8*
  call void @free(i8* %14) #9
  store i64 0, i64* %i, align 8
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc7, %for.end
  %15 = load i64* %i, align 8
  %16 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %nold = getelementptr inbounds %struct.hostkeys_update_ctx* %16, i32 0, i32 7
  %17 = load i64* %nold, align 8
  %cmp4 = icmp ult i64 %15, %17
  br i1 %cmp4, label %for.body5, label %for.end9

for.body5:                                        ; preds = %for.cond3
  %18 = load i64* %i, align 8
  %19 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %old_keys = getelementptr inbounds %struct.hostkeys_update_ctx* %19, i32 0, i32 6
  %20 = load %struct.sshkey*** %old_keys, align 8
  %arrayidx6 = getelementptr inbounds %struct.sshkey** %20, i64 %18
  %21 = load %struct.sshkey** %arrayidx6, align 8
  call void @sshkey_free(%struct.sshkey* %21)
  br label %for.inc7

for.inc7:                                         ; preds = %for.body5
  %22 = load i64* %i, align 8
  %inc8 = add i64 %22, 1
  store i64 %inc8, i64* %i, align 8
  br label %for.cond3

for.end9:                                         ; preds = %for.cond3
  %23 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %old_keys10 = getelementptr inbounds %struct.hostkeys_update_ctx* %23, i32 0, i32 6
  %24 = load %struct.sshkey*** %old_keys10, align 8
  %25 = bitcast %struct.sshkey** %24 to i8*
  call void @free(i8* %25) #9
  %26 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %host_str = getelementptr inbounds %struct.hostkeys_update_ctx* %26, i32 0, i32 0
  %27 = load i8** %host_str, align 8
  call void @free(i8* %27) #9
  %28 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %ip_str = getelementptr inbounds %struct.hostkeys_update_ctx* %28, i32 0, i32 1
  %29 = load i8** %ip_str, align 8
  call void @free(i8* %29) #9
  %30 = load %struct.hostkeys_update_ctx** %ctx.addr, align 8
  %31 = bitcast %struct.hostkeys_update_ctx* %30 to i8*
  call void @free(i8* %31) #9
  br label %return

return:                                           ; preds = %for.end9, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define %struct.termios* @get_saved_tio() #0 {
entry:
  %0 = load i32* @_in_raw_mode, align 4
  %tobool = icmp ne i32 %0, 0
  %cond = select i1 %tobool, %struct.termios* @_saved_tio, %struct.termios* null
  ret %struct.termios* %cond
}

; Function Attrs: nounwind sspreq uwtable
define void @leave_raw_mode(i32 %quiet) #0 {
entry:
  %quiet.addr = alloca i32, align 4
  store i32 %quiet, i32* %quiet.addr, align 4
  %0 = load i32* @_in_raw_mode, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %if.end6

if.end:                                           ; preds = %entry
  %1 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9
  %call1 = call i32 @tcsetattr(i32 %call, i32 1, %struct.termios* @_saved_tio) #9
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %3 = extractvalue { i32, i1 } %2, 0
  %4 = extractvalue { i32, i1 } %2, 1
  %5 = xor i1 %4, true
  br i1 %5, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp = icmp eq i32 %call1, %3
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %cont
  %6 = load i32* %quiet.addr, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then2
  call void @perror(i8* getelementptr inbounds ([10 x i8]* @.str636, i32 0, i32 0))
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.then2
  br label %if.end6

if.else:                                          ; preds = %cont
  store i32 0, i32* @_in_raw_mode, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end5, %if.then
  ret void
}

; Function Attrs: nounwind
declare i32 @tcsetattr(i32, i32, %struct.termios*) #4

declare void @perror(i8*) #1

; Function Attrs: nounwind sspreq uwtable
define void @enter_raw_mode(i32 %quiet) #0 {
entry:
  %quiet.addr = alloca i32, align 4
  %tio = alloca %struct.termios, align 4
  store i32 %quiet, i32* %quiet.addr, align 4
  %0 = load %struct._IO_FILE** @stdin, align 8
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9
  %call1 = call i32 @tcgetattr(i32 %call, %struct.termios* %tio) #9
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %cmp = icmp eq i32 %call1, %2
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %cont
  %5 = load i32* %quiet.addr, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  call void @perror(i8* getelementptr inbounds ([10 x i8]* @.str1637, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end22

if.end3:                                          ; preds = %cont
  %6 = bitcast %struct.termios* %tio to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.termios* @_saved_tio to i8*), i8* %6, i64 60, i32 4, i1 false)
  %c_iflag = getelementptr inbounds %struct.termios* %tio, i32 0, i32 0
  %7 = load i32* %c_iflag, align 4
  %or = or i32 %7, 4
  store i32 %or, i32* %c_iflag, align 4
  %c_iflag4 = getelementptr inbounds %struct.termios* %tio, i32 0, i32 0
  %8 = load i32* %c_iflag4, align 4
  %and = and i32 %8, -7649
  store i32 %and, i32* %c_iflag4, align 4
  %c_iflag5 = getelementptr inbounds %struct.termios* %tio, i32 0, i32 0
  %9 = load i32* %c_iflag5, align 4
  %and6 = and i32 %9, -513
  store i32 %and6, i32* %c_iflag5, align 4
  %c_lflag = getelementptr inbounds %struct.termios* %tio, i32 0, i32 3
  %10 = load i32* %c_lflag, align 4
  %and7 = and i32 %10, -124
  store i32 %and7, i32* %c_lflag, align 4
  %c_lflag8 = getelementptr inbounds %struct.termios* %tio, i32 0, i32 3
  %11 = load i32* %c_lflag8, align 4
  %and9 = and i32 %11, -32769
  store i32 %and9, i32* %c_lflag8, align 4
  %c_oflag = getelementptr inbounds %struct.termios* %tio, i32 0, i32 1
  %12 = load i32* %c_oflag, align 4
  %and10 = and i32 %12, -2
  store i32 %and10, i32* %c_oflag, align 4
  %c_cc = getelementptr inbounds %struct.termios* %tio, i32 0, i32 5
  %arrayidx = getelementptr inbounds [32 x i8]* %c_cc, i32 0, i64 6
  store i8 1, i8* %arrayidx, align 1
  %c_cc11 = getelementptr inbounds %struct.termios* %tio, i32 0, i32 5
  %arrayidx12 = getelementptr inbounds [32 x i8]* %c_cc11, i32 0, i64 5
  store i8 0, i8* %arrayidx12, align 1
  %13 = load %struct._IO_FILE** @stdin, align 8
  %call13 = call i32 @fileno(%struct._IO_FILE* %13) #9
  %call14 = call i32 @tcsetattr(i32 %call13, i32 1, %struct.termios* %tio) #9
  %14 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %15 = extractvalue { i32, i1 } %14, 0
  %16 = extractvalue { i32, i1 } %14, 1
  %17 = xor i1 %16, true
  br i1 %17, label %cont16, label %trap15

trap15:                                           ; preds = %if.end3
  call void @llvm.trap() #3
  unreachable

cont16:                                           ; preds = %if.end3
  %cmp17 = icmp eq i32 %call14, %15
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %cont16
  %18 = load i32* %quiet.addr, align 4
  %tobool19 = icmp ne i32 %18, 0
  br i1 %tobool19, label %if.end21, label %if.then20

if.then20:                                        ; preds = %if.then18
  call void @perror(i8* getelementptr inbounds ([10 x i8]* @.str636, i32 0, i32 0))
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.then18
  br label %if.end22

if.else:                                          ; preds = %cont16
  store i32 1, i32* @_in_raw_mode, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.end21, %if.end
  ret void
}

; Function Attrs: nounwind
declare i32 @tcgetattr(i32, %struct.termios*) #4

; Function Attrs: nounwind sspreq uwtable
define void @ssh_kill_proxy_command() #0 {
entry:
  %0 = load i32* @proxy_command_pid, align 4
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @proxy_command_pid, align 4
  %call = call i32 @kill(i32 %1, i32 1) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define i32 @ssh_connect(i8* %host, %struct.addrinfo* %addrs, %struct.sockaddr_storage* %hostaddr, i16 zeroext %port, i32 %family, i32 %connection_attempts, i32* %timeout_ms, i32 %want_keepalive, i32 %needpriv) #0 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca i8*, align 8
  %addrs.addr = alloca %struct.addrinfo*, align 8
  %hostaddr.addr = alloca %struct.sockaddr_storage*, align 8
  %port.addr = alloca i16, align 2
  %family.addr = alloca i32, align 4
  %connection_attempts.addr = alloca i32, align 4
  %timeout_ms.addr = alloca i32*, align 8
  %want_keepalive.addr = alloca i32, align 4
  %needpriv.addr = alloca i32, align 4
  store i8* %host, i8** %host.addr, align 8
  store %struct.addrinfo* %addrs, %struct.addrinfo** %addrs.addr, align 8
  store %struct.sockaddr_storage* %hostaddr, %struct.sockaddr_storage** %hostaddr.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store i32 %family, i32* %family.addr, align 4
  store i32 %connection_attempts, i32* %connection_attempts.addr, align 4
  store i32* %timeout_ms, i32** %timeout_ms.addr, align 8
  store i32 %want_keepalive, i32* %want_keepalive.addr, align 4
  store i32 %needpriv, i32* %needpriv.addr, align 4
  %0 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8** %host.addr, align 8
  %2 = load %struct.addrinfo** %addrs.addr, align 8
  %3 = load %struct.sockaddr_storage** %hostaddr.addr, align 8
  %4 = load i16* %port.addr, align 2
  %5 = load i32* %family.addr, align 4
  %6 = load i32* %connection_attempts.addr, align 4
  %7 = load i32** %timeout_ms.addr, align 8
  %8 = load i32* %want_keepalive.addr, align 4
  %9 = load i32* %needpriv.addr, align 4
  %call = call i32 @ssh_connect_direct(i8* %1, %struct.addrinfo* %2, %struct.sockaddr_storage* %3, i16 zeroext %4, i32 %5, i32 %6, i32* %7, i32 %8, i32 %9)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %10 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call1 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([2 x i8]* @.str644, i32 0, i32 0)) #12
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.else4

if.then3:                                         ; preds = %if.else
  call void @packet_set_connection(i32 0, i32 1)
  store i32 0, i32* %retval
  br label %return

if.else4:                                         ; preds = %if.else
  %11 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 89), align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else4
  %12 = load i8** %host.addr, align 8
  %13 = load i16* %port.addr, align 2
  %14 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call6 = call i32 @ssh_proxy_fdpass_connect(i8* %12, i16 zeroext %13, i8* %14)
  store i32 %call6, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else4
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %if.end8

if.end8:                                          ; preds = %if.end7
  %15 = load i8** %host.addr, align 8
  %16 = load i16* %port.addr, align 2
  %17 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %call9 = call i32 @ssh_proxy_connect(i8* %15, i16 zeroext %16, i8* %17)
  store i32 %call9, i32* %retval
  br label %return

return:                                           ; preds = %if.end8, %if.then5, %if.then3, %if.then
  %18 = load i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind sspreq uwtable
define void @ssh_exchange_identification(i32 %timeout_ms) #0 {
entry:
  %timeout_ms.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16
  %remote_version = alloca [256 x i8], align 16
  %remote_major = alloca i32, align 4
  %remote_minor = alloca i32, align 4
  %mismatch = alloca i32, align 4
  %connection_in = alloca i32, align 4
  %connection_out = alloca i32, align 4
  %minor1 = alloca i32, align 4
  %client_banner_sent = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %len = alloca i64, align 8
  %fdsetsz = alloca i32, align 4
  %remaining = alloca i32, align 4
  %rc = alloca i32, align 4
  %t_start = alloca %struct.timeval, align 8
  %t_remaining = alloca %struct.timeval, align 8
  %fdset = alloca %struct.fd_set*, align 8
  store i32 %timeout_ms, i32* %timeout_ms.addr, align 4
  %0 = load %struct.ssh** @active_state, align 8
  %call = call i32 bitcast (i32 (%struct.ssh.68*)* @ssh_packet_get_connection_in to i32 (%struct.ssh*)*)(%struct.ssh* %0)
  store i32 %call, i32* %connection_in, align 4
  %1 = load %struct.ssh** @active_state, align 8
  %call1 = call i32 bitcast (i32 (%struct.ssh.68*)* @ssh_packet_get_connection_out to i32 (%struct.ssh*)*)(%struct.ssh* %1)
  store i32 %call1, i32* %connection_out, align 4
  store i32 5, i32* %minor1, align 4
  store i32 0, i32* %client_banner_sent, align 4
  %2 = load i32* %connection_in, align 4
  %3 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  %7 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 8, i32 8)
  %8 = extractvalue { i32, i1 } %7, 0
  %9 = extractvalue { i32, i1 } %7, 1
  %10 = xor i1 %9, true
  br i1 %10, label %cont3, label %trap2

trap2:                                            ; preds = %cont
  call void @llvm.trap() #3
  unreachable

cont3:                                            ; preds = %cont
  %11 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 1)
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = extractvalue { i32, i1 } %11, 1
  %14 = xor i1 %13, true
  br i1 %14, label %cont5, label %trap4

trap4:                                            ; preds = %cont3
  call void @llvm.trap() #3
  unreachable

cont5:                                            ; preds = %cont3
  %15 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %12)
  %16 = extractvalue { i32, i1 } %15, 0
  %17 = extractvalue { i32, i1 } %15, 1
  %18 = xor i1 %17, true
  br i1 %18, label %cont7, label %trap6

trap6:                                            ; preds = %cont5
  call void @llvm.trap() #3
  unreachable

cont7:                                            ; preds = %cont5
  %19 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 8, i32 8)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont9, label %trap8

trap8:                                            ; preds = %cont7
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %cont7
  %div = sdiv i32 %16, %20
  %conv = sext i32 %div to i64
  %mul = mul i64 %conv, 8
  %conv10 = trunc i64 %mul to i32
  store i32 %conv10, i32* %fdsetsz, align 4
  %23 = load i32* %fdsetsz, align 4
  %conv11 = sext i32 %23 to i64
  %call12 = call i8* @xcalloc(i64 1, i64 %conv11)
  %24 = bitcast i8* %call12 to %struct.fd_set*
  store %struct.fd_set* %24, %struct.fd_set** %fdset, align 8
  %25 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  %cmp = icmp eq i32 %25, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont9
  call void @enable_compat20()
  %26 = load i32* %connection_out, align 4
  call void @send_client_banner(i32 %26, i32 0)
  store i32 1, i32* %client_banner_sent, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cont9
  %27 = load i32* %timeout_ms.addr, align 4
  store i32 %27, i32* %remaining, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end90, %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %for.cond
  %28 = load i32* %i, align 4
  %conv15 = zext i32 %28 to i64
  %cmp16 = icmp ult i64 %conv15, 255
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond14
  %29 = load i32* %timeout_ms.addr, align 4
  %cmp18 = icmp sgt i32 %29, 0
  br i1 %cmp18, label %if.then20, label %if.end44

if.then20:                                        ; preds = %for.body
  %call21 = call i32 @gettimeofday(%struct.timeval* %t_start, %struct.timezone* null) #9
  %30 = load i32* %remaining, align 4
  call void @ms_to_timeval(%struct.timeval* %t_remaining, i32 %30)
  %31 = load i32* %connection_in, align 4
  %32 = load %struct.fd_set** %fdset, align 8
  call void @kludge_FD_SET(i32 %31, %struct.fd_set* %32)
  %33 = load i32* %connection_in, align 4
  %34 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 1)
  %35 = extractvalue { i32, i1 } %34, 0
  %36 = extractvalue { i32, i1 } %34, 1
  %37 = xor i1 %36, true
  br i1 %37, label %cont23, label %trap22

trap22:                                           ; preds = %if.then20
  call void @llvm.trap() #3
  unreachable

cont23:                                           ; preds = %if.then20
  %38 = load %struct.fd_set** %fdset, align 8
  %39 = load %struct.fd_set** %fdset, align 8
  %call24 = call i32 @select(i32 %35, %struct.fd_set* %38, %struct.fd_set* null, %struct.fd_set* %39, %struct.timeval* %t_remaining)
  store i32 %call24, i32* %rc, align 4
  call void @ms_subtract_diff(%struct.timeval* %t_start, i32* %remaining)
  %40 = load i32* %rc, align 4
  %cmp25 = icmp eq i32 %40, 0
  br i1 %cmp25, label %if.then29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cont23
  %41 = load i32* %remaining, align 4
  %cmp27 = icmp sle i32 %41, 0
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %lor.lhs.false, %cont23
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str1645, i32 0, i32 0)) #11
  unreachable

if.end30:                                         ; preds = %lor.lhs.false
  %42 = load i32* %rc, align 4
  %43 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %44 = extractvalue { i32, i1 } %43, 0
  %45 = extractvalue { i32, i1 } %43, 1
  %46 = xor i1 %45, true
  br i1 %46, label %cont32, label %trap31

trap31:                                           ; preds = %if.end30
  call void @llvm.trap() #3
  unreachable

cont32:                                           ; preds = %if.end30
  %cmp33 = icmp eq i32 %42, %44
  br i1 %cmp33, label %if.then35, label %if.end43

if.then35:                                        ; preds = %cont32
  %call36 = call i32* @__errno_location() #2
  %47 = load i32* %call36, align 4
  %cmp37 = icmp eq i32 %47, 4
  br i1 %cmp37, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.then35
  br label %for.inc

if.end40:                                         ; preds = %if.then35
  %call41 = call i32* @__errno_location() #2
  %48 = load i32* %call41, align 4
  %call42 = call i8* @strerror(i32 %48) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str2646, i32 0, i32 0), i8* %call42) #11
  unreachable

if.end43:                                         ; preds = %cont32
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %for.body
  %49 = load i32* %connection_in, align 4
  %50 = load i32* %i, align 4
  %idxprom = zext i32 %50 to i64
  %arrayidx = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 %idxprom
  %call45 = call i64 @atomicio(i64 (i32, i8*, i64)* @read, i32 %49, i8* %arrayidx, i64 1)
  store i64 %call45, i64* %len, align 8
  %51 = load i64* %len, align 8
  %cmp46 = icmp ne i64 %51, 1
  br i1 %cmp46, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end44
  %call48 = call i32* @__errno_location() #2
  %52 = load i32* %call48, align 4
  %cmp49 = icmp eq i32 %52, 32
  br i1 %cmp49, label %if.then51, label %if.else

if.then51:                                        ; preds = %land.lhs.true
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([62 x i8]* @.str3647, i32 0, i32 0)) #11
  unreachable

if.else:                                          ; preds = %land.lhs.true, %if.end44
  %53 = load i64* %len, align 8
  %cmp52 = icmp ne i64 %53, 1
  br i1 %cmp52, label %if.then54, label %if.end57

if.then54:                                        ; preds = %if.else
  %call55 = call i32* @__errno_location() #2
  %54 = load i32* %call55, align 4
  %call56 = call i8* @strerror(i32 %54) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str4648, i32 0, i32 0), i8* %call56) #11
  unreachable

if.end57:                                         ; preds = %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57
  %55 = load i32* %i, align 4
  %idxprom59 = zext i32 %55 to i64
  %arrayidx60 = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 %idxprom59
  %56 = load i8* %arrayidx60, align 1
  %conv61 = sext i8 %56 to i32
  %cmp62 = icmp eq i32 %conv61, 13
  br i1 %cmp62, label %if.then64, label %if.end69

if.then64:                                        ; preds = %if.end58
  %57 = load i32* %i, align 4
  %idxprom65 = zext i32 %57 to i64
  %arrayidx66 = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 %idxprom65
  store i8 10, i8* %arrayidx66, align 1
  %58 = load i32* %i, align 4
  %add = add i32 %58, 1
  %idxprom67 = zext i32 %add to i64
  %arrayidx68 = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 %idxprom67
  store i8 0, i8* %arrayidx68, align 1
  br label %for.inc

if.end69:                                         ; preds = %if.end58
  %59 = load i32* %i, align 4
  %idxprom70 = zext i32 %59 to i64
  %arrayidx71 = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 %idxprom70
  %60 = load i8* %arrayidx71, align 1
  %conv72 = sext i8 %60 to i32
  %cmp73 = icmp eq i32 %conv72, 10
  br i1 %cmp73, label %if.then75, label %if.end79

if.then75:                                        ; preds = %if.end69
  %61 = load i32* %i, align 4
  %add76 = add i32 %61, 1
  %idxprom77 = zext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 %idxprom77
  store i8 0, i8* %arrayidx78, align 1
  br label %for.end

if.end79:                                         ; preds = %if.end69
  %62 = load i32* %n, align 4
  %inc = add i32 %62, 1
  store i32 %inc, i32* %n, align 4
  %cmp80 = icmp ugt i32 %inc, 65536
  br i1 %cmp80, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end79
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([48 x i8]* @.str5649, i32 0, i32 0)) #11
  unreachable

if.end83:                                         ; preds = %if.end79
  br label %for.inc

for.inc:                                          ; preds = %if.end83, %if.then64, %if.then39
  %63 = load i32* %i, align 4
  %inc84 = add i32 %63, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond14

for.end:                                          ; preds = %if.then75, %for.cond14
  %arrayidx85 = getelementptr inbounds [256 x i8]* %buf, i32 0, i64 255
  store i8 0, i8* %arrayidx85, align 1
  %arraydecay = getelementptr inbounds [256 x i8]* %buf, i32 0, i32 0
  %call86 = call i32 @strncmp(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8]* @.str6650, i32 0, i32 0), i64 4) #12
  %cmp87 = icmp eq i32 %call86, 0
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; preds = %for.end
  br label %for.end92

if.end90:                                         ; preds = %for.end
  %arraydecay91 = getelementptr inbounds [256 x i8]* %buf, i32 0, i32 0
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([32 x i8]* @.str7651, i32 0, i32 0), i8* %arraydecay91)
  br label %for.cond

for.end92:                                        ; preds = %if.then89
  %arraydecay93 = getelementptr inbounds [256 x i8]* %buf, i32 0, i32 0
  %call94 = call i8* @xstrdup(i8* %arraydecay93)
  store i8* %call94, i8** @server_version_string, align 8
  %64 = load %struct.fd_set** %fdset, align 8
  %65 = bitcast %struct.fd_set* %64 to i8*
  call void @free(i8* %65) #9
  %66 = load i8** @server_version_string, align 8
  %arraydecay95 = getelementptr inbounds [256 x i8]* %remote_version, i32 0, i32 0
  %call96 = call i32 (i8*, i8*, ...)* @sscanf(i8* %66, i8* getelementptr inbounds ([17 x i8]* @.str8652, i32 0, i32 0), i32* %remote_major, i32* %remote_minor, i8* %arraydecay95) #9
  %cmp97 = icmp ne i32 %call96, 3
  br i1 %cmp97, label %if.then99, label %if.end101

if.then99:                                        ; preds = %for.end92
  %arraydecay100 = getelementptr inbounds [256 x i8]* %buf, i32 0, i32 0
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([53 x i8]* @.str9653, i32 0, i32 0), i8* %arraydecay100) #11
  unreachable

if.end101:                                        ; preds = %for.end92
  %67 = load i32* %remote_major, align 4
  %68 = load i32* %remote_minor, align 4
  %arraydecay102 = getelementptr inbounds [256 x i8]* %remote_version, i32 0, i32 0
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([62 x i8]* @.str10654, i32 0, i32 0), i32 %67, i32 %68, i8* %arraydecay102)
  %arraydecay103 = getelementptr inbounds [256 x i8]* %remote_version, i32 0, i32 0
  %call104 = call i32 @compat_datafellows(i8* %arraydecay103)
  %69 = load %struct.ssh** @active_state, align 8
  %compat = getelementptr inbounds %struct.ssh* %69, i32 0, i32 8
  store i32 %call104, i32* %compat, align 4
  store i32 0, i32* %mismatch, align 4
  %70 = load i32* %remote_major, align 4
  switch i32 %70, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb132
  ]

sw.bb:                                            ; preds = %if.end101
  %71 = load i32* %remote_minor, align 4
  %cmp105 = icmp eq i32 %71, 99
  br i1 %cmp105, label %land.lhs.true107, label %if.end112

land.lhs.true107:                                 ; preds = %sw.bb
  %72 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  %and = and i32 %72, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true108, label %if.end112

land.lhs.true108:                                 ; preds = %land.lhs.true107
  %73 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  %and109 = and i32 %73, 2
  %tobool110 = icmp ne i32 %and109, 0
  br i1 %tobool110, label %if.end112, label %if.then111

if.then111:                                       ; preds = %land.lhs.true108
  call void @enable_compat20()
  br label %sw.epilog

if.end112:                                        ; preds = %land.lhs.true108, %land.lhs.true107, %sw.bb
  %74 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  %and113 = and i32 %74, 1
  %tobool114 = icmp ne i32 %and113, 0
  br i1 %tobool114, label %if.end116, label %if.then115

if.then115:                                       ; preds = %if.end112
  store i32 1, i32* %mismatch, align 4
  br label %sw.epilog

if.end116:                                        ; preds = %if.end112
  %75 = load i32* %remote_minor, align 4
  %cmp117 = icmp slt i32 %75, 3
  br i1 %cmp117, label %if.then119, label %if.else120

if.then119:                                       ; preds = %if.end116
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([49 x i8]* @.str11655, i32 0, i32 0)) #11
  unreachable

if.else120:                                       ; preds = %if.end116
  %76 = load i32* %remote_minor, align 4
  %cmp121 = icmp eq i32 %76, 3
  br i1 %cmp121, label %if.then126, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %if.else120
  %77 = load i32* %remote_minor, align 4
  %cmp124 = icmp eq i32 %77, 4
  br i1 %cmp124, label %if.then126, label %if.end130

if.then126:                                       ; preds = %lor.lhs.false123, %if.else120
  call void @enable_compat13()
  store i32 3, i32* %minor1, align 4
  %78 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool127 = icmp ne i32 %78, 0
  br i1 %tobool127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.then126
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([43 x i8]* @.str12656, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  br label %if.end129

if.end129:                                        ; preds = %if.then128, %if.then126
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %lor.lhs.false123
  br label %if.end131

if.end131:                                        ; preds = %if.end130
  br label %sw.epilog

sw.bb132:                                         ; preds = %if.end101
  %79 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  %and133 = and i32 %79, 4
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.then135, label %if.end136

if.then135:                                       ; preds = %sw.bb132
  call void @enable_compat20()
  br label %sw.epilog

if.end136:                                        ; preds = %sw.bb132
  br label %sw.default

sw.default:                                       ; preds = %if.end136, %if.end101
  store i32 1, i32* %mismatch, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.then135, %if.end131, %if.then115, %if.then111
  %80 = load i32* %mismatch, align 4
  %tobool137 = icmp ne i32 %80, 0
  br i1 %tobool137, label %if.then138, label %if.end141

if.then138:                                       ; preds = %sw.epilog
  %81 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 37), align 4
  %and139 = and i32 %81, 4
  %tobool140 = icmp ne i32 %and139, 0
  %cond = select i1 %tobool140, i32 2, i32 1
  %82 = load i32* %remote_major, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str13657, i32 0, i32 0), i32 %cond, i32 %82) #11
  unreachable

if.end141:                                        ; preds = %sw.epilog
  %83 = load i32* @datafellows, align 4
  %and142 = and i32 %83, 262144
  %cmp143 = icmp ne i32 %and142, 0
  br i1 %cmp143, label %if.then145, label %if.end147

if.then145:                                       ; preds = %if.end141
  %arraydecay146 = getelementptr inbounds [256 x i8]* %remote_version, i32 0, i32 0
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([71 x i8]* @.str14658, i32 0, i32 0), i8* %arraydecay146) #11
  unreachable

if.end147:                                        ; preds = %if.end141
  %84 = load i32* @datafellows, align 4
  %and148 = and i32 %84, 8192
  %cmp149 = icmp ne i32 %and148, 0
  br i1 %cmp149, label %if.then151, label %if.end153

if.then151:                                       ; preds = %if.end147
  %arraydecay152 = getelementptr inbounds [256 x i8]* %remote_version, i32 0, i32 0
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([84 x i8]* @.str15659, i32 0, i32 0), i8* %arraydecay152)
  br label %if.end153

if.end153:                                        ; preds = %if.then151, %if.end147
  %85 = load i32* %client_banner_sent, align 4
  %tobool154 = icmp ne i32 %85, 0
  br i1 %tobool154, label %if.end156, label %if.then155

if.then155:                                       ; preds = %if.end153
  %86 = load i32* %connection_out, align 4
  %87 = load i32* %minor1, align 4
  call void @send_client_banner(i32 %86, i32 %87)
  br label %if.end156

if.end156:                                        ; preds = %if.then155, %if.end153
  %88 = load i8** @server_version_string, align 8
  %call157 = call i8* @chop(i8* %88)
  ret void
}

declare void @ms_to_timeval(%struct.timeval*, i32) #1

declare void @ms_subtract_diff(%struct.timeval*, i32*) #1

declare i32 @compat_datafellows(i8*) #1

declare void @enable_compat13() #1

declare i8* @chop(i8*) #1

; Function Attrs: nounwind sspreq uwtable
define void @get_hostfile_hostname_ipaddr(i8* %hostname, %struct.sockaddr* %hostaddr, i16 zeroext %port, i8** %hostfile_hostname, i8** %hostfile_ipaddr) #0 {
entry:
  %hostname.addr = alloca i8*, align 8
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %port.addr = alloca i16, align 2
  %hostfile_hostname.addr = alloca i8**, align 8
  %hostfile_ipaddr.addr = alloca i8**, align 8
  %ntop = alloca [1025 x i8], align 16
  %addrlen = alloca i32, align 4
  store i8* %hostname, i8** %hostname.addr, align 8
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store i8** %hostfile_hostname, i8*** %hostfile_hostname.addr, align 8
  store i8** %hostfile_ipaddr, i8*** %hostfile_ipaddr.addr, align 8
  %0 = load %struct.sockaddr** %hostaddr.addr, align 8
  %cmp = icmp eq %struct.sockaddr* %0, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %cond.true
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %cond.true
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %struct.sockaddr** %hostaddr.addr, align 8
  %sa_family = getelementptr inbounds %struct.sockaddr* %5, i32 0, i32 0
  %6 = load i16* %sa_family, align 2
  %conv = zext i16 %6 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cont
  %cond = phi i32 [ %2, %cont ], [ %conv, %cond.false ]
  switch i32 %cond, label %sw.default [
    i32 -1, label %sw.bb
    i32 2, label %sw.bb1
    i32 10, label %sw.bb2
  ]

sw.bb:                                            ; preds = %cond.end
  store i32 0, i32* %addrlen, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %cond.end
  store i32 16, i32* %addrlen, align 4
  br label %sw.epilog

sw.bb2:                                           ; preds = %cond.end
  store i32 28, i32* %addrlen, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  store i32 16, i32* %addrlen, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %7 = load i8*** %hostfile_ipaddr.addr, align 8
  %cmp3 = icmp ne i8** %7, null
  br i1 %cmp3, label %if.then, label %if.end15

if.then:                                          ; preds = %sw.epilog
  %8 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp5 = icmp eq i8* %8, null
  br i1 %cmp5, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then
  %9 = load %struct.sockaddr** %hostaddr.addr, align 8
  %10 = load i32* %addrlen, align 4
  %arraydecay = getelementptr inbounds [1025 x i8]* %ntop, i32 0, i32 0
  %call = call i32 @getnameinfo(%struct.sockaddr* %9, i32 %10, i8* %arraydecay, i32 1025, i8* null, i32 0, i32 1)
  %cmp8 = icmp ne i32 %call, 0
  br i1 %cmp8, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then7
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([23 x i8]* @.str16660, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.get_hostfile_hostname_ipaddr, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %if.then7
  %arraydecay11 = getelementptr inbounds [1025 x i8]* %ntop, i32 0, i32 0
  %11 = load i16* %port.addr, align 2
  %call12 = call i8* @put_host_port(i8* %arraydecay11, i16 zeroext %11)
  %12 = load i8*** %hostfile_ipaddr.addr, align 8
  store i8* %call12, i8** %12, align 8
  br label %if.end14

if.else:                                          ; preds = %if.then
  %call13 = call i8* @xstrdup(i8* getelementptr inbounds ([30 x i8]* @.str17661, i32 0, i32 0))
  %13 = load i8*** %hostfile_ipaddr.addr, align 8
  store i8* %call13, i8** %13, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %sw.epilog
  %14 = load i8*** %hostfile_hostname.addr, align 8
  %cmp16 = icmp ne i8** %14, null
  br i1 %cmp16, label %if.then18, label %if.end26

if.then18:                                        ; preds = %if.end15
  %15 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8
  %cmp19 = icmp ne i8* %15, null
  br i1 %cmp19, label %if.then21, label %if.else23

if.then21:                                        ; preds = %if.then18
  %16 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8
  %call22 = call i8* @xstrdup(i8* %16)
  %17 = load i8*** %hostfile_hostname.addr, align 8
  store i8* %call22, i8** %17, align 8
  %18 = load i8*** %hostfile_hostname.addr, align 8
  %19 = load i8** %18, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([23 x i8]* @.str18662, i32 0, i32 0), i8* %19)
  br label %if.end25

if.else23:                                        ; preds = %if.then18
  %20 = load i8** %hostname.addr, align 8
  %21 = load i16* %port.addr, align 2
  %call24 = call i8* @put_host_port(i8* %20, i16 zeroext %21)
  %22 = load i8*** %hostfile_hostname.addr, align 8
  store i8* %call24, i8** %22, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then21
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end15
  ret void
}

declare i8* @put_host_port(i8*, i16 zeroext) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @verify_host_key(i8* %host, %struct.sockaddr* %hostaddr, %struct.sshkey* %host_key) #0 {
entry:
  %host.addr = alloca i8*, align 8
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %host_key.addr = alloca %struct.sshkey*, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %flags = alloca i32, align 4
  %valid = alloca [64 x i8], align 16
  %fp = alloca i8*, align 8
  %cafp = alloca i8*, align 8
  %plain = alloca %struct.sshkey*, align 8
  store i8* %host, i8** %host.addr, align 8
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  store %struct.sshkey* %host_key, %struct.sshkey** %host_key.addr, align 8
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %r, align 4
  store i32 0, i32* %flags, align 4
  store i8* null, i8** %fp, align 8
  store i8* null, i8** %cafp, align 8
  store %struct.sshkey* null, %struct.sshkey** %plain, align 8
  %4 = load %struct.sshkey** %host_key.addr, align 8
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call = call i8* @sshkey_fingerprint(%struct.sshkey* %4, i32 %5, i32 0)
  store i8* %call, i8** %fp, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %6 = load i32* %r, align 4
  %call1 = call i8* @ssh_err(i32 %6)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([29 x i8]* @.str19663, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @__func__.verify_host_key, i32 0, i32 0), i8* %call1)
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %8 = extractvalue { i32, i1 } %7, 0
  %9 = extractvalue { i32, i1 } %7, 1
  %10 = xor i1 %9, true
  br i1 %10, label %cont3, label %trap2

trap2:                                            ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont3:                                            ; preds = %if.then
  store i32 %8, i32* %r, align 4
  br label %out

if.end:                                           ; preds = %cont
  %11 = load %struct.sshkey** %host_key.addr, align 8
  %call4 = call i32 @sshkey_is_cert(%struct.sshkey* %11)
  %tobool = icmp ne i32 %call4, 0
  br i1 %tobool, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  %12 = load %struct.sshkey** %host_key.addr, align 8
  %cert = getelementptr inbounds %struct.sshkey* %12, i32 0, i32 8
  %13 = load %struct.sshkey_cert** %cert, align 8
  %signature_key = getelementptr inbounds %struct.sshkey_cert* %13, i32 0, i32 10
  %14 = load %struct.sshkey** %signature_key, align 8
  %15 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call6 = call i8* @sshkey_fingerprint(%struct.sshkey* %14, i32 %15, i32 0)
  store i8* %call6, i8** %cafp, align 8
  %cmp7 = icmp eq i8* %call6, null
  br i1 %cmp7, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.then5
  %16 = load i32* %r, align 4
  %call9 = call i8* @ssh_err(i32 %16)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([27 x i8]* @.str20664, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @__func__.verify_host_key, i32 0, i32 0), i8* %call9)
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont11, label %trap10

trap10:                                           ; preds = %if.then8
  call void @llvm.trap() #3
  unreachable

cont11:                                           ; preds = %if.then8
  store i32 %18, i32* %r, align 4
  br label %out

if.end12:                                         ; preds = %if.then5
  %21 = load %struct.sshkey** %host_key.addr, align 8
  %cert13 = getelementptr inbounds %struct.sshkey* %21, i32 0, i32 8
  %22 = load %struct.sshkey_cert** %cert13, align 8
  %arraydecay = getelementptr inbounds [64 x i8]* %valid, i32 0, i32 0
  %call14 = call i64 @sshkey_format_cert_validity(%struct.sshkey_cert* %22, i8* %arraydecay, i64 64)
  %23 = load %struct.sshkey** %host_key.addr, align 8
  %call15 = call i8* @sshkey_ssh_name(%struct.sshkey* %23)
  %24 = load i8** %fp, align 8
  %25 = load %struct.sshkey** %host_key.addr, align 8
  %cert16 = getelementptr inbounds %struct.sshkey* %25, i32 0, i32 8
  %26 = load %struct.sshkey_cert** %cert16, align 8
  %serial = getelementptr inbounds %struct.sshkey_cert* %26, i32 0, i32 2
  %27 = load i64* %serial, align 8
  %28 = load %struct.sshkey** %host_key.addr, align 8
  %cert17 = getelementptr inbounds %struct.sshkey* %28, i32 0, i32 8
  %29 = load %struct.sshkey_cert** %cert17, align 8
  %key_id = getelementptr inbounds %struct.sshkey_cert* %29, i32 0, i32 3
  %30 = load i8** %key_id, align 8
  %31 = load %struct.sshkey** %host_key.addr, align 8
  %cert18 = getelementptr inbounds %struct.sshkey* %31, i32 0, i32 8
  %32 = load %struct.sshkey_cert** %cert18, align 8
  %signature_key19 = getelementptr inbounds %struct.sshkey_cert* %32, i32 0, i32 10
  %33 = load %struct.sshkey** %signature_key19, align 8
  %call20 = call i8* @sshkey_ssh_name(%struct.sshkey* %33)
  %34 = load i8** %cafp, align 8
  %arraydecay21 = getelementptr inbounds [64 x i8]* %valid, i32 0, i32 0
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([70 x i8]* @.str21665, i32 0, i32 0), i8* %call15, i8* %24, i64 %27, i8* %30, i8* %call20, i8* %34, i8* %arraydecay21)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end12
  %35 = load i32* %i, align 4
  %36 = load %struct.sshkey** %host_key.addr, align 8
  %cert22 = getelementptr inbounds %struct.sshkey* %36, i32 0, i32 8
  %37 = load %struct.sshkey_cert** %cert22, align 8
  %nprincipals = getelementptr inbounds %struct.sshkey_cert* %37, i32 0, i32 4
  %38 = load i32* %nprincipals, align 4
  %cmp23 = icmp ult i32 %35, %38
  br i1 %cmp23, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32* %i, align 4
  %idxprom = zext i32 %39 to i64
  %40 = load %struct.sshkey** %host_key.addr, align 8
  %cert24 = getelementptr inbounds %struct.sshkey* %40, i32 0, i32 8
  %41 = load %struct.sshkey_cert** %cert24, align 8
  %principals = getelementptr inbounds %struct.sshkey_cert* %41, i32 0, i32 5
  %42 = load i8*** %principals, align 8
  %arrayidx = getelementptr inbounds i8** %42, i64 %idxprom
  %43 = load i8** %arrayidx, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([37 x i8]* @.str22666, i32 0, i32 0), i8* %43)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %44 = load i32* %i, align 4
  %inc = add i32 %44, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end28

if.else:                                          ; preds = %if.end
  %45 = load i32* @compat20, align 4
  %tobool25 = icmp ne i32 %45, 0
  br i1 %tobool25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  %46 = load %struct.sshkey** %host_key.addr, align 8
  %call26 = call i8* @sshkey_ssh_name(%struct.sshkey* %46)
  br label %cond.end

cond.false:                                       ; preds = %if.else
  %47 = load %struct.sshkey** %host_key.addr, align 8
  %call27 = call i8* @sshkey_type(%struct.sshkey* %47)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call26, %cond.true ], [ %call27, %cond.false ]
  %48 = load i8** %fp, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([23 x i8]* @.str23667, i32 0, i32 0), i8* %cond, i8* %48)
  br label %if.end28

if.end28:                                         ; preds = %cond.end, %for.end
  %49 = load %struct.sshkey** @previous_host_key, align 8
  %50 = load %struct.sshkey** %host_key.addr, align 8
  %call29 = call i32 @sshkey_equal(%struct.sshkey* %49, %struct.sshkey* %50)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end28
  %51 = load %struct.sshkey** %host_key.addr, align 8
  %call32 = call i8* @sshkey_type(%struct.sshkey* %51)
  %52 = load i8** %fp, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([45 x i8]* @.str24668, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @__func__.verify_host_key, i32 0, i32 0), i8* %call32, i8* %52)
  store i32 0, i32* %r, align 4
  br label %out

if.end33:                                         ; preds = %if.end28
  %53 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 97), align 8
  %cmp34 = icmp ne i8* %53, null
  br i1 %cmp34, label %if.then35, label %if.end45

if.then35:                                        ; preds = %if.end33
  %54 = load %struct.sshkey** %host_key.addr, align 8
  %55 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 97), align 8
  %call36 = call i32 @sshkey_check_revoked(%struct.sshkey* %54, i8* %55)
  store i32 %call36, i32* %r, align 4
  %56 = load i32* %r, align 4
  switch i32 %56, label %sw.default [
    i32 0, label %sw.bb
    i32 -51, label %sw.bb37
  ]

sw.bb:                                            ; preds = %if.then35
  br label %sw.epilog

sw.bb37:                                          ; preds = %if.then35
  %57 = load %struct.sshkey** %host_key.addr, align 8
  %call38 = call i8* @sshkey_type(%struct.sshkey* %57)
  %58 = load i8** %fp, align 8
  %59 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 97), align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str25669, i32 0, i32 0), i8* %call38, i8* %58, i8* %59)
  %60 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %61 = extractvalue { i32, i1 } %60, 0
  %62 = extractvalue { i32, i1 } %60, 1
  %63 = xor i1 %62, true
  br i1 %63, label %cont40, label %trap39

trap39:                                           ; preds = %sw.bb37
  call void @llvm.trap() #3
  unreachable

cont40:                                           ; preds = %sw.bb37
  store i32 %61, i32* %r, align 4
  br label %out

sw.default:                                       ; preds = %if.then35
  %64 = load %struct.sshkey** %host_key.addr, align 8
  %call41 = call i8* @sshkey_type(%struct.sshkey* %64)
  %65 = load i8** %fp, align 8
  %66 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 97), align 8
  %67 = load i32* %r, align 4
  %call42 = call i8* @ssh_err(i32 %67)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([58 x i8]* @.str26670, i32 0, i32 0), i8* %call41, i8* %65, i8* %66, i8* %call42)
  %68 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %69 = extractvalue { i32, i1 } %68, 0
  %70 = extractvalue { i32, i1 } %68, 1
  %71 = xor i1 %70, true
  br i1 %71, label %cont44, label %trap43

trap43:                                           ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont44:                                           ; preds = %sw.default
  store i32 %69, i32* %r, align 4
  br label %out

sw.epilog:                                        ; preds = %sw.bb
  br label %if.end45

if.end45:                                         ; preds = %sw.epilog, %if.end33
  %72 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 50), align 4
  %tobool46 = icmp ne i32 %72, 0
  br i1 %tobool46, label %if.then47, label %if.end77

if.then47:                                        ; preds = %if.end45
  %73 = load %struct.sshkey** %host_key.addr, align 8
  %call48 = call i32 @sshkey_from_private(%struct.sshkey* %73, %struct.sshkey** %plain)
  store i32 %call48, i32* %r, align 4
  %cmp49 = icmp ne i32 %call48, 0
  br i1 %cmp49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.then47
  br label %out

if.end51:                                         ; preds = %if.then47
  %74 = load %struct.sshkey** %plain, align 8
  %call52 = call i32 @sshkey_is_cert(%struct.sshkey* %74)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %if.end51
  %75 = load %struct.sshkey** %plain, align 8
  %call55 = call i32 @sshkey_drop_cert(%struct.sshkey* %75)
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %if.end51
  %76 = load i8** %host.addr, align 8
  %77 = load %struct.sockaddr** %hostaddr.addr, align 8
  %78 = load %struct.sshkey** %plain, align 8
  %call57 = call i32 @verify_host_key_dns(i8* %76, %struct.sockaddr* %77, %struct.sshkey* %78, i32* %flags)
  %cmp58 = icmp eq i32 %call57, 0
  br i1 %cmp58, label %if.then59, label %if.end76

if.then59:                                        ; preds = %if.end56
  %79 = load i32* %flags, align 4
  %and = and i32 %79, 1
  %tobool60 = icmp ne i32 %and, 0
  br i1 %tobool60, label %if.then61, label %if.end75

if.then61:                                        ; preds = %if.then59
  %80 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 50), align 4
  %cmp62 = icmp eq i32 %80, 1
  br i1 %cmp62, label %land.lhs.true, label %if.end69

land.lhs.true:                                    ; preds = %if.then61
  %81 = load i32* %flags, align 4
  %and63 = and i32 %81, 2
  %tobool64 = icmp ne i32 %and63, 0
  br i1 %tobool64, label %land.lhs.true65, label %if.end69

land.lhs.true65:                                  ; preds = %land.lhs.true
  %82 = load i32* %flags, align 4
  %and66 = and i32 %82, 4
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %land.lhs.true65
  store i32 0, i32* %r, align 4
  br label %out

if.end69:                                         ; preds = %land.lhs.true65, %land.lhs.true, %if.then61
  %83 = load i32* %flags, align 4
  %and70 = and i32 %83, 2
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %if.then72, label %if.else73

if.then72:                                        ; preds = %if.end69
  store i32 1, i32* @matching_host_key_dns, align 4
  br label %if.end74

if.else73:                                        ; preds = %if.end69
  %84 = load %struct.sshkey** %plain, align 8
  call void @warn_changed_key(%struct.sshkey* %84)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([77 x i8]* @.str27671, i32 0, i32 0))
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then72
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then59
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end56
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end45
  %85 = load i8** %host.addr, align 8
  %86 = load %struct.sockaddr** %hostaddr.addr, align 8
  %87 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 27), align 4
  %conv = trunc i32 %87 to i16
  %88 = load %struct.sshkey** %host_key.addr, align 8
  %89 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 45), align 4
  %90 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 43), align 4
  %call78 = call i32 @check_host_key(i8* %85, %struct.sockaddr* %86, i16 zeroext %conv, %struct.sshkey* %88, i32 0, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 46, i32 0), i32 %89, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 44, i32 0), i32 %90)
  store i32 %call78, i32* %r, align 4
  br label %out

out:                                              ; preds = %if.end77, %if.then68, %if.then50, %cont44, %cont40, %if.then31, %cont11, %cont3
  %91 = load %struct.sshkey** %plain, align 8
  call void @sshkey_free(%struct.sshkey* %91)
  %92 = load i8** %fp, align 8
  call void @free(i8* %92) #9
  %93 = load i8** %cafp, align 8
  call void @free(i8* %93) #9
  %94 = load i32* %r, align 4
  %cmp79 = icmp eq i32 %94, 0
  br i1 %cmp79, label %land.lhs.true81, label %if.end86

land.lhs.true81:                                  ; preds = %out
  %95 = load %struct.sshkey** %host_key.addr, align 8
  %cmp82 = icmp ne %struct.sshkey* %95, null
  br i1 %cmp82, label %if.then84, label %if.end86

if.then84:                                        ; preds = %land.lhs.true81
  %96 = load %struct.sshkey** @previous_host_key, align 8
  call void @sshkey_free(%struct.sshkey* %96)
  %97 = load %struct.sshkey** %host_key.addr, align 8
  %call85 = call %struct.sshkey* @key_from_private(%struct.sshkey* %97)
  store %struct.sshkey* %call85, %struct.sshkey** @previous_host_key, align 8
  br label %if.end86

if.end86:                                         ; preds = %if.then84, %land.lhs.true81, %out
  %98 = load i32* %r, align 4
  ret i32 %98
}

declare i64 @sshkey_format_cert_validity(%struct.sshkey_cert*, i8*, i64) #1

declare i32 @sshkey_check_revoked(%struct.sshkey*, i8*) #1

declare i32 @sshkey_from_private(%struct.sshkey*, %struct.sshkey**) #1

declare i32 @sshkey_drop_cert(%struct.sshkey*) #1

declare i32 @verify_host_key_dns(i8*, %struct.sockaddr*, %struct.sshkey*, i32*) #1

declare %struct.sshkey* @key_from_private(%struct.sshkey*) #1

; Function Attrs: nounwind sspreq uwtable
define void @ssh_login(%struct.Sensitive* %sensitive, i8* %orighost, %struct.sockaddr* %hostaddr, i16 zeroext %port, %struct.passwd* %pw, i32 %timeout_ms) #0 {
entry:
  %sensitive.addr = alloca %struct.Sensitive*, align 8
  %orighost.addr = alloca i8*, align 8
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %port.addr = alloca i16, align 2
  %pw.addr = alloca %struct.passwd*, align 8
  %timeout_ms.addr = alloca i32, align 4
  %host = alloca i8*, align 8
  %server_user = alloca i8*, align 8
  %local_user = alloca i8*, align 8
  store %struct.Sensitive* %sensitive, %struct.Sensitive** %sensitive.addr, align 8
  store i8* %orighost, i8** %orighost.addr, align 8
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store %struct.passwd* %pw, %struct.passwd** %pw.addr, align 8
  store i32 %timeout_ms, i32* %timeout_ms.addr, align 4
  %0 = load %struct.passwd** %pw.addr, align 8
  %pw_name = getelementptr inbounds %struct.passwd* %0, i32 0, i32 0
  %1 = load i8** %pw_name, align 8
  %call = call i8* @xstrdup(i8* %1)
  store i8* %call, i8** %local_user, align 8
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  %4 = load i8** %local_user, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %4, %cond.false ]
  store i8* %cond, i8** %server_user, align 8
  %5 = load i8** %orighost.addr, align 8
  %call1 = call i8* @xstrdup(i8* %5)
  store i8* %call1, i8** %host, align 8
  %6 = load i8** %host, align 8
  call void @lowercase(i8* %6)
  %7 = load i32* %timeout_ms.addr, align 4
  call void @ssh_exchange_identification(i32 %7)
  %8 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_set_nonblocking(%struct.ssh* %8)
  %9 = load i8** %host, align 8
  %10 = load i16* %port.addr, align 2
  %conv = zext i16 %10 to i32
  %11 = load i8** %server_user, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([32 x i8]* @.str28672, i32 0, i32 0), i8* %9, i32 %conv, i8* %11)
  %12 = load i32* @compat20, align 4
  %tobool2 = icmp ne i32 %12, 0
  br i1 %tobool2, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %13 = load i8** %host, align 8
  %14 = load %struct.sockaddr** %hostaddr.addr, align 8
  %15 = load i16* %port.addr, align 2
  call void @ssh_kex2(i8* %13, %struct.sockaddr* %14, i16 zeroext %15)
  %16 = load i8** %local_user, align 8
  %17 = load i8** %server_user, align 8
  %18 = load i8** %host, align 8
  %19 = load %struct.Sensitive** %sensitive.addr, align 8
  call void @ssh_userauth2(i8* %16, i8* %17, i8* %18, %struct.Sensitive* %19)
  br label %if.end

if.else:                                          ; preds = %cond.end
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str29673, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %if.then
  %20 = load i8** %local_user, align 8
  call void @free(i8* %20) #9
  ret void
}

declare void @ssh_packet_set_nonblocking(%struct.ssh*) #1

; Function Attrs: nounwind sspreq uwtable
define void @ssh_put_password(i8* %password) #0 {
entry:
  %password.addr = alloca i8*, align 8
  %size = alloca i32, align 4
  %padded = alloca i8*, align 8
  store i8* %password, i8** %password.addr, align 8
  %0 = load i32* @datafellows, align 4
  %and = and i32 %0, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.ssh** @active_state, align 8
  %2 = load i8** %password.addr, align 8
  call void @ssh_packet_put_cstring(%struct.ssh* %1, i8* %2)
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8** %password.addr, align 8
  %call = call i64 @strlen(i8* %3) #12
  %add = add i64 %call, 1
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 32, i32 1)
  %5 = extractvalue { i32, i1 } %4, 0
  %6 = extractvalue { i32, i1 } %4, 1
  %7 = xor i1 %6, true
  br i1 %7, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %conv = sext i32 %5 to i64
  %add1 = add i64 %add, %conv
  %div = udiv i64 %add1, 32
  %mul = mul i64 %div, 32
  %conv2 = trunc i64 %mul to i32
  store i32 %conv2, i32* %size, align 4
  %8 = load i32* %size, align 4
  %conv3 = sext i32 %8 to i64
  %call4 = call i8* @xcalloc(i64 1, i64 %conv3)
  store i8* %call4, i8** %padded, align 8
  %9 = load i8** %padded, align 8
  %10 = load i8** %password.addr, align 8
  %11 = load i32* %size, align 4
  %conv5 = sext i32 %11 to i64
  %call6 = call i64 @strlcpy(i8* %9, i8* %10, i64 %conv5)
  %12 = load %struct.ssh** @active_state, align 8
  %13 = load i8** %padded, align 8
  %14 = load i32* %size, align 4
  call void @ssh_packet_put_string(%struct.ssh* %12, i8* %13, i32 %14)
  %15 = load i8** %padded, align 8
  %16 = load i32* %size, align 4
  %conv7 = sext i32 %16 to i64
  call void @explicit_bzero(i8* %15, i64 %conv7)
  %17 = load i8** %padded, align 8
  call void @free(i8* %17) #9
  br label %return

return:                                           ; preds = %cont, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define i32 @ssh_local_cmd(i8* %args) #0 {
entry:
  %retval = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %shell = alloca i8*, align 8
  %pid = alloca i32, align 4
  %status = alloca i32, align 4
  %osighand = alloca void (i32)*, align 8
  %.compoundliteral = alloca %union.anon.2, align 4
  %.compoundliteral42 = alloca %union.anon.3.125, align 4
  store i8* %args, i8** %args.addr, align 8
  %0 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 86), align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8** %args.addr, align 8
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false1

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %2 = load i8** %args.addr, align 8
  %3 = load i8* %2, align 1
  %tobool2 = icmp ne i8 %3, 0
  br i1 %tobool2, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false1
  %call = call i8* @getenv(i8* getelementptr inbounds ([6 x i8]* @.str30674, i32 0, i32 0)) #9
  store i8* %call, i8** %shell, align 8
  %cmp3 = icmp eq i8* %call, null
  br i1 %cmp3, label %if.then7, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %if.end
  %4 = load i8** %shell, align 8
  %5 = load i8* %4, align 1
  %conv = sext i8 %5 to i32
  %cmp5 = icmp eq i32 %conv, 0
  br i1 %cmp5, label %if.then7, label %if.end8

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  store i8* getelementptr inbounds ([8 x i8]* @.str31675, i32 0, i32 0), i8** %shell, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %lor.lhs.false4
  %call9 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 17, void (i32)* null)
  store void (i32)* %call9, void (i32)** %osighand, align 8
  %call10 = call i32 @fork() #9
  store i32 %call10, i32* %pid, align 4
  %6 = load i32* %pid, align 4
  %cmp11 = icmp eq i32 %6, 0
  br i1 %cmp11, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end8
  %call14 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 13, void (i32)* null)
  %7 = load i8** %shell, align 8
  %8 = load i8** %args.addr, align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([21 x i8]* @.str32676, i32 0, i32 0), i8* %7, i8* %8)
  %9 = load i8** %shell, align 8
  %10 = load i8** %shell, align 8
  %11 = load i8** %args.addr, align 8
  %call15 = call i32 (i8*, i8*, ...)* @execl(i8* %9, i8* %10, i8* getelementptr inbounds ([3 x i8]* @.str33677, i32 0, i32 0), i8* %11, i8* null) #9
  %12 = load i8** %shell, align 8
  %13 = load i8** %args.addr, align 8
  %call16 = call i32* @__errno_location() #2
  %14 = load i32* %call16, align 4
  %call17 = call i8* @strerror(i32 %14) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str34678, i32 0, i32 0), i8* %12, i8* %13, i8* %call17)
  call void @_exit(i32 1) #11
  unreachable

if.else:                                          ; preds = %if.end8
  %15 = load i32* %pid, align 4
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont, label %trap

trap:                                             ; preds = %if.else
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.else
  %cmp18 = icmp eq i32 %15, %17
  br i1 %cmp18, label %if.then20, label %if.end23

if.then20:                                        ; preds = %cont
  %call21 = call i32* @__errno_location() #2
  %20 = load i32* %call21, align 4
  %call22 = call i8* @strerror(i32 %20) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str35679, i32 0, i32 0), i8* %call22) #11
  unreachable

if.end23:                                         ; preds = %cont
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  br label %while.cond

while.cond:                                       ; preds = %if.end36, %if.end24
  %21 = load i32* %pid, align 4
  %call25 = call i32 @waitpid(i32 %21, i32* %status, i32 0)
  %22 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %23 = extractvalue { i32, i1 } %22, 0
  %24 = extractvalue { i32, i1 } %22, 1
  %25 = xor i1 %24, true
  br i1 %25, label %cont27, label %trap26

trap26:                                           ; preds = %while.cond
  call void @llvm.trap() #3
  unreachable

cont27:                                           ; preds = %while.cond
  %cmp28 = icmp eq i32 %call25, %23
  br i1 %cmp28, label %while.body, label %while.end

while.body:                                       ; preds = %cont27
  %call30 = call i32* @__errno_location() #2
  %26 = load i32* %call30, align 4
  %cmp31 = icmp ne i32 %26, 4
  br i1 %cmp31, label %if.then33, label %if.end36

if.then33:                                        ; preds = %while.body
  %call34 = call i32* @__errno_location() #2
  %27 = load i32* %call34, align 4
  %call35 = call i8* @strerror(i32 %27) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str36680, i32 0, i32 0), i8* %call35) #11
  unreachable

if.end36:                                         ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %cont27
  %28 = load void (i32)** %osighand, align 8
  %call37 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 17, void (i32)* %28)
  %__in = bitcast %union.anon.2* %.compoundliteral to i32*
  %29 = load i32* %status, align 4
  store i32 %29, i32* %__in, align 4
  %__i = bitcast %union.anon.2* %.compoundliteral to i32*
  %30 = load i32* %__i, align 4
  %and = and i32 %30, 127
  %cmp38 = icmp eq i32 %and, 0
  br i1 %cmp38, label %if.end41, label %if.then40

if.then40:                                        ; preds = %while.end
  store i32 1, i32* %retval
  br label %return

if.end41:                                         ; preds = %while.end
  %__in43 = bitcast %union.anon.3.125* %.compoundliteral42 to i32*
  %31 = load i32* %status, align 4
  store i32 %31, i32* %__in43, align 4
  %__i44 = bitcast %union.anon.3.125* %.compoundliteral42 to i32*
  %32 = load i32* %__i44, align 4
  %and45 = and i32 %32, 65280
  %shr = ashr i32 %and45, 8
  store i32 %shr, i32* %retval
  br label %return

return:                                           ; preds = %if.end41, %if.then40, %if.then
  %33 = load i32* %retval
  ret i32 %33
}

; Function Attrs: nounwind
declare i32 @execl(i8*, i8*, ...) #4

; Function Attrs: nounwind sspreq uwtable
define void @maybe_add_key_to_agent(i8* %authfile, %struct.sshkey* %private, i8* %comment, i8* %passphrase) #0 {
entry:
  %authfile.addr = alloca i8*, align 8
  %private.addr = alloca %struct.sshkey*, align 8
  %comment.addr = alloca i8*, align 8
  %passphrase.addr = alloca i8*, align 8
  %auth_sock = alloca i32, align 4
  %r = alloca i32, align 4
  store i8* %authfile, i8** %authfile.addr, align 8
  store %struct.sshkey* %private, %struct.sshkey** %private.addr, align 8
  store i8* %comment, i8** %comment.addr, align 8
  store i8* %passphrase, i8** %passphrase.addr, align 8
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %auth_sock, align 4
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 59), align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  br label %if.end13

if.end:                                           ; preds = %cont
  %call = call i32 @ssh_get_authentication_socket(i32* %auth_sock)
  store i32 %call, i32* %r, align 4
  %cmp1 = icmp ne i32 %call, 0
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([40 x i8]* @.str37681, i32 0, i32 0))
  br label %if.end13

if.end3:                                          ; preds = %if.end
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 59), align 4
  %cmp4 = icmp eq i32 %5, 2
  br i1 %cmp4, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end3
  %6 = load i8** %authfile.addr, align 8
  %7 = load i8** %comment.addr, align 8
  %call5 = call i32 (i8*, ...)* @ask_permission(i8* getelementptr inbounds ([26 x i8]* @.str38682, i32 0, i32 0), i8* %6, i8* %7)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end7, label %if.then6

if.then6:                                         ; preds = %land.lhs.true
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([28 x i8]* @.str39683, i32 0, i32 0))
  br label %if.end13

if.end7:                                          ; preds = %land.lhs.true, %if.end3
  %8 = load i32* %auth_sock, align 4
  %9 = load %struct.sshkey** %private.addr, align 8
  %10 = load i8** %comment.addr, align 8
  %11 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 59), align 4
  %cmp8 = icmp eq i32 %11, 3
  %conv = zext i1 %cmp8 to i32
  %call9 = call i32 @ssh_add_identity_constrained(i32 %8, %struct.sshkey* %9, i8* %10, i32 0, i32 %conv)
  store i32 %call9, i32* %r, align 4
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end7
  %12 = load i8** %authfile.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([28 x i8]* @.str40684, i32 0, i32 0), i8* %12)
  br label %if.end13

if.else:                                          ; preds = %if.end7
  %13 = load i8** %authfile.addr, align 8
  %14 = load i32* %r, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([41 x i8]* @.str41685, i32 0, i32 0), i8* %13, i32 %14)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then12, %if.then6, %if.then2, %if.then
  ret void
}

declare i32 @ask_permission(i8*, ...) #1

declare i32 @ssh_add_identity_constrained(i32, %struct.sshkey*, i8*, i32, i32) #1

declare %struct.hostkeys* @init_hostkeys() #1

declare void @load_hostkeys(%struct.hostkeys*, i8*, i8*) #1

declare i32 @check_key_in_hostkeys(%struct.hostkeys*, %struct.sshkey*, %struct.hostkey_entry**) #1

declare i32 @add_host_to_hostfile(i8*, i8*, %struct.sshkey*, i32) #1

declare i64 @strlcat(i8*, i8*, i64) #1

declare void @free_hostkeys(%struct.hostkeys*) #1

declare i32 @key_drop_cert(%struct.sshkey*) #1

; Function Attrs: nounwind readonly
declare i32 @strncasecmp(i8*, i8*, i64) #8

declare i32 @lookup_key_in_hostkeys_by_type(%struct.hostkeys*, i32, %struct.hostkey_entry**) #1

declare i32 @key_cert_check_authority(%struct.sshkey*, i32, i32, i8*, i8**) #1

; Function Attrs: nounwind readnone
declare i32 @ntohl(i32) #5

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #5

; Function Attrs: nounwind
declare i32 @pipe(i32*) #4

; Function Attrs: nounwind
declare i32 @socketpair(i32, i32, i32, i32*) #4

declare i32 @mm_receive_fd(i32) #1

declare i32 @sleep(i32) #1

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #4

declare i32 @connect(i32, %struct.sockaddr*, i32) #1

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) #4

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #4

declare i32 @fcntl(i32, i32, ...) #1

declare i32 @bindresvport_sa(i32, %struct.sockaddr*) #1

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_connect_direct(i8* %host, %struct.addrinfo* %aitop, %struct.sockaddr_storage* %hostaddr, i16 zeroext %port, i32 %family, i32 %connection_attempts, i32* %timeout_ms, i32 %want_keepalive, i32 %needpriv) #0 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca i8*, align 8
  %aitop.addr = alloca %struct.addrinfo*, align 8
  %hostaddr.addr = alloca %struct.sockaddr_storage*, align 8
  %port.addr = alloca i16, align 2
  %family.addr = alloca i32, align 4
  %connection_attempts.addr = alloca i32, align 4
  %timeout_ms.addr = alloca i32*, align 8
  %want_keepalive.addr = alloca i32, align 4
  %needpriv.addr = alloca i32, align 4
  %on = alloca i32, align 4
  %sock = alloca i32, align 4
  %attempt = alloca i32, align 4
  %ntop = alloca [1025 x i8], align 16
  %strport = alloca [32 x i8], align 16
  %ai = alloca %struct.addrinfo*, align 8
  store i8* %host, i8** %host.addr, align 8
  store %struct.addrinfo* %aitop, %struct.addrinfo** %aitop.addr, align 8
  store %struct.sockaddr_storage* %hostaddr, %struct.sockaddr_storage** %hostaddr.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store i32 %family, i32* %family.addr, align 4
  store i32 %connection_attempts, i32* %connection_attempts.addr, align 4
  store i32* %timeout_ms, i32** %timeout_ms.addr, align 8
  store i32 %want_keepalive, i32* %want_keepalive.addr, align 4
  store i32 %needpriv, i32* %needpriv.addr, align 4
  store i32 1, i32* %on, align 4
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %sock, align 4
  %4 = load i32* %needpriv.addr, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([16 x i8]* @.str132776, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.ssh_connect_direct, i32 0, i32 0), i32 %4)
  %5 = bitcast [1025 x i8]* %ntop to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 1025, i32 16, i1 false)
  %6 = bitcast [32 x i8]* %strport to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 32, i32 16, i1 false)
  store i32 0, i32* %attempt, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont44, %cont
  %7 = load i32* %attempt, align 4
  %8 = load i32* %connection_attempts.addr, align 4
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end45

for.body:                                         ; preds = %for.cond
  %9 = load i32* %attempt, align 4
  %cmp1 = icmp sgt i32 %9, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %call = call i32 @sleep(i32 1)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([16 x i8]* @.str133777, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %10 = load %struct.addrinfo** %aitop.addr, align 8
  store %struct.addrinfo* %10, %struct.addrinfo** %ai, align 8
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %if.end
  %11 = load %struct.addrinfo** %ai, align 8
  %tobool = icmp ne %struct.addrinfo* %11, null
  br i1 %tobool, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond2
  %12 = load %struct.addrinfo** %ai, align 8
  %ai_family = getelementptr inbounds %struct.addrinfo* %12, i32 0, i32 1
  %13 = load i32* %ai_family, align 4
  %cmp4 = icmp ne i32 %13, 2
  br i1 %cmp4, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %for.body3
  %14 = load %struct.addrinfo** %ai, align 8
  %ai_family5 = getelementptr inbounds %struct.addrinfo* %14, i32 0, i32 1
  %15 = load i32* %ai_family5, align 4
  %cmp6 = icmp ne i32 %15, 10
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %land.lhs.true
  br label %for.inc

if.end8:                                          ; preds = %land.lhs.true, %for.body3
  %16 = load %struct.addrinfo** %ai, align 8
  %ai_addr = getelementptr inbounds %struct.addrinfo* %16, i32 0, i32 5
  %17 = load %struct.sockaddr** %ai_addr, align 8
  %18 = load %struct.addrinfo** %ai, align 8
  %ai_addrlen = getelementptr inbounds %struct.addrinfo* %18, i32 0, i32 4
  %19 = load i32* %ai_addrlen, align 4
  %arraydecay = getelementptr inbounds [1025 x i8]* %ntop, i32 0, i32 0
  %arraydecay9 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %call10 = call i32 @getnameinfo(%struct.sockaddr* %17, i32 %19, i8* %arraydecay, i32 1025, i8* %arraydecay9, i32 32, i32 3)
  %cmp11 = icmp ne i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([23 x i8]* @.str16660, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.ssh_connect_direct, i32 0, i32 0))
  br label %for.inc

if.end13:                                         ; preds = %if.end8
  %20 = load i8** %host.addr, align 8
  %arraydecay14 = getelementptr inbounds [1025 x i8]* %ntop, i32 0, i32 0
  %arraydecay15 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([39 x i8]* @.str134778, i32 0, i32 0), i8* %20, i8* %arraydecay14, i8* %arraydecay15)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([57 x i8]* @.str135779, i32 0, i32 0))
  %call16 = call i64 @clock() #9
  store i64 %call16, i64* @shen_start, align 8
  %21 = load i32* %needpriv.addr, align 4
  %22 = load %struct.addrinfo** %ai, align 8
  %call17 = call i32 @ssh_create_socket(i32 %21, %struct.addrinfo* %22)
  store i32 %call17, i32* %sock, align 4
  %23 = load i32* %sock, align 4
  %cmp18 = icmp slt i32 %23, 0
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end13
  br label %for.inc

if.end20:                                         ; preds = %if.end13
  %24 = load i32* %sock, align 4
  %25 = load %struct.addrinfo** %ai, align 8
  %ai_addr21 = getelementptr inbounds %struct.addrinfo* %25, i32 0, i32 5
  %26 = load %struct.sockaddr** %ai_addr21, align 8
  %27 = load %struct.addrinfo** %ai, align 8
  %ai_addrlen22 = getelementptr inbounds %struct.addrinfo* %27, i32 0, i32 4
  %28 = load i32* %ai_addrlen22, align 4
  %29 = load i32** %timeout_ms.addr, align 8
  %call23 = call i32 @timeout_connect(i32 %24, %struct.sockaddr* %26, i32 %28, i32* %29)
  %cmp24 = icmp sge i32 %call23, 0
  br i1 %cmp24, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end20
  %30 = load %struct.sockaddr_storage** %hostaddr.addr, align 8
  %31 = bitcast %struct.sockaddr_storage* %30 to i8*
  %32 = load %struct.addrinfo** %ai, align 8
  %ai_addr26 = getelementptr inbounds %struct.addrinfo* %32, i32 0, i32 5
  %33 = load %struct.sockaddr** %ai_addr26, align 8
  %34 = bitcast %struct.sockaddr* %33 to i8*
  %35 = load %struct.addrinfo** %ai, align 8
  %ai_addrlen27 = getelementptr inbounds %struct.addrinfo* %35, i32 0, i32 4
  %36 = load i32* %ai_addrlen27, align 4
  %conv = zext i32 %36 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %34, i64 %conv, i32 2, i1 false)
  br label %for.end

if.else:                                          ; preds = %if.end20
  %arraydecay28 = getelementptr inbounds [1025 x i8]* %ntop, i32 0, i32 0
  %arraydecay29 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %call30 = call i32* @__errno_location() #2
  %37 = load i32* %call30, align 4
  %call31 = call i8* @strerror(i32 %37) #9
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([34 x i8]* @.str136780, i32 0, i32 0), i8* %arraydecay28, i8* %arraydecay29, i8* %call31)
  %38 = load i32* %sock, align 4
  %call32 = call i32 @close(i32 %38)
  %39 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont34, label %trap33

trap33:                                           ; preds = %if.else
  call void @llvm.trap() #3
  unreachable

cont34:                                           ; preds = %if.else
  store i32 %40, i32* %sock, align 4
  br label %if.end35

if.end35:                                         ; preds = %cont34
  br label %for.inc

for.inc:                                          ; preds = %if.end35, %if.then19, %if.then12, %if.then7
  %43 = load %struct.addrinfo** %ai, align 8
  %ai_next = getelementptr inbounds %struct.addrinfo* %43, i32 0, i32 7
  %44 = load %struct.addrinfo** %ai_next, align 8
  store %struct.addrinfo* %44, %struct.addrinfo** %ai, align 8
  br label %for.cond2

for.end:                                          ; preds = %if.then25, %for.cond2
  %45 = load i32* %sock, align 4
  %46 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %47 = extractvalue { i32, i1 } %46, 0
  %48 = extractvalue { i32, i1 } %46, 1
  %49 = xor i1 %48, true
  br i1 %49, label %cont37, label %trap36

trap36:                                           ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont37:                                           ; preds = %for.end
  %cmp38 = icmp ne i32 %45, %47
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %cont37
  br label %for.end45

if.end41:                                         ; preds = %cont37
  br label %for.inc42

for.inc42:                                        ; preds = %if.end41
  %50 = load i32* %attempt, align 4
  %51 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 1)
  %52 = extractvalue { i32, i1 } %51, 0
  %53 = extractvalue { i32, i1 } %51, 1
  %54 = xor i1 %53, true
  br i1 %54, label %cont44, label %trap43

trap43:                                           ; preds = %for.inc42
  call void @llvm.trap() #3
  unreachable

cont44:                                           ; preds = %for.inc42
  store i32 %52, i32* %attempt, align 4
  br label %for.cond

for.end45:                                        ; preds = %if.then40, %for.cond
  %55 = load i32* %sock, align 4
  %56 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %57 = extractvalue { i32, i1 } %56, 0
  %58 = extractvalue { i32, i1 } %56, 1
  %59 = xor i1 %58, true
  br i1 %59, label %cont47, label %trap46

trap46:                                           ; preds = %for.end45
  call void @llvm.trap() #3
  unreachable

cont47:                                           ; preds = %for.end45
  %cmp48 = icmp eq i32 %55, %57
  br i1 %cmp48, label %if.then50, label %if.end56

if.then50:                                        ; preds = %cont47
  %60 = load i8** %host.addr, align 8
  %arraydecay51 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %call52 = call i32* @__errno_location() #2
  %61 = load i32* %call52, align 4
  %call53 = call i8* @strerror(i32 %61) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str137781, i32 0, i32 0), i8* %60, i8* %arraydecay51, i8* %call53)
  %62 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %63 = extractvalue { i32, i1 } %62, 0
  %64 = extractvalue { i32, i1 } %62, 1
  %65 = xor i1 %64, true
  br i1 %65, label %cont55, label %trap54

trap54:                                           ; preds = %if.then50
  call void @llvm.trap() #3
  unreachable

cont55:                                           ; preds = %if.then50
  store i32 %63, i32* %retval
  br label %return

if.end56:                                         ; preds = %cont47
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([24 x i8]* @.str138782, i32 0, i32 0))
  %66 = load i32* %want_keepalive.addr, align 4
  %tobool57 = icmp ne i32 %66, 0
  br i1 %tobool57, label %land.lhs.true58, label %if.end65

land.lhs.true58:                                  ; preds = %if.end56
  %67 = load i32* %sock, align 4
  %68 = bitcast i32* %on to i8*
  %call59 = call i32 @setsockopt(i32 %67, i32 1, i32 9, i8* %68, i32 4) #9
  %cmp60 = icmp slt i32 %call59, 0
  br i1 %cmp60, label %if.then62, label %if.end65

if.then62:                                        ; preds = %land.lhs.true58
  %call63 = call i32* @__errno_location() #2
  %69 = load i32* %call63, align 4
  %call64 = call i8* @strerror(i32 %69) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str139783, i32 0, i32 0), i8* %call64)
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %land.lhs.true58, %if.end56
  %70 = load i32* %sock, align 4
  %71 = load i32* %sock, align 4
  call void @packet_set_connection(i32 %70, i32 %71)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end65, %cont55
  %72 = load i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_proxy_fdpass_connect(i8* %host, i16 zeroext %port, i8* %proxy_command) #0 {
entry:
  %host.addr = alloca i8*, align 8
  %port.addr = alloca i16, align 2
  %proxy_command.addr = alloca i8*, align 8
  %command_string = alloca i8*, align 8
  %sp = alloca [2 x i32], align 4
  %sock = alloca i32, align 4
  %pid = alloca i32, align 4
  %shell = alloca i8*, align 8
  %argv = alloca [10 x i8*], align 16
  store i8* %host, i8** %host.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store i8* %proxy_command, i8** %proxy_command.addr, align 8
  %call = call i8* @getenv(i8* getelementptr inbounds ([6 x i8]* @.str30674, i32 0, i32 0)) #9
  store i8* %call, i8** %shell, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8]* @.str31675, i32 0, i32 0), i8** %shell, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [2 x i32]* %sp, i32 0, i32 0
  %call1 = call i32 @socketpair(i32 1, i32 1, i32 0, i32* %arraydecay) #9
  %cmp2 = icmp slt i32 %call1, 0
  br i1 %cmp2, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #2
  %0 = load i32* %call4, align 4
  %call5 = call i8* @strerror(i32 %0) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([69 x i8]* @.str129773, i32 0, i32 0), i8* %call5) #11
  unreachable

if.end6:                                          ; preds = %if.end
  %1 = load i8** %proxy_command.addr, align 8
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %3 = load i8** %host.addr, align 8
  %4 = load i16* %port.addr, align 2
  %conv = zext i16 %4 to i32
  %call7 = call i8* @expand_proxy_command(i8* %1, i8* %2, i8* %3, i32 %conv)
  store i8* %call7, i8** %command_string, align 8
  %5 = load i8** %command_string, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([39 x i8]* @.str130774, i32 0, i32 0), i8* %5)
  %call8 = call i32 @fork() #9
  store i32 %call8, i32* %pid, align 4
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.then11, label %if.end50

if.then11:                                        ; preds = %if.end6
  %6 = load i32* @original_real_uid, align 4
  call void @permanently_drop_suid(i32 %6)
  %arrayidx = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 1
  %7 = load i32* %arrayidx, align 4
  %call12 = call i32 @close(i32 %7)
  %arrayidx13 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %8 = load i32* %arrayidx13, align 4
  %cmp14 = icmp ne i32 %8, 0
  br i1 %cmp14, label %if.then16, label %if.end23

if.then16:                                        ; preds = %if.then11
  %arrayidx17 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %9 = load i32* %arrayidx17, align 4
  %call18 = call i32 @dup2(i32 %9, i32 0) #9
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.then16
  call void @perror(i8* getelementptr inbounds ([11 x i8]* @.str122766, i32 0, i32 0))
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.then16
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then11
  %arrayidx24 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %10 = load i32* %arrayidx24, align 4
  %cmp25 = icmp ne i32 %10, 1
  br i1 %cmp25, label %if.then27, label %if.end34

if.then27:                                        ; preds = %if.end23
  %arrayidx28 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %11 = load i32* %arrayidx28, align 4
  %call29 = call i32 @dup2(i32 %11, i32 1) #9
  %cmp30 = icmp slt i32 %call29, 0
  br i1 %cmp30, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.then27
  call void @perror(i8* getelementptr inbounds ([12 x i8]* @.str123767, i32 0, i32 0))
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.then27
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end23
  %arrayidx35 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %12 = load i32* %arrayidx35, align 4
  %cmp36 = icmp sge i32 %12, 2
  br i1 %cmp36, label %if.then38, label %if.end41

if.then38:                                        ; preds = %if.end34
  %arrayidx39 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %13 = load i32* %arrayidx39, align 4
  %call40 = call i32 @close(i32 %13)
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %if.end34
  %14 = load i8** %shell, align 8
  %arrayidx42 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 0
  store i8* %14, i8** %arrayidx42, align 8
  %arrayidx43 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 1
  store i8* getelementptr inbounds ([3 x i8]* @.str33677, i32 0, i32 0), i8** %arrayidx43, align 8
  %15 = load i8** %command_string, align 8
  %arrayidx44 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 2
  store i8* %15, i8** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 3
  store i8* null, i8** %arrayidx45, align 8
  %arrayidx46 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 0
  %16 = load i8** %arrayidx46, align 8
  %arraydecay47 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i32 0
  %call48 = call i32 @execv(i8* %16, i8** %arraydecay47) #9
  %arrayidx49 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 0
  %17 = load i8** %arrayidx49, align 8
  call void @perror(i8* %17)
  call void @exit(i32 1) #3
  unreachable

if.end50:                                         ; preds = %if.end6
  %18 = load i32* %pid, align 4
  %cmp51 = icmp slt i32 %18, 0
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end50
  %call54 = call i32* @__errno_location() #2
  %19 = load i32* %call54, align 4
  %call55 = call i8* @strerror(i32 %19) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str35679, i32 0, i32 0), i8* %call55) #11
  unreachable

if.end56:                                         ; preds = %if.end50
  %arrayidx57 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 0
  %20 = load i32* %arrayidx57, align 4
  %call58 = call i32 @close(i32 %20)
  %21 = load i8** %command_string, align 8
  call void @free(i8* %21) #9
  %arrayidx59 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 1
  %22 = load i32* %arrayidx59, align 4
  %call60 = call i32 @mm_receive_fd(i32 %22)
  store i32 %call60, i32* %sock, align 4
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %24 = extractvalue { i32, i1 } %23, 0
  %25 = extractvalue { i32, i1 } %23, 1
  %26 = xor i1 %25, true
  br i1 %26, label %cont, label %trap

trap:                                             ; preds = %if.end56
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end56
  %cmp61 = icmp eq i32 %call60, %24
  br i1 %cmp61, label %if.then63, label %if.end64

if.then63:                                        ; preds = %cont
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str131775, i32 0, i32 0)) #11
  unreachable

if.end64:                                         ; preds = %cont
  %arrayidx65 = getelementptr inbounds [2 x i32]* %sp, i32 0, i64 1
  %27 = load i32* %arrayidx65, align 4
  %call66 = call i32 @close(i32 %27)
  br label %while.cond

while.cond:                                       ; preds = %if.end78, %if.end64
  %28 = load i32* %pid, align 4
  %call67 = call i32 @waitpid(i32 %28, i32* null, i32 0)
  %29 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %30 = extractvalue { i32, i1 } %29, 0
  %31 = extractvalue { i32, i1 } %29, 1
  %32 = xor i1 %31, true
  br i1 %32, label %cont69, label %trap68

trap68:                                           ; preds = %while.cond
  call void @llvm.trap() #3
  unreachable

cont69:                                           ; preds = %while.cond
  %cmp70 = icmp eq i32 %call67, %30
  br i1 %cmp70, label %while.body, label %while.end

while.body:                                       ; preds = %cont69
  %call72 = call i32* @__errno_location() #2
  %33 = load i32* %call72, align 4
  %cmp73 = icmp ne i32 %33, 4
  br i1 %cmp73, label %if.then75, label %if.end78

if.then75:                                        ; preds = %while.body
  %call76 = call i32* @__errno_location() #2
  %34 = load i32* %call76, align 4
  %call77 = call i8* @strerror(i32 %34) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str36680, i32 0, i32 0), i8* %call77) #11
  unreachable

if.end78:                                         ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %cont69
  %35 = load i32* %sock, align 4
  %36 = load i32* %sock, align 4
  call void @packet_set_connection(i32 %35, i32 %36)
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_proxy_connect(i8* %host, i16 zeroext %port, i8* %proxy_command) #0 {
entry:
  %host.addr = alloca i8*, align 8
  %port.addr = alloca i16, align 2
  %proxy_command.addr = alloca i8*, align 8
  %command_string = alloca i8*, align 8
  %pin = alloca [2 x i32], align 4
  %pout = alloca [2 x i32], align 4
  %pid = alloca i32, align 4
  %shell = alloca i8*, align 8
  %argv = alloca [10 x i8*], align 16
  store i8* %host, i8** %host.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store i8* %proxy_command, i8** %proxy_command.addr, align 8
  %call = call i8* @getenv(i8* getelementptr inbounds ([6 x i8]* @.str30674, i32 0, i32 0)) #9
  store i8* %call, i8** %shell, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %0 = load i8** %shell, align 8
  %1 = load i8* %0, align 1
  %conv = sext i8 %1 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* getelementptr inbounds ([8 x i8]* @.str31675, i32 0, i32 0), i8** %shell, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %arraydecay = getelementptr inbounds [2 x i32]* %pin, i32 0, i32 0
  %call3 = call i32 @pipe(i32* %arraydecay) #9
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.then11, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %if.end
  %arraydecay7 = getelementptr inbounds [2 x i32]* %pout, i32 0, i32 0
  %call8 = call i32 @pipe(i32* %arraydecay7) #9
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.then11, label %if.end14

if.then11:                                        ; preds = %lor.lhs.false6, %if.end
  %call12 = call i32* @__errno_location() #2
  %2 = load i32* %call12, align 4
  %call13 = call i8* @strerror(i32 %2) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([61 x i8]* @.str120764, i32 0, i32 0), i8* %call13) #11
  unreachable

if.end14:                                         ; preds = %lor.lhs.false6
  %3 = load i8** %proxy_command.addr, align 8
  %4 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %5 = load i8** %host.addr, align 8
  %6 = load i16* %port.addr, align 2
  %conv15 = zext i16 %6 to i32
  %call16 = call i8* @expand_proxy_command(i8* %3, i8* %4, i8* %5, i32 %conv15)
  store i8* %call16, i8** %command_string, align 8
  %7 = load i8** %command_string, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([32 x i8]* @.str121765, i32 0, i32 0), i8* %7)
  %call17 = call i32 @fork() #9
  store i32 %call17, i32* %pid, align 4
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then20, label %if.end54

if.then20:                                        ; preds = %if.end14
  %8 = load i32* @original_real_uid, align 4
  call void @permanently_drop_suid(i32 %8)
  %arrayidx = getelementptr inbounds [2 x i32]* %pin, i32 0, i64 1
  %9 = load i32* %arrayidx, align 4
  %call21 = call i32 @close(i32 %9)
  %arrayidx22 = getelementptr inbounds [2 x i32]* %pin, i32 0, i64 0
  %10 = load i32* %arrayidx22, align 4
  %cmp23 = icmp ne i32 %10, 0
  br i1 %cmp23, label %if.then25, label %if.end34

if.then25:                                        ; preds = %if.then20
  %arrayidx26 = getelementptr inbounds [2 x i32]* %pin, i32 0, i64 0
  %11 = load i32* %arrayidx26, align 4
  %call27 = call i32 @dup2(i32 %11, i32 0) #9
  %cmp28 = icmp slt i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then25
  call void @perror(i8* getelementptr inbounds ([11 x i8]* @.str122766, i32 0, i32 0))
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.then25
  %arrayidx32 = getelementptr inbounds [2 x i32]* %pin, i32 0, i64 0
  %12 = load i32* %arrayidx32, align 4
  %call33 = call i32 @close(i32 %12)
  br label %if.end34

if.end34:                                         ; preds = %if.end31, %if.then20
  %arrayidx35 = getelementptr inbounds [2 x i32]* %pout, i32 0, i64 0
  %13 = load i32* %arrayidx35, align 4
  %call36 = call i32 @close(i32 %13)
  %arrayidx37 = getelementptr inbounds [2 x i32]* %pout, i32 0, i64 1
  %14 = load i32* %arrayidx37, align 4
  %call38 = call i32 @dup2(i32 %14, i32 1) #9
  %cmp39 = icmp slt i32 %call38, 0
  br i1 %cmp39, label %if.then41, label %if.end42

if.then41:                                        ; preds = %if.end34
  call void @perror(i8* getelementptr inbounds ([12 x i8]* @.str123767, i32 0, i32 0))
  br label %if.end42

if.end42:                                         ; preds = %if.then41, %if.end34
  %arrayidx43 = getelementptr inbounds [2 x i32]* %pout, i32 0, i64 1
  %15 = load i32* %arrayidx43, align 4
  %call44 = call i32 @close(i32 %15)
  %16 = load i8** %shell, align 8
  %arrayidx45 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 0
  store i8* %16, i8** %arrayidx45, align 8
  %arrayidx46 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 1
  store i8* getelementptr inbounds ([3 x i8]* @.str33677, i32 0, i32 0), i8** %arrayidx46, align 8
  %17 = load i8** %command_string, align 8
  %arrayidx47 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 2
  store i8* %17, i8** %arrayidx47, align 8
  %arrayidx48 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 3
  store i8* null, i8** %arrayidx48, align 8
  %call49 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 13, void (i32)* null)
  %arrayidx50 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 0
  %18 = load i8** %arrayidx50, align 8
  %arraydecay51 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i32 0
  %call52 = call i32 @execv(i8* %18, i8** %arraydecay51) #9
  %arrayidx53 = getelementptr inbounds [10 x i8*]* %argv, i32 0, i64 0
  %19 = load i8** %arrayidx53, align 8
  call void @perror(i8* %19)
  call void @exit(i32 1) #3
  unreachable

if.end54:                                         ; preds = %if.end14
  %20 = load i32* %pid, align 4
  %cmp55 = icmp slt i32 %20, 0
  br i1 %cmp55, label %if.then57, label %if.else

if.then57:                                        ; preds = %if.end54
  %call58 = call i32* @__errno_location() #2
  %21 = load i32* %call58, align 4
  %call59 = call i8* @strerror(i32 %21) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str35679, i32 0, i32 0), i8* %call59) #11
  unreachable

if.else:                                          ; preds = %if.end54
  %22 = load i32* %pid, align 4
  store i32 %22, i32* @proxy_command_pid, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.else
  %arrayidx61 = getelementptr inbounds [2 x i32]* %pin, i32 0, i64 0
  %23 = load i32* %arrayidx61, align 4
  %call62 = call i32 @close(i32 %23)
  %arrayidx63 = getelementptr inbounds [2 x i32]* %pout, i32 0, i64 1
  %24 = load i32* %arrayidx63, align 4
  %call64 = call i32 @close(i32 %24)
  %25 = load i8** %command_string, align 8
  call void @free(i8* %25) #9
  %arrayidx65 = getelementptr inbounds [2 x i32]* %pout, i32 0, i64 0
  %26 = load i32* %arrayidx65, align 4
  %arrayidx66 = getelementptr inbounds [2 x i32]* %pin, i32 0, i64 1
  %27 = load i32* %arrayidx66, align 4
  call void @packet_set_connection(i32 %26, i32 %27)
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal void @send_client_banner(i32 %connection_out, i32 %minor1) #0 {
entry:
  %connection_out.addr = alloca i32, align 4
  %minor1.addr = alloca i32, align 4
  store i32 %connection_out, i32* %connection_out.addr, align 4
  store i32 %minor1, i32* %minor1.addr, align 4
  %0 = load i32* @compat20, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i32 (i8**, i8*, ...)* @xasprintf(i8** @client_version_string, i8* getelementptr inbounds ([19 x i8]* @.str115759, i32 0, i32 0), i32 2, i32 0, i8* getelementptr inbounds ([12 x i8]* @.str116760, i32 0, i32 0))
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load i32* %minor1.addr, align 4
  %call1 = call i32 (i8**, i8*, ...)* @xasprintf(i8** @client_version_string, i8* getelementptr inbounds ([18 x i8]* @.str117761, i32 0, i32 0), i32 1, i32 %1, i8* getelementptr inbounds ([12 x i8]* @.str116760, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load i32* %connection_out.addr, align 4
  %3 = load i8** @client_version_string, align 8
  %4 = load i8** @client_version_string, align 8
  %call2 = call i64 @strlen(i8* %4) #12
  %call3 = call i64 @atomicio(i64 (i32, i8*, i64)* @write, i32 %2, i8* %3, i64 %call2)
  %5 = load i8** @client_version_string, align 8
  %call4 = call i64 @strlen(i8* %5) #12
  %cmp = icmp ne i64 %call3, %call4
  br i1 %cmp, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #2
  %6 = load i32* %call6, align 4
  %call7 = call i8* @strerror(i32 %6) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([14 x i8]* @.str118762, i32 0, i32 0), i8* %call7) #11
  unreachable

if.end8:                                          ; preds = %if.end
  %7 = load i8** @client_version_string, align 8
  %call9 = call i8* @chop(i8* %7)
  %8 = load i8** @client_version_string, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([28 x i8]* @.str119763, i32 0, i32 0), i8* %8)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @warn_changed_key(%struct.sshkey* %host_key) #0 {
entry:
  %host_key.addr = alloca %struct.sshkey*, align 8
  %fp = alloca i8*, align 8
  store %struct.sshkey* %host_key, %struct.sshkey** %host_key.addr, align 8
  %0 = load %struct.sshkey** %host_key.addr, align 8
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call = call i8* @sshkey_fingerprint(%struct.sshkey* %0, i32 %1, i32 0)
  store i8* %call, i8** %fp, align 8
  %2 = load i8** %fp, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str42686, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.warn_changed_key, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str43687, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str44688, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str43687, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([54 x i8]* @.str45689, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([76 x i8]* @.str46690, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([59 x i8]* @.str47691, i32 0, i32 0))
  %3 = load %struct.sshkey** %host_key.addr, align 8
  %call1 = call i8* @sshkey_type(%struct.sshkey* %3)
  %4 = load i8** %fp, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([62 x i8]* @.str48692, i32 0, i32 0), i8* %call1, i8* %4)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([42 x i8]* @.str49693, i32 0, i32 0))
  %5 = load i8** %fp, align 8
  call void @free(i8* %5) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @check_host_key(i8* %hostname, %struct.sockaddr* %hostaddr, i16 zeroext %port, %struct.sshkey* %host_key, i32 %readonly, i8** %user_hostfiles, i32 %num_user_hostfiles, i8** %system_hostfiles, i32 %num_system_hostfiles) #0 {
entry:
  %retval = alloca i32, align 4
  %hostname.addr = alloca i8*, align 8
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %port.addr = alloca i16, align 2
  %host_key.addr = alloca %struct.sshkey*, align 8
  %readonly.addr = alloca i32, align 4
  %user_hostfiles.addr = alloca i8**, align 8
  %num_user_hostfiles.addr = alloca i32, align 4
  %system_hostfiles.addr = alloca i8**, align 8
  %num_system_hostfiles.addr = alloca i32, align 4
  %host_status = alloca i32, align 4
  %ip_status = alloca i32, align 4
  %raw_key = alloca %struct.sshkey*, align 8
  %ip = alloca i8*, align 8
  %host = alloca i8*, align 8
  %hostline = alloca [1000 x i8], align 16
  %hostp = alloca i8*, align 8
  %fp = alloca i8*, align 8
  %ra = alloca i8*, align 8
  %msg = alloca [1024 x i8], align 16
  %type = alloca i8*, align 8
  %host_found = alloca %struct.hostkey_entry*, align 8
  %ip_found = alloca %struct.hostkey_entry*, align 8
  %len = alloca i32, align 4
  %cancelled_forwarding = alloca i32, align 4
  %local = alloca i32, align 4
  %r = alloca i32, align 4
  %want_cert = alloca i32, align 4
  %host_ip_differ = alloca i32, align 4
  %hostkey_trusted = alloca i32, align 4
  %host_hostkeys = alloca %struct.hostkeys*, align 8
  %ip_hostkeys = alloca %struct.hostkeys*, align 8
  %i = alloca i32, align 4
  %msg1 = alloca [1024 x i8], align 16
  %msg2 = alloca [1024 x i8], align 16
  %key_msg = alloca i8*, align 8
  store i8* %hostname, i8** %hostname.addr, align 8
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  store i16 %port, i16* %port.addr, align 2
  store %struct.sshkey* %host_key, %struct.sshkey** %host_key.addr, align 8
  store i32 %readonly, i32* %readonly.addr, align 4
  store i8** %user_hostfiles, i8*** %user_hostfiles.addr, align 8
  store i32 %num_user_hostfiles, i32* %num_user_hostfiles.addr, align 4
  store i8** %system_hostfiles, i8*** %system_hostfiles.addr, align 8
  store i32 %num_system_hostfiles, i32* %num_system_hostfiles.addr, align 4
  store %struct.sshkey* null, %struct.sshkey** %raw_key, align 8
  store i8* null, i8** %ip, align 8
  store i8* null, i8** %host, align 8
  store i32 0, i32* %cancelled_forwarding, align 4
  %0 = load %struct.sockaddr** %hostaddr.addr, align 8
  %call = call i32 @sockaddr_is_local(%struct.sockaddr* %0)
  store i32 %call, i32* %local, align 4
  %1 = load %struct.sshkey** %host_key.addr, align 8
  %call1 = call i32 @sshkey_is_cert(%struct.sshkey* %1)
  store i32 %call1, i32* %want_cert, align 4
  store i32 0, i32* %host_ip_differ, align 4
  store i32 0, i32* %hostkey_trusted, align 4
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 71), align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32* %local, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %land.lhs.true2, label %if.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8
  %cmp3 = icmp eq i8* %4, null
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true2
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([54 x i8]* @.str50694, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i8** %hostname.addr, align 8
  %6 = load %struct.sockaddr** %hostaddr.addr, align 8
  %7 = load i16* %port.addr, align 2
  call void @get_hostfile_hostname_ipaddr(i8* %5, %struct.sockaddr* %6, i16 zeroext %7, i8** %host, i8** %ip)
  %8 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool4 = icmp ne i32 %8, 0
  br i1 %tobool4, label %land.lhs.true5, label %if.end12

land.lhs.true5:                                   ; preds = %if.end
  %9 = load i32* %local, align 4
  %tobool6 = icmp ne i32 %9, 0
  br i1 %tobool6, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %10 = load i8** %hostname.addr, align 8
  %11 = load i8** %ip, align 8
  %call7 = call i32 @strcmp(i8* %10, i8* %11) #12
  %cmp8 = icmp eq i32 %call7, 0
  br i1 %cmp8, label %if.then11, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %12 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 40), align 8
  %cmp10 = icmp ne i8* %12, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %land.lhs.true5
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %lor.lhs.false9, %if.end
  %call13 = call %struct.hostkeys* @init_hostkeys()
  store %struct.hostkeys* %call13, %struct.hostkeys** %host_hostkeys, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end12
  %13 = load i32* %i, align 4
  %14 = load i32* %num_user_hostfiles.addr, align 4
  %cmp14 = icmp ult i32 %13, %14
  br i1 %cmp14, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load %struct.hostkeys** %host_hostkeys, align 8
  %16 = load i8** %host, align 8
  %17 = load i32* %i, align 4
  %idxprom = zext i32 %17 to i64
  %18 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx = getelementptr inbounds i8** %18, i64 %idxprom
  %19 = load i8** %arrayidx, align 8
  call void @load_hostkeys(%struct.hostkeys* %15, i8* %16, i8* %19)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %20 = load i32* %i, align 4
  %inc = add i32 %20, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc20, %for.end
  %21 = load i32* %i, align 4
  %22 = load i32* %num_system_hostfiles.addr, align 4
  %cmp16 = icmp ult i32 %21, %22
  br i1 %cmp16, label %for.body17, label %for.end22

for.body17:                                       ; preds = %for.cond15
  %23 = load %struct.hostkeys** %host_hostkeys, align 8
  %24 = load i8** %host, align 8
  %25 = load i32* %i, align 4
  %idxprom18 = zext i32 %25 to i64
  %26 = load i8*** %system_hostfiles.addr, align 8
  %arrayidx19 = getelementptr inbounds i8** %26, i64 %idxprom18
  %27 = load i8** %arrayidx19, align 8
  call void @load_hostkeys(%struct.hostkeys* %23, i8* %24, i8* %27)
  br label %for.inc20

for.inc20:                                        ; preds = %for.body17
  %28 = load i32* %i, align 4
  %inc21 = add i32 %28, 1
  store i32 %inc21, i32* %i, align 4
  br label %for.cond15

for.end22:                                        ; preds = %for.cond15
  store %struct.hostkeys* null, %struct.hostkeys** %ip_hostkeys, align 8
  %29 = load i32* %want_cert, align 4
  %tobool23 = icmp ne i32 %29, 0
  br i1 %tobool23, label %if.end44, label %land.lhs.true24

land.lhs.true24:                                  ; preds = %for.end22
  %30 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool25 = icmp ne i32 %30, 0
  br i1 %tobool25, label %if.then26, label %if.end44

if.then26:                                        ; preds = %land.lhs.true24
  %call27 = call %struct.hostkeys* @init_hostkeys()
  store %struct.hostkeys* %call27, %struct.hostkeys** %ip_hostkeys, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc33, %if.then26
  %31 = load i32* %i, align 4
  %32 = load i32* %num_user_hostfiles.addr, align 4
  %cmp29 = icmp ult i32 %31, %32
  br i1 %cmp29, label %for.body30, label %for.end35

for.body30:                                       ; preds = %for.cond28
  %33 = load %struct.hostkeys** %ip_hostkeys, align 8
  %34 = load i8** %ip, align 8
  %35 = load i32* %i, align 4
  %idxprom31 = zext i32 %35 to i64
  %36 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx32 = getelementptr inbounds i8** %36, i64 %idxprom31
  %37 = load i8** %arrayidx32, align 8
  call void @load_hostkeys(%struct.hostkeys* %33, i8* %34, i8* %37)
  br label %for.inc33

for.inc33:                                        ; preds = %for.body30
  %38 = load i32* %i, align 4
  %inc34 = add i32 %38, 1
  store i32 %inc34, i32* %i, align 4
  br label %for.cond28

for.end35:                                        ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc41, %for.end35
  %39 = load i32* %i, align 4
  %40 = load i32* %num_system_hostfiles.addr, align 4
  %cmp37 = icmp ult i32 %39, %40
  br i1 %cmp37, label %for.body38, label %for.end43

for.body38:                                       ; preds = %for.cond36
  %41 = load %struct.hostkeys** %ip_hostkeys, align 8
  %42 = load i8** %ip, align 8
  %43 = load i32* %i, align 4
  %idxprom39 = zext i32 %43 to i64
  %44 = load i8*** %system_hostfiles.addr, align 8
  %arrayidx40 = getelementptr inbounds i8** %44, i64 %idxprom39
  %45 = load i8** %arrayidx40, align 8
  call void @load_hostkeys(%struct.hostkeys* %41, i8* %42, i8* %45)
  br label %for.inc41

for.inc41:                                        ; preds = %for.body38
  %46 = load i32* %i, align 4
  %inc42 = add i32 %46, 1
  store i32 %inc42, i32* %i, align 4
  br label %for.cond36

for.end43:                                        ; preds = %for.cond36
  br label %if.end44

if.end44:                                         ; preds = %for.end43, %land.lhs.true24, %for.end22
  br label %retry

retry:                                            ; preds = %if.end347, %if.end44
  %47 = load %struct.sshkey** %host_key.addr, align 8
  %call45 = call i32 @sshkey_is_cert(%struct.sshkey* %47)
  store i32 %call45, i32* %want_cert, align 4
  %48 = load %struct.sshkey** %host_key.addr, align 8
  %call46 = call i8* @sshkey_type(%struct.sshkey* %48)
  store i8* %call46, i8** %type, align 8
  %49 = load %struct.hostkeys** %host_hostkeys, align 8
  %50 = load %struct.sshkey** %host_key.addr, align 8
  %call47 = call i32 @check_key_in_hostkeys(%struct.hostkeys* %49, %struct.sshkey* %50, %struct.hostkey_entry** %host_found)
  store i32 %call47, i32* %host_status, align 4
  %51 = load i32* %want_cert, align 4
  %tobool48 = icmp ne i32 %51, 0
  br i1 %tobool48, label %if.else, label %land.lhs.true49

land.lhs.true49:                                  ; preds = %retry
  %52 = load %struct.hostkeys** %ip_hostkeys, align 8
  %cmp50 = icmp ne %struct.hostkeys* %52, null
  br i1 %cmp50, label %if.then51, label %if.else

if.then51:                                        ; preds = %land.lhs.true49
  %53 = load %struct.hostkeys** %ip_hostkeys, align 8
  %54 = load %struct.sshkey** %host_key.addr, align 8
  %call52 = call i32 @check_key_in_hostkeys(%struct.hostkeys* %53, %struct.sshkey* %54, %struct.hostkey_entry** %ip_found)
  store i32 %call52, i32* %ip_status, align 4
  %55 = load i32* %host_status, align 4
  %cmp53 = icmp eq i32 %55, 2
  br i1 %cmp53, label %land.lhs.true54, label %if.end63

land.lhs.true54:                                  ; preds = %if.then51
  %56 = load i32* %ip_status, align 4
  %cmp55 = icmp ne i32 %56, 2
  br i1 %cmp55, label %if.then62, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %land.lhs.true54
  %57 = load %struct.hostkey_entry** %ip_found, align 8
  %cmp57 = icmp ne %struct.hostkey_entry* %57, null
  br i1 %cmp57, label %land.lhs.true58, label %if.end63

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %58 = load %struct.hostkey_entry** %ip_found, align 8
  %key = getelementptr inbounds %struct.hostkey_entry* %58, i32 0, i32 3
  %59 = load %struct.sshkey** %key, align 8
  %60 = load %struct.hostkey_entry** %host_found, align 8
  %key59 = getelementptr inbounds %struct.hostkey_entry* %60, i32 0, i32 3
  %61 = load %struct.sshkey** %key59, align 8
  %call60 = call i32 @sshkey_equal(%struct.sshkey* %59, %struct.sshkey* %61)
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.end63, label %if.then62

if.then62:                                        ; preds = %land.lhs.true58, %land.lhs.true54
  store i32 1, i32* %host_ip_differ, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %land.lhs.true58, %lor.lhs.false56, %if.then51
  br label %if.end64

if.else:                                          ; preds = %land.lhs.true49, %retry
  %62 = load i32* %host_status, align 4
  store i32 %62, i32* %ip_status, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.else, %if.end63
  %63 = load i32* %host_status, align 4
  switch i32 %63, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb103
    i32 3, label %sw.bb205
    i32 2, label %sw.bb209
    i32 4, label %sw.bb279
  ]

sw.bb:                                            ; preds = %if.end64
  %64 = load i8** %host, align 8
  %65 = load i8** %type, align 8
  %66 = load i32* %want_cert, align 4
  %tobool65 = icmp ne i32 %66, 0
  %cond = select i1 %tobool65, i8* getelementptr inbounds ([12 x i8]* @.str52696, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str53697, i32 0, i32 0)
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([51 x i8]* @.str51695, i32 0, i32 0), i8* %64, i8* %65, i8* %cond)
  %67 = load i32* %want_cert, align 4
  %tobool66 = icmp ne i32 %67, 0
  %cond67 = select i1 %tobool66, i8* getelementptr inbounds ([7 x i8]* @.str55699, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str53697, i32 0, i32 0)
  %68 = load %struct.hostkey_entry** %host_found, align 8
  %file = getelementptr inbounds %struct.hostkey_entry* %68, i32 0, i32 1
  %69 = load i8** %file, align 8
  %70 = load %struct.hostkey_entry** %host_found, align 8
  %line = getelementptr inbounds %struct.hostkey_entry* %70, i32 0, i32 2
  %71 = load i64* %line, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([19 x i8]* @.str54698, i32 0, i32 0), i8* %cond67, i8* %69, i64 %71)
  %72 = load i32* %want_cert, align 4
  %tobool68 = icmp ne i32 %72, 0
  br i1 %tobool68, label %land.lhs.true69, label %if.end73

land.lhs.true69:                                  ; preds = %sw.bb
  %73 = load i8** %hostname.addr, align 8
  %74 = load %struct.sshkey** %host_key.addr, align 8
  %call70 = call i32 @check_host_cert(i8* %73, %struct.sshkey* %74)
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.end73, label %if.then72

if.then72:                                        ; preds = %land.lhs.true69
  br label %fail

if.end73:                                         ; preds = %land.lhs.true69, %sw.bb
  %75 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool74 = icmp ne i32 %75, 0
  br i1 %tobool74, label %land.lhs.true75, label %if.else91

land.lhs.true75:                                  ; preds = %if.end73
  %76 = load i32* %ip_status, align 4
  %cmp76 = icmp eq i32 %76, 1
  br i1 %cmp76, label %if.then77, label %if.else91

if.then77:                                        ; preds = %land.lhs.true75
  %77 = load i32* %readonly.addr, align 4
  %tobool78 = icmp ne i32 %77, 0
  br i1 %tobool78, label %if.then81, label %lor.lhs.false79

lor.lhs.false79:                                  ; preds = %if.then77
  %78 = load i32* %want_cert, align 4
  %tobool80 = icmp ne i32 %78, 0
  br i1 %tobool80, label %if.then81, label %if.else82

if.then81:                                        ; preds = %lor.lhs.false79, %if.then77
  %79 = load i8** %type, align 8
  %80 = load i8** %ip, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([64 x i8]* @.str56700, i32 0, i32 0), i8* %79, i8* %80)
  br label %if.end90

if.else82:                                        ; preds = %lor.lhs.false79
  %81 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx83 = getelementptr inbounds i8** %81, i64 0
  %82 = load i8** %arrayidx83, align 8
  %83 = load i8** %ip, align 8
  %84 = load %struct.sshkey** %host_key.addr, align 8
  %85 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %call84 = call i32 @add_host_to_hostfile(i8* %82, i8* %83, %struct.sshkey* %84, i32 %85)
  %tobool85 = icmp ne i32 %call84, 0
  br i1 %tobool85, label %if.else88, label %if.then86

if.then86:                                        ; preds = %if.else82
  %86 = load i8** %type, align 8
  %87 = load i8** %ip, align 8
  %88 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx87 = getelementptr inbounds i8** %88, i64 0
  %89 = load i8** %arrayidx87, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([91 x i8]* @.str57701, i32 0, i32 0), i8* %86, i8* %87, i8* %89)
  br label %if.end89

if.else88:                                        ; preds = %if.else82
  %90 = load i8** %type, align 8
  %91 = load i8** %ip, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([95 x i8]* @.str58702, i32 0, i32 0), i8* %90, i8* %91)
  br label %if.end89

if.end89:                                         ; preds = %if.else88, %if.then86
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then81
  br label %if.end102

if.else91:                                        ; preds = %land.lhs.true75, %if.end73
  %92 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 87), align 4
  %tobool92 = icmp ne i32 %92, 0
  br i1 %tobool92, label %if.then93, label %if.end101

if.then93:                                        ; preds = %if.else91
  %93 = load %struct.sshkey** %host_key.addr, align 8
  %94 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call94 = call i8* @sshkey_fingerprint(%struct.sshkey* %93, i32 %94, i32 0)
  store i8* %call94, i8** %fp, align 8
  %95 = load %struct.sshkey** %host_key.addr, align 8
  %96 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call95 = call i8* @sshkey_fingerprint(%struct.sshkey* %95, i32 %96, i32 4)
  store i8* %call95, i8** %ra, align 8
  %97 = load i8** %fp, align 8
  %cmp96 = icmp eq i8* %97, null
  br i1 %cmp96, label %if.then99, label %lor.lhs.false97

lor.lhs.false97:                                  ; preds = %if.then93
  %98 = load i8** %ra, align 8
  %cmp98 = icmp eq i8* %98, null
  br i1 %cmp98, label %if.then99, label %if.end100

if.then99:                                        ; preds = %lor.lhs.false97, %if.then93
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str42686, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @__func__.check_host_key, i32 0, i32 0)) #11
  unreachable

if.end100:                                        ; preds = %lor.lhs.false97
  %99 = load i8** %fp, align 8
  %100 = load i8** %ra, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([30 x i8]* @.str59703, i32 0, i32 0), i8* %99, i8* %100)
  %101 = load i8** %ra, align 8
  call void @free(i8* %101) #9
  %102 = load i8** %fp, align 8
  call void @free(i8* %102) #9
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.else91
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end90
  store i32 1, i32* %hostkey_trusted, align 4
  br label %sw.epilog

sw.bb103:                                         ; preds = %if.end64
  %103 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8
  %cmp104 = icmp eq i8* %103, null
  br i1 %cmp104, label %land.lhs.true105, label %if.end118

land.lhs.true105:                                 ; preds = %sw.bb103
  %104 = load i16* %port.addr, align 2
  %conv = zext i16 %104 to i32
  %cmp106 = icmp ne i32 %conv, 0
  br i1 %cmp106, label %land.lhs.true108, label %if.end118

land.lhs.true108:                                 ; preds = %land.lhs.true105
  %105 = load i16* %port.addr, align 2
  %conv109 = zext i16 %105 to i32
  %cmp110 = icmp ne i32 %conv109, 22
  br i1 %cmp110, label %if.then112, label %if.end118

if.then112:                                       ; preds = %land.lhs.true108
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([33 x i8]* @.str60704, i32 0, i32 0))
  %106 = load i8** %hostname.addr, align 8
  %107 = load %struct.sockaddr** %hostaddr.addr, align 8
  %108 = load %struct.sshkey** %host_key.addr, align 8
  %109 = load i8*** %user_hostfiles.addr, align 8
  %110 = load i32* %num_user_hostfiles.addr, align 4
  %111 = load i8*** %system_hostfiles.addr, align 8
  %112 = load i32* %num_system_hostfiles.addr, align 4
  %call113 = call i32 @check_host_key(i8* %106, %struct.sockaddr* %107, i16 zeroext 0, %struct.sshkey* %108, i32 2, i8** %109, i32 %110, i8** %111, i32 %112)
  %cmp114 = icmp eq i32 %call113, 0
  br i1 %cmp114, label %if.then116, label %if.end117

if.then116:                                       ; preds = %if.then112
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([30 x i8]* @.str61705, i32 0, i32 0))
  br label %sw.epilog

if.end117:                                        ; preds = %if.then112
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %land.lhs.true108, %land.lhs.true105, %sw.bb103
  %113 = load i32* %readonly.addr, align 4
  %tobool119 = icmp ne i32 %113, 0
  br i1 %tobool119, label %if.then122, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %if.end118
  %114 = load i32* %want_cert, align 4
  %tobool121 = icmp ne i32 %114, 0
  br i1 %tobool121, label %if.then122, label %if.end123

if.then122:                                       ; preds = %lor.lhs.false120, %if.end118
  br label %fail

if.end123:                                        ; preds = %lor.lhs.false120
  %115 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 20), align 4
  %cmp124 = icmp eq i32 %115, 1
  br i1 %cmp124, label %if.then126, label %if.else127

if.then126:                                       ; preds = %if.end123
  %116 = load i8** %type, align 8
  %117 = load i8** %host, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([75 x i8]* @.str62706, i32 0, i32 0), i8* %116, i8* %117)
  br label %fail

if.else127:                                       ; preds = %if.end123
  %118 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 20), align 4
  %cmp128 = icmp eq i32 %118, 2
  br i1 %cmp128, label %if.then130, label %if.end173

if.then130:                                       ; preds = %if.else127
  %119 = load %struct.hostkeys** %host_hostkeys, align 8
  %120 = load %struct.sshkey** %host_key.addr, align 8
  %call131 = call i32 @show_other_keys(%struct.hostkeys* %119, %struct.sshkey* %120)
  %tobool132 = icmp ne i32 %call131, 0
  br i1 %tobool132, label %if.then133, label %if.else135

if.then133:                                       ; preds = %if.then130
  %arraydecay = getelementptr inbounds [1024 x i8]* %msg1, i32 0, i32 0
  %call134 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([61 x i8]* @.str63707, i32 0, i32 0)) #9
  br label %if.end138

if.else135:                                       ; preds = %if.then130
  %arraydecay136 = getelementptr inbounds [1024 x i8]* %msg1, i32 0, i32 0
  %call137 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay136, i64 1024, i8* getelementptr inbounds ([2 x i8]* @.str64708, i32 0, i32 0)) #9
  br label %if.end138

if.end138:                                        ; preds = %if.else135, %if.then133
  %121 = load %struct.sshkey** %host_key.addr, align 8
  %122 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call139 = call i8* @sshkey_fingerprint(%struct.sshkey* %121, i32 %122, i32 0)
  store i8* %call139, i8** %fp, align 8
  %123 = load %struct.sshkey** %host_key.addr, align 8
  %124 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call140 = call i8* @sshkey_fingerprint(%struct.sshkey* %123, i32 %124, i32 4)
  store i8* %call140, i8** %ra, align 8
  %125 = load i8** %fp, align 8
  %cmp141 = icmp eq i8* %125, null
  br i1 %cmp141, label %if.then146, label %lor.lhs.false143

lor.lhs.false143:                                 ; preds = %if.end138
  %126 = load i8** %ra, align 8
  %cmp144 = icmp eq i8* %126, null
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %lor.lhs.false143, %if.end138
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str42686, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @__func__.check_host_key, i32 0, i32 0)) #11
  unreachable

if.end147:                                        ; preds = %lor.lhs.false143
  %arrayidx148 = getelementptr inbounds [1024 x i8]* %msg2, i32 0, i64 0
  store i8 0, i8* %arrayidx148, align 1
  %127 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 50), align 4
  %tobool149 = icmp ne i32 %127, 0
  br i1 %tobool149, label %if.then150, label %if.end159

if.then150:                                       ; preds = %if.end147
  %128 = load i32* @matching_host_key_dns, align 4
  %tobool151 = icmp ne i32 %128, 0
  br i1 %tobool151, label %if.then152, label %if.else155

if.then152:                                       ; preds = %if.then150
  %arraydecay153 = getelementptr inbounds [1024 x i8]* %msg2, i32 0, i32 0
  %call154 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay153, i64 1024, i8* getelementptr inbounds ([45 x i8]* @.str65709, i32 0, i32 0)) #9
  br label %if.end158

if.else155:                                       ; preds = %if.then150
  %arraydecay156 = getelementptr inbounds [1024 x i8]* %msg2, i32 0, i32 0
  %call157 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay156, i64 1024, i8* getelementptr inbounds ([48 x i8]* @.str66710, i32 0, i32 0)) #9
  br label %if.end158

if.end158:                                        ; preds = %if.else155, %if.then152
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.end147
  %arraydecay160 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %129 = load i8** %host, align 8
  %130 = load i8** %ip, align 8
  %arraydecay161 = getelementptr inbounds [1024 x i8]* %msg1, i32 0, i32 0
  %131 = load i8** %type, align 8
  %132 = load i8** %fp, align 8
  %133 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 87), align 4
  %tobool162 = icmp ne i32 %133, 0
  %cond163 = select i1 %tobool162, i8* getelementptr inbounds ([2 x i8]* @.str68712, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str69713, i32 0, i32 0)
  %134 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 87), align 4
  %tobool164 = icmp ne i32 %134, 0
  br i1 %tobool164, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end159
  %135 = load i8** %ra, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end159
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond165 = phi i8* [ %135, %cond.true ], [ getelementptr inbounds ([1 x i8]* @.str69713, i32 0, i32 0), %cond.false ]
  %arraydecay166 = getelementptr inbounds [1024 x i8]* %msg2, i32 0, i32 0
  %call167 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay160, i64 1024, i8* getelementptr inbounds ([150 x i8]* @.str67711, i32 0, i32 0), i8* %129, i8* %130, i8* %arraydecay161, i8* %131, i8* %132, i8* %cond163, i8* %cond165, i8* %arraydecay166) #9
  %136 = load i8** %ra, align 8
  call void @free(i8* %136) #9
  %137 = load i8** %fp, align 8
  call void @free(i8* %137) #9
  %arraydecay168 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %call169 = call i32 @confirm(i8* %arraydecay168)
  %tobool170 = icmp ne i32 %call169, 0
  br i1 %tobool170, label %if.end172, label %if.then171

if.then171:                                       ; preds = %cond.end
  br label %fail

if.end172:                                        ; preds = %cond.end
  store i32 1, i32* %hostkey_trusted, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.else127
  br label %if.end174

if.end174:                                        ; preds = %if.end173
  %138 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool175 = icmp ne i32 %138, 0
  br i1 %tobool175, label %land.lhs.true176, label %if.else196

land.lhs.true176:                                 ; preds = %if.end174
  %139 = load i32* %ip_status, align 4
  %cmp177 = icmp eq i32 %139, 1
  br i1 %cmp177, label %if.then179, label %if.else196

if.then179:                                       ; preds = %land.lhs.true176
  %arraydecay180 = getelementptr inbounds [1000 x i8]* %hostline, i32 0, i32 0
  %140 = load i8** %host, align 8
  %141 = load i8** %ip, align 8
  %call181 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay180, i64 1000, i8* getelementptr inbounds ([6 x i8]* @.str70714, i32 0, i32 0), i8* %140, i8* %141) #9
  %arraydecay182 = getelementptr inbounds [1000 x i8]* %hostline, i32 0, i32 0
  store i8* %arraydecay182, i8** %hostp, align 8
  %142 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %tobool183 = icmp ne i32 %142, 0
  br i1 %tobool183, label %if.then184, label %if.else191

if.then184:                                       ; preds = %if.then179
  %143 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx185 = getelementptr inbounds i8** %143, i64 0
  %144 = load i8** %arrayidx185, align 8
  %145 = load i8** %host, align 8
  %146 = load %struct.sshkey** %host_key.addr, align 8
  %147 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %call186 = call i32 @add_host_to_hostfile(i8* %144, i8* %145, %struct.sshkey* %146, i32 %147)
  %tobool187 = icmp ne i32 %call186, 0
  br i1 %tobool187, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %if.then184
  %148 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx188 = getelementptr inbounds i8** %148, i64 0
  %149 = load i8** %arrayidx188, align 8
  %150 = load i8** %ip, align 8
  %151 = load %struct.sshkey** %host_key.addr, align 8
  %152 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %call189 = call i32 @add_host_to_hostfile(i8* %149, i8* %150, %struct.sshkey* %151, i32 %152)
  %tobool190 = icmp ne i32 %call189, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then184
  %153 = phi i1 [ false, %if.then184 ], [ %tobool190, %land.rhs ]
  %land.ext = zext i1 %153 to i32
  store i32 %land.ext, i32* %r, align 4
  br label %if.end195

if.else191:                                       ; preds = %if.then179
  %154 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx192 = getelementptr inbounds i8** %154, i64 0
  %155 = load i8** %arrayidx192, align 8
  %arraydecay193 = getelementptr inbounds [1000 x i8]* %hostline, i32 0, i32 0
  %156 = load %struct.sshkey** %host_key.addr, align 8
  %157 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %call194 = call i32 @add_host_to_hostfile(i8* %155, i8* %arraydecay193, %struct.sshkey* %156, i32 %157)
  store i32 %call194, i32* %r, align 4
  br label %if.end195

if.end195:                                        ; preds = %if.else191, %land.end
  br label %if.end199

if.else196:                                       ; preds = %land.lhs.true176, %if.end174
  %158 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx197 = getelementptr inbounds i8** %158, i64 0
  %159 = load i8** %arrayidx197, align 8
  %160 = load i8** %host, align 8
  %161 = load %struct.sshkey** %host_key.addr, align 8
  %162 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 81), align 4
  %call198 = call i32 @add_host_to_hostfile(i8* %159, i8* %160, %struct.sshkey* %161, i32 %162)
  store i32 %call198, i32* %r, align 4
  %163 = load i8** %host, align 8
  store i8* %163, i8** %hostp, align 8
  br label %if.end199

if.end199:                                        ; preds = %if.else196, %if.end195
  %164 = load i32* %r, align 4
  %tobool200 = icmp ne i32 %164, 0
  br i1 %tobool200, label %if.else203, label %if.then201

if.then201:                                       ; preds = %if.end199
  %165 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx202 = getelementptr inbounds i8** %165, i64 0
  %166 = load i8** %arrayidx202, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([60 x i8]* @.str71715, i32 0, i32 0), i8* %166)
  br label %if.end204

if.else203:                                       ; preds = %if.end199
  %167 = load i8** %hostp, align 8
  %168 = load i8** %type, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([69 x i8]* @.str72716, i32 0, i32 0), i8* %167, i8* %168)
  br label %if.end204

if.end204:                                        ; preds = %if.else203, %if.then201
  br label %sw.epilog

sw.bb205:                                         ; preds = %if.end64
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str43687, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str73717, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str43687, i32 0, i32 0))
  %169 = load i8** %type, align 8
  %170 = load i8** %host, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str74718, i32 0, i32 0), i8* %169, i8* %170)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([51 x i8]* @.str75719, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([23 x i8]* @.str76720, i32 0, i32 0))
  %171 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 20), align 4
  %tobool206 = icmp ne i32 %171, 0
  br i1 %tobool206, label %if.then207, label %if.end208

if.then207:                                       ; preds = %sw.bb205
  %172 = load i8** %type, align 8
  %173 = load i8** %host, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([75 x i8]* @.str77721, i32 0, i32 0), i8* %172, i8* %173)
  br label %fail

if.end208:                                        ; preds = %sw.bb205
  br label %continue_unsafe

sw.bb209:                                         ; preds = %if.end64
  %174 = load i32* %want_cert, align 4
  %tobool210 = icmp ne i32 %174, 0
  br i1 %tobool210, label %if.then211, label %if.end214

if.then211:                                       ; preds = %sw.bb209
  %175 = load %struct.hostkey_entry** %host_found, align 8
  %file212 = getelementptr inbounds %struct.hostkey_entry* %175, i32 0, i32 1
  %176 = load i8** %file212, align 8
  %177 = load %struct.hostkey_entry** %host_found, align 8
  %line213 = getelementptr inbounds %struct.hostkey_entry* %177, i32 0, i32 2
  %178 = load i64* %line213, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([55 x i8]* @.str78722, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str79723, i32 0, i32 0), i8* %176, i64 %178)
  br label %fail

if.end214:                                        ; preds = %sw.bb209
  %179 = load i32* %readonly.addr, align 4
  %cmp215 = icmp eq i32 %179, 2
  br i1 %cmp215, label %if.then217, label %if.end218

if.then217:                                       ; preds = %if.end214
  br label %fail

if.end218:                                        ; preds = %if.end214
  %180 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool219 = icmp ne i32 %180, 0
  br i1 %tobool219, label %land.lhs.true220, label %if.end239

land.lhs.true220:                                 ; preds = %if.end218
  %181 = load i32* %host_ip_differ, align 4
  %tobool221 = icmp ne i32 %181, 0
  br i1 %tobool221, label %if.then222, label %if.end239

if.then222:                                       ; preds = %land.lhs.true220
  %182 = load i32* %ip_status, align 4
  %cmp223 = icmp eq i32 %182, 1
  br i1 %cmp223, label %if.then225, label %if.else226

if.then225:                                       ; preds = %if.then222
  store i8* getelementptr inbounds ([11 x i8]* @.str80724, i32 0, i32 0), i8** %key_msg, align 8
  br label %if.end232

if.else226:                                       ; preds = %if.then222
  %183 = load i32* %ip_status, align 4
  %cmp227 = icmp eq i32 %183, 0
  br i1 %cmp227, label %if.then229, label %if.else230

if.then229:                                       ; preds = %if.else226
  store i8* getelementptr inbounds ([13 x i8]* @.str81725, i32 0, i32 0), i8** %key_msg, align 8
  br label %if.end231

if.else230:                                       ; preds = %if.else226
  store i8* getelementptr inbounds ([22 x i8]* @.str82726, i32 0, i32 0), i8** %key_msg, align 8
  br label %if.end231

if.end231:                                        ; preds = %if.else230, %if.then229
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.then225
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str43687, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str83727, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str43687, i32 0, i32 0))
  %184 = load i8** %type, align 8
  %185 = load i8** %host, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([36 x i8]* @.str84728, i32 0, i32 0), i8* %184, i8* %185)
  %186 = load i8** %ip, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str85729, i32 0, i32 0), i8* %186)
  %187 = load i8** %key_msg, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str86730, i32 0, i32 0), i8* %187)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([57 x i8]* @.str87731, i32 0, i32 0))
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([48 x i8]* @.str88732, i32 0, i32 0))
  %188 = load i32* %ip_status, align 4
  %cmp233 = icmp ne i32 %188, 1
  br i1 %cmp233, label %if.then235, label %if.end238

if.then235:                                       ; preds = %if.end232
  %189 = load %struct.hostkey_entry** %ip_found, align 8
  %file236 = getelementptr inbounds %struct.hostkey_entry* %189, i32 0, i32 1
  %190 = load i8** %file236, align 8
  %191 = load %struct.hostkey_entry** %ip_found, align 8
  %line237 = getelementptr inbounds %struct.hostkey_entry* %191, i32 0, i32 2
  %192 = load i64* %line237, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str89733, i32 0, i32 0), i8* %190, i64 %192)
  br label %if.end238

if.end238:                                        ; preds = %if.then235, %if.end232
  br label %if.end239

if.end239:                                        ; preds = %if.end238, %land.lhs.true220, %if.end218
  %193 = load %struct.sshkey** %host_key.addr, align 8
  call void @warn_changed_key(%struct.sshkey* %193)
  %194 = load i8*** %user_hostfiles.addr, align 8
  %arrayidx240 = getelementptr inbounds i8** %194, i64 0
  %195 = load i8** %arrayidx240, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([59 x i8]* @.str90734, i32 0, i32 0), i8* %195)
  %196 = load %struct.hostkey_entry** %host_found, align 8
  %key241 = getelementptr inbounds %struct.hostkey_entry* %196, i32 0, i32 3
  %197 = load %struct.sshkey** %key241, align 8
  %call242 = call i8* @sshkey_type(%struct.sshkey* %197)
  %198 = load %struct.hostkey_entry** %host_found, align 8
  %file243 = getelementptr inbounds %struct.hostkey_entry* %198, i32 0, i32 1
  %199 = load i8** %file243, align 8
  %200 = load %struct.hostkey_entry** %host_found, align 8
  %line244 = getelementptr inbounds %struct.hostkey_entry* %200, i32 0, i32 2
  %201 = load i64* %line244, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([27 x i8]* @.str91735, i32 0, i32 0), i8* %call242, i8* %199, i64 %201)
  %202 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 20), align 4
  %tobool245 = icmp ne i32 %202, 0
  br i1 %tobool245, label %if.then246, label %if.end247

if.then246:                                       ; preds = %if.end239
  %203 = load i8** %type, align 8
  %204 = load i8** %host, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([75 x i8]* @.str92736, i32 0, i32 0), i8* %203, i8* %204)
  br label %fail

if.end247:                                        ; preds = %if.end239
  br label %continue_unsafe

continue_unsafe:                                  ; preds = %if.end247, %if.end208
  %205 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 15), align 4
  %tobool248 = icmp ne i32 %205, 0
  br i1 %tobool248, label %if.then249, label %if.end250

if.then249:                                       ; preds = %continue_unsafe
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([72 x i8]* @.str93737, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 15), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then249, %continue_unsafe
  %206 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 16), align 4
  %tobool251 = icmp ne i32 %206, 0
  br i1 %tobool251, label %if.then252, label %if.end253

if.then252:                                       ; preds = %if.end250
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([84 x i8]* @.str94738, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 16), align 4
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 12), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end253

if.end253:                                        ; preds = %if.then252, %if.end250
  %207 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 12), align 4
  %tobool254 = icmp ne i32 %207, 0
  br i1 %tobool254, label %if.then255, label %if.end256

if.then255:                                       ; preds = %if.end253
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([82 x i8]* @.str95739, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 12), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end256

if.end256:                                        ; preds = %if.then255, %if.end253
  %208 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool257 = icmp ne i32 %208, 0
  br i1 %tobool257, label %if.then258, label %if.end259

if.then258:                                       ; preds = %if.end256
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([65 x i8]* @.str96740, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end259

if.end259:                                        ; preds = %if.then258, %if.end256
  %209 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool260 = icmp ne i32 %209, 0
  br i1 %tobool260, label %if.then261, label %if.end262

if.then261:                                       ; preds = %if.end259
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([63 x i8]* @.str97741, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end262

if.end262:                                        ; preds = %if.then261, %if.end259
  %210 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  %cmp263 = icmp sgt i32 %210, 0
  br i1 %cmp263, label %if.then268, label %lor.lhs.false265

lor.lhs.false265:                                 ; preds = %if.end262
  %211 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp266 = icmp sgt i32 %211, 0
  br i1 %cmp266, label %if.then268, label %if.end269

if.then268:                                       ; preds = %lor.lhs.false265, %if.end262
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([64 x i8]* @.str98742, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end269

if.end269:                                        ; preds = %if.then268, %lor.lhs.false265
  %212 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  %cmp270 = icmp ne i32 %212, 0
  br i1 %cmp270, label %if.then272, label %if.end273

if.then272:                                       ; preds = %if.end269
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([66 x i8]* @.str99743, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 82), align 4
  store i32 1, i32* %cancelled_forwarding, align 4
  br label %if.end273

if.end273:                                        ; preds = %if.then272, %if.end269
  %213 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 4), align 4
  %tobool274 = icmp ne i32 %213, 0
  br i1 %tobool274, label %land.lhs.true275, label %if.end278

land.lhs.true275:                                 ; preds = %if.end273
  %214 = load i32* %cancelled_forwarding, align 4
  %tobool276 = icmp ne i32 %214, 0
  br i1 %tobool276, label %if.then277, label %if.end278

if.then277:                                       ; preds = %land.lhs.true275
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([57 x i8]* @.str100744, i32 0, i32 0)) #11
  unreachable

if.end278:                                        ; preds = %land.lhs.true275, %if.end273
  br label %sw.epilog

sw.bb279:                                         ; preds = %if.end64
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([15 x i8]* @.str101745, i32 0, i32 0)) #11
  unreachable

sw.epilog:                                        ; preds = %if.end278, %if.end204, %if.then116, %if.end102, %if.end64
  %215 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 19), align 4
  %tobool280 = icmp ne i32 %215, 0
  br i1 %tobool280, label %land.lhs.true281, label %if.end323

land.lhs.true281:                                 ; preds = %sw.epilog
  %216 = load i32* %host_status, align 4
  %cmp282 = icmp ne i32 %216, 2
  br i1 %cmp282, label %land.lhs.true284, label %if.end323

land.lhs.true284:                                 ; preds = %land.lhs.true281
  %217 = load i32* %ip_status, align 4
  %cmp285 = icmp eq i32 %217, 2
  br i1 %cmp285, label %if.then287, label %if.end323

if.then287:                                       ; preds = %land.lhs.true284
  %arraydecay288 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %218 = load i8** %type, align 8
  %219 = load i8** %host, align 8
  %220 = load i8** %ip, align 8
  %221 = load %struct.hostkey_entry** %ip_found, align 8
  %file289 = getelementptr inbounds %struct.hostkey_entry* %221, i32 0, i32 1
  %222 = load i8** %file289, align 8
  %223 = load %struct.hostkey_entry** %ip_found, align 8
  %line290 = getelementptr inbounds %struct.hostkey_entry* %223, i32 0, i32 2
  %224 = load i64* %line290, align 8
  %call291 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay288, i64 1024, i8* getelementptr inbounds ([118 x i8]* @.str102746, i32 0, i32 0), i8* %218, i8* %219, i8* %220, i8* %222, i64 %224) #9
  %225 = load i32* %host_status, align 4
  %cmp292 = icmp eq i32 %225, 0
  br i1 %cmp292, label %if.then294, label %if.end303

if.then294:                                       ; preds = %if.then287
  %arraydecay295 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %call296 = call i64 @strlen(i8* %arraydecay295) #12
  %conv297 = trunc i64 %call296 to i32
  store i32 %conv297, i32* %len, align 4
  %arraydecay298 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %226 = load i32* %len, align 4
  %idx.ext = sext i32 %226 to i64
  %add.ptr = getelementptr inbounds i8* %arraydecay298, i64 %idx.ext
  %227 = load i32* %len, align 4
  %conv299 = sext i32 %227 to i64
  %sub = sub i64 1024, %conv299
  %228 = load %struct.hostkey_entry** %host_found, align 8
  %file300 = getelementptr inbounds %struct.hostkey_entry* %228, i32 0, i32 1
  %229 = load i8** %file300, align 8
  %230 = load %struct.hostkey_entry** %host_found, align 8
  %line301 = getelementptr inbounds %struct.hostkey_entry* %230, i32 0, i32 2
  %231 = load i64* %line301, align 8
  %call302 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %add.ptr, i64 %sub, i8* getelementptr inbounds ([29 x i8]* @.str103747, i32 0, i32 0), i8* %229, i64 %231) #9
  br label %if.end303

if.end303:                                        ; preds = %if.then294, %if.then287
  %232 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 20), align 4
  %cmp304 = icmp eq i32 %232, 1
  br i1 %cmp304, label %if.then306, label %if.else308

if.then306:                                       ; preds = %if.end303
  %arraydecay307 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([3 x i8]* @.str104748, i32 0, i32 0), i8* %arraydecay307)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([45 x i8]* @.str105749, i32 0, i32 0))
  br label %fail

if.else308:                                       ; preds = %if.end303
  %233 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 20), align 4
  %cmp309 = icmp eq i32 %233, 2
  br i1 %cmp309, label %if.then311, label %if.else319

if.then311:                                       ; preds = %if.else308
  %arraydecay312 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %call313 = call i64 @strlcat(i8* %arraydecay312, i8* getelementptr inbounds ([57 x i8]* @.str106750, i32 0, i32 0), i64 1024)
  %arraydecay314 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  %call315 = call i32 @confirm(i8* %arraydecay314)
  %tobool316 = icmp ne i32 %call315, 0
  br i1 %tobool316, label %if.end318, label %if.then317

if.then317:                                       ; preds = %if.then311
  br label %fail

if.end318:                                        ; preds = %if.then311
  br label %if.end321

if.else319:                                       ; preds = %if.else308
  %arraydecay320 = getelementptr inbounds [1024 x i8]* %msg, i32 0, i32 0
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([3 x i8]* @.str104748, i32 0, i32 0), i8* %arraydecay320)
  br label %if.end321

if.end321:                                        ; preds = %if.else319, %if.end318
  br label %if.end322

if.end322:                                        ; preds = %if.end321
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %land.lhs.true284, %land.lhs.true281, %sw.epilog
  %234 = load i32* %hostkey_trusted, align 4
  %tobool324 = icmp ne i32 %234, 0
  br i1 %tobool324, label %if.end328, label %land.lhs.true325

land.lhs.true325:                                 ; preds = %if.end323
  %235 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  %tobool326 = icmp ne i32 %235, 0
  br i1 %tobool326, label %if.then327, label %if.end328

if.then327:                                       ; preds = %land.lhs.true325
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([70 x i8]* @.str107751, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @__func__.check_host_key, i32 0, i32 0))
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 99), align 4
  br label %if.end328

if.end328:                                        ; preds = %if.then327, %land.lhs.true325, %if.end323
  %236 = load i8** %ip, align 8
  call void @free(i8* %236) #9
  %237 = load i8** %host, align 8
  call void @free(i8* %237) #9
  %238 = load %struct.hostkeys** %host_hostkeys, align 8
  %cmp329 = icmp ne %struct.hostkeys* %238, null
  br i1 %cmp329, label %if.then331, label %if.end332

if.then331:                                       ; preds = %if.end328
  %239 = load %struct.hostkeys** %host_hostkeys, align 8
  call void @free_hostkeys(%struct.hostkeys* %239)
  br label %if.end332

if.end332:                                        ; preds = %if.then331, %if.end328
  %240 = load %struct.hostkeys** %ip_hostkeys, align 8
  %cmp333 = icmp ne %struct.hostkeys* %240, null
  br i1 %cmp333, label %if.then335, label %if.end336

if.then335:                                       ; preds = %if.end332
  %241 = load %struct.hostkeys** %ip_hostkeys, align 8
  call void @free_hostkeys(%struct.hostkeys* %241)
  br label %if.end336

if.end336:                                        ; preds = %if.then335, %if.end332
  store i32 0, i32* %retval
  br label %return

fail:                                             ; preds = %if.then317, %if.then306, %if.then246, %if.then217, %if.then211, %if.then207, %if.then171, %if.then126, %if.then122, %if.then72
  %242 = load i32* %want_cert, align 4
  %tobool337 = icmp ne i32 %242, 0
  br i1 %tobool337, label %land.lhs.true338, label %if.end348

land.lhs.true338:                                 ; preds = %fail
  %243 = load i32* %host_status, align 4
  %cmp339 = icmp ne i32 %243, 3
  br i1 %cmp339, label %if.then341, label %if.end348

if.then341:                                       ; preds = %land.lhs.true338
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([43 x i8]* @.str108752, i32 0, i32 0))
  %244 = load %struct.sshkey** %host_key.addr, align 8
  %call342 = call %struct.sshkey* @key_from_private(%struct.sshkey* %244)
  store %struct.sshkey* %call342, %struct.sshkey** %raw_key, align 8
  %245 = load %struct.sshkey** %raw_key, align 8
  %call343 = call i32 @key_drop_cert(%struct.sshkey* %245)
  %cmp344 = icmp ne i32 %call343, 0
  br i1 %cmp344, label %if.then346, label %if.end347

if.then346:                                       ; preds = %if.then341
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([26 x i8]* @.str109753, i32 0, i32 0)) #11
  unreachable

if.end347:                                        ; preds = %if.then341
  %246 = load %struct.sshkey** %raw_key, align 8
  store %struct.sshkey* %246, %struct.sshkey** %host_key.addr, align 8
  br label %retry

if.end348:                                        ; preds = %land.lhs.true338, %fail
  %247 = load %struct.sshkey** %raw_key, align 8
  %cmp349 = icmp ne %struct.sshkey* %247, null
  br i1 %cmp349, label %if.then351, label %if.end352

if.then351:                                       ; preds = %if.end348
  %248 = load %struct.sshkey** %raw_key, align 8
  call void @sshkey_free(%struct.sshkey* %248)
  br label %if.end352

if.end352:                                        ; preds = %if.then351, %if.end348
  %249 = load i8** %ip, align 8
  call void @free(i8* %249) #9
  %250 = load i8** %host, align 8
  call void @free(i8* %250) #9
  %251 = load %struct.hostkeys** %host_hostkeys, align 8
  %cmp353 = icmp ne %struct.hostkeys* %251, null
  br i1 %cmp353, label %if.then355, label %if.end356

if.then355:                                       ; preds = %if.end352
  %252 = load %struct.hostkeys** %host_hostkeys, align 8
  call void @free_hostkeys(%struct.hostkeys* %252)
  br label %if.end356

if.end356:                                        ; preds = %if.then355, %if.end352
  %253 = load %struct.hostkeys** %ip_hostkeys, align 8
  %cmp357 = icmp ne %struct.hostkeys* %253, null
  br i1 %cmp357, label %if.then359, label %if.end360

if.then359:                                       ; preds = %if.end356
  %254 = load %struct.hostkeys** %ip_hostkeys, align 8
  call void @free_hostkeys(%struct.hostkeys* %254)
  br label %if.end360

if.end360:                                        ; preds = %if.then359, %if.end356
  %255 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %256 = extractvalue { i32, i1 } %255, 0
  %257 = extractvalue { i32, i1 } %255, 1
  %258 = xor i1 %257, true
  br i1 %258, label %cont, label %trap

trap:                                             ; preds = %if.end360
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end360
  store i32 %256, i32* %retval
  br label %return

return:                                           ; preds = %cont, %if.end336, %if.then
  %259 = load i32* %retval
  ret i32 %259
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_create_socket(i32 %privileged, %struct.addrinfo* %ai) #0 {
entry:
  %retval = alloca i32, align 4
  %privileged.addr = alloca i32, align 4
  %ai.addr = alloca %struct.addrinfo*, align 8
  %sock = alloca i32, align 4
  %r = alloca i32, align 4
  %gaierr = alloca i32, align 4
  %hints = alloca %struct.addrinfo, align 8
  %res = alloca %struct.addrinfo*, align 8
  %save_errno = alloca i32, align 4
  %save_errno37 = alloca i32, align 4
  %agg.tmp = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i32 %privileged, i32* %privileged.addr, align 4
  store %struct.addrinfo* %ai, %struct.addrinfo** %ai.addr, align 8
  store %struct.addrinfo* null, %struct.addrinfo** %res, align 8
  %0 = load %struct.addrinfo** %ai.addr, align 8
  %ai_family = getelementptr inbounds %struct.addrinfo* %0, i32 0, i32 1
  %1 = load i32* %ai_family, align 4
  %2 = load %struct.addrinfo** %ai.addr, align 8
  %ai_socktype = getelementptr inbounds %struct.addrinfo* %2, i32 0, i32 2
  %3 = load i32* %ai_socktype, align 4
  %4 = load %struct.addrinfo** %ai.addr, align 8
  %ai_protocol = getelementptr inbounds %struct.addrinfo* %4, i32 0, i32 3
  %5 = load i32* %ai_protocol, align 4
  %call = call i32 @socket(i32 %1, i32 %3, i32 %5) #9
  store i32 %call, i32* %sock, align 4
  %6 = load i32* %sock, align 4
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %7 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %7) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([11 x i8]* @.str143787, i32 0, i32 0), i8* %call2)
  %8 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %9, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %12 = load i32* %sock, align 4
  %call3 = call i32 (i32, i32, ...)* @fcntl(i32 %12, i32 2, i32 1)
  %13 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 48), align 8
  %cmp4 = icmp eq i8* %13, null
  br i1 %cmp4, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %if.end
  %14 = load i32* %privileged.addr, align 4
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %if.end6, label %if.then5

if.then5:                                         ; preds = %land.lhs.true
  %15 = load i32* %sock, align 4
  store i32 %15, i32* %retval
  br label %return

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %16 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 48), align 8
  %tobool7 = icmp ne i8* %16, null
  br i1 %tobool7, label %if.then8, label %if.end23

if.then8:                                         ; preds = %if.end6
  %17 = bitcast %struct.addrinfo* %hints to i8*
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 48, i32 8, i1 false)
  %18 = load %struct.addrinfo** %ai.addr, align 8
  %ai_family9 = getelementptr inbounds %struct.addrinfo* %18, i32 0, i32 1
  %19 = load i32* %ai_family9, align 4
  %ai_family10 = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 1
  store i32 %19, i32* %ai_family10, align 4
  %20 = load %struct.addrinfo** %ai.addr, align 8
  %ai_socktype11 = getelementptr inbounds %struct.addrinfo* %20, i32 0, i32 2
  %21 = load i32* %ai_socktype11, align 4
  %ai_socktype12 = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 2
  store i32 %21, i32* %ai_socktype12, align 4
  %22 = load %struct.addrinfo** %ai.addr, align 8
  %ai_protocol13 = getelementptr inbounds %struct.addrinfo* %22, i32 0, i32 3
  %23 = load i32* %ai_protocol13, align 4
  %ai_protocol14 = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 3
  store i32 %23, i32* %ai_protocol14, align 4
  %ai_flags = getelementptr inbounds %struct.addrinfo* %hints, i32 0, i32 0
  store i32 1, i32* %ai_flags, align 4
  %24 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 48), align 8
  %call15 = call i32 @getaddrinfo(i8* %24, i8* null, %struct.addrinfo* %hints, %struct.addrinfo** %res)
  store i32 %call15, i32* %gaierr, align 4
  %25 = load i32* %gaierr, align 4
  %tobool16 = icmp ne i32 %25, 0
  br i1 %tobool16, label %if.then17, label %if.end22

if.then17:                                        ; preds = %if.then8
  %26 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 48), align 8
  %27 = load i32* %gaierr, align 4
  %call18 = call i8* @ssh_gai_strerror(i32 %27)
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([20 x i8]* @.str144788, i32 0, i32 0), i8* %26, i8* %call18)
  %28 = load i32* %sock, align 4
  %call19 = call i32 @close(i32 %28)
  %29 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %30 = extractvalue { i32, i1 } %29, 0
  %31 = extractvalue { i32, i1 } %29, 1
  %32 = xor i1 %31, true
  br i1 %32, label %cont21, label %trap20

trap20:                                           ; preds = %if.then17
  call void @llvm.trap() #3
  unreachable

cont21:                                           ; preds = %if.then17
  store i32 %30, i32* %retval
  br label %return

if.end22:                                         ; preds = %if.then8
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end6
  %33 = load i32* %privileged.addr, align 4
  %tobool24 = icmp ne i32 %33, 0
  br i1 %tobool24, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end23
  br label %do.body

do.body:                                          ; preds = %if.then25
  %call26 = call i32* @__errno_location() #2
  %34 = load i32* %call26, align 4
  store i32 %34, i32* %save_errno, align 4
  %35 = load i32* @original_effective_uid, align 4
  %call27 = call i32 @seteuid(i32 %35) #9
  %cmp28 = icmp ne i32 %call27, 0
  br i1 %cmp28, label %if.then29, label %if.end32

if.then29:                                        ; preds = %do.body
  %call30 = call i32* @__errno_location() #2
  %36 = load i32* %call30, align 4
  %call31 = call i8* @strerror(i32 %36) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str145789, i32 0, i32 0), i8* %call31) #11
  unreachable

if.end32:                                         ; preds = %do.body
  %37 = load i32* %save_errno, align 4
  %call33 = call i32* @__errno_location() #2
  store i32 %37, i32* %call33, align 4
  br label %do.end

do.end:                                           ; preds = %if.end32
  %38 = load i32* %sock, align 4
  %39 = load %struct.addrinfo** %res, align 8
  %tobool34 = icmp ne %struct.addrinfo* %39, null
  br i1 %tobool34, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %40 = load %struct.addrinfo** %res, align 8
  %ai_addr = getelementptr inbounds %struct.addrinfo* %40, i32 0, i32 5
  %41 = load %struct.sockaddr** %ai_addr, align 8
  br label %cond.end

cond.false:                                       ; preds = %do.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.sockaddr* [ %41, %cond.true ], [ null, %cond.false ]
  %call35 = call i32 @bindresvport_sa(i32 %38, %struct.sockaddr* %cond)
  store i32 %call35, i32* %r, align 4
  br label %do.body36

do.body36:                                        ; preds = %cond.end
  %call38 = call i32* @__errno_location() #2
  %42 = load i32* %call38, align 4
  store i32 %42, i32* %save_errno37, align 4
  %43 = load i32* @original_real_uid, align 4
  %call39 = call i32 @seteuid(i32 %43) #9
  %cmp40 = icmp ne i32 %call39, 0
  br i1 %cmp40, label %if.then41, label %if.end44

if.then41:                                        ; preds = %do.body36
  %call42 = call i32* @__errno_location() #2
  %44 = load i32* %call42, align 4
  %call43 = call i8* @strerror(i32 %44) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str146790, i32 0, i32 0), i8* %call43) #11
  unreachable

if.end44:                                         ; preds = %do.body36
  %45 = load i32* %save_errno37, align 4
  %call45 = call i32* @__errno_location() #2
  store i32 %45, i32* %call45, align 4
  br label %do.end46

do.end46:                                         ; preds = %if.end44
  %46 = load i32* %r, align 4
  %cmp47 = icmp slt i32 %46, 0
  br i1 %cmp47, label %if.then48, label %if.end52

if.then48:                                        ; preds = %do.end46
  %47 = load %struct.addrinfo** %ai.addr, align 8
  %ai_family49 = getelementptr inbounds %struct.addrinfo* %47, i32 0, i32 1
  %48 = load i32* %ai_family49, align 4
  %call50 = call i32* @__errno_location() #2
  %49 = load i32* %call50, align 4
  %call51 = call i8* @strerror(i32 %49) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str147791, i32 0, i32 0), i32 %48, i8* %call51)
  br label %fail

if.end52:                                         ; preds = %do.end46
  br label %if.end63

if.else:                                          ; preds = %if.end23
  %50 = load i32* %sock, align 4
  %__sockaddr__ = bitcast %union.__CONST_SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**
  %51 = load %struct.addrinfo** %res, align 8
  %ai_addr53 = getelementptr inbounds %struct.addrinfo* %51, i32 0, i32 5
  %52 = load %struct.sockaddr** %ai_addr53, align 8
  store %struct.sockaddr* %52, %struct.sockaddr** %__sockaddr__, align 8
  %53 = load %struct.addrinfo** %res, align 8
  %ai_addrlen = getelementptr inbounds %struct.addrinfo* %53, i32 0, i32 4
  %54 = load i32* %ai_addrlen, align 4
  %coerce.dive = getelementptr %union.__CONST_SOCKADDR_ARG* %agg.tmp, i32 0, i32 0
  %55 = load %struct.sockaddr** %coerce.dive
  %call54 = call i32 @bind(i32 %50, %struct.sockaddr* %55, i32 %54) #9
  %cmp55 = icmp slt i32 %call54, 0
  br i1 %cmp55, label %if.then56, label %if.end62

if.then56:                                        ; preds = %if.else
  %56 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 48), align 8
  %call57 = call i32* @__errno_location() #2
  %57 = load i32* %call57, align 4
  %call58 = call i8* @strerror(i32 %57) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str148792, i32 0, i32 0), i8* %56, i8* %call58)
  br label %fail

fail:                                             ; preds = %if.then56, %if.then48
  %58 = load i32* %sock, align 4
  %call59 = call i32 @close(i32 %58)
  %59 = load %struct.addrinfo** %res, align 8
  call void @freeaddrinfo(%struct.addrinfo* %59) #9
  %60 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %61 = extractvalue { i32, i1 } %60, 0
  %62 = extractvalue { i32, i1 } %60, 1
  %63 = xor i1 %62, true
  br i1 %63, label %cont61, label %trap60

trap60:                                           ; preds = %fail
  call void @llvm.trap() #3
  unreachable

cont61:                                           ; preds = %fail
  store i32 %61, i32* %retval
  br label %return

if.end62:                                         ; preds = %if.else
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end52
  %64 = load %struct.addrinfo** %res, align 8
  %cmp64 = icmp ne %struct.addrinfo* %64, null
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end63
  %65 = load %struct.addrinfo** %res, align 8
  call void @freeaddrinfo(%struct.addrinfo* %65) #9
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.end63
  %66 = load i32* %sock, align 4
  store i32 %66, i32* %retval
  br label %return

return:                                           ; preds = %if.end66, %cont61, %cont21, %if.then5, %cont
  %67 = load i32* %retval
  ret i32 %67
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @timeout_connect(i32 %sockfd, %struct.sockaddr* %serv_addr, i32 %addrlen, i32* %timeoutp) #0 {
entry:
  %sockfd.addr = alloca i32, align 4
  %serv_addr.addr = alloca %struct.sockaddr*, align 8
  %addrlen.addr = alloca i32, align 4
  %timeoutp.addr = alloca i32*, align 8
  %fdset = alloca %struct.fd_set*, align 8
  %tv = alloca %struct.timeval, align 8
  %t_start = alloca %struct.timeval, align 8
  %optlen = alloca i32, align 4
  %optval = alloca i32, align 4
  %rc = alloca i32, align 4
  %result = alloca i32, align 4
  %agg.tmp = alloca %union.__CONST_SOCKADDR_ARG, align 8
  %agg.tmp3 = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i32 %sockfd, i32* %sockfd.addr, align 4
  store %struct.sockaddr* %serv_addr, %struct.sockaddr** %serv_addr.addr, align 8
  store i32 %addrlen, i32* %addrlen.addr, align 4
  store i32* %timeoutp, i32** %timeoutp.addr, align 8
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %result, align 4
  %call = call i32 @gettimeofday(%struct.timeval* %t_start, %struct.timezone* null) #9
  %4 = load i32** %timeoutp.addr, align 8
  %5 = load i32* %4, align 4
  %cmp = icmp sle i32 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %6 = load i32* %sockfd.addr, align 4
  %__sockaddr__ = bitcast %union.__CONST_SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**
  %7 = load %struct.sockaddr** %serv_addr.addr, align 8
  store %struct.sockaddr* %7, %struct.sockaddr** %__sockaddr__, align 8
  %8 = load i32* %addrlen.addr, align 4
  %coerce.dive = getelementptr %union.__CONST_SOCKADDR_ARG* %agg.tmp, i32 0, i32 0
  %9 = load %struct.sockaddr** %coerce.dive
  %call1 = call i32 @connect(i32 %6, %struct.sockaddr* %9, i32 %8)
  store i32 %call1, i32* %result, align 4
  br label %done

if.end:                                           ; preds = %cont
  %10 = load i32* %sockfd.addr, align 4
  %call2 = call i32 @set_nonblock(i32 %10)
  %11 = load i32* %sockfd.addr, align 4
  %__sockaddr__4 = bitcast %union.__CONST_SOCKADDR_ARG* %agg.tmp3 to %struct.sockaddr**
  %12 = load %struct.sockaddr** %serv_addr.addr, align 8
  store %struct.sockaddr* %12, %struct.sockaddr** %__sockaddr__4, align 8
  %13 = load i32* %addrlen.addr, align 4
  %coerce.dive5 = getelementptr %union.__CONST_SOCKADDR_ARG* %agg.tmp3, i32 0, i32 0
  %14 = load %struct.sockaddr** %coerce.dive5
  %call6 = call i32 @connect(i32 %11, %struct.sockaddr* %14, i32 %13)
  store i32 %call6, i32* %rc, align 4
  %15 = load i32* %rc, align 4
  %cmp7 = icmp eq i32 %15, 0
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end
  %16 = load i32* %sockfd.addr, align 4
  %call9 = call i32 @unset_nonblock(i32 %16)
  store i32 0, i32* %result, align 4
  br label %done

if.end10:                                         ; preds = %if.end
  %call11 = call i32* @__errno_location() #2
  %17 = load i32* %call11, align 4
  %cmp12 = icmp ne i32 %17, 115
  br i1 %cmp12, label %if.then13, label %if.end16

if.then13:                                        ; preds = %if.end10
  %18 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont15, label %trap14

trap14:                                           ; preds = %if.then13
  call void @llvm.trap() #3
  unreachable

cont15:                                           ; preds = %if.then13
  store i32 %19, i32* %result, align 4
  br label %done

if.end16:                                         ; preds = %if.end10
  %22 = load i32* %sockfd.addr, align 4
  %23 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 1)
  %24 = extractvalue { i32, i1 } %23, 0
  %25 = extractvalue { i32, i1 } %23, 1
  %26 = xor i1 %25, true
  br i1 %26, label %cont18, label %trap17

trap17:                                           ; preds = %if.end16
  call void @llvm.trap() #3
  unreachable

cont18:                                           ; preds = %if.end16
  %27 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 8, i32 8)
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  %30 = xor i1 %29, true
  br i1 %30, label %cont20, label %trap19

trap19:                                           ; preds = %cont18
  call void @llvm.trap() #3
  unreachable

cont20:                                           ; preds = %cont18
  %31 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 1)
  %32 = extractvalue { i32, i1 } %31, 0
  %33 = extractvalue { i32, i1 } %31, 1
  %34 = xor i1 %33, true
  br i1 %34, label %cont22, label %trap21

trap21:                                           ; preds = %cont20
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %cont20
  %35 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %32)
  %36 = extractvalue { i32, i1 } %35, 0
  %37 = extractvalue { i32, i1 } %35, 1
  %38 = xor i1 %37, true
  br i1 %38, label %cont24, label %trap23

trap23:                                           ; preds = %cont22
  call void @llvm.trap() #3
  unreachable

cont24:                                           ; preds = %cont22
  %39 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 8, i32 8)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont26, label %trap25

trap25:                                           ; preds = %cont24
  call void @llvm.trap() #3
  unreachable

cont26:                                           ; preds = %cont24
  %div = sdiv i32 %36, %40
  %conv = sext i32 %div to i64
  %call27 = call i8* @xcalloc(i64 %conv, i64 8)
  %43 = bitcast i8* %call27 to %struct.fd_set*
  store %struct.fd_set* %43, %struct.fd_set** %fdset, align 8
  %44 = load i32* %sockfd.addr, align 4
  %45 = load %struct.fd_set** %fdset, align 8
  call void @kludge_FD_SET(i32 %44, %struct.fd_set* %45)
  %46 = load i32** %timeoutp.addr, align 8
  %47 = load i32* %46, align 4
  call void @ms_to_timeval(%struct.timeval* %tv, i32 %47)
  br label %for.cond

for.cond:                                         ; preds = %if.end39, %cont26
  %48 = load i32* %sockfd.addr, align 4
  %49 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 1)
  %50 = extractvalue { i32, i1 } %49, 0
  %51 = extractvalue { i32, i1 } %49, 1
  %52 = xor i1 %51, true
  br i1 %52, label %cont29, label %trap28

trap28:                                           ; preds = %for.cond
  call void @llvm.trap() #3
  unreachable

cont29:                                           ; preds = %for.cond
  %53 = load %struct.fd_set** %fdset, align 8
  %call30 = call i32 @select(i32 %50, %struct.fd_set* null, %struct.fd_set* %53, %struct.fd_set* null, %struct.timeval* %tv)
  store i32 %call30, i32* %rc, align 4
  %54 = load i32* %rc, align 4
  %55 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %56 = extractvalue { i32, i1 } %55, 0
  %57 = extractvalue { i32, i1 } %55, 1
  %58 = xor i1 %57, true
  br i1 %58, label %cont32, label %trap31

trap31:                                           ; preds = %cont29
  call void @llvm.trap() #3
  unreachable

cont32:                                           ; preds = %cont29
  %cmp33 = icmp ne i32 %54, %56
  br i1 %cmp33, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cont32
  %call35 = call i32* @__errno_location() #2
  %59 = load i32* %call35, align 4
  %cmp36 = icmp ne i32 %59, 4
  br i1 %cmp36, label %if.then38, label %if.end39

if.then38:                                        ; preds = %lor.lhs.false, %cont32
  br label %for.end

if.end39:                                         ; preds = %lor.lhs.false
  br label %for.cond

for.end:                                          ; preds = %if.then38
  %60 = load i32* %rc, align 4
  switch i32 %60, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb41
    i32 1, label %sw.bb44
  ]

sw.bb:                                            ; preds = %for.end
  %call40 = call i32* @__errno_location() #2
  store i32 110, i32* %call40, align 4
  br label %sw.epilog

sw.bb41:                                          ; preds = %for.end
  %call42 = call i32* @__errno_location() #2
  %61 = load i32* %call42, align 4
  %call43 = call i8* @strerror(i32 %61) #9
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([11 x i8]* @.str140784, i32 0, i32 0), i8* %call43)
  br label %sw.epilog

sw.bb44:                                          ; preds = %for.end
  store i32 0, i32* %optval, align 4
  store i32 4, i32* %optlen, align 4
  %62 = load i32* %sockfd.addr, align 4
  %63 = bitcast i32* %optval to i8*
  %call45 = call i32 @getsockopt(i32 %62, i32 1, i32 4, i8* %63, i32* %optlen) #9
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %65 = extractvalue { i32, i1 } %64, 0
  %66 = extractvalue { i32, i1 } %64, 1
  %67 = xor i1 %66, true
  br i1 %67, label %cont47, label %trap46

trap46:                                           ; preds = %sw.bb44
  call void @llvm.trap() #3
  unreachable

cont47:                                           ; preds = %sw.bb44
  %cmp48 = icmp eq i32 %call45, %65
  br i1 %cmp48, label %if.then50, label %if.end53

if.then50:                                        ; preds = %cont47
  %call51 = call i32* @__errno_location() #2
  %68 = load i32* %call51, align 4
  %call52 = call i8* @strerror(i32 %68) #9
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([15 x i8]* @.str141785, i32 0, i32 0), i8* %call52)
  br label %sw.epilog

if.end53:                                         ; preds = %cont47
  %69 = load i32* %optval, align 4
  %cmp54 = icmp ne i32 %69, 0
  br i1 %cmp54, label %if.then56, label %if.end58

if.then56:                                        ; preds = %if.end53
  %70 = load i32* %optval, align 4
  %call57 = call i32* @__errno_location() #2
  store i32 %70, i32* %call57, align 4
  br label %sw.epilog

if.end58:                                         ; preds = %if.end53
  store i32 0, i32* %result, align 4
  %71 = load i32* %sockfd.addr, align 4
  %call59 = call i32 @unset_nonblock(i32 %71)
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  %72 = load i32* %rc, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str142786, i32 0, i32 0), i32 %72) #11
  unreachable

sw.epilog:                                        ; preds = %if.end58, %if.then56, %if.then50, %sw.bb41, %sw.bb
  %73 = load %struct.fd_set** %fdset, align 8
  %74 = bitcast %struct.fd_set* %73 to i8*
  call void @free(i8* %74) #9
  br label %done

done:                                             ; preds = %sw.epilog, %cont15, %if.then8, %if.then
  %75 = load i32* %result, align 4
  %cmp60 = icmp eq i32 %75, 0
  br i1 %cmp60, label %land.lhs.true, label %if.end72

land.lhs.true:                                    ; preds = %done
  %76 = load i32** %timeoutp.addr, align 8
  %77 = load i32* %76, align 4
  %cmp62 = icmp sgt i32 %77, 0
  br i1 %cmp62, label %if.then64, label %if.end72

if.then64:                                        ; preds = %land.lhs.true
  %78 = load i32** %timeoutp.addr, align 8
  call void @ms_subtract_diff(%struct.timeval* %t_start, i32* %78)
  %79 = load i32** %timeoutp.addr, align 8
  %80 = load i32* %79, align 4
  %cmp65 = icmp sle i32 %80, 0
  br i1 %cmp65, label %if.then67, label %if.end71

if.then67:                                        ; preds = %if.then64
  %call68 = call i32* @__errno_location() #2
  store i32 110, i32* %call68, align 4
  %81 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %82 = extractvalue { i32, i1 } %81, 0
  %83 = extractvalue { i32, i1 } %81, 1
  %84 = xor i1 %83, true
  br i1 %84, label %cont70, label %trap69

trap69:                                           ; preds = %if.then67
  call void @llvm.trap() #3
  unreachable

cont70:                                           ; preds = %if.then67
  store i32 %82, i32* %result, align 4
  br label %if.end71

if.end71:                                         ; preds = %cont70, %if.then64
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %done
  %85 = load i32* %result, align 4
  ret i32 %85
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @expand_proxy_command(i8* %proxy_command, i8* %user, i8* %host, i32 %port) #0 {
entry:
  %proxy_command.addr = alloca i8*, align 8
  %user.addr = alloca i8*, align 8
  %host.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %ret = alloca i8*, align 8
  %strport = alloca [32 x i8], align 16
  store i8* %proxy_command, i8** %proxy_command.addr, align 8
  store i8* %user, i8** %user.addr, align 8
  store i8* %host, i8** %host.addr, align 8
  store i32 %port, i32* %port.addr, align 4
  %arraydecay = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %0 = load i32* %port.addr, align 4
  %call = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([3 x i8]* @.str124768, i32 0, i32 0), i32 %0) #9
  %1 = load i8** %proxy_command.addr, align 8
  %call3 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %tmp, i8* getelementptr inbounds ([8 x i8]* @.str125769, i32 0, i32 0), i8* %1)
  %2 = load i8** %tmp, align 8
  %3 = load i8** %host.addr, align 8
  %arraydecay4 = getelementptr inbounds [32 x i8]* %strport, i32 0, i32 0
  %4 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 41), align 8
  %call5 = call i8* (i8*, ...)* @percent_expand(i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str126770, i32 0, i32 0), i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str127771, i32 0, i32 0), i8* %arraydecay4, i8* getelementptr inbounds ([2 x i8]* @.str128772, i32 0, i32 0), i8* %4, i8* null)
  store i8* %call5, i8** %ret, align 8
  %5 = load i8** %tmp, align 8
  call void @free(i8* %5) #9
  %6 = load i8** %ret, align 8
  ret i8* %6
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @sockaddr_is_local(%struct.sockaddr* %hostaddr) #0 {
entry:
  %retval = alloca i32, align 4
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %__a = alloca %struct.in6_addr*, align 8
  %tmp = alloca i32, align 4
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  %0 = load %struct.sockaddr** %hostaddr.addr, align 8
  %sa_family = getelementptr inbounds %struct.sockaddr* %0, i32 0, i32 0
  %1 = load i16* %sa_family, align 2
  %conv = zext i16 %1 to i32
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 10, label %sw.bb2
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct.sockaddr** %hostaddr.addr, align 8
  %3 = bitcast %struct.sockaddr* %2 to %struct.sockaddr_in*
  %sin_addr = getelementptr inbounds %struct.sockaddr_in* %3, i32 0, i32 2
  %s_addr = getelementptr inbounds %struct.in_addr* %sin_addr, i32 0, i32 0
  %4 = load i32* %s_addr, align 4
  %call = call i32 @ntohl(i32 %4) #2
  %shr = lshr i32 %call, 24
  %cmp = icmp eq i32 %shr, 127
  %conv1 = zext i1 %cmp to i32
  store i32 %conv1, i32* %retval
  br label %return

sw.bb2:                                           ; preds = %entry
  %5 = load %struct.sockaddr** %hostaddr.addr, align 8
  %6 = bitcast %struct.sockaddr* %5 to %struct.sockaddr_in6*
  %sin6_addr = getelementptr inbounds %struct.sockaddr_in6* %6, i32 0, i32 3
  store %struct.in6_addr* %sin6_addr, %struct.in6_addr** %__a, align 8
  %7 = load %struct.in6_addr** %__a, align 8
  %__in6_u = getelementptr inbounds %struct.in6_addr* %7, i32 0, i32 0
  %__u6_addr32 = bitcast %union.anon.3* %__in6_u to [4 x i32]*
  %arrayidx = getelementptr inbounds [4 x i32]* %__u6_addr32, i32 0, i64 0
  %8 = load i32* %arrayidx, align 4
  %cmp3 = icmp eq i32 %8, 0
  br i1 %cmp3, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %sw.bb2
  %9 = load %struct.in6_addr** %__a, align 8
  %__in6_u5 = getelementptr inbounds %struct.in6_addr* %9, i32 0, i32 0
  %__u6_addr326 = bitcast %union.anon.3* %__in6_u5 to [4 x i32]*
  %arrayidx7 = getelementptr inbounds [4 x i32]* %__u6_addr326, i32 0, i64 1
  %10 = load i32* %arrayidx7, align 4
  %cmp8 = icmp eq i32 %10, 0
  br i1 %cmp8, label %land.lhs.true10, label %land.end

land.lhs.true10:                                  ; preds = %land.lhs.true
  %11 = load %struct.in6_addr** %__a, align 8
  %__in6_u11 = getelementptr inbounds %struct.in6_addr* %11, i32 0, i32 0
  %__u6_addr3212 = bitcast %union.anon.3* %__in6_u11 to [4 x i32]*
  %arrayidx13 = getelementptr inbounds [4 x i32]* %__u6_addr3212, i32 0, i64 2
  %12 = load i32* %arrayidx13, align 4
  %cmp14 = icmp eq i32 %12, 0
  br i1 %cmp14, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true10
  %13 = load %struct.in6_addr** %__a, align 8
  %__in6_u16 = getelementptr inbounds %struct.in6_addr* %13, i32 0, i32 0
  %__u6_addr3217 = bitcast %union.anon.3* %__in6_u16 to [4 x i32]*
  %arrayidx18 = getelementptr inbounds [4 x i32]* %__u6_addr3217, i32 0, i64 3
  %14 = load i32* %arrayidx18, align 4
  %call19 = call i32 @htonl(i32 1) #2
  %cmp20 = icmp eq i32 %14, %call19
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true10, %land.lhs.true, %sw.bb2
  %15 = phi i1 [ false, %land.lhs.true10 ], [ false, %land.lhs.true ], [ false, %sw.bb2 ], [ %cmp20, %land.rhs ]
  %land.ext = zext i1 %15 to i32
  store i32 %land.ext, i32* %tmp
  %16 = load i32* %tmp
  store i32 %16, i32* %retval
  br label %return

sw.default:                                       ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.default, %land.end, %sw.bb
  %17 = load i32* %retval
  ret i32 %17
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @check_host_cert(i8* %host, %struct.sshkey* %host_key) #0 {
entry:
  %retval = alloca i32, align 4
  %host.addr = alloca i8*, align 8
  %host_key.addr = alloca %struct.sshkey*, align 8
  %reason = alloca i8*, align 8
  store i8* %host, i8** %host.addr, align 8
  store %struct.sshkey* %host_key, %struct.sshkey** %host_key.addr, align 8
  %0 = load %struct.sshkey** %host_key.addr, align 8
  %1 = load i8** %host.addr, align 8
  %call = call i32 @key_cert_check_authority(%struct.sshkey* %0, i32 1, i32 0, i8* %1, i8** %reason)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8** %reason, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([3 x i8]* @.str104748, i32 0, i32 0), i8* %2)
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.sshkey** %host_key.addr, align 8
  %cert = getelementptr inbounds %struct.sshkey* %3, i32 0, i32 8
  %4 = load %struct.sshkey_cert** %cert, align 8
  %critical = getelementptr inbounds %struct.sshkey_cert* %4, i32 0, i32 8
  %5 = load %struct.sshbuf** %critical, align 8
  %call1 = call i64 @sshbuf_len(%struct.sshbuf* %5)
  %conv = trunc i64 %call1 to i32
  %cmp2 = icmp ne i32 %conv, 0
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %6 = load i8** %host.addr, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([60 x i8]* @.str114758, i32 0, i32 0), i8* %6)
  store i32 0, i32* %retval
  br label %return

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %7 = load i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @show_other_keys(%struct.hostkeys* %hostkeys, %struct.sshkey* %key) #0 {
entry:
  %hostkeys.addr = alloca %struct.hostkeys*, align 8
  %key.addr = alloca %struct.sshkey*, align 8
  %type = alloca [6 x i32], align 16
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %fp = alloca i8*, align 8
  %ra = alloca i8*, align 8
  %found = alloca %struct.hostkey_entry*, align 8
  store %struct.hostkeys* %hostkeys, %struct.hostkeys** %hostkeys.addr, align 8
  store %struct.sshkey* %key, %struct.sshkey** %key.addr, align 8
  %0 = bitcast [6 x i32]* %type to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([6 x i32]* @show_other_keys.type to i8*), i64 24, i32 16, i1 false)
  store i32 0, i32* %ret, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont25, %entry
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x i32]* %type, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %for.cond
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.cond
  %cmp = icmp ne i32 %2, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %cont
  %7 = load i32* %i, align 4
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds [6 x i32]* %type, i32 0, i64 %idxprom1
  %8 = load i32* %arrayidx2, align 4
  %9 = load %struct.sshkey** %key.addr, align 8
  %type3 = getelementptr inbounds %struct.sshkey* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  %cmp4 = icmp eq i32 %8, %10
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.inc

if.end:                                           ; preds = %for.body
  %11 = load %struct.hostkeys** %hostkeys.addr, align 8
  %12 = load i32* %i, align 4
  %idxprom5 = sext i32 %12 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32]* %type, i32 0, i64 %idxprom5
  %13 = load i32* %arrayidx6, align 4
  %call = call i32 @lookup_key_in_hostkeys_by_type(%struct.hostkeys* %11, i32 %13, %struct.hostkey_entry** %found)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end
  br label %for.inc

if.end8:                                          ; preds = %if.end
  %14 = load %struct.hostkey_entry** %found, align 8
  %key9 = getelementptr inbounds %struct.hostkey_entry* %14, i32 0, i32 3
  %15 = load %struct.sshkey** %key9, align 8
  %16 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call10 = call i8* @sshkey_fingerprint(%struct.sshkey* %15, i32 %16, i32 0)
  store i8* %call10, i8** %fp, align 8
  %17 = load %struct.hostkey_entry** %found, align 8
  %key11 = getelementptr inbounds %struct.hostkey_entry* %17, i32 0, i32 3
  %18 = load %struct.sshkey** %key11, align 8
  %19 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4
  %call12 = call i8* @sshkey_fingerprint(%struct.sshkey* %18, i32 %19, i32 4)
  store i8* %call12, i8** %ra, align 8
  %20 = load i8** %fp, align 8
  %cmp13 = icmp eq i8* %20, null
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end8
  %21 = load i8** %ra, align 8
  %cmp14 = icmp eq i8* %21, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %lor.lhs.false, %if.end8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str42686, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @__func__.show_other_keys, i32 0, i32 0)) #11
  unreachable

if.end16:                                         ; preds = %lor.lhs.false
  %22 = load %struct.hostkey_entry** %found, align 8
  %key17 = getelementptr inbounds %struct.hostkey_entry* %22, i32 0, i32 3
  %23 = load %struct.sshkey** %key17, align 8
  %call18 = call i8* @sshkey_type(%struct.sshkey* %23)
  %24 = load %struct.hostkey_entry** %found, align 8
  %host = getelementptr inbounds %struct.hostkey_entry* %24, i32 0, i32 0
  %25 = load i8** %host, align 8
  %26 = load %struct.hostkey_entry** %found, align 8
  %file = getelementptr inbounds %struct.hostkey_entry* %26, i32 0, i32 1
  %27 = load i8** %file, align 8
  %28 = load %struct.hostkey_entry** %found, align 8
  %line = getelementptr inbounds %struct.hostkey_entry* %28, i32 0, i32 2
  %29 = load i64* %line, align 8
  %30 = load %struct.hostkey_entry** %found, align 8
  %key19 = getelementptr inbounds %struct.hostkey_entry* %30, i32 0, i32 3
  %31 = load %struct.sshkey** %key19, align 8
  %call20 = call i8* @sshkey_type(%struct.sshkey* %31)
  %32 = load i8** %fp, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([67 x i8]* @.str113757, i32 0, i32 0), i8* %call18, i8* %25, i8* %27, i64 %29, i8* %call20, i8* %32)
  %33 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 87), align 4
  %tobool21 = icmp ne i32 %33, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end16
  %34 = load i8** %ra, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([3 x i8]* @.str104748, i32 0, i32 0), i8* %34)
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.end16
  %35 = load i8** %ra, align 8
  call void @free(i8* %35) #9
  %36 = load i8** %fp, align 8
  call void @free(i8* %36) #9
  store i32 1, i32* %ret, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end23, %if.then7, %if.then
  %37 = load i32* %i, align 4
  %38 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 1)
  %39 = extractvalue { i32, i1 } %38, 0
  %40 = extractvalue { i32, i1 } %38, 1
  %41 = xor i1 %40, true
  br i1 %41, label %cont25, label %trap24

trap24:                                           ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont25:                                           ; preds = %for.inc
  store i32 %39, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %cont
  %42 = load i32* %ret, align 4
  ret i32 %42
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @confirm(i8* %prompt) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i8*, align 8
  %msg = alloca i8*, align 8
  %again = alloca i8*, align 8
  %p = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %prompt, i8** %prompt.addr, align 8
  store i8* getelementptr inbounds ([28 x i8]* @.str110754, i32 0, i32 0), i8** %again, align 8
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %1 = extractvalue { i32, i1 } %0, 0
  %2 = extractvalue { i32, i1 } %0, 1
  %3 = xor i1 %2, true
  br i1 %3, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %1, i32* %ret, align 4
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 18), align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cont
  %5 = load i8** %prompt.addr, align 8
  store i8* %5, i8** %msg, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i8** %msg, align 8
  %call = call i8* @read_passphrase(i8* %6, i32 1)
  store i8* %call, i8** %p, align 8
  %7 = load i8** %p, align 8
  %cmp = icmp eq i8* %7, null
  br i1 %cmp, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.cond
  %8 = load i8** %p, align 8
  %arrayidx = getelementptr inbounds i8* %8, i64 0
  %9 = load i8* %arrayidx, align 1
  %conv = sext i8 %9 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %if.then12, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load i8** %p, align 8
  %arrayidx4 = getelementptr inbounds i8* %10, i64 0
  %11 = load i8* %arrayidx4, align 1
  %conv5 = sext i8 %11 to i32
  %cmp6 = icmp eq i32 %conv5, 10
  br i1 %cmp6, label %if.then12, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false3
  %12 = load i8** %p, align 8
  %call9 = call i32 @strncasecmp(i8* %12, i8* getelementptr inbounds ([3 x i8]* @.str111755, i32 0, i32 0), i64 2) #12
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then12, label %if.end13

if.then12:                                        ; preds = %lor.lhs.false8, %lor.lhs.false3, %lor.lhs.false, %for.cond
  store i32 0, i32* %ret, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %lor.lhs.false8
  %13 = load i8** %p, align 8
  %tobool14 = icmp ne i8* %13, null
  br i1 %tobool14, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end13
  %14 = load i8** %p, align 8
  %call15 = call i32 @strncasecmp(i8* %14, i8* getelementptr inbounds ([4 x i8]* @.str112756, i32 0, i32 0), i64 3) #12
  %cmp16 = icmp eq i32 %call15, 0
  br i1 %cmp16, label %if.then18, label %if.end19

if.then18:                                        ; preds = %land.lhs.true
  store i32 1, i32* %ret, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %if.end13
  %15 = load i8** %p, align 8
  call void @free(i8* %15) #9
  %16 = load i32* %ret, align 4
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont21, label %trap20

trap20:                                           ; preds = %if.end19
  call void @llvm.trap() #3
  unreachable

cont21:                                           ; preds = %if.end19
  %cmp22 = icmp ne i32 %16, %18
  br i1 %cmp22, label %if.then24, label %if.end25

if.then24:                                        ; preds = %cont21
  %21 = load i32* %ret, align 4
  store i32 %21, i32* %retval
  br label %return

if.end25:                                         ; preds = %cont21
  br label %for.inc

for.inc:                                          ; preds = %if.end25
  %22 = load i8** %again, align 8
  store i8* %22, i8** %msg, align 8
  br label %for.cond

return:                                           ; preds = %if.then24, %if.then
  %23 = load i32* %retval
  ret i32 %23
}

; Function Attrs: nounwind sspreq uwtable
define void @ssh_kex2(i8* %host, %struct.sockaddr* %hostaddr, i16 zeroext %port) #0 {
entry:
  %host.addr = alloca i8*, align 8
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %port.addr = alloca i16, align 2
  %myproposal = alloca [10 x i8*], align 16
  %s = alloca i8*, align 8
  %kex = alloca %struct.kex*, align 8
  %r = alloca i32, align 4
  store i8* %host, i8** %host.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %host.addr}, metadata !731), !dbg !732
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sockaddr** %hostaddr.addr}, metadata !733), !dbg !734
  store i16 %port, i16* %port.addr, align 2
  call void @llvm.dbg.declare(metadata !{i16* %port.addr}, metadata !735), !dbg !736
  call void @llvm.dbg.declare(metadata !{[10 x i8*]* %myproposal}, metadata !737), !dbg !741
  %0 = bitcast [10 x i8*]* %myproposal to i8*, !dbg !742
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([10 x i8*]* @ssh_kex2.myproposal to i8*), i64 80, i32 16, i1 false), !dbg !742
  call void @llvm.dbg.declare(metadata !{i8** %s}, metadata !743), !dbg !744
  call void @llvm.dbg.declare(metadata !{%struct.kex** %kex}, metadata !745), !dbg !746
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !747), !dbg !748
  %1 = load i8** %host.addr, align 8, !dbg !749
  store i8* %1, i8** @xxx_host, align 8, !dbg !749
  %2 = load %struct.sockaddr** %hostaddr.addr, align 8, !dbg !750
  store %struct.sockaddr* %2, %struct.sockaddr** @xxx_hostaddr, align 8, !dbg !750
  %3 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 36), align 8, !dbg !751
  %call = call i8* @kex_names_cat(i8* %3, i8* getelementptr inbounds ([11 x i8]* @.str6809, i32 0, i32 0)), !dbg !751
  store i8* %call, i8** %s, align 8, !dbg !751
  %cmp = icmp eq i8* %call, null, !dbg !751
  br i1 %cmp, label %if.then, label %if.end, !dbg !751

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([18 x i8]* @.str7810, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @__func__.ssh_kex2, i32 0, i32 0)) #11, !dbg !753
  unreachable, !dbg !753

if.end:                                           ; preds = %entry
  %4 = load i8** %s, align 8, !dbg !754
  %call1 = call i8* @compat_kex_proposal(i8* %4), !dbg !754
  %arrayidx = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 0, !dbg !754
  store i8* %call1, i8** %arrayidx, align 8, !dbg !754
  %5 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8, !dbg !755
  %call2 = call i8* @compat_cipher_proposal(i8* %5), !dbg !755
  %arrayidx3 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 2, !dbg !755
  store i8* %call2, i8** %arrayidx3, align 8, !dbg !755
  %6 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 33), align 8, !dbg !756
  %call4 = call i8* @compat_cipher_proposal(i8* %6), !dbg !756
  %arrayidx5 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 3, !dbg !756
  store i8* %call4, i8** %arrayidx5, align 8, !dbg !756
  %7 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 21), align 4, !dbg !757
  %tobool = icmp ne i32 %7, 0, !dbg !757
  %cond = select i1 %tobool, i8* getelementptr inbounds ([27 x i8]* @.str8811, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @.str9812, i32 0, i32 0), !dbg !757
  %arrayidx6 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 7, !dbg !757
  store i8* %cond, i8** %arrayidx6, align 8, !dbg !757
  %arrayidx7 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 6, !dbg !757
  store i8* %cond, i8** %arrayidx7, align 8, !dbg !757
  %8 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 34), align 8, !dbg !758
  %arrayidx8 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 5, !dbg !758
  store i8* %8, i8** %arrayidx8, align 8, !dbg !758
  %arrayidx9 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 4, !dbg !758
  store i8* %8, i8** %arrayidx9, align 8, !dbg !758
  %9 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 35), align 8, !dbg !759
  %cmp10 = icmp ne i8* %9, null, !dbg !759
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !759

if.then11:                                        ; preds = %if.end
  %call12 = call i32 @kex_assemble_names(i8* getelementptr inbounds ([291 x i8]* @.str1804, i32 0, i32 0), i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 35)), !dbg !761
  %cmp13 = icmp ne i32 %call12, 0, !dbg !761
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !761

if.then14:                                        ; preds = %if.then11
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([26 x i8]* @.str10813, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @__func__.ssh_kex2, i32 0, i32 0)) #11, !dbg !764
  unreachable, !dbg !764

if.end15:                                         ; preds = %if.then11
  %10 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 35), align 8, !dbg !765
  %call16 = call i8* @compat_pkalg_proposal(i8* %10), !dbg !765
  %arrayidx17 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 1, !dbg !765
  store i8* %call16, i8** %arrayidx17, align 8, !dbg !765
  br label %if.end22, !dbg !766

if.else:                                          ; preds = %if.end
  %call18 = call i8* @xstrdup(i8* getelementptr inbounds ([291 x i8]* @.str1804, i32 0, i32 0)), !dbg !767
  store i8* %call18, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 35), align 8, !dbg !767
  %11 = load i8** %host.addr, align 8, !dbg !769
  %12 = load %struct.sockaddr** %hostaddr.addr, align 8, !dbg !769
  %13 = load i16* %port.addr, align 2, !dbg !769
  %call19 = call i8* @order_hostkeyalgs(i8* %11, %struct.sockaddr* %12, i16 zeroext %13), !dbg !769
  %call20 = call i8* @compat_pkalg_proposal(i8* %call19), !dbg !770
  %arrayidx21 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 1, !dbg !770
  store i8* %call20, i8** %arrayidx21, align 8, !dbg !770
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.end15
  %14 = load i64* getelementptr inbounds (%struct.Options* @options, i32 0, i32 69), align 8, !dbg !771
  %tobool23 = icmp ne i64 %14, 0, !dbg !771
  br i1 %tobool23, label %if.then25, label %lor.lhs.false, !dbg !771

lor.lhs.false:                                    ; preds = %if.end22
  %15 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 70), align 4, !dbg !773
  %tobool24 = icmp ne i32 %15, 0, !dbg !773
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !773

if.then25:                                        ; preds = %lor.lhs.false, %if.end22
  %16 = load %struct.ssh** @active_state, align 8, !dbg !775
  %17 = load i64* getelementptr inbounds (%struct.Options* @options, i32 0, i32 69), align 8, !dbg !775
  %conv = trunc i64 %17 to i32, !dbg !775
  %conv26 = zext i32 %conv to i64, !dbg !775
  %18 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 70), align 4, !dbg !775
  %conv27 = sext i32 %18 to i64, !dbg !775
  call void @ssh_packet_set_rekey_limits(%struct.ssh* %16, i64 %conv26, i64 %conv27), !dbg !775
  br label %if.end28, !dbg !775

if.end28:                                         ; preds = %if.then25, %lor.lhs.false
  %19 = load %struct.ssh** @active_state, align 8, !dbg !776
  %arraydecay = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i32 0, !dbg !776
  %call29 = call i32 @kex_setup(%struct.ssh* %19, i8** %arraydecay), !dbg !776
  store i32 %call29, i32* %r, align 4, !dbg !776
  %cmp30 = icmp ne i32 %call29, 0, !dbg !776
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !776

if.then32:                                        ; preds = %if.end28
  %20 = load i32* %r, align 4, !dbg !778
  %call33 = call i8* @ssh_err(i32 %20), !dbg !778
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([14 x i8]* @.str11814, i32 0, i32 0), i8* %call33) #11, !dbg !779
  unreachable, !dbg !779

if.end34:                                         ; preds = %if.end28
  %21 = load %struct.ssh** @active_state, align 8, !dbg !780
  %kex35 = getelementptr inbounds %struct.ssh* %21, i32 0, i32 1, !dbg !780
  %22 = load %struct.kex** %kex35, align 8, !dbg !780
  store %struct.kex* %22, %struct.kex** %kex, align 8, !dbg !780
  %23 = load %struct.kex** %kex, align 8, !dbg !781
  %kex36 = getelementptr inbounds %struct.kex* %23, i32 0, i32 27, !dbg !781
  %arrayidx37 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex36, i32 0, i64 0, !dbg !781
  store i32 (%struct.ssh*)* @kexdh_client, i32 (%struct.ssh*)** %arrayidx37, align 8, !dbg !781
  %24 = load %struct.kex** %kex, align 8, !dbg !782
  %kex38 = getelementptr inbounds %struct.kex* %24, i32 0, i32 27, !dbg !782
  %arrayidx39 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex38, i32 0, i64 1, !dbg !782
  store i32 (%struct.ssh*)* @kexdh_client, i32 (%struct.ssh*)** %arrayidx39, align 8, !dbg !782
  %25 = load %struct.kex** %kex, align 8, !dbg !783
  %kex40 = getelementptr inbounds %struct.kex* %25, i32 0, i32 27, !dbg !783
  %arrayidx41 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex40, i32 0, i64 2, !dbg !783
  store i32 (%struct.ssh*)* @kexdh_client, i32 (%struct.ssh*)** %arrayidx41, align 8, !dbg !783
  %26 = load %struct.kex** %kex, align 8, !dbg !784
  %kex42 = getelementptr inbounds %struct.kex* %26, i32 0, i32 27, !dbg !784
  %arrayidx43 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex42, i32 0, i64 3, !dbg !784
  store i32 (%struct.ssh*)* @kexdh_client, i32 (%struct.ssh*)** %arrayidx43, align 8, !dbg !784
  %27 = load %struct.kex** %kex, align 8, !dbg !785
  %kex44 = getelementptr inbounds %struct.kex* %27, i32 0, i32 27, !dbg !785
  %arrayidx45 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex44, i32 0, i64 4, !dbg !785
  store i32 (%struct.ssh*)* @kexdh_client, i32 (%struct.ssh*)** %arrayidx45, align 8, !dbg !785
  %28 = load %struct.kex** %kex, align 8, !dbg !786
  %kex46 = getelementptr inbounds %struct.kex* %28, i32 0, i32 27, !dbg !786
  %arrayidx47 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex46, i32 0, i64 5, !dbg !786
  store i32 (%struct.ssh*)* @kexgex_client, i32 (%struct.ssh*)** %arrayidx47, align 8, !dbg !786
  %29 = load %struct.kex** %kex, align 8, !dbg !787
  %kex48 = getelementptr inbounds %struct.kex* %29, i32 0, i32 27, !dbg !787
  %arrayidx49 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex48, i32 0, i64 6, !dbg !787
  store i32 (%struct.ssh*)* @kexgex_client, i32 (%struct.ssh*)** %arrayidx49, align 8, !dbg !787
  %30 = load %struct.kex** %kex, align 8, !dbg !788
  %kex50 = getelementptr inbounds %struct.kex* %30, i32 0, i32 27, !dbg !788
  %arrayidx51 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex50, i32 0, i64 7, !dbg !788
  store i32 (%struct.ssh*)* @kexecdh_client, i32 (%struct.ssh*)** %arrayidx51, align 8, !dbg !788
  %31 = load %struct.kex** %kex, align 8, !dbg !789
  %kex52 = getelementptr inbounds %struct.kex* %31, i32 0, i32 27, !dbg !789
  %arrayidx53 = getelementptr inbounds [9 x i32 (%struct.ssh*)*]* %kex52, i32 0, i64 8, !dbg !789
  store i32 (%struct.ssh*)* @kexc25519_client, i32 (%struct.ssh*)** %arrayidx53, align 8, !dbg !789
  %32 = load i8** @client_version_string, align 8, !dbg !790
  %33 = load %struct.kex** %kex, align 8, !dbg !790
  %client_version_string = getelementptr inbounds %struct.kex* %33, i32 0, i32 19, !dbg !790
  store i8* %32, i8** %client_version_string, align 8, !dbg !790
  %34 = load i8** @server_version_string, align 8, !dbg !791
  %35 = load %struct.kex** %kex, align 8, !dbg !791
  %server_version_string = getelementptr inbounds %struct.kex* %35, i32 0, i32 20, !dbg !791
  store i8* %34, i8** %server_version_string, align 8, !dbg !791
  %36 = load %struct.kex** %kex, align 8, !dbg !792
  %verify_host_key = getelementptr inbounds %struct.kex* %36, i32 0, i32 22, !dbg !792
  store i32 (%struct.sshkey*, %struct.ssh*)* @verify_host_key_callback, i32 (%struct.sshkey*, %struct.ssh*)** %verify_host_key, align 8, !dbg !792
  %37 = load %struct.ssh** @active_state, align 8, !dbg !793
  %38 = load %struct.kex** %kex, align 8, !dbg !793
  %done = getelementptr inbounds %struct.kex* %38, i32 0, i32 15, !dbg !793
  %39 = load %struct.ssh** @active_state, align 8, !dbg !793
  %40 = bitcast %struct.ssh* %39 to i8*, !dbg !793
  call void bitcast (void (%struct.ssh.68*, i32, i32*, i8*)* @ssh_dispatch_run_fatal to void (%struct.ssh*, i32, i32*, i8*)*)(%struct.ssh* %37, i32 0, i32* %done, i8* %40), !dbg !793
  %41 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 36), align 8, !dbg !794
  %call54 = call i8* @compat_kex_proposal(i8* %41), !dbg !794
  %arrayidx55 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i64 0, !dbg !794
  store i8* %call54, i8** %arrayidx55, align 8, !dbg !794
  %42 = load %struct.kex** %kex, align 8, !dbg !795
  %my = getelementptr inbounds %struct.kex* %42, i32 0, i32 13, !dbg !795
  %43 = load %struct.sshbuf** %my, align 8, !dbg !795
  %arraydecay56 = getelementptr inbounds [10 x i8*]* %myproposal, i32 0, i32 0, !dbg !795
  %call57 = call i32 @kex_prop2buf(%struct.sshbuf* %43, i8** %arraydecay56), !dbg !795
  store i32 %call57, i32* %r, align 4, !dbg !795
  %cmp58 = icmp ne i32 %call57, 0, !dbg !795
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !795

if.then60:                                        ; preds = %if.end34
  %44 = load i32* %r, align 4, !dbg !797
  %call61 = call i8* @ssh_err(i32 %44), !dbg !797
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str12815, i32 0, i32 0), i8* %call61) #11, !dbg !798
  unreachable, !dbg !798

if.end62:                                         ; preds = %if.end34
  %45 = load %struct.kex** %kex, align 8, !dbg !799
  %session_id = getelementptr inbounds %struct.kex* %45, i32 0, i32 0, !dbg !799
  %46 = load i8** %session_id, align 8, !dbg !799
  store i8* %46, i8** @session_id2, align 8, !dbg !799
  %47 = load %struct.kex** %kex, align 8, !dbg !800
  %session_id_len = getelementptr inbounds %struct.kex* %47, i32 0, i32 1, !dbg !800
  %48 = load i64* %session_id_len, align 8, !dbg !800
  %conv63 = trunc i64 %48 to i32, !dbg !800
  store i32 %conv63, i32* @session_id2_len, align 4, !dbg !800
  ret void, !dbg !801
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata) #2

declare i8* @kex_names_cat(i8*, i8*) #1

declare i8* @compat_kex_proposal(i8*) #1

declare i8* @compat_cipher_proposal(i8*) #1

declare i8* @compat_pkalg_proposal(i8*) #1

declare void @ssh_packet_set_rekey_limits(%struct.ssh*, i64, i64) #1

declare i32 @kex_setup(%struct.ssh*, i8**) #1

declare i32 @kexdh_client(%struct.ssh*) #1

declare i32 @kexgex_client(%struct.ssh*) #1

declare i32 @kexecdh_client(%struct.ssh*) #1

declare i32 @kexc25519_client(%struct.ssh*) #1

declare i32 @kex_prop2buf(%struct.sshbuf*, i8**) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @userauth_hostbased(%struct.cauthctxt* %authctxt) #0 {
entry:
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %ssh = alloca %struct.ssh*, align 8
  %private = alloca %struct.sshkey*, align 8
  %b = alloca %struct.sshbuf*, align 8
  %service = alloca i8*, align 8
  %sig = alloca i8*, align 8
  %keyblob = alloca i8*, align 8
  %fp = alloca i8*, align 8
  %chost = alloca i8*, align 8
  %lname = alloca i8*, align 8
  %siglen = alloca i64, align 8
  %keylen = alloca i64, align 8
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %success = alloca i32, align 4
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !802), !dbg !803
  call void @llvm.dbg.declare(metadata !{%struct.ssh** %ssh}, metadata !804), !dbg !805
  %0 = load %struct.ssh** @active_state, align 8, !dbg !806
  store %struct.ssh* %0, %struct.ssh** %ssh, align 8, !dbg !806
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %private}, metadata !807), !dbg !808
  store %struct.sshkey* null, %struct.sshkey** %private, align 8, !dbg !809
  call void @llvm.dbg.declare(metadata !{%struct.sshbuf** %b}, metadata !810), !dbg !811
  store %struct.sshbuf* null, %struct.sshbuf** %b, align 8, !dbg !812
  call void @llvm.dbg.declare(metadata !{i8** %service}, metadata !813), !dbg !814
  call void @llvm.dbg.declare(metadata !{i8** %sig}, metadata !815), !dbg !816
  store i8* null, i8** %sig, align 8, !dbg !817
  call void @llvm.dbg.declare(metadata !{i8** %keyblob}, metadata !818), !dbg !819
  store i8* null, i8** %keyblob, align 8, !dbg !817
  call void @llvm.dbg.declare(metadata !{i8** %fp}, metadata !820), !dbg !821
  store i8* null, i8** %fp, align 8, !dbg !822
  call void @llvm.dbg.declare(metadata !{i8** %chost}, metadata !823), !dbg !824
  store i8* null, i8** %chost, align 8, !dbg !822
  call void @llvm.dbg.declare(metadata !{i8** %lname}, metadata !825), !dbg !826
  store i8* null, i8** %lname, align 8, !dbg !822
  call void @llvm.dbg.declare(metadata !{i64* %siglen}, metadata !827), !dbg !828
  store i64 0, i64* %siglen, align 8, !dbg !829
  call void @llvm.dbg.declare(metadata !{i64* %keylen}, metadata !830), !dbg !831
  store i64 0, i64* %keylen, align 8, !dbg !829
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !832), !dbg !833
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !834), !dbg !835
  call void @llvm.dbg.declare(metadata !{i32* %success}, metadata !836), !dbg !837
  store i32 0, i32* %success, align 4, !dbg !838
  %1 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !839
  %ktypes = getelementptr inbounds %struct.cauthctxt* %1, i32 0, i32 12, !dbg !839
  %2 = load i8** %ktypes, align 8, !dbg !839
  %cmp = icmp eq i8* %2, null, !dbg !839
  br i1 %cmp, label %if.then, label %if.end, !dbg !839

if.then:                                          ; preds = %entry
  %3 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 100), align 8, !dbg !841
  %call = call i8* @xstrdup(i8* %3), !dbg !841
  %4 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !841
  %oktypes = getelementptr inbounds %struct.cauthctxt* %4, i32 0, i32 11, !dbg !841
  store i8* %call, i8** %oktypes, align 8, !dbg !841
  %5 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !843
  %oktypes1 = getelementptr inbounds %struct.cauthctxt* %5, i32 0, i32 11, !dbg !843
  %6 = load i8** %oktypes1, align 8, !dbg !843
  %7 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !843
  %ktypes2 = getelementptr inbounds %struct.cauthctxt* %7, i32 0, i32 12, !dbg !843
  store i8* %6, i8** %ktypes2, align 8, !dbg !843
  br label %if.end, !dbg !844

if.end:                                           ; preds = %if.then, %entry
  br label %for.cond, !dbg !845

for.cond:                                         ; preds = %if.end62, %if.end
  %8 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !847
  %active_ktype = getelementptr inbounds %struct.cauthctxt* %8, i32 0, i32 13, !dbg !847
  %9 = load i8** %active_ktype, align 8, !dbg !847
  %cmp3 = icmp eq i8* %9, null, !dbg !847
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !847

if.then4:                                         ; preds = %for.cond
  %10 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !850
  %ktypes5 = getelementptr inbounds %struct.cauthctxt* %10, i32 0, i32 12, !dbg !850
  %call6 = call i8* @strsep(i8** %ktypes5, i8* getelementptr inbounds ([2 x i8]* @.str63866, i32 0, i32 0)) #9, !dbg !850
  %11 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !850
  %active_ktype7 = getelementptr inbounds %struct.cauthctxt* %11, i32 0, i32 13, !dbg !850
  store i8* %call6, i8** %active_ktype7, align 8, !dbg !850
  br label %if.end8, !dbg !850

if.end8:                                          ; preds = %if.then4, %for.cond
  %12 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !851
  %active_ktype9 = getelementptr inbounds %struct.cauthctxt* %12, i32 0, i32 13, !dbg !851
  %13 = load i8** %active_ktype9, align 8, !dbg !851
  %cmp10 = icmp eq i8* %13, null, !dbg !851
  br i1 %cmp10, label %if.then14, label %lor.lhs.false, !dbg !851

lor.lhs.false:                                    ; preds = %if.end8
  %14 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !853
  %active_ktype11 = getelementptr inbounds %struct.cauthctxt* %14, i32 0, i32 13, !dbg !853
  %15 = load i8** %active_ktype11, align 8, !dbg !853
  %16 = load i8* %15, align 1, !dbg !853
  %conv = sext i8 %16 to i32, !dbg !853
  %cmp12 = icmp eq i32 %conv, 0, !dbg !853
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !853

if.then14:                                        ; preds = %lor.lhs.false, %if.end8
  br label %for.end64, !dbg !855

if.end15:                                         ; preds = %lor.lhs.false
  %17 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !856
  %active_ktype16 = getelementptr inbounds %struct.cauthctxt* %17, i32 0, i32 13, !dbg !856
  %18 = load i8** %active_ktype16, align 8, !dbg !856
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([23 x i8]* @.str64867, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %18), !dbg !856
  store %struct.sshkey* null, %struct.sshkey** %private, align 8, !dbg !857
  store i32 0, i32* %i, align 4, !dbg !858
  br label %for.cond17, !dbg !858

for.cond17:                                       ; preds = %cont, %if.end15
  %19 = load i32* %i, align 4, !dbg !860
  %20 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !860
  %sensitive = getelementptr inbounds %struct.cauthctxt* %20, i32 0, i32 10, !dbg !860
  %21 = load %struct.Sensitive** %sensitive, align 8, !dbg !860
  %nkeys = getelementptr inbounds %struct.Sensitive* %21, i32 0, i32 1, !dbg !860
  %22 = load i32* %nkeys, align 4, !dbg !860
  %cmp18 = icmp slt i32 %19, %22, !dbg !860
  br i1 %cmp18, label %for.body, label %for.end, !dbg !860

for.body:                                         ; preds = %for.cond17
  %23 = load i32* %i, align 4, !dbg !863
  %idxprom = sext i32 %23 to i64, !dbg !863
  %24 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !863
  %sensitive20 = getelementptr inbounds %struct.cauthctxt* %24, i32 0, i32 10, !dbg !863
  %25 = load %struct.Sensitive** %sensitive20, align 8, !dbg !863
  %keys = getelementptr inbounds %struct.Sensitive* %25, i32 0, i32 0, !dbg !863
  %26 = load %struct.sshkey*** %keys, align 8, !dbg !863
  %arrayidx = getelementptr inbounds %struct.sshkey** %26, i64 %idxprom, !dbg !863
  %27 = load %struct.sshkey** %arrayidx, align 8, !dbg !863
  %cmp21 = icmp eq %struct.sshkey* %27, null, !dbg !863
  br i1 %cmp21, label %if.then38, label %lor.lhs.false23, !dbg !863

lor.lhs.false23:                                  ; preds = %for.body
  %28 = load i32* %i, align 4, !dbg !866
  %idxprom24 = sext i32 %28 to i64, !dbg !866
  %29 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !866
  %sensitive25 = getelementptr inbounds %struct.cauthctxt* %29, i32 0, i32 10, !dbg !866
  %30 = load %struct.Sensitive** %sensitive25, align 8, !dbg !866
  %keys26 = getelementptr inbounds %struct.Sensitive* %30, i32 0, i32 0, !dbg !866
  %31 = load %struct.sshkey*** %keys26, align 8, !dbg !866
  %arrayidx27 = getelementptr inbounds %struct.sshkey** %31, i64 %idxprom24, !dbg !866
  %32 = load %struct.sshkey** %arrayidx27, align 8, !dbg !866
  %type = getelementptr inbounds %struct.sshkey* %32, i32 0, i32 0, !dbg !866
  %33 = load i32* %type, align 4, !dbg !866
  %cmp28 = icmp eq i32 %33, 0, !dbg !866
  br i1 %cmp28, label %if.then38, label %lor.lhs.false30, !dbg !866

lor.lhs.false30:                                  ; preds = %lor.lhs.false23
  %34 = load i32* %i, align 4, !dbg !868
  %idxprom31 = sext i32 %34 to i64, !dbg !868
  %35 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !868
  %sensitive32 = getelementptr inbounds %struct.cauthctxt* %35, i32 0, i32 10, !dbg !868
  %36 = load %struct.Sensitive** %sensitive32, align 8, !dbg !868
  %keys33 = getelementptr inbounds %struct.Sensitive* %36, i32 0, i32 0, !dbg !868
  %37 = load %struct.sshkey*** %keys33, align 8, !dbg !868
  %arrayidx34 = getelementptr inbounds %struct.sshkey** %37, i64 %idxprom31, !dbg !868
  %38 = load %struct.sshkey** %arrayidx34, align 8, !dbg !868
  %type35 = getelementptr inbounds %struct.sshkey* %38, i32 0, i32 0, !dbg !868
  %39 = load i32* %type35, align 4, !dbg !868
  %cmp36 = icmp eq i32 %39, 9, !dbg !868
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !868

if.then38:                                        ; preds = %lor.lhs.false30, %lor.lhs.false23, %for.body
  br label %for.inc, !dbg !870

if.end39:                                         ; preds = %lor.lhs.false30
  %40 = load i32* %i, align 4, !dbg !871
  %idxprom40 = sext i32 %40 to i64, !dbg !871
  %41 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !871
  %sensitive41 = getelementptr inbounds %struct.cauthctxt* %41, i32 0, i32 10, !dbg !871
  %42 = load %struct.Sensitive** %sensitive41, align 8, !dbg !871
  %keys42 = getelementptr inbounds %struct.Sensitive* %42, i32 0, i32 0, !dbg !871
  %43 = load %struct.sshkey*** %keys42, align 8, !dbg !871
  %arrayidx43 = getelementptr inbounds %struct.sshkey** %43, i64 %idxprom40, !dbg !871
  %44 = load %struct.sshkey** %arrayidx43, align 8, !dbg !871
  %call44 = call i8* @sshkey_ssh_name(%struct.sshkey* %44), !dbg !871
  %45 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !873
  %active_ktype45 = getelementptr inbounds %struct.cauthctxt* %45, i32 0, i32 13, !dbg !873
  %46 = load i8** %active_ktype45, align 8, !dbg !873
  %call46 = call i32 @match_pattern_list(i8* %call44, i8* %46, i32 0), !dbg !873
  %cmp47 = icmp ne i32 %call46, 1, !dbg !873
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !873

if.then49:                                        ; preds = %if.end39
  br label %for.inc, !dbg !874

if.end50:                                         ; preds = %if.end39
  %47 = load i32* %i, align 4, !dbg !875
  %idxprom51 = sext i32 %47 to i64, !dbg !875
  %48 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !875
  %sensitive52 = getelementptr inbounds %struct.cauthctxt* %48, i32 0, i32 10, !dbg !875
  %49 = load %struct.Sensitive** %sensitive52, align 8, !dbg !875
  %keys53 = getelementptr inbounds %struct.Sensitive* %49, i32 0, i32 0, !dbg !875
  %50 = load %struct.sshkey*** %keys53, align 8, !dbg !875
  %arrayidx54 = getelementptr inbounds %struct.sshkey** %50, i64 %idxprom51, !dbg !875
  %51 = load %struct.sshkey** %arrayidx54, align 8, !dbg !875
  store %struct.sshkey* %51, %struct.sshkey** %private, align 8, !dbg !875
  %52 = load i32* %i, align 4, !dbg !876
  %idxprom55 = sext i32 %52 to i64, !dbg !876
  %53 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !876
  %sensitive56 = getelementptr inbounds %struct.cauthctxt* %53, i32 0, i32 10, !dbg !876
  %54 = load %struct.Sensitive** %sensitive56, align 8, !dbg !876
  %keys57 = getelementptr inbounds %struct.Sensitive* %54, i32 0, i32 0, !dbg !876
  %55 = load %struct.sshkey*** %keys57, align 8, !dbg !876
  %arrayidx58 = getelementptr inbounds %struct.sshkey** %55, i64 %idxprom55, !dbg !876
  store %struct.sshkey* null, %struct.sshkey** %arrayidx58, align 8, !dbg !876
  br label %for.end, !dbg !877

for.inc:                                          ; preds = %if.then49, %if.then38
  %56 = load i32* %i, align 4, !dbg !878
  %57 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 1), !dbg !878
  %58 = extractvalue { i32, i1 } %57, 0, !dbg !878
  %59 = extractvalue { i32, i1 } %57, 1, !dbg !878
  %60 = xor i1 %59, true, !dbg !878
  br i1 %60, label %cont, label %trap, !dbg !878

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3, !dbg !879
  unreachable, !dbg !879

cont:                                             ; preds = %for.inc
  store i32 %58, i32* %i, align 4, !dbg !881
  br label %for.cond17, !dbg !881

for.end:                                          ; preds = %if.end50, %for.cond17
  %61 = load %struct.sshkey** %private, align 8, !dbg !883
  %cmp59 = icmp ne %struct.sshkey* %61, null, !dbg !883
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !883

if.then61:                                        ; preds = %for.end
  br label %for.end64, !dbg !885

if.end62:                                         ; preds = %for.end
  %62 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !886
  %active_ktype63 = getelementptr inbounds %struct.cauthctxt* %62, i32 0, i32 13, !dbg !886
  store i8* null, i8** %active_ktype63, align 8, !dbg !886
  br label %for.cond, !dbg !887

for.end64:                                        ; preds = %if.then61, %if.then14
  %63 = load %struct.sshkey** %private, align 8, !dbg !888
  %cmp65 = icmp eq %struct.sshkey* %63, null, !dbg !888
  br i1 %cmp65, label %if.then67, label %if.end72, !dbg !888

if.then67:                                        ; preds = %for.end64
  %64 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !890
  %oktypes68 = getelementptr inbounds %struct.cauthctxt* %64, i32 0, i32 11, !dbg !890
  %65 = load i8** %oktypes68, align 8, !dbg !890
  call void @free(i8* %65) #9, !dbg !890
  %66 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !892
  %ktypes69 = getelementptr inbounds %struct.cauthctxt* %66, i32 0, i32 12, !dbg !892
  store i8* null, i8** %ktypes69, align 8, !dbg !892
  %67 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !892
  %oktypes70 = getelementptr inbounds %struct.cauthctxt* %67, i32 0, i32 11, !dbg !892
  store i8* null, i8** %oktypes70, align 8, !dbg !892
  %68 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !893
  %active_ktype71 = getelementptr inbounds %struct.cauthctxt* %68, i32 0, i32 13, !dbg !893
  store i8* null, i8** %active_ktype71, align 8, !dbg !893
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([54 x i8]* @.str65868, i32 0, i32 0)), !dbg !894
  br label %out, !dbg !895

if.end72:                                         ; preds = %for.end64
  %69 = load %struct.sshkey** %private, align 8, !dbg !896
  %70 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4, !dbg !896
  %call73 = call i8* @sshkey_fingerprint(%struct.sshkey* %69, i32 %70, i32 0), !dbg !896
  store i8* %call73, i8** %fp, align 8, !dbg !896
  %cmp74 = icmp eq i8* %call73, null, !dbg !896
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !896

if.then76:                                        ; preds = %if.end72
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([30 x i8]* @.str66869, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0)), !dbg !898
  br label %out, !dbg !900

if.end77:                                         ; preds = %if.end72
  %71 = load %struct.sshkey** %private, align 8, !dbg !901
  %call78 = call i8* @sshkey_ssh_name(%struct.sshkey* %71), !dbg !901
  %72 = load i8** %fp, align 8, !dbg !902
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([25 x i8]* @.str67870, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %call78, i8* %72), !dbg !902
  %73 = load %struct.ssh** @active_state, align 8, !dbg !903
  %call79 = call i32 bitcast (i32 (%struct.ssh.68*)* @ssh_packet_get_connection_in to i32 (%struct.ssh*)*)(%struct.ssh* %73), !dbg !903
  %call80 = call i8* @get_local_name(i32 %call79), !dbg !905
  store i8* %call80, i8** %lname, align 8, !dbg !905
  %cmp81 = icmp eq i8* %call80, null, !dbg !905
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !905

if.then83:                                        ; preds = %if.end77
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str68871, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0)), !dbg !906
  br label %out, !dbg !908

if.end84:                                         ; preds = %if.end77
  %74 = load i8** %lname, align 8, !dbg !909
  %call85 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %chost, i8* getelementptr inbounds ([4 x i8]* @.str69872, i32 0, i32 0), i8* %74), !dbg !909
  %75 = load i8** %chost, align 8, !dbg !910
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([13 x i8]* @.str70873, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %75), !dbg !910
  %76 = load i32* @datafellows, align 4, !dbg !911
  %and = and i32 %76, 65536, !dbg !911
  %tobool = icmp ne i32 %and, 0, !dbg !911
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !911

cond.true:                                        ; preds = %if.end84
  br label %cond.end, !dbg !912

cond.false:                                       ; preds = %if.end84
  %77 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !914
  %service86 = getelementptr inbounds %struct.cauthctxt* %77, i32 0, i32 3, !dbg !914
  %78 = load i8** %service86, align 8, !dbg !914
  br label %cond.end, !dbg !914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([13 x i8]* @.str20823, i32 0, i32 0), %cond.true ], [ %78, %cond.false ], !dbg !911
  store i8* %cond, i8** %service, align 8, !dbg !916
  %call87 = call %struct.sshbuf* @sshbuf_new(), !dbg !919
  store %struct.sshbuf* %call87, %struct.sshbuf** %b, align 8, !dbg !919
  %cmp88 = icmp eq %struct.sshbuf* %call87, null, !dbg !919
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !919

if.then90:                                        ; preds = %cond.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str71874, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0)), !dbg !921
  br label %out, !dbg !923

if.end91:                                         ; preds = %cond.end
  %79 = load %struct.sshkey** %private, align 8, !dbg !924
  %call92 = call i32 @sshkey_to_blob(%struct.sshkey* %79, i8** %keyblob, i64* %keylen), !dbg !924
  store i32 %call92, i32* %r, align 4, !dbg !924
  %cmp93 = icmp ne i32 %call92, 0, !dbg !924
  br i1 %cmp93, label %if.then95, label %if.end97, !dbg !924

if.then95:                                        ; preds = %if.end91
  %80 = load i32* %r, align 4, !dbg !926
  %call96 = call i8* @ssh_err(i32 %80), !dbg !926
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([23 x i8]* @.str72875, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %call96), !dbg !928
  br label %out, !dbg !929

if.end97:                                         ; preds = %if.end91
  %81 = load %struct.sshbuf** %b, align 8, !dbg !930
  %82 = load i8** @session_id2, align 8, !dbg !930
  %83 = load i32* @session_id2_len, align 4, !dbg !930
  %conv98 = zext i32 %83 to i64, !dbg !930
  %call99 = call i32 @sshbuf_put_string(%struct.sshbuf* %81, i8* %82, i64 %conv98), !dbg !930
  store i32 %call99, i32* %r, align 4, !dbg !930
  %cmp100 = icmp ne i32 %call99, 0, !dbg !930
  br i1 %cmp100, label %if.then135, label %lor.lhs.false102, !dbg !930

lor.lhs.false102:                                 ; preds = %if.end97
  %84 = load %struct.sshbuf** %b, align 8, !dbg !932
  %call103 = call i32 @sshbuf_put_u8(%struct.sshbuf* %84, i8 zeroext 50), !dbg !932
  store i32 %call103, i32* %r, align 4, !dbg !932
  %cmp104 = icmp ne i32 %call103, 0, !dbg !932
  br i1 %cmp104, label %if.then135, label %lor.lhs.false106, !dbg !932

lor.lhs.false106:                                 ; preds = %lor.lhs.false102
  %85 = load %struct.sshbuf** %b, align 8, !dbg !933
  %86 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !933
  %server_user = getelementptr inbounds %struct.cauthctxt* %86, i32 0, i32 0, !dbg !933
  %87 = load i8** %server_user, align 8, !dbg !933
  %call107 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %85, i8* %87), !dbg !933
  store i32 %call107, i32* %r, align 4, !dbg !933
  %cmp108 = icmp ne i32 %call107, 0, !dbg !933
  br i1 %cmp108, label %if.then135, label %lor.lhs.false110, !dbg !933

lor.lhs.false110:                                 ; preds = %lor.lhs.false106
  %88 = load %struct.sshbuf** %b, align 8, !dbg !934
  %89 = load i8** %service, align 8, !dbg !934
  %call111 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %88, i8* %89), !dbg !934
  store i32 %call111, i32* %r, align 4, !dbg !934
  %cmp112 = icmp ne i32 %call111, 0, !dbg !934
  br i1 %cmp112, label %if.then135, label %lor.lhs.false114, !dbg !934

lor.lhs.false114:                                 ; preds = %lor.lhs.false110
  %90 = load %struct.sshbuf** %b, align 8, !dbg !935
  %91 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !935
  %method = getelementptr inbounds %struct.cauthctxt* %91, i32 0, i32 4, !dbg !935
  %92 = load %struct.cauthmethod** %method, align 8, !dbg !935
  %name = getelementptr inbounds %struct.cauthmethod* %92, i32 0, i32 0, !dbg !935
  %93 = load i8** %name, align 8, !dbg !935
  %call115 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %90, i8* %93), !dbg !935
  store i32 %call115, i32* %r, align 4, !dbg !935
  %cmp116 = icmp ne i32 %call115, 0, !dbg !935
  br i1 %cmp116, label %if.then135, label %lor.lhs.false118, !dbg !935

lor.lhs.false118:                                 ; preds = %lor.lhs.false114
  %94 = load %struct.sshbuf** %b, align 8, !dbg !936
  %95 = load %struct.sshkey** %private, align 8, !dbg !937
  %call119 = call i8* @sshkey_ssh_name(%struct.sshkey* %95), !dbg !937
  %call120 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %94, i8* %call119), !dbg !936
  store i32 %call120, i32* %r, align 4, !dbg !936
  %cmp121 = icmp ne i32 %call120, 0, !dbg !936
  br i1 %cmp121, label %if.then135, label %lor.lhs.false123, !dbg !936

lor.lhs.false123:                                 ; preds = %lor.lhs.false118
  %96 = load %struct.sshbuf** %b, align 8, !dbg !938
  %97 = load i8** %keyblob, align 8, !dbg !938
  %98 = load i64* %keylen, align 8, !dbg !938
  %call124 = call i32 @sshbuf_put_string(%struct.sshbuf* %96, i8* %97, i64 %98), !dbg !938
  store i32 %call124, i32* %r, align 4, !dbg !938
  %cmp125 = icmp ne i32 %call124, 0, !dbg !938
  br i1 %cmp125, label %if.then135, label %lor.lhs.false127, !dbg !938

lor.lhs.false127:                                 ; preds = %lor.lhs.false123
  %99 = load %struct.sshbuf** %b, align 8, !dbg !939
  %100 = load i8** %chost, align 8, !dbg !939
  %call128 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %99, i8* %100), !dbg !939
  store i32 %call128, i32* %r, align 4, !dbg !939
  %cmp129 = icmp ne i32 %call128, 0, !dbg !939
  br i1 %cmp129, label %if.then135, label %lor.lhs.false131, !dbg !939

lor.lhs.false131:                                 ; preds = %lor.lhs.false127
  %101 = load %struct.sshbuf** %b, align 8, !dbg !940
  %102 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !940
  %local_user = getelementptr inbounds %struct.cauthctxt* %102, i32 0, i32 1, !dbg !940
  %103 = load i8** %local_user, align 8, !dbg !940
  %call132 = call i32 @sshbuf_put_cstring(%struct.sshbuf* %101, i8* %103), !dbg !940
  store i32 %call132, i32* %r, align 4, !dbg !940
  %cmp133 = icmp ne i32 %call132, 0, !dbg !940
  br i1 %cmp133, label %if.then135, label %if.end137, !dbg !940

if.then135:                                       ; preds = %lor.lhs.false131, %lor.lhs.false127, %lor.lhs.false123, %lor.lhs.false118, %lor.lhs.false114, %lor.lhs.false110, %lor.lhs.false106, %lor.lhs.false102, %if.end97
  %104 = load i32* %r, align 4, !dbg !941
  %call136 = call i8* @ssh_err(i32 %104), !dbg !941
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([21 x i8]* @.str73876, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %call136), !dbg !943
  br label %out, !dbg !944

if.end137:                                        ; preds = %lor.lhs.false131
  %105 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !945
  %sensitive138 = getelementptr inbounds %struct.cauthctxt* %105, i32 0, i32 10, !dbg !945
  %106 = load %struct.Sensitive** %sensitive138, align 8, !dbg !945
  %external_keysign = getelementptr inbounds %struct.Sensitive* %106, i32 0, i32 2, !dbg !945
  %107 = load i32* %external_keysign, align 4, !dbg !945
  %tobool139 = icmp ne i32 %107, 0, !dbg !945
  br i1 %tobool139, label %if.then140, label %if.else, !dbg !945

if.then140:                                       ; preds = %if.end137
  %108 = load %struct.sshkey** %private, align 8, !dbg !947
  %109 = load %struct.sshbuf** %b, align 8, !dbg !948
  %call141 = call i8* @sshbuf_ptr(%struct.sshbuf* %109), !dbg !948
  %110 = load %struct.sshbuf** %b, align 8, !dbg !949
  %call142 = call i64 @sshbuf_len(%struct.sshbuf* %110), !dbg !949
  %call143 = call i32 @ssh_keysign(%struct.sshkey* %108, i8** %sig, i64* %siglen, i8* %call141, i64 %call142), !dbg !947
  store i32 %call143, i32* %r, align 4, !dbg !947
  br label %if.end152, !dbg !947

if.else:                                          ; preds = %if.end137
  %111 = load %struct.sshkey** %private, align 8, !dbg !950
  %112 = load %struct.sshbuf** %b, align 8, !dbg !952
  %call144 = call i8* @sshbuf_ptr(%struct.sshbuf* %112), !dbg !952
  %113 = load %struct.sshbuf** %b, align 8, !dbg !953
  %call145 = call i64 @sshbuf_len(%struct.sshbuf* %113), !dbg !953
  %114 = load i32* @datafellows, align 4, !dbg !950
  %call146 = call i32 @sshkey_sign(%struct.sshkey* %111, i8** %sig, i64* %siglen, i8* %call144, i64 %call145, i8* null, i32 %114), !dbg !950
  store i32 %call146, i32* %r, align 4, !dbg !950
  %cmp147 = icmp ne i32 %call146, 0, !dbg !950
  br i1 %cmp147, label %if.then149, label %if.end151, !dbg !950

if.then149:                                       ; preds = %if.else
  %115 = load i32* %r, align 4, !dbg !954
  %call150 = call i8* @ssh_err(i32 %115), !dbg !954
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([20 x i8]* @.str74877, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %call150), !dbg !955
  br label %if.end151, !dbg !955

if.end151:                                        ; preds = %if.then149, %if.else
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then140
  %116 = load i32* %r, align 4, !dbg !956
  %cmp153 = icmp ne i32 %116, 0, !dbg !956
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !956

if.then155:                                       ; preds = %if.end152
  %117 = load %struct.sshkey** %private, align 8, !dbg !958
  %call156 = call i8* @sshkey_ssh_name(%struct.sshkey* %117), !dbg !958
  %118 = load i8** %fp, align 8, !dbg !960
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str75878, i32 0, i32 0), i8* %call156, i8* %118), !dbg !960
  br label %out, !dbg !961

if.end157:                                        ; preds = %if.end152
  %119 = load %struct.ssh** %ssh, align 8, !dbg !962
  %call158 = call i32 bitcast (i32 (%struct.ssh.68*, i8)* @sshpkt_start to i32 (%struct.ssh*, i8)*)(%struct.ssh* %119, i8 zeroext 50), !dbg !962
  store i32 %call158, i32* %r, align 4, !dbg !962
  %cmp159 = icmp ne i32 %call158, 0, !dbg !962
  br i1 %cmp159, label %if.then203, label %lor.lhs.false161, !dbg !962

lor.lhs.false161:                                 ; preds = %if.end157
  %120 = load %struct.ssh** %ssh, align 8, !dbg !964
  %121 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !964
  %server_user162 = getelementptr inbounds %struct.cauthctxt* %121, i32 0, i32 0, !dbg !964
  %122 = load i8** %server_user162, align 8, !dbg !964
  %call163 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %120, i8* %122), !dbg !964
  store i32 %call163, i32* %r, align 4, !dbg !964
  %cmp164 = icmp ne i32 %call163, 0, !dbg !964
  br i1 %cmp164, label %if.then203, label %lor.lhs.false166, !dbg !964

lor.lhs.false166:                                 ; preds = %lor.lhs.false161
  %123 = load %struct.ssh** %ssh, align 8, !dbg !965
  %124 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !965
  %service167 = getelementptr inbounds %struct.cauthctxt* %124, i32 0, i32 3, !dbg !965
  %125 = load i8** %service167, align 8, !dbg !965
  %call168 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %123, i8* %125), !dbg !965
  store i32 %call168, i32* %r, align 4, !dbg !965
  %cmp169 = icmp ne i32 %call168, 0, !dbg !965
  br i1 %cmp169, label %if.then203, label %lor.lhs.false171, !dbg !965

lor.lhs.false171:                                 ; preds = %lor.lhs.false166
  %126 = load %struct.ssh** %ssh, align 8, !dbg !966
  %127 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !966
  %method172 = getelementptr inbounds %struct.cauthctxt* %127, i32 0, i32 4, !dbg !966
  %128 = load %struct.cauthmethod** %method172, align 8, !dbg !966
  %name173 = getelementptr inbounds %struct.cauthmethod* %128, i32 0, i32 0, !dbg !966
  %129 = load i8** %name173, align 8, !dbg !966
  %call174 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %126, i8* %129), !dbg !966
  store i32 %call174, i32* %r, align 4, !dbg !966
  %cmp175 = icmp ne i32 %call174, 0, !dbg !966
  br i1 %cmp175, label %if.then203, label %lor.lhs.false177, !dbg !966

lor.lhs.false177:                                 ; preds = %lor.lhs.false171
  %130 = load %struct.ssh** %ssh, align 8, !dbg !967
  %131 = load %struct.sshkey** %private, align 8, !dbg !968
  %call178 = call i8* @sshkey_ssh_name(%struct.sshkey* %131), !dbg !968
  %call179 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %130, i8* %call178), !dbg !967
  store i32 %call179, i32* %r, align 4, !dbg !967
  %cmp180 = icmp ne i32 %call179, 0, !dbg !967
  br i1 %cmp180, label %if.then203, label %lor.lhs.false182, !dbg !967

lor.lhs.false182:                                 ; preds = %lor.lhs.false177
  %132 = load %struct.ssh** %ssh, align 8, !dbg !969
  %133 = load i8** %keyblob, align 8, !dbg !969
  %134 = load i64* %keylen, align 8, !dbg !969
  %call183 = call i32 @sshpkt_put_string(%struct.ssh* %132, i8* %133, i64 %134), !dbg !969
  store i32 %call183, i32* %r, align 4, !dbg !969
  %cmp184 = icmp ne i32 %call183, 0, !dbg !969
  br i1 %cmp184, label %if.then203, label %lor.lhs.false186, !dbg !969

lor.lhs.false186:                                 ; preds = %lor.lhs.false182
  %135 = load %struct.ssh** %ssh, align 8, !dbg !970
  %136 = load i8** %chost, align 8, !dbg !970
  %call187 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %135, i8* %136), !dbg !970
  store i32 %call187, i32* %r, align 4, !dbg !970
  %cmp188 = icmp ne i32 %call187, 0, !dbg !970
  br i1 %cmp188, label %if.then203, label %lor.lhs.false190, !dbg !970

lor.lhs.false190:                                 ; preds = %lor.lhs.false186
  %137 = load %struct.ssh** %ssh, align 8, !dbg !971
  %138 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !971
  %local_user191 = getelementptr inbounds %struct.cauthctxt* %138, i32 0, i32 1, !dbg !971
  %139 = load i8** %local_user191, align 8, !dbg !971
  %call192 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %137, i8* %139), !dbg !971
  store i32 %call192, i32* %r, align 4, !dbg !971
  %cmp193 = icmp ne i32 %call192, 0, !dbg !971
  br i1 %cmp193, label %if.then203, label %lor.lhs.false195, !dbg !971

lor.lhs.false195:                                 ; preds = %lor.lhs.false190
  %140 = load %struct.ssh** %ssh, align 8, !dbg !972
  %141 = load i8** %sig, align 8, !dbg !972
  %142 = load i64* %siglen, align 8, !dbg !972
  %call196 = call i32 @sshpkt_put_string(%struct.ssh* %140, i8* %141, i64 %142), !dbg !972
  store i32 %call196, i32* %r, align 4, !dbg !972
  %cmp197 = icmp ne i32 %call196, 0, !dbg !972
  br i1 %cmp197, label %if.then203, label %lor.lhs.false199, !dbg !972

lor.lhs.false199:                                 ; preds = %lor.lhs.false195
  %143 = load %struct.ssh** %ssh, align 8, !dbg !973
  %call200 = call i32 bitcast (i32 (%struct.ssh.68*)* @sshpkt_send to i32 (%struct.ssh*)*)(%struct.ssh* %143), !dbg !973
  store i32 %call200, i32* %r, align 4, !dbg !973
  %cmp201 = icmp ne i32 %call200, 0, !dbg !973
  br i1 %cmp201, label %if.then203, label %if.end205, !dbg !973

if.then203:                                       ; preds = %lor.lhs.false199, %lor.lhs.false195, %lor.lhs.false190, %lor.lhs.false186, %lor.lhs.false182, %lor.lhs.false177, %lor.lhs.false171, %lor.lhs.false166, %lor.lhs.false161, %if.end157
  %144 = load i32* %r, align 4, !dbg !974
  %call204 = call i8* @ssh_err(i32 %144), !dbg !974
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([21 x i8]* @.str76879, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.userauth_hostbased, i32 0, i32 0), i8* %call204), !dbg !976
  br label %out, !dbg !977

if.end205:                                        ; preds = %lor.lhs.false199
  store i32 1, i32* %success, align 4, !dbg !978
  br label %out, !dbg !978

out:                                              ; preds = %if.end205, %if.then203, %if.then155, %if.then135, %if.then95, %if.then90, %if.then83, %if.then76, %if.then67
  %145 = load i8** %sig, align 8, !dbg !979
  %cmp206 = icmp ne i8* %145, null, !dbg !979
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !979

if.then208:                                       ; preds = %out
  %146 = load i8** %sig, align 8, !dbg !981
  %147 = load i64* %siglen, align 8, !dbg !981
  call void @explicit_bzero(i8* %146, i64 %147), !dbg !981
  %148 = load i8** %sig, align 8, !dbg !983
  call void @free(i8* %148) #9, !dbg !983
  br label %if.end209, !dbg !984

if.end209:                                        ; preds = %if.then208, %out
  %149 = load i8** %keyblob, align 8, !dbg !985
  call void @free(i8* %149) #9, !dbg !985
  %150 = load i8** %lname, align 8, !dbg !986
  call void @free(i8* %150) #9, !dbg !986
  %151 = load i8** %fp, align 8, !dbg !987
  call void @free(i8* %151) #9, !dbg !987
  %152 = load i8** %chost, align 8, !dbg !988
  call void @free(i8* %152) #9, !dbg !988
  %153 = load %struct.sshkey** %private, align 8, !dbg !989
  call void @sshkey_free(%struct.sshkey* %153), !dbg !989
  %154 = load %struct.sshbuf** %b, align 8, !dbg !990
  call void @sshbuf_free(%struct.sshbuf* %154), !dbg !990
  %155 = load i32* %success, align 4, !dbg !991
  ret i32 %155, !dbg !991
}

; Function Attrs: nounwind sspreq uwtable
define i32 @userauth_pubkey(%struct.cauthctxt* %authctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %id = alloca %struct.identity*, align 8
  %sent = alloca i32, align 4
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !992), !dbg !993
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id}, metadata !994), !dbg !995
  call void @llvm.dbg.declare(metadata !{i32* %sent}, metadata !996), !dbg !997
  store i32 0, i32* %sent, align 4, !dbg !998
  br label %while.cond, !dbg !999

while.cond:                                       ; preds = %if.end57, %entry
  %0 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1000
  %keys = getelementptr inbounds %struct.cauthctxt* %0, i32 0, i32 8, !dbg !1000
  %tqh_first = getelementptr inbounds %struct.idlist* %keys, i32 0, i32 0, !dbg !1000
  %1 = load %struct.identity** %tqh_first, align 8, !dbg !1000
  store %struct.identity* %1, %struct.identity** %id, align 8, !dbg !1000
  %tobool = icmp ne %struct.identity* %1, null, !dbg !1000
  br i1 %tobool, label %while.body, label %while.end, !dbg !1000

while.body:                                       ; preds = %while.cond
  %2 = load %struct.identity** %id, align 8, !dbg !1002
  %tried = getelementptr inbounds %struct.identity* %2, i32 0, i32 4, !dbg !1002
  %3 = load i32* %tried, align 4, !dbg !1002
  %4 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 1), !dbg !1002
  %5 = extractvalue { i32, i1 } %4, 0, !dbg !1002
  %6 = extractvalue { i32, i1 } %4, 1, !dbg !1002
  %7 = xor i1 %6, true, !dbg !1002
  br i1 %7, label %cont, label %trap, !dbg !1002

trap:                                             ; preds = %while.body
  call void @llvm.trap() #3, !dbg !1005
  unreachable, !dbg !1005

cont:                                             ; preds = %while.body
  store i32 %5, i32* %tried, align 4, !dbg !1007
  %tobool1 = icmp ne i32 %3, 0, !dbg !1007
  br i1 %tobool1, label %if.then, label %if.end, !dbg !1007

if.then:                                          ; preds = %cont
  store i32 0, i32* %retval, !dbg !1009
  br label %return, !dbg !1009

if.end:                                           ; preds = %cont
  br label %do.body, !dbg !1010

do.body:                                          ; preds = %if.end
  %8 = load %struct.identity** %id, align 8, !dbg !1011
  %next = getelementptr inbounds %struct.identity* %8, i32 0, i32 0, !dbg !1011
  %tqe_next = getelementptr inbounds %struct.anon.2.172* %next, i32 0, i32 0, !dbg !1011
  %9 = load %struct.identity** %tqe_next, align 8, !dbg !1011
  %cmp = icmp ne %struct.identity* %9, null, !dbg !1011
  br i1 %cmp, label %if.then2, label %if.else, !dbg !1011

if.then2:                                         ; preds = %do.body
  %10 = load %struct.identity** %id, align 8, !dbg !1015
  %next3 = getelementptr inbounds %struct.identity* %10, i32 0, i32 0, !dbg !1015
  %tqe_prev = getelementptr inbounds %struct.anon.2.172* %next3, i32 0, i32 1, !dbg !1015
  %11 = load %struct.identity*** %tqe_prev, align 8, !dbg !1015
  %12 = load %struct.identity** %id, align 8, !dbg !1015
  %next4 = getelementptr inbounds %struct.identity* %12, i32 0, i32 0, !dbg !1015
  %tqe_next5 = getelementptr inbounds %struct.anon.2.172* %next4, i32 0, i32 0, !dbg !1015
  %13 = load %struct.identity** %tqe_next5, align 8, !dbg !1015
  %next6 = getelementptr inbounds %struct.identity* %13, i32 0, i32 0, !dbg !1015
  %tqe_prev7 = getelementptr inbounds %struct.anon.2.172* %next6, i32 0, i32 1, !dbg !1015
  store %struct.identity** %11, %struct.identity*** %tqe_prev7, align 8, !dbg !1015
  br label %if.end11, !dbg !1015

if.else:                                          ; preds = %do.body
  %14 = load %struct.identity** %id, align 8, !dbg !1017
  %next8 = getelementptr inbounds %struct.identity* %14, i32 0, i32 0, !dbg !1017
  %tqe_prev9 = getelementptr inbounds %struct.anon.2.172* %next8, i32 0, i32 1, !dbg !1017
  %15 = load %struct.identity*** %tqe_prev9, align 8, !dbg !1017
  %16 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1017
  %keys10 = getelementptr inbounds %struct.cauthctxt* %16, i32 0, i32 8, !dbg !1017
  %tqh_last = getelementptr inbounds %struct.idlist* %keys10, i32 0, i32 1, !dbg !1017
  store %struct.identity** %15, %struct.identity*** %tqh_last, align 8, !dbg !1017
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then2
  %17 = load %struct.identity** %id, align 8, !dbg !1019
  %next12 = getelementptr inbounds %struct.identity* %17, i32 0, i32 0, !dbg !1019
  %tqe_next13 = getelementptr inbounds %struct.anon.2.172* %next12, i32 0, i32 0, !dbg !1019
  %18 = load %struct.identity** %tqe_next13, align 8, !dbg !1019
  %19 = load %struct.identity** %id, align 8, !dbg !1019
  %next14 = getelementptr inbounds %struct.identity* %19, i32 0, i32 0, !dbg !1019
  %tqe_prev15 = getelementptr inbounds %struct.anon.2.172* %next14, i32 0, i32 1, !dbg !1019
  %20 = load %struct.identity*** %tqe_prev15, align 8, !dbg !1019
  store %struct.identity* %18, %struct.identity** %20, align 8, !dbg !1019
  br label %do.end, !dbg !1019

do.end:                                           ; preds = %if.end11
  br label %do.body16, !dbg !1021

do.body16:                                        ; preds = %do.end
  %21 = load %struct.identity** %id, align 8, !dbg !1022
  %next17 = getelementptr inbounds %struct.identity* %21, i32 0, i32 0, !dbg !1022
  %tqe_next18 = getelementptr inbounds %struct.anon.2.172* %next17, i32 0, i32 0, !dbg !1022
  store %struct.identity* null, %struct.identity** %tqe_next18, align 8, !dbg !1022
  %22 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1022
  %keys19 = getelementptr inbounds %struct.cauthctxt* %22, i32 0, i32 8, !dbg !1022
  %tqh_last20 = getelementptr inbounds %struct.idlist* %keys19, i32 0, i32 1, !dbg !1022
  %23 = load %struct.identity*** %tqh_last20, align 8, !dbg !1022
  %24 = load %struct.identity** %id, align 8, !dbg !1022
  %next21 = getelementptr inbounds %struct.identity* %24, i32 0, i32 0, !dbg !1022
  %tqe_prev22 = getelementptr inbounds %struct.anon.2.172* %next21, i32 0, i32 1, !dbg !1022
  store %struct.identity** %23, %struct.identity*** %tqe_prev22, align 8, !dbg !1022
  %25 = load %struct.identity** %id, align 8, !dbg !1022
  %26 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1022
  %keys23 = getelementptr inbounds %struct.cauthctxt* %26, i32 0, i32 8, !dbg !1022
  %tqh_last24 = getelementptr inbounds %struct.idlist* %keys23, i32 0, i32 1, !dbg !1022
  %27 = load %struct.identity*** %tqh_last24, align 8, !dbg !1022
  store %struct.identity* %25, %struct.identity** %27, align 8, !dbg !1022
  %28 = load %struct.identity** %id, align 8, !dbg !1022
  %next25 = getelementptr inbounds %struct.identity* %28, i32 0, i32 0, !dbg !1022
  %tqe_next26 = getelementptr inbounds %struct.anon.2.172* %next25, i32 0, i32 0, !dbg !1022
  %29 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1022
  %keys27 = getelementptr inbounds %struct.cauthctxt* %29, i32 0, i32 8, !dbg !1022
  %tqh_last28 = getelementptr inbounds %struct.idlist* %keys27, i32 0, i32 1, !dbg !1022
  store %struct.identity** %tqe_next26, %struct.identity*** %tqh_last28, align 8, !dbg !1022
  br label %do.end29, !dbg !1022

do.end29:                                         ; preds = %do.body16
  %30 = load %struct.identity** %id, align 8, !dbg !1025
  %key = getelementptr inbounds %struct.identity* %30, i32 0, i32 2, !dbg !1025
  %31 = load %struct.sshkey** %key, align 8, !dbg !1025
  %cmp30 = icmp ne %struct.sshkey* %31, null, !dbg !1025
  br i1 %cmp30, label %if.then31, label %if.else38, !dbg !1025

if.then31:                                        ; preds = %do.end29
  %32 = load %struct.identity** %id, align 8, !dbg !1027
  %call = call i32 @try_identity(%struct.identity* %32), !dbg !1027
  %tobool32 = icmp ne i32 %call, 0, !dbg !1027
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !1027

if.then33:                                        ; preds = %if.then31
  %33 = load %struct.identity** %id, align 8, !dbg !1030
  %key34 = getelementptr inbounds %struct.identity* %33, i32 0, i32 2, !dbg !1030
  %34 = load %struct.sshkey** %key34, align 8, !dbg !1030
  %call35 = call i8* @sshkey_type(%struct.sshkey* %34), !dbg !1030
  %35 = load %struct.identity** %id, align 8, !dbg !1032
  %filename = getelementptr inbounds %struct.identity* %35, i32 0, i32 3, !dbg !1032
  %36 = load i8** %filename, align 8, !dbg !1032
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([27 x i8]* @.str56859, i32 0, i32 0), i8* %call35, i8* %36), !dbg !1032
  %37 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1033
  %38 = load %struct.identity** %id, align 8, !dbg !1033
  %call36 = call i32 @send_pubkey_test(%struct.cauthctxt* %37, %struct.identity* %38), !dbg !1033
  store i32 %call36, i32* %sent, align 4, !dbg !1033
  br label %if.end37, !dbg !1034

if.end37:                                         ; preds = %if.then33, %if.then31
  br label %if.end54, !dbg !1035

if.else38:                                        ; preds = %do.end29
  %39 = load %struct.identity** %id, align 8, !dbg !1036
  %filename39 = getelementptr inbounds %struct.identity* %39, i32 0, i32 3, !dbg !1036
  %40 = load i8** %filename39, align 8, !dbg !1036
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([23 x i8]* @.str57860, i32 0, i32 0), i8* %40), !dbg !1036
  %41 = load %struct.identity** %id, align 8, !dbg !1038
  %call40 = call %struct.sshkey* @load_identity_file(%struct.identity* %41), !dbg !1038
  %42 = load %struct.identity** %id, align 8, !dbg !1038
  %key41 = getelementptr inbounds %struct.identity* %42, i32 0, i32 2, !dbg !1038
  store %struct.sshkey* %call40, %struct.sshkey** %key41, align 8, !dbg !1038
  %43 = load %struct.identity** %id, align 8, !dbg !1039
  %key42 = getelementptr inbounds %struct.identity* %43, i32 0, i32 2, !dbg !1039
  %44 = load %struct.sshkey** %key42, align 8, !dbg !1039
  %cmp43 = icmp ne %struct.sshkey* %44, null, !dbg !1039
  br i1 %cmp43, label %if.then44, label %if.end53, !dbg !1039

if.then44:                                        ; preds = %if.else38
  %45 = load %struct.identity** %id, align 8, !dbg !1041
  %call45 = call i32 @try_identity(%struct.identity* %45), !dbg !1041
  %tobool46 = icmp ne i32 %call45, 0, !dbg !1041
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !1041

if.then47:                                        ; preds = %if.then44
  %46 = load %struct.identity** %id, align 8, !dbg !1044
  %isprivate = getelementptr inbounds %struct.identity* %46, i32 0, i32 5, !dbg !1044
  store i32 1, i32* %isprivate, align 4, !dbg !1044
  %47 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1046
  %48 = load %struct.identity** %id, align 8, !dbg !1046
  %call48 = call i32 @sign_and_send_pubkey(%struct.cauthctxt* %47, %struct.identity* %48), !dbg !1046
  store i32 %call48, i32* %sent, align 4, !dbg !1046
  br label %if.end49, !dbg !1047

if.end49:                                         ; preds = %if.then47, %if.then44
  %49 = load %struct.identity** %id, align 8, !dbg !1048
  %key50 = getelementptr inbounds %struct.identity* %49, i32 0, i32 2, !dbg !1048
  %50 = load %struct.sshkey** %key50, align 8, !dbg !1048
  call void @sshkey_free(%struct.sshkey* %50), !dbg !1048
  %51 = load %struct.identity** %id, align 8, !dbg !1049
  %key51 = getelementptr inbounds %struct.identity* %51, i32 0, i32 2, !dbg !1049
  store %struct.sshkey* null, %struct.sshkey** %key51, align 8, !dbg !1049
  %52 = load %struct.identity** %id, align 8, !dbg !1050
  %isprivate52 = getelementptr inbounds %struct.identity* %52, i32 0, i32 5, !dbg !1050
  store i32 0, i32* %isprivate52, align 4, !dbg !1050
  br label %if.end53, !dbg !1051

if.end53:                                         ; preds = %if.end49, %if.else38
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end37
  %53 = load i32* %sent, align 4, !dbg !1052
  %tobool55 = icmp ne i32 %53, 0, !dbg !1052
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !1052

if.then56:                                        ; preds = %if.end54
  %54 = load i32* %sent, align 4, !dbg !1054
  store i32 %54, i32* %retval, !dbg !1054
  br label %return, !dbg !1054

if.end57:                                         ; preds = %if.end54
  br label %while.cond, !dbg !1055

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, !dbg !1056
  br label %return, !dbg !1056

return:                                           ; preds = %while.end, %if.then56, %if.then
  %55 = load i32* %retval, !dbg !1057
  ret i32 %55, !dbg !1057
}

; Function Attrs: nounwind sspreq uwtable
define i32 @userauth_kbdint(%struct.cauthctxt* %authctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !1058), !dbg !1059
  %0 = load i32* @userauth_kbdint.attempt, align 4, !dbg !1060
  %1 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %0, i32 1), !dbg !1060
  %2 = extractvalue { i32, i1 } %1, 0, !dbg !1060
  %3 = extractvalue { i32, i1 } %1, 1, !dbg !1060
  %4 = xor i1 %3, true, !dbg !1060
  br i1 %4, label %cont, label %trap, !dbg !1060

trap:                                             ; preds = %entry
  call void @llvm.trap() #3, !dbg !1062
  unreachable, !dbg !1062

cont:                                             ; preds = %entry
  store i32 %2, i32* @userauth_kbdint.attempt, align 4, !dbg !1064
  %5 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 31), align 4, !dbg !1064
  %cmp = icmp sge i32 %0, %5, !dbg !1064
  br i1 %cmp, label %if.then, label %if.end, !dbg !1064

if.then:                                          ; preds = %cont
  store i32 0, i32* %retval, !dbg !1066
  br label %return, !dbg !1066

if.end:                                           ; preds = %cont
  %6 = load i32* @userauth_kbdint.attempt, align 4, !dbg !1067
  %cmp1 = icmp sgt i32 %6, 1, !dbg !1067
  br i1 %cmp1, label %land.lhs.true, label %if.end3, !dbg !1067

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1069
  %info_req_seen = getelementptr inbounds %struct.cauthctxt* %7, i32 0, i32 14, !dbg !1069
  %8 = load i32* %info_req_seen, align 4, !dbg !1069
  %tobool = icmp ne i32 %8, 0, !dbg !1069
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !1069

if.then2:                                         ; preds = %land.lhs.true
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([43 x i8]* @.str58861, i32 0, i32 0)), !dbg !1071
  %9 = load %struct.ssh** @active_state, align 8, !dbg !1073
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %9, i32 60, i32 (i32, i32, i8*)* null), !dbg !1073
  store i32 0, i32* %retval, !dbg !1074
  br label %return, !dbg !1074

if.end3:                                          ; preds = %land.lhs.true, %if.end
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([16 x i8]* @.str59862, i32 0, i32 0)), !dbg !1075
  %10 = load %struct.ssh** @active_state, align 8, !dbg !1076
  call void @ssh_packet_start(%struct.ssh* %10, i8 zeroext 50), !dbg !1076
  %11 = load %struct.ssh** @active_state, align 8, !dbg !1077
  %12 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1077
  %server_user = getelementptr inbounds %struct.cauthctxt* %12, i32 0, i32 0, !dbg !1077
  %13 = load i8** %server_user, align 8, !dbg !1077
  call void @ssh_packet_put_cstring(%struct.ssh* %11, i8* %13), !dbg !1077
  %14 = load %struct.ssh** @active_state, align 8, !dbg !1078
  %15 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1078
  %service = getelementptr inbounds %struct.cauthctxt* %15, i32 0, i32 3, !dbg !1078
  %16 = load i8** %service, align 8, !dbg !1078
  call void @ssh_packet_put_cstring(%struct.ssh* %14, i8* %16), !dbg !1078
  %17 = load %struct.ssh** @active_state, align 8, !dbg !1079
  %18 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1079
  %method = getelementptr inbounds %struct.cauthctxt* %18, i32 0, i32 4, !dbg !1079
  %19 = load %struct.cauthmethod** %method, align 8, !dbg !1079
  %name = getelementptr inbounds %struct.cauthmethod* %19, i32 0, i32 0, !dbg !1079
  %20 = load i8** %name, align 8, !dbg !1079
  call void @ssh_packet_put_cstring(%struct.ssh* %17, i8* %20), !dbg !1079
  %21 = load %struct.ssh** @active_state, align 8, !dbg !1080
  call void @ssh_packet_put_cstring(%struct.ssh* %21, i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0)), !dbg !1080
  %22 = load %struct.ssh** @active_state, align 8, !dbg !1081
  %23 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 17), align 8, !dbg !1081
  %tobool4 = icmp ne i8* %23, null, !dbg !1081
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !1081

cond.true:                                        ; preds = %if.end3
  %24 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 17), align 8, !dbg !1082
  br label %cond.end, !dbg !1082

cond.false:                                       ; preds = %if.end3
  br label %cond.end, !dbg !1084

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %24, %cond.true ], [ getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), %cond.false ], !dbg !1081
  call void @ssh_packet_put_cstring(%struct.ssh* %22, i8* %cond), !dbg !1086
  %25 = load %struct.ssh** @active_state, align 8, !dbg !1089
  call void @ssh_packet_send(%struct.ssh* %25), !dbg !1089
  %26 = load %struct.ssh** @active_state, align 8, !dbg !1090
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %26, i32 60, i32 (i32, i32, i8*)* @input_userauth_info_req), !dbg !1090
  store i32 1, i32* %retval, !dbg !1091
  br label %return, !dbg !1091

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %27 = load i32* %retval, !dbg !1092
  ret i32 %27, !dbg !1092
}

; Function Attrs: nounwind sspreq uwtable
define i32 @userauth_passwd(%struct.cauthctxt* %authctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %prompt = alloca [150 x i8], align 16
  %password = alloca i8*, align 8
  %host = alloca i8*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !1093), !dbg !1094
  call void @llvm.dbg.declare(metadata !{[150 x i8]* %prompt}, metadata !1095), !dbg !1099
  call void @llvm.dbg.declare(metadata !{i8** %password}, metadata !1100), !dbg !1101
  call void @llvm.dbg.declare(metadata !{i8** %host}, metadata !1102), !dbg !1103
  %0 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8, !dbg !1104
  %tobool = icmp ne i8* %0, null, !dbg !1104
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !1104

cond.true:                                        ; preds = %entry
  %1 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8, !dbg !1105
  br label %cond.end, !dbg !1105

cond.false:                                       ; preds = %entry
  %2 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1107
  %host1 = getelementptr inbounds %struct.cauthctxt* %2, i32 0, i32 2, !dbg !1107
  %3 = load i8** %host1, align 8, !dbg !1107
  br label %cond.end, !dbg !1107

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %1, %cond.true ], [ %3, %cond.false ], !dbg !1104
  store i8* %cond, i8** %host, align 8, !dbg !1109
  %4 = load i32* @userauth_passwd.attempt, align 4, !dbg !1112
  %5 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 1), !dbg !1112
  %6 = extractvalue { i32, i1 } %5, 0, !dbg !1112
  %7 = extractvalue { i32, i1 } %5, 1, !dbg !1112
  %8 = xor i1 %7, true, !dbg !1112
  br i1 %8, label %cont, label %trap, !dbg !1112

trap:                                             ; preds = %cond.end
  call void @llvm.trap() #3, !dbg !1114
  unreachable, !dbg !1114

cont:                                             ; preds = %cond.end
  store i32 %6, i32* @userauth_passwd.attempt, align 4, !dbg !1116
  %9 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 31), align 4, !dbg !1116
  %cmp = icmp sge i32 %4, %9, !dbg !1116
  br i1 %cmp, label %if.then, label %if.end, !dbg !1116

if.then:                                          ; preds = %cont
  store i32 0, i32* %retval, !dbg !1118
  br label %return, !dbg !1118

if.end:                                           ; preds = %cont
  %10 = load i32* @userauth_passwd.attempt, align 4, !dbg !1119
  %cmp2 = icmp ne i32 %10, 1, !dbg !1119
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1119

if.then3:                                         ; preds = %if.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([37 x i8]* @.str48851, i32 0, i32 0)), !dbg !1121
  br label %if.end4, !dbg !1121

if.end4:                                          ; preds = %if.then3, %if.end
  %arraydecay = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1122
  %11 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1122
  %server_user = getelementptr inbounds %struct.cauthctxt* %11, i32 0, i32 0, !dbg !1122
  %12 = load i8** %server_user, align 8, !dbg !1122
  %13 = load i8** %host, align 8, !dbg !1122
  %call = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 150, i8* getelementptr inbounds ([26 x i8]* @.str49852, i32 0, i32 0), i8* %12, i8* %13) #9, !dbg !1122
  %arraydecay5 = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1123
  %call6 = call i8* @read_passphrase(i8* %arraydecay5, i32 0), !dbg !1123
  store i8* %call6, i8** %password, align 8, !dbg !1123
  %14 = load %struct.ssh** @active_state, align 8, !dbg !1124
  call void @ssh_packet_start(%struct.ssh* %14, i8 zeroext 50), !dbg !1124
  %15 = load %struct.ssh** @active_state, align 8, !dbg !1125
  %16 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1125
  %server_user7 = getelementptr inbounds %struct.cauthctxt* %16, i32 0, i32 0, !dbg !1125
  %17 = load i8** %server_user7, align 8, !dbg !1125
  call void @ssh_packet_put_cstring(%struct.ssh* %15, i8* %17), !dbg !1125
  %18 = load %struct.ssh** @active_state, align 8, !dbg !1126
  %19 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1126
  %service = getelementptr inbounds %struct.cauthctxt* %19, i32 0, i32 3, !dbg !1126
  %20 = load i8** %service, align 8, !dbg !1126
  call void @ssh_packet_put_cstring(%struct.ssh* %18, i8* %20), !dbg !1126
  %21 = load %struct.ssh** @active_state, align 8, !dbg !1127
  %22 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1127
  %method = getelementptr inbounds %struct.cauthctxt* %22, i32 0, i32 4, !dbg !1127
  %23 = load %struct.cauthmethod** %method, align 8, !dbg !1127
  %name = getelementptr inbounds %struct.cauthmethod* %23, i32 0, i32 0, !dbg !1127
  %24 = load i8** %name, align 8, !dbg !1127
  call void @ssh_packet_put_cstring(%struct.ssh* %21, i8* %24), !dbg !1127
  %25 = load %struct.ssh** @active_state, align 8, !dbg !1128
  call void @ssh_packet_put_char(%struct.ssh* %25, i32 0), !dbg !1128
  %26 = load %struct.ssh** @active_state, align 8, !dbg !1129
  %27 = load i8** %password, align 8, !dbg !1129
  call void @ssh_packet_put_cstring(%struct.ssh* %26, i8* %27), !dbg !1129
  %28 = load i8** %password, align 8, !dbg !1130
  %29 = load i8** %password, align 8, !dbg !1131
  %call8 = call i64 @strlen(i8* %29) #12, !dbg !1131
  call void @explicit_bzero(i8* %28, i64 %call8), !dbg !1130
  %30 = load i8** %password, align 8, !dbg !1132
  call void @free(i8* %30) #9, !dbg !1132
  %31 = load %struct.ssh** @active_state, align 8, !dbg !1133
  %call9 = call i32 @sshpkt_add_padding(%struct.ssh* %31, i8 zeroext 64), !dbg !1133
  %32 = load %struct.ssh** @active_state, align 8, !dbg !1134
  call void @ssh_packet_send(%struct.ssh* %32), !dbg !1134
  %33 = load %struct.ssh** @active_state, align 8, !dbg !1135
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %33, i32 60, i32 (i32, i32, i8*)* @input_userauth_passwd_changereq), !dbg !1135
  store i32 1, i32* %retval, !dbg !1136
  br label %return, !dbg !1136

return:                                           ; preds = %if.end4, %if.then
  %34 = load i32* %retval, !dbg !1137
  ret i32 %34, !dbg !1137
}

; Function Attrs: nounwind sspreq uwtable
define i32 @userauth_none(%struct.cauthctxt* %authctxt) #0 {
entry:
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !1138), !dbg !1139
  %0 = load %struct.ssh** @active_state, align 8, !dbg !1140
  call void @ssh_packet_start(%struct.ssh* %0, i8 zeroext 50), !dbg !1140
  %1 = load %struct.ssh** @active_state, align 8, !dbg !1141
  %2 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1141
  %server_user = getelementptr inbounds %struct.cauthctxt* %2, i32 0, i32 0, !dbg !1141
  %3 = load i8** %server_user, align 8, !dbg !1141
  call void @ssh_packet_put_cstring(%struct.ssh* %1, i8* %3), !dbg !1141
  %4 = load %struct.ssh** @active_state, align 8, !dbg !1142
  %5 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1142
  %service = getelementptr inbounds %struct.cauthctxt* %5, i32 0, i32 3, !dbg !1142
  %6 = load i8** %service, align 8, !dbg !1142
  call void @ssh_packet_put_cstring(%struct.ssh* %4, i8* %6), !dbg !1142
  %7 = load %struct.ssh** @active_state, align 8, !dbg !1143
  %8 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1143
  %method = getelementptr inbounds %struct.cauthctxt* %8, i32 0, i32 4, !dbg !1143
  %9 = load %struct.cauthmethod** %method, align 8, !dbg !1143
  %name = getelementptr inbounds %struct.cauthmethod* %9, i32 0, i32 0, !dbg !1143
  %10 = load i8** %name, align 8, !dbg !1143
  call void @ssh_packet_put_cstring(%struct.ssh* %7, i8* %10), !dbg !1143
  %11 = load %struct.ssh** @active_state, align 8, !dbg !1144
  call void @ssh_packet_send(%struct.ssh* %11), !dbg !1144
  ret i32 1, !dbg !1145
}

; Function Attrs: nounwind sspreq uwtable
define void @ssh_userauth2(i8* %local_user, i8* %server_user, i8* %host, %struct.Sensitive* %sensitive) #0 {
entry:
  %local_user.addr = alloca i8*, align 8
  %server_user.addr = alloca i8*, align 8
  %host.addr = alloca i8*, align 8
  %sensitive.addr = alloca %struct.Sensitive*, align 8
  %ssh = alloca %struct.ssh*, align 8
  %authctxt = alloca %struct.cauthctxt, align 8
  %r = alloca i32, align 4
  store i8* %local_user, i8** %local_user.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %local_user.addr}, metadata !1146), !dbg !1147
  store i8* %server_user, i8** %server_user.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %server_user.addr}, metadata !1148), !dbg !1149
  store i8* %host, i8** %host.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %host.addr}, metadata !1150), !dbg !1151
  store %struct.Sensitive* %sensitive, %struct.Sensitive** %sensitive.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.Sensitive** %sensitive.addr}, metadata !1152), !dbg !1153
  call void @llvm.dbg.declare(metadata !{%struct.ssh** %ssh}, metadata !1154), !dbg !1155
  %0 = load %struct.ssh** @active_state, align 8, !dbg !1156
  store %struct.ssh* %0, %struct.ssh** %ssh, align 8, !dbg !1156
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt* %authctxt}, metadata !1157), !dbg !1158
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !1159), !dbg !1160
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 12), align 4, !dbg !1161
  %tobool = icmp ne i32 %1, 0, !dbg !1161
  br i1 %tobool, label %if.then, label %if.end, !dbg !1161

if.then:                                          ; preds = %entry
  store i32 1, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 16), align 4, !dbg !1163
  br label %if.end, !dbg !1163

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 47), align 8, !dbg !1164
  %cmp = icmp eq i8* %2, null, !dbg !1164
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !1164

if.then1:                                         ; preds = %if.end
  %call = call i8* @authmethods_get(), !dbg !1166
  store i8* %call, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 47), align 8, !dbg !1166
  br label %if.end2, !dbg !1166

if.end2:                                          ; preds = %if.then1, %if.end
  %3 = bitcast %struct.cauthctxt* %authctxt to i8*, !dbg !1167
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 136, i32 8, i1 false), !dbg !1167
  call void @pubkey_prepare(%struct.cauthctxt* %authctxt), !dbg !1168
  %4 = load i8** %server_user.addr, align 8, !dbg !1169
  %server_user3 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 0, !dbg !1169
  store i8* %4, i8** %server_user3, align 8, !dbg !1169
  %5 = load i8** %local_user.addr, align 8, !dbg !1170
  %local_user4 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 1, !dbg !1170
  store i8* %5, i8** %local_user4, align 8, !dbg !1170
  %6 = load i8** %host.addr, align 8, !dbg !1171
  %host5 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 2, !dbg !1171
  store i8* %6, i8** %host5, align 8, !dbg !1171
  %service = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 3, !dbg !1172
  store i8* getelementptr inbounds ([15 x i8]* @.str18821, i32 0, i32 0), i8** %service, align 8, !dbg !1172
  %success = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 5, !dbg !1173
  store i32 0, i32* %success, align 4, !dbg !1173
  %call6 = call %struct.cauthmethod* @authmethod_lookup(i8* getelementptr inbounds ([5 x i8]* @.str17820, i32 0, i32 0)), !dbg !1174
  %method = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 4, !dbg !1174
  store %struct.cauthmethod* %call6, %struct.cauthmethod** %method, align 8, !dbg !1174
  %authlist = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 6, !dbg !1175
  store i8* null, i8** %authlist, align 8, !dbg !1175
  %methoddata = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 15, !dbg !1176
  store i8* null, i8** %methoddata, align 8, !dbg !1176
  %7 = load %struct.Sensitive** %sensitive.addr, align 8, !dbg !1177
  %sensitive7 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 10, !dbg !1177
  store %struct.Sensitive* %7, %struct.Sensitive** %sensitive7, align 8, !dbg !1177
  %ktypes = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 12, !dbg !1178
  store i8* null, i8** %ktypes, align 8, !dbg !1178
  %oktypes = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 11, !dbg !1178
  store i8* null, i8** %oktypes, align 8, !dbg !1178
  %active_ktype = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 13, !dbg !1178
  store i8* null, i8** %active_ktype, align 8, !dbg !1178
  %info_req_seen = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 14, !dbg !1179
  store i32 0, i32* %info_req_seen, align 4, !dbg !1179
  %8 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1180
  %9 = extractvalue { i32, i1 } %8, 0, !dbg !1180
  %10 = extractvalue { i32, i1 } %8, 1, !dbg !1180
  %11 = xor i1 %10, true, !dbg !1180
  br i1 %11, label %cont, label %trap, !dbg !1180

trap:                                             ; preds = %if.end2
  call void @llvm.trap() #3, !dbg !1181
  unreachable, !dbg !1181

cont:                                             ; preds = %if.end2
  %agent_fd = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 9, !dbg !1183
  store i32 %9, i32* %agent_fd, align 4, !dbg !1183
  %method8 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 4, !dbg !1185
  %12 = load %struct.cauthmethod** %method8, align 8, !dbg !1185
  %cmp9 = icmp eq %struct.cauthmethod* %12, null, !dbg !1185
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !1185

if.then10:                                        ; preds = %cont
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([65 x i8]* @.str19822, i32 0, i32 0)) #11, !dbg !1187
  unreachable, !dbg !1187

if.end11:                                         ; preds = %cont
  %13 = load %struct.ssh** %ssh, align 8, !dbg !1188
  %call12 = call i32 bitcast (i32 (%struct.ssh.68*, i8)* @sshpkt_start to i32 (%struct.ssh*, i8)*)(%struct.ssh* %13, i8 zeroext 5), !dbg !1188
  store i32 %call12, i32* %r, align 4, !dbg !1188
  %cmp13 = icmp ne i32 %call12, 0, !dbg !1188
  br i1 %cmp13, label %if.then19, label %lor.lhs.false, !dbg !1188

lor.lhs.false:                                    ; preds = %if.end11
  %14 = load %struct.ssh** %ssh, align 8, !dbg !1190
  %call14 = call i32 bitcast (i32 (%struct.ssh.68*, i8*)* @sshpkt_put_cstring to i32 (%struct.ssh*, i8*)*)(%struct.ssh* %14, i8* getelementptr inbounds ([13 x i8]* @.str20823, i32 0, i32 0)), !dbg !1190
  store i32 %call14, i32* %r, align 4, !dbg !1190
  %cmp15 = icmp ne i32 %call14, 0, !dbg !1190
  br i1 %cmp15, label %if.then19, label %lor.lhs.false16, !dbg !1190

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %15 = load %struct.ssh** %ssh, align 8, !dbg !1191
  %call17 = call i32 bitcast (i32 (%struct.ssh.68*)* @sshpkt_send to i32 (%struct.ssh*)*)(%struct.ssh* %15), !dbg !1191
  store i32 %call17, i32* %r, align 4, !dbg !1191
  %cmp18 = icmp ne i32 %call17, 0, !dbg !1191
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !1191

if.then19:                                        ; preds = %lor.lhs.false16, %lor.lhs.false, %if.end11
  %16 = load i32* %r, align 4, !dbg !1192
  %call20 = call i8* @ssh_err(i32 %16), !dbg !1192
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([7 x i8]* @.str21824, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @__func__.ssh_userauth2, i32 0, i32 0), i8* %call20) #11, !dbg !1193
  unreachable, !dbg !1193

if.end21:                                         ; preds = %lor.lhs.false16
  %17 = load %struct.ssh** %ssh, align 8, !dbg !1194
  call void bitcast (void (%struct.ssh.68*, i32 (i32, i32, i8*)*)* @ssh_dispatch_init to void (%struct.ssh*, i32 (i32, i32, i8*)*)*)(%struct.ssh* %17, i32 (i32, i32, i8*)* @input_userauth_error), !dbg !1194
  %18 = load %struct.ssh** %ssh, align 8, !dbg !1195
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %18, i32 7, i32 (i32, i32, i8*)* @input_userauth_ext_info), !dbg !1195
  %19 = load %struct.ssh** %ssh, align 8, !dbg !1196
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %19, i32 6, i32 (i32, i32, i8*)* @input_userauth_service_accept), !dbg !1196
  %20 = load %struct.ssh** %ssh, align 8, !dbg !1197
  %success22 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 5, !dbg !1197
  %21 = bitcast %struct.cauthctxt* %authctxt to i8*, !dbg !1197
  %call23 = call i32 @ssh_dispatch_run(%struct.ssh* %20, i32 0, i32* %success22, i8* %21), !dbg !1197
  call void @pubkey_cleanup(%struct.cauthctxt* %authctxt), !dbg !1198
  %22 = load %struct.ssh** %ssh, align 8, !dbg !1199
  call void @ssh_dispatch_range(%struct.ssh* %22, i32 50, i32 79, i32 (i32, i32, i8*)* null), !dbg !1199
  %success24 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 5, !dbg !1200
  %23 = load i32* %success24, align 4, !dbg !1200
  %tobool25 = icmp ne i32 %23, 0, !dbg !1200
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !1200

if.then26:                                        ; preds = %if.end21
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([23 x i8]* @.str22825, i32 0, i32 0)) #11, !dbg !1202
  unreachable, !dbg !1202

if.end27:                                         ; preds = %if.end21
  %method28 = getelementptr inbounds %struct.cauthctxt* %authctxt, i32 0, i32 4, !dbg !1203
  %24 = load %struct.cauthmethod** %method28, align 8, !dbg !1203
  %name = getelementptr inbounds %struct.cauthmethod* %24, i32 0, i32 0, !dbg !1203
  %25 = load i8** %name, align 8, !dbg !1203
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([31 x i8]* @.str23826, i32 0, i32 0), i8* %25), !dbg !1203
  ret void, !dbg !1204
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_error(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1205), !dbg !1206
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1207), !dbg !1208
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1209), !dbg !1210
  %0 = load i32* %type.addr, align 4, !dbg !1211
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([65 x i8]* @.str30833, i32 0, i32 0), i32 %0) #11, !dbg !1211
  unreachable, !dbg !1211

return:                                           ; No predecessors!
  %1 = load i32* %retval, !dbg !1212
  ret i32 %1, !dbg !1212
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_ext_info(i32 %type, i32 %seqnr, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seqnr.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1213), !dbg !1214
  store i32 %seqnr, i32* %seqnr.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seqnr.addr}, metadata !1215), !dbg !1216
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1217), !dbg !1218
  %0 = load i32* %type.addr, align 4, !dbg !1219
  %1 = load i32* %seqnr.addr, align 4, !dbg !1219
  %2 = load %struct.ssh** @active_state, align 8, !dbg !1219
  %3 = bitcast %struct.ssh* %2 to i8*, !dbg !1219
  %call = call i32 @kex_input_ext_info(i32 %0, i32 %1, i8* %3), !dbg !1219
  ret i32 %call, !dbg !1219
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_service_accept(i32 %type, i32 %seqnr, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seqnr.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  %ssh = alloca %struct.ssh*, align 8
  %r = alloca i32, align 4
  %reply = alloca i8*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1220), !dbg !1221
  store i32 %seqnr, i32* %seqnr.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seqnr.addr}, metadata !1222), !dbg !1223
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1224), !dbg !1225
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1226), !dbg !1227
  %0 = load i8** %ctxt.addr, align 8, !dbg !1228
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1228
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1228
  call void @llvm.dbg.declare(metadata !{%struct.ssh** %ssh}, metadata !1229), !dbg !1230
  %2 = load %struct.ssh** @active_state, align 8, !dbg !1231
  store %struct.ssh* %2, %struct.ssh** %ssh, align 8, !dbg !1231
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !1232), !dbg !1233
  %3 = load %struct.ssh** %ssh, align 8, !dbg !1234
  %call = call i32 @ssh_packet_remaining(%struct.ssh* %3), !dbg !1234
  %cmp = icmp sgt i32 %call, 0, !dbg !1234
  br i1 %cmp, label %if.then, label %if.else, !dbg !1234

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata !{i8** %reply}, metadata !1236), !dbg !1238
  %4 = load %struct.ssh** %ssh, align 8, !dbg !1239
  %call1 = call i32 @sshpkt_get_cstring(%struct.ssh* %4, i8** %reply, i64* null), !dbg !1239
  store i32 %call1, i32* %r, align 4, !dbg !1239
  %cmp2 = icmp ne i32 %call1, 0, !dbg !1239
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !1239

if.then3:                                         ; preds = %if.then
  br label %out, !dbg !1241

if.end:                                           ; preds = %if.then
  %5 = load i8** %reply, align 8, !dbg !1242
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([19 x i8]* @.str24827, i32 0, i32 0), i8* %5), !dbg !1242
  %6 = load i8** %reply, align 8, !dbg !1243
  call void @free(i8* %6) #9, !dbg !1243
  br label %if.end4, !dbg !1244

if.else:                                          ; preds = %entry
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([41 x i8]* @.str25828, i32 0, i32 0)), !dbg !1245
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.end
  %7 = load %struct.ssh** %ssh, align 8, !dbg !1247
  %call5 = call i32 @sshpkt_get_end(%struct.ssh* %7), !dbg !1247
  store i32 %call5, i32* %r, align 4, !dbg !1247
  %cmp6 = icmp ne i32 %call5, 0, !dbg !1247
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1247

if.then7:                                         ; preds = %if.end4
  br label %out, !dbg !1249

if.end8:                                          ; preds = %if.end4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([33 x i8]* @.str26829, i32 0, i32 0)), !dbg !1250
  %8 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1251
  %call9 = call i32 @userauth_none(%struct.cauthctxt* %8), !dbg !1251
  %9 = load %struct.ssh** %ssh, align 8, !dbg !1252
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %9, i32 7, i32 (i32, i32, i8*)* @input_userauth_error), !dbg !1252
  %10 = load %struct.ssh** %ssh, align 8, !dbg !1253
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %10, i32 52, i32 (i32, i32, i8*)* @input_userauth_success), !dbg !1253
  %11 = load %struct.ssh** %ssh, align 8, !dbg !1254
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %11, i32 51, i32 (i32, i32, i8*)* @input_userauth_failure), !dbg !1254
  %12 = load %struct.ssh** %ssh, align 8, !dbg !1255
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %12, i32 53, i32 (i32, i32, i8*)* @input_userauth_banner), !dbg !1255
  store i32 0, i32* %r, align 4, !dbg !1256
  br label %out, !dbg !1256

out:                                              ; preds = %if.end8, %if.then7, %if.then3
  %13 = load i32* %r, align 4, !dbg !1257
  ret i32 %13, !dbg !1257
}

declare i32 @ssh_dispatch_run(%struct.ssh*, i32, i32*, i8*) #1

declare void @ssh_dispatch_range(%struct.ssh*, i32, i32, i32 (i32, i32, i8*)*) #1

declare i32 @sshpkt_get_cstring(%struct.ssh*, i8**, i64*) #1

declare i32 @sshpkt_get_end(%struct.ssh*) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_success(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1258), !dbg !1259
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1260), !dbg !1261
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1262), !dbg !1263
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1264), !dbg !1265
  %0 = load i8** %ctxt.addr, align 8, !dbg !1266
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1266
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1266
  %2 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1267
  %cmp = icmp eq %struct.cauthctxt* %2, null, !dbg !1267
  br i1 %cmp, label %if.then, label %if.end, !dbg !1267

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([50 x i8]* @.str32835, i32 0, i32 0)) #11, !dbg !1269
  unreachable, !dbg !1269

if.end:                                           ; preds = %entry
  %3 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1270
  %authlist = getelementptr inbounds %struct.cauthctxt* %3, i32 0, i32 6, !dbg !1270
  %4 = load i8** %authlist, align 8, !dbg !1270
  call void @free(i8* %4) #9, !dbg !1270
  %5 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1271
  %authlist1 = getelementptr inbounds %struct.cauthctxt* %5, i32 0, i32 6, !dbg !1271
  store i8* null, i8** %authlist1, align 8, !dbg !1271
  %6 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1272
  %method = getelementptr inbounds %struct.cauthctxt* %6, i32 0, i32 4, !dbg !1272
  %7 = load %struct.cauthmethod** %method, align 8, !dbg !1272
  %cmp2 = icmp ne %struct.cauthmethod* %7, null, !dbg !1272
  br i1 %cmp2, label %land.lhs.true, label %if.end8, !dbg !1272

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1274
  %method3 = getelementptr inbounds %struct.cauthctxt* %8, i32 0, i32 4, !dbg !1274
  %9 = load %struct.cauthmethod** %method3, align 8, !dbg !1274
  %cleanup = getelementptr inbounds %struct.cauthmethod* %9, i32 0, i32 2, !dbg !1274
  %10 = load void (%struct.cauthctxt*)** %cleanup, align 8, !dbg !1274
  %cmp4 = icmp ne void (%struct.cauthctxt*)* %10, null, !dbg !1274
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !1274

if.then5:                                         ; preds = %land.lhs.true
  %11 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1276
  %method6 = getelementptr inbounds %struct.cauthctxt* %11, i32 0, i32 4, !dbg !1276
  %12 = load %struct.cauthmethod** %method6, align 8, !dbg !1276
  %cleanup7 = getelementptr inbounds %struct.cauthmethod* %12, i32 0, i32 2, !dbg !1276
  %13 = load void (%struct.cauthctxt*)** %cleanup7, align 8, !dbg !1276
  %14 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1276
  call void %13(%struct.cauthctxt* %14), !dbg !1276
  br label %if.end8, !dbg !1276

if.end8:                                          ; preds = %if.then5, %land.lhs.true, %if.end
  %15 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1277
  %methoddata = getelementptr inbounds %struct.cauthctxt* %15, i32 0, i32 15, !dbg !1277
  %16 = load i8** %methoddata, align 8, !dbg !1277
  call void @free(i8* %16) #9, !dbg !1277
  %17 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1278
  %methoddata9 = getelementptr inbounds %struct.cauthctxt* %17, i32 0, i32 15, !dbg !1278
  store i8* null, i8** %methoddata9, align 8, !dbg !1278
  %18 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1279
  %success = getelementptr inbounds %struct.cauthctxt* %18, i32 0, i32 5, !dbg !1279
  store i32 1, i32* %success, align 4, !dbg !1279
  ret i32 0, !dbg !1280
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_failure(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  %authlist = alloca i8*, align 8
  %partial = alloca i32, align 4
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1281), !dbg !1282
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1283), !dbg !1284
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1285), !dbg !1286
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1287), !dbg !1288
  %0 = load i8** %ctxt.addr, align 8, !dbg !1289
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1289
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1289
  call void @llvm.dbg.declare(metadata !{i8** %authlist}, metadata !1290), !dbg !1291
  store i8* null, i8** %authlist, align 8, !dbg !1292
  call void @llvm.dbg.declare(metadata !{i32* %partial}, metadata !1293), !dbg !1294
  %2 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1295
  %cmp = icmp eq %struct.cauthctxt* %2, null, !dbg !1295
  br i1 %cmp, label %if.then, label %if.end, !dbg !1295

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([50 x i8]* @.str35838, i32 0, i32 0)) #11, !dbg !1297
  unreachable, !dbg !1297

if.end:                                           ; preds = %entry
  %3 = load %struct.ssh** @active_state, align 8, !dbg !1298
  %call = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %3, i32* null), !dbg !1298
  store i8* %call, i8** %authlist, align 8, !dbg !1298
  %call1 = call i32 @packet_get_char(), !dbg !1299
  store i32 %call1, i32* %partial, align 4, !dbg !1299
  br label %do.body, !dbg !1300

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata !{i32* %_len}, metadata !1301), !dbg !1303
  %4 = load %struct.ssh** @active_state, align 8, !dbg !1304
  %call2 = call i32 @ssh_packet_remaining(%struct.ssh* %4), !dbg !1304
  store i32 %call2, i32* %_len, align 4, !dbg !1304
  %5 = load i32* %_len, align 4, !dbg !1306
  %cmp3 = icmp sgt i32 %5, 0, !dbg !1306
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !1306

if.then4:                                         ; preds = %do.body
  %6 = load i32* %_len, align 4, !dbg !1308
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str36839, i32 0, i32 0), i32 %6, i8* getelementptr inbounds ([14 x i8]* @.str37840, i32 0, i32 0), i32 559), !dbg !1308
  %7 = load %struct.ssh** @active_state, align 8, !dbg !1308
  call void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect(%struct.ssh* %7, i8* getelementptr inbounds ([24 x i8]* @.str38841, i32 0, i32 0)) #11, !dbg !1308
  unreachable, !dbg !1308

if.end5:                                          ; preds = %do.body
  br label %do.end, !dbg !1311

do.end:                                           ; preds = %if.end5
  %8 = load i32* %partial, align 4, !dbg !1313
  %cmp6 = icmp ne i32 %8, 0, !dbg !1313
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1313

if.then7:                                         ; preds = %do.end
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([36 x i8]* @.str39842, i32 0, i32 0)), !dbg !1315
  %9 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1317
  call void @pubkey_reset(%struct.cauthctxt* %9), !dbg !1317
  br label %if.end8, !dbg !1318

if.end8:                                          ; preds = %if.then7, %do.end
  %10 = load i8** %authlist, align 8, !dbg !1319
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([38 x i8]* @.str40843, i32 0, i32 0), i8* %10), !dbg !1319
  %11 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1320
  %12 = load i8** %authlist, align 8, !dbg !1320
  call void @userauth(%struct.cauthctxt* %11, i8* %12), !dbg !1320
  ret i32 0, !dbg !1321
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_banner(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %msg = alloca i8*, align 8
  %lang = alloca i8*, align 8
  %len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1322), !dbg !1323
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1324), !dbg !1325
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1326), !dbg !1327
  call void @llvm.dbg.declare(metadata !{i8** %msg}, metadata !1328), !dbg !1329
  call void @llvm.dbg.declare(metadata !{i8** %lang}, metadata !1330), !dbg !1331
  call void @llvm.dbg.declare(metadata !{i32* %len}, metadata !1332), !dbg !1333
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([3 x i8]* @.str31834, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.input_userauth_banner, i32 0, i32 0)), !dbg !1334
  %0 = load %struct.ssh** @active_state, align 8, !dbg !1335
  %call = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %0, i32* %len), !dbg !1335
  store i8* %call, i8** %msg, align 8, !dbg !1335
  %1 = load %struct.ssh** @active_state, align 8, !dbg !1336
  %call1 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %1, i32* null), !dbg !1336
  store i8* %call1, i8** %lang, align 8, !dbg !1336
  %2 = load i32* %len, align 4, !dbg !1337
  %cmp = icmp ugt i32 %2, 0, !dbg !1337
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1337

land.lhs.true:                                    ; preds = %entry
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4, !dbg !1339
  %cmp2 = icmp sge i32 %3, 3, !dbg !1339
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1339

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct._IO_FILE** @stderr, align 8, !dbg !1341
  %5 = load i8** %msg, align 8, !dbg !1341
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...)* @fmprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([3 x i8]* @.str31834, i32 0, i32 0), i8* %5), !dbg !1341
  br label %if.end, !dbg !1341

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i8** %msg, align 8, !dbg !1342
  call void @free(i8* %6) #9, !dbg !1342
  %7 = load i8** %lang, align 8, !dbg !1343
  call void @free(i8* %7) #9, !dbg !1343
  ret i32 0, !dbg !1344
}

declare i32 @kex_input_ext_info(i32, i32, i8*) #1

; Function Attrs: nounwind sspreq uwtable
define void @userauth(%struct.cauthctxt* %authctxt, i8* %authlist) #0 {
entry:
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %authlist.addr = alloca i8*, align 8
  %method12 = alloca %struct.cauthmethod*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !1345), !dbg !1346
  store i8* %authlist, i8** %authlist.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %authlist.addr}, metadata !1347), !dbg !1348
  %0 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1349
  %method = getelementptr inbounds %struct.cauthctxt* %0, i32 0, i32 4, !dbg !1349
  %1 = load %struct.cauthmethod** %method, align 8, !dbg !1349
  %cmp = icmp ne %struct.cauthmethod* %1, null, !dbg !1349
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !1349

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1351
  %method1 = getelementptr inbounds %struct.cauthctxt* %2, i32 0, i32 4, !dbg !1351
  %3 = load %struct.cauthmethod** %method1, align 8, !dbg !1351
  %cleanup = getelementptr inbounds %struct.cauthmethod* %3, i32 0, i32 2, !dbg !1351
  %4 = load void (%struct.cauthctxt*)** %cleanup, align 8, !dbg !1351
  %cmp2 = icmp ne void (%struct.cauthctxt*)* %4, null, !dbg !1351
  br i1 %cmp2, label %if.then, label %if.end, !dbg !1351

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1353
  %method3 = getelementptr inbounds %struct.cauthctxt* %5, i32 0, i32 4, !dbg !1353
  %6 = load %struct.cauthmethod** %method3, align 8, !dbg !1353
  %cleanup4 = getelementptr inbounds %struct.cauthmethod* %6, i32 0, i32 2, !dbg !1353
  %7 = load void (%struct.cauthctxt*)** %cleanup4, align 8, !dbg !1353
  %8 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1353
  call void %7(%struct.cauthctxt* %8), !dbg !1353
  br label %if.end, !dbg !1353

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1354
  %methoddata = getelementptr inbounds %struct.cauthctxt* %9, i32 0, i32 15, !dbg !1354
  %10 = load i8** %methoddata, align 8, !dbg !1354
  call void @free(i8* %10) #9, !dbg !1354
  %11 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1355
  %methoddata5 = getelementptr inbounds %struct.cauthctxt* %11, i32 0, i32 15, !dbg !1355
  store i8* null, i8** %methoddata5, align 8, !dbg !1355
  %12 = load i8** %authlist.addr, align 8, !dbg !1356
  %cmp6 = icmp eq i8* %12, null, !dbg !1356
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !1356

if.then7:                                         ; preds = %if.end
  %13 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1358
  %authlist8 = getelementptr inbounds %struct.cauthctxt* %13, i32 0, i32 6, !dbg !1358
  %14 = load i8** %authlist8, align 8, !dbg !1358
  store i8* %14, i8** %authlist.addr, align 8, !dbg !1358
  br label %if.end11, !dbg !1360

if.else:                                          ; preds = %if.end
  %15 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1361
  %authlist9 = getelementptr inbounds %struct.cauthctxt* %15, i32 0, i32 6, !dbg !1361
  %16 = load i8** %authlist9, align 8, !dbg !1361
  call void @free(i8* %16) #9, !dbg !1361
  %17 = load i8** %authlist.addr, align 8, !dbg !1363
  %18 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1363
  %authlist10 = getelementptr inbounds %struct.cauthctxt* %18, i32 0, i32 6, !dbg !1363
  store i8* %17, i8** %authlist10, align 8, !dbg !1363
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7
  br label %for.cond, !dbg !1364

for.cond:                                         ; preds = %if.end21, %if.end11
  call void @llvm.dbg.declare(metadata !{%struct.cauthmethod** %method12}, metadata !1366), !dbg !1368
  %19 = load i8** %authlist.addr, align 8, !dbg !1369
  %call = call %struct.cauthmethod* @authmethod_get(i8* %19), !dbg !1369
  store %struct.cauthmethod* %call, %struct.cauthmethod** %method12, align 8, !dbg !1369
  %20 = load %struct.cauthmethod** %method12, align 8, !dbg !1370
  %cmp13 = icmp eq %struct.cauthmethod* %20, null, !dbg !1370
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !1370

if.then14:                                        ; preds = %for.cond
  %21 = load i8** %authlist.addr, align 8, !dbg !1372
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([24 x i8]* @.str27830, i32 0, i32 0), i8* %21) #11, !dbg !1372
  unreachable, !dbg !1372

if.end15:                                         ; preds = %for.cond
  %22 = load %struct.cauthmethod** %method12, align 8, !dbg !1373
  %23 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1373
  %method16 = getelementptr inbounds %struct.cauthctxt* %23, i32 0, i32 4, !dbg !1373
  store %struct.cauthmethod* %22, %struct.cauthmethod** %method16, align 8, !dbg !1373
  %24 = load %struct.ssh** @active_state, align 8, !dbg !1374
  call void @ssh_dispatch_range(%struct.ssh* %24, i32 60, i32 79, i32 (i32, i32, i8*)* null), !dbg !1374
  %25 = load %struct.cauthmethod** %method12, align 8, !dbg !1375
  %userauth = getelementptr inbounds %struct.cauthmethod* %25, i32 0, i32 1, !dbg !1375
  %26 = load i32 (%struct.cauthctxt*)** %userauth, align 8, !dbg !1375
  %27 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !1375
  %call17 = call i32 %26(%struct.cauthctxt* %27), !dbg !1375
  %cmp18 = icmp ne i32 %call17, 0, !dbg !1375
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !1375

if.then19:                                        ; preds = %if.end15
  %28 = load %struct.cauthmethod** %method12, align 8, !dbg !1377
  %name = getelementptr inbounds %struct.cauthmethod* %28, i32 0, i32 0, !dbg !1377
  %29 = load i8** %name, align 8, !dbg !1377
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([36 x i8]* @.str28831, i32 0, i32 0), i8* %29), !dbg !1377
  br label %for.end, !dbg !1379

if.else20:                                        ; preds = %if.end15
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([41 x i8]* @.str29832, i32 0, i32 0)), !dbg !1380
  %30 = load %struct.cauthmethod** %method12, align 8, !dbg !1382
  %enabled = getelementptr inbounds %struct.cauthmethod* %30, i32 0, i32 3, !dbg !1382
  store i32* null, i32** %enabled, align 8, !dbg !1382
  br label %if.end21

if.end21:                                         ; preds = %if.else20
  br label %for.cond, !dbg !1383

for.end:                                          ; preds = %if.then19
  ret void, !dbg !1384
}

declare i32 @fmprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_success_unexpected(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1385), !dbg !1386
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1387), !dbg !1388
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1389), !dbg !1390
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1391), !dbg !1392
  %0 = load i8** %ctxt.addr, align 8, !dbg !1393
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1393
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1393
  %2 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1394
  %cmp = icmp eq %struct.cauthctxt* %2, null, !dbg !1394
  br i1 %cmp, label %if.then, label %if.end, !dbg !1394

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str33836, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.input_userauth_success_unexpected, i32 0, i32 0)) #11, !dbg !1396
  unreachable, !dbg !1396

if.end:                                           ; preds = %entry
  %3 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1397
  %method = getelementptr inbounds %struct.cauthctxt* %3, i32 0, i32 4, !dbg !1397
  %4 = load %struct.cauthmethod** %method, align 8, !dbg !1397
  %name = getelementptr inbounds %struct.cauthmethod* %4, i32 0, i32 0, !dbg !1397
  %5 = load i8** %name, align 8, !dbg !1397
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([45 x i8]* @.str34837, i32 0, i32 0), i8* %5) #11, !dbg !1397
  unreachable, !dbg !1397

return:                                           ; No predecessors!
  %6 = load i32* %retval, !dbg !1398
  ret i32 %6, !dbg !1398
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_pk_ok(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  %key = alloca %struct.sshkey*, align 8
  %id = alloca %struct.identity*, align 8
  %b = alloca %struct.sshbuf, align 8
  %pktype = alloca i32, align 4
  %sent = alloca i32, align 4
  %alen = alloca i32, align 4
  %blen = alloca i32, align 4
  %pkalg = alloca i8*, align 8
  %fp = alloca i8*, align 8
  %pkblob = alloca i8*, align 8
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1399), !dbg !1400
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1401), !dbg !1402
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1403), !dbg !1404
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1405), !dbg !1406
  %0 = load i8** %ctxt.addr, align 8, !dbg !1407
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1407
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1407
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %key}, metadata !1408), !dbg !1409
  store %struct.sshkey* null, %struct.sshkey** %key, align 8, !dbg !1410
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id}, metadata !1411), !dbg !1412
  store %struct.identity* null, %struct.identity** %id, align 8, !dbg !1413
  call void @llvm.dbg.declare(metadata !{%struct.sshbuf* %b}, metadata !1414), !dbg !1417
  call void @llvm.dbg.declare(metadata !{i32* %pktype}, metadata !1418), !dbg !1419
  call void @llvm.dbg.declare(metadata !{i32* %sent}, metadata !1420), !dbg !1421
  store i32 0, i32* %sent, align 4, !dbg !1422
  call void @llvm.dbg.declare(metadata !{i32* %alen}, metadata !1423), !dbg !1424
  call void @llvm.dbg.declare(metadata !{i32* %blen}, metadata !1425), !dbg !1426
  call void @llvm.dbg.declare(metadata !{i8** %pkalg}, metadata !1427), !dbg !1428
  call void @llvm.dbg.declare(metadata !{i8** %fp}, metadata !1429), !dbg !1430
  call void @llvm.dbg.declare(metadata !{i8** %pkblob}, metadata !1431), !dbg !1432
  %2 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1433
  %cmp = icmp eq %struct.cauthctxt* %2, null, !dbg !1433
  br i1 %cmp, label %if.then, label %if.end, !dbg !1433

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([48 x i8]* @.str41844, i32 0, i32 0)) #11, !dbg !1435
  unreachable, !dbg !1435

if.end:                                           ; preds = %entry
  %3 = load i32* @datafellows, align 4, !dbg !1436
  %and = and i32 %3, 512, !dbg !1436
  %tobool = icmp ne i32 %and, 0, !dbg !1436
  br i1 %tobool, label %if.then1, label %if.else, !dbg !1436

if.then1:                                         ; preds = %if.end
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([35 x i8]* @.str42845, i32 0, i32 0)), !dbg !1438
  %4 = load %struct.ssh** @active_state, align 8, !dbg !1440
  %call = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %4, i32* %blen), !dbg !1440
  store i8* %call, i8** %pkblob, align 8, !dbg !1440
  call void @sshbuf_init(%struct.sshbuf* %b), !dbg !1441
  %5 = load i8** %pkblob, align 8, !dbg !1442
  %6 = load i32* %blen, align 4, !dbg !1442
  call void @buffer_append(%struct.sshbuf* %b, i8* %5, i32 %6), !dbg !1442
  %call2 = call i8* @buffer_get_string(%struct.sshbuf* %b, i32* %alen), !dbg !1443
  store i8* %call2, i8** %pkalg, align 8, !dbg !1443
  call void @sshbuf_free(%struct.sshbuf* %b), !dbg !1444
  br label %if.end5, !dbg !1445

if.else:                                          ; preds = %if.end
  %7 = load %struct.ssh** @active_state, align 8, !dbg !1446
  %call3 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %7, i32* %alen), !dbg !1446
  store i8* %call3, i8** %pkalg, align 8, !dbg !1446
  %8 = load %struct.ssh** @active_state, align 8, !dbg !1448
  %call4 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %8, i32* %blen), !dbg !1448
  store i8* %call4, i8** %pkblob, align 8, !dbg !1448
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then1
  br label %do.body, !dbg !1449

do.body:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata !{i32* %_len}, metadata !1450), !dbg !1452
  %9 = load %struct.ssh** @active_state, align 8, !dbg !1453
  %call6 = call i32 @ssh_packet_remaining(%struct.ssh* %9), !dbg !1453
  store i32 %call6, i32* %_len, align 4, !dbg !1453
  %10 = load i32* %_len, align 4, !dbg !1455
  %cmp7 = icmp sgt i32 %10, 0, !dbg !1455
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !1455

if.then8:                                         ; preds = %do.body
  %11 = load i32* %_len, align 4, !dbg !1457
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str36839, i32 0, i32 0), i32 %11, i8* getelementptr inbounds ([14 x i8]* @.str37840, i32 0, i32 0), i32 599), !dbg !1457
  %12 = load %struct.ssh** @active_state, align 8, !dbg !1457
  call void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect(%struct.ssh* %12, i8* getelementptr inbounds ([24 x i8]* @.str38841, i32 0, i32 0)) #11, !dbg !1457
  unreachable, !dbg !1457

if.end9:                                          ; preds = %do.body
  br label %do.end, !dbg !1460

do.end:                                           ; preds = %if.end9
  %13 = load i8** %pkalg, align 8, !dbg !1462
  %14 = load i32* %blen, align 4, !dbg !1462
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([37 x i8]* @.str43846, i32 0, i32 0), i8* %13, i32 %14), !dbg !1462
  %15 = load i8** %pkalg, align 8, !dbg !1463
  %call10 = call i32 @sshkey_type_from_name(i8* %15), !dbg !1463
  store i32 %call10, i32* %pktype, align 4, !dbg !1463
  %cmp11 = icmp eq i32 %call10, 9, !dbg !1463
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !1463

if.then12:                                        ; preds = %do.end
  %16 = load i8** %pkalg, align 8, !dbg !1465
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([17 x i8]* @.str44847, i32 0, i32 0), i8* %16), !dbg !1465
  br label %done, !dbg !1467

if.end13:                                         ; preds = %do.end
  %17 = load i8** %pkblob, align 8, !dbg !1468
  %18 = load i32* %blen, align 4, !dbg !1468
  %call14 = call %struct.sshkey* @key_from_blob(i8* %17, i32 %18), !dbg !1468
  store %struct.sshkey* %call14, %struct.sshkey** %key, align 8, !dbg !1468
  %cmp15 = icmp eq %struct.sshkey* %call14, null, !dbg !1468
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !1468

if.then16:                                        ; preds = %if.end13
  %19 = load i8** %pkalg, align 8, !dbg !1470
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([27 x i8]* @.str45848, i32 0, i32 0), i8* %19), !dbg !1470
  br label %done, !dbg !1472

if.end17:                                         ; preds = %if.end13
  %20 = load %struct.sshkey** %key, align 8, !dbg !1473
  %type18 = getelementptr inbounds %struct.sshkey* %20, i32 0, i32 0, !dbg !1473
  %21 = load i32* %type18, align 4, !dbg !1473
  %22 = load i32* %pktype, align 4, !dbg !1473
  %cmp19 = icmp ne i32 %21, %22, !dbg !1473
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !1473

if.then20:                                        ; preds = %if.end17
  %23 = load %struct.sshkey** %key, align 8, !dbg !1475
  %type21 = getelementptr inbounds %struct.sshkey* %23, i32 0, i32 0, !dbg !1475
  %24 = load i32* %type21, align 4, !dbg !1475
  %25 = load i32* %pktype, align 4, !dbg !1475
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([79 x i8]* @.str46849, i32 0, i32 0), i32 %24, i32 %25), !dbg !1475
  br label %done, !dbg !1477

if.end22:                                         ; preds = %if.end17
  %26 = load %struct.sshkey** %key, align 8, !dbg !1478
  %27 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4, !dbg !1478
  %call23 = call i8* @sshkey_fingerprint(%struct.sshkey* %26, i32 %27, i32 0), !dbg !1478
  store i8* %call23, i8** %fp, align 8, !dbg !1478
  %cmp24 = icmp eq i8* %call23, null, !dbg !1478
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !1478

if.then25:                                        ; preds = %if.end22
  br label %done, !dbg !1480

if.end26:                                         ; preds = %if.end22
  %28 = load i8** %fp, align 8, !dbg !1481
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([28 x i8]* @.str47850, i32 0, i32 0), i8* %28), !dbg !1481
  %29 = load i8** %fp, align 8, !dbg !1482
  call void @free(i8* %29) #9, !dbg !1482
  %30 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1483
  %keys = getelementptr inbounds %struct.cauthctxt* %30, i32 0, i32 8, !dbg !1483
  %tqh_last = getelementptr inbounds %struct.idlist* %keys, i32 0, i32 1, !dbg !1483
  %31 = load %struct.identity*** %tqh_last, align 8, !dbg !1483
  %32 = bitcast %struct.identity** %31 to %struct.idlist*, !dbg !1483
  %tqh_last27 = getelementptr inbounds %struct.idlist* %32, i32 0, i32 1, !dbg !1483
  %33 = load %struct.identity*** %tqh_last27, align 8, !dbg !1483
  %34 = load %struct.identity** %33, align 8, !dbg !1483
  store %struct.identity* %34, %struct.identity** %id, align 8, !dbg !1483
  br label %for.cond, !dbg !1483

for.cond:                                         ; preds = %for.inc, %if.end26
  %35 = load %struct.identity** %id, align 8, !dbg !1485
  %cmp28 = icmp ne %struct.identity* %35, null, !dbg !1485
  br i1 %cmp28, label %for.body, label %for.end, !dbg !1485

for.body:                                         ; preds = %for.cond
  %36 = load %struct.sshkey** %key, align 8, !dbg !1488
  %37 = load %struct.identity** %id, align 8, !dbg !1488
  %key29 = getelementptr inbounds %struct.identity* %37, i32 0, i32 2, !dbg !1488
  %38 = load %struct.sshkey** %key29, align 8, !dbg !1488
  %call30 = call i32 @sshkey_equal(%struct.sshkey* %36, %struct.sshkey* %38), !dbg !1488
  %tobool31 = icmp ne i32 %call30, 0, !dbg !1488
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !1488

if.then32:                                        ; preds = %for.body
  %39 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1491
  %40 = load %struct.identity** %id, align 8, !dbg !1491
  %call33 = call i32 @sign_and_send_pubkey(%struct.cauthctxt* %39, %struct.identity* %40), !dbg !1491
  store i32 %call33, i32* %sent, align 4, !dbg !1491
  br label %for.end, !dbg !1493

if.end34:                                         ; preds = %for.body
  br label %for.inc, !dbg !1494

for.inc:                                          ; preds = %if.end34
  %41 = load %struct.identity** %id, align 8, !dbg !1483
  %next = getelementptr inbounds %struct.identity* %41, i32 0, i32 0, !dbg !1483
  %tqe_prev = getelementptr inbounds %struct.anon.2.172* %next, i32 0, i32 1, !dbg !1483
  %42 = load %struct.identity*** %tqe_prev, align 8, !dbg !1483
  %43 = bitcast %struct.identity** %42 to %struct.idlist*, !dbg !1483
  %tqh_last35 = getelementptr inbounds %struct.idlist* %43, i32 0, i32 1, !dbg !1483
  %44 = load %struct.identity*** %tqh_last35, align 8, !dbg !1483
  %45 = load %struct.identity** %44, align 8, !dbg !1483
  store %struct.identity* %45, %struct.identity** %id, align 8, !dbg !1483
  br label %for.cond, !dbg !1483

for.end:                                          ; preds = %if.then32, %for.cond
  br label %done, !dbg !1495

done:                                             ; preds = %for.end, %if.then25, %if.then20, %if.then16, %if.then12
  %46 = load %struct.sshkey** %key, align 8, !dbg !1496
  %cmp36 = icmp ne %struct.sshkey* %46, null, !dbg !1496
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !1496

if.then37:                                        ; preds = %done
  %47 = load %struct.sshkey** %key, align 8, !dbg !1498
  call void @sshkey_free(%struct.sshkey* %47), !dbg !1498
  br label %if.end38, !dbg !1498

if.end38:                                         ; preds = %if.then37, %done
  %48 = load i8** %pkalg, align 8, !dbg !1499
  call void @free(i8* %48) #9, !dbg !1499
  %49 = load i8** %pkblob, align 8, !dbg !1500
  call void @free(i8* %49) #9, !dbg !1500
  %50 = load i32* %sent, align 4, !dbg !1501
  %cmp39 = icmp eq i32 %50, 0, !dbg !1501
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !1501

if.then40:                                        ; preds = %if.end38
  %51 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1503
  call void @userauth(%struct.cauthctxt* %51, i8* null), !dbg !1503
  br label %if.end41, !dbg !1503

if.end41:                                         ; preds = %if.then40, %if.end38
  ret i32 0, !dbg !1504
}

declare i8* @buffer_get_string(%struct.sshbuf*, i32*) #1

declare i32 @sshkey_type_from_name(i8*) #1

declare %struct.sshkey* @key_from_blob(i8*, i32) #1

declare i32 @sshpkt_add_padding(%struct.ssh*, i8 zeroext) #1

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_passwd_changereq(i32 %type, i32 %seqnr, i8* %ctxt) #0 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %seqnr.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  %info = alloca i8*, align 8
  %lang = alloca i8*, align 8
  %password = alloca i8*, align 8
  %retype = alloca i8*, align 8
  %prompt = alloca [150 x i8], align 16
  %host = alloca i8*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1505), !dbg !1506
  store i32 %seqnr, i32* %seqnr.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seqnr.addr}, metadata !1507), !dbg !1508
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1509), !dbg !1510
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1511), !dbg !1512
  %0 = load i8** %ctxt.addr, align 8, !dbg !1513
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1513
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1513
  call void @llvm.dbg.declare(metadata !{i8** %info}, metadata !1514), !dbg !1515
  call void @llvm.dbg.declare(metadata !{i8** %lang}, metadata !1516), !dbg !1517
  call void @llvm.dbg.declare(metadata !{i8** %password}, metadata !1518), !dbg !1519
  store i8* null, i8** %password, align 8, !dbg !1520
  call void @llvm.dbg.declare(metadata !{i8** %retype}, metadata !1521), !dbg !1522
  store i8* null, i8** %retype, align 8, !dbg !1520
  call void @llvm.dbg.declare(metadata !{[150 x i8]* %prompt}, metadata !1523), !dbg !1524
  call void @llvm.dbg.declare(metadata !{i8** %host}, metadata !1525), !dbg !1526
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8, !dbg !1527
  %tobool = icmp ne i8* %2, null, !dbg !1527
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !1527

cond.true:                                        ; preds = %entry
  %3 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 39), align 8, !dbg !1528
  br label %cond.end, !dbg !1528

cond.false:                                       ; preds = %entry
  %4 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1530
  %host1 = getelementptr inbounds %struct.cauthctxt* %4, i32 0, i32 2, !dbg !1530
  %5 = load i8** %host1, align 8, !dbg !1530
  br label %cond.end, !dbg !1530

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %3, %cond.true ], [ %5, %cond.false ], !dbg !1527
  store i8* %cond, i8** %host, align 8, !dbg !1532
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([32 x i8]* @.str50853, i32 0, i32 0)), !dbg !1535
  %6 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1536
  %cmp = icmp eq %struct.cauthctxt* %6, null, !dbg !1536
  br i1 %cmp, label %if.then, label %if.end, !dbg !1536

if.then:                                          ; preds = %cond.end
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([59 x i8]* @.str51854, i32 0, i32 0)) #11, !dbg !1538
  unreachable, !dbg !1538

if.end:                                           ; preds = %cond.end
  %7 = load %struct.ssh** @active_state, align 8, !dbg !1539
  %call = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %7, i32* null), !dbg !1539
  store i8* %call, i8** %info, align 8, !dbg !1539
  %8 = load %struct.ssh** @active_state, align 8, !dbg !1540
  %call2 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %8, i32* null), !dbg !1540
  store i8* %call2, i8** %lang, align 8, !dbg !1540
  %9 = load i8** %info, align 8, !dbg !1541
  %call3 = call i64 @strlen(i8* %9) #12, !dbg !1541
  %cmp4 = icmp ugt i64 %call3, 0, !dbg !1541
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1541

if.then5:                                         ; preds = %if.end
  %10 = load i8** %info, align 8, !dbg !1543
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([3 x i8]* @.str31834, i32 0, i32 0), i8* %10), !dbg !1543
  br label %if.end6, !dbg !1543

if.end6:                                          ; preds = %if.then5, %if.end
  %11 = load i8** %info, align 8, !dbg !1544
  call void @free(i8* %11) #9, !dbg !1544
  %12 = load i8** %lang, align 8, !dbg !1545
  call void @free(i8* %12) #9, !dbg !1545
  %13 = load %struct.ssh** @active_state, align 8, !dbg !1546
  call void @ssh_packet_start(%struct.ssh* %13, i8 zeroext 50), !dbg !1546
  %14 = load %struct.ssh** @active_state, align 8, !dbg !1547
  %15 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1547
  %server_user = getelementptr inbounds %struct.cauthctxt* %15, i32 0, i32 0, !dbg !1547
  %16 = load i8** %server_user, align 8, !dbg !1547
  call void @ssh_packet_put_cstring(%struct.ssh* %14, i8* %16), !dbg !1547
  %17 = load %struct.ssh** @active_state, align 8, !dbg !1548
  %18 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1548
  %service = getelementptr inbounds %struct.cauthctxt* %18, i32 0, i32 3, !dbg !1548
  %19 = load i8** %service, align 8, !dbg !1548
  call void @ssh_packet_put_cstring(%struct.ssh* %17, i8* %19), !dbg !1548
  %20 = load %struct.ssh** @active_state, align 8, !dbg !1549
  %21 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1549
  %method = getelementptr inbounds %struct.cauthctxt* %21, i32 0, i32 4, !dbg !1549
  %22 = load %struct.cauthmethod** %method, align 8, !dbg !1549
  %name = getelementptr inbounds %struct.cauthmethod* %22, i32 0, i32 0, !dbg !1549
  %23 = load i8** %name, align 8, !dbg !1549
  call void @ssh_packet_put_cstring(%struct.ssh* %20, i8* %23), !dbg !1549
  %24 = load %struct.ssh** @active_state, align 8, !dbg !1550
  call void @ssh_packet_put_char(%struct.ssh* %24, i32 1), !dbg !1550
  %arraydecay = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1551
  %25 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1551
  %server_user7 = getelementptr inbounds %struct.cauthctxt* %25, i32 0, i32 0, !dbg !1551
  %26 = load i8** %server_user7, align 8, !dbg !1551
  %27 = load i8** %host, align 8, !dbg !1551
  %call8 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 150, i8* getelementptr inbounds ([36 x i8]* @.str52855, i32 0, i32 0), i8* %26, i8* %27) #9, !dbg !1551
  %arraydecay9 = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1552
  %call10 = call i8* @read_passphrase(i8* %arraydecay9, i32 0), !dbg !1552
  store i8* %call10, i8** %password, align 8, !dbg !1552
  %28 = load %struct.ssh** @active_state, align 8, !dbg !1553
  %29 = load i8** %password, align 8, !dbg !1553
  call void @ssh_packet_put_cstring(%struct.ssh* %28, i8* %29), !dbg !1553
  %30 = load i8** %password, align 8, !dbg !1554
  %31 = load i8** %password, align 8, !dbg !1555
  %call11 = call i64 @strlen(i8* %31) #12, !dbg !1555
  call void @explicit_bzero(i8* %30, i64 %call11), !dbg !1554
  %32 = load i8** %password, align 8, !dbg !1556
  call void @free(i8* %32) #9, !dbg !1556
  store i8* null, i8** %password, align 8, !dbg !1557
  br label %while.cond, !dbg !1558

while.cond:                                       ; preds = %if.end30, %if.end6
  %33 = load i8** %password, align 8, !dbg !1559
  %cmp12 = icmp eq i8* %33, null, !dbg !1559
  br i1 %cmp12, label %while.body, label %while.end, !dbg !1559

while.body:                                       ; preds = %while.cond
  %arraydecay13 = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1561
  %34 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1561
  %server_user14 = getelementptr inbounds %struct.cauthctxt* %34, i32 0, i32 0, !dbg !1561
  %35 = load i8** %server_user14, align 8, !dbg !1561
  %36 = load i8** %host, align 8, !dbg !1561
  %call15 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay13, i64 150, i8* getelementptr inbounds ([36 x i8]* @.str53856, i32 0, i32 0), i8* %35, i8* %36) #9, !dbg !1561
  %arraydecay16 = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1563
  %call17 = call i8* @read_passphrase(i8* %arraydecay16, i32 4), !dbg !1563
  store i8* %call17, i8** %password, align 8, !dbg !1563
  %37 = load i8** %password, align 8, !dbg !1564
  %cmp18 = icmp eq i8* %37, null, !dbg !1564
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !1564

if.then19:                                        ; preds = %while.body
  store i32 0, i32* %retval, !dbg !1566
  br label %return, !dbg !1566

if.end20:                                         ; preds = %while.body
  %arraydecay21 = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1568
  %38 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1568
  %server_user22 = getelementptr inbounds %struct.cauthctxt* %38, i32 0, i32 0, !dbg !1568
  %39 = load i8** %server_user22, align 8, !dbg !1568
  %40 = load i8** %host, align 8, !dbg !1568
  %call23 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay21, i64 150, i8* getelementptr inbounds ([37 x i8]* @.str54857, i32 0, i32 0), i8* %39, i8* %40) #9, !dbg !1568
  %arraydecay24 = getelementptr inbounds [150 x i8]* %prompt, i32 0, i32 0, !dbg !1569
  %call25 = call i8* @read_passphrase(i8* %arraydecay24, i32 0), !dbg !1569
  store i8* %call25, i8** %retype, align 8, !dbg !1569
  %41 = load i8** %password, align 8, !dbg !1570
  %42 = load i8** %retype, align 8, !dbg !1570
  %call26 = call i32 @strcmp(i8* %41, i8* %42) #12, !dbg !1570
  %cmp27 = icmp ne i32 %call26, 0, !dbg !1570
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !1570

if.then28:                                        ; preds = %if.end20
  %43 = load i8** %password, align 8, !dbg !1572
  %44 = load i8** %password, align 8, !dbg !1574
  %call29 = call i64 @strlen(i8* %44) #12, !dbg !1574
  call void @explicit_bzero(i8* %43, i64 %call29), !dbg !1572
  %45 = load i8** %password, align 8, !dbg !1575
  call void @free(i8* %45) #9, !dbg !1575
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([34 x i8]* @.str55858, i32 0, i32 0)), !dbg !1576
  store i8* null, i8** %password, align 8, !dbg !1577
  br label %if.end30, !dbg !1578

if.end30:                                         ; preds = %if.then28, %if.end20
  %46 = load i8** %retype, align 8, !dbg !1579
  %47 = load i8** %retype, align 8, !dbg !1580
  %call31 = call i64 @strlen(i8* %47) #12, !dbg !1580
  call void @explicit_bzero(i8* %46, i64 %call31), !dbg !1579
  %48 = load i8** %retype, align 8, !dbg !1581
  call void @free(i8* %48) #9, !dbg !1581
  br label %while.cond, !dbg !1582

while.end:                                        ; preds = %while.cond
  %49 = load %struct.ssh** @active_state, align 8, !dbg !1583
  %50 = load i8** %password, align 8, !dbg !1583
  call void @ssh_packet_put_cstring(%struct.ssh* %49, i8* %50), !dbg !1583
  %51 = load i8** %password, align 8, !dbg !1584
  %52 = load i8** %password, align 8, !dbg !1585
  %call32 = call i64 @strlen(i8* %52) #12, !dbg !1585
  call void @explicit_bzero(i8* %51, i64 %call32), !dbg !1584
  %53 = load i8** %password, align 8, !dbg !1586
  call void @free(i8* %53) #9, !dbg !1586
  %54 = load %struct.ssh** @active_state, align 8, !dbg !1587
  %call33 = call i32 @sshpkt_add_padding(%struct.ssh* %54, i8 zeroext 64), !dbg !1587
  %55 = load %struct.ssh** @active_state, align 8, !dbg !1588
  call void @ssh_packet_send(%struct.ssh* %55), !dbg !1588
  %56 = load %struct.ssh** @active_state, align 8, !dbg !1589
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %56, i32 60, i32 (i32, i32, i8*)* @input_userauth_passwd_changereq), !dbg !1589
  store i32 0, i32* %retval, !dbg !1590
  br label %return, !dbg !1590

return:                                           ; preds = %while.end, %if.then19
  %57 = load i32* %retval, !dbg !1591
  ret i32 %57, !dbg !1591
}

; Function Attrs: nounwind sspreq uwtable
define i32 @input_userauth_info_req(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %authctxt = alloca %struct.cauthctxt*, align 8
  %name = alloca i8*, align 8
  %inst = alloca i8*, align 8
  %lang = alloca i8*, align 8
  %prompt = alloca i8*, align 8
  %response = alloca i8*, align 8
  %num_prompts = alloca i32, align 4
  %i = alloca i32, align 4
  %echo = alloca i32, align 4
  %_len = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %type.addr}, metadata !1592), !dbg !1593
  store i32 %seq, i32* %seq.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %seq.addr}, metadata !1594), !dbg !1595
  store i8* %ctxt, i8** %ctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %ctxt.addr}, metadata !1596), !dbg !1597
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt}, metadata !1598), !dbg !1599
  %0 = load i8** %ctxt.addr, align 8, !dbg !1600
  %1 = bitcast i8* %0 to %struct.cauthctxt*, !dbg !1600
  store %struct.cauthctxt* %1, %struct.cauthctxt** %authctxt, align 8, !dbg !1600
  call void @llvm.dbg.declare(metadata !{i8** %name}, metadata !1601), !dbg !1602
  call void @llvm.dbg.declare(metadata !{i8** %inst}, metadata !1603), !dbg !1604
  call void @llvm.dbg.declare(metadata !{i8** %lang}, metadata !1605), !dbg !1606
  call void @llvm.dbg.declare(metadata !{i8** %prompt}, metadata !1607), !dbg !1608
  call void @llvm.dbg.declare(metadata !{i8** %response}, metadata !1609), !dbg !1610
  call void @llvm.dbg.declare(metadata !{i32* %num_prompts}, metadata !1611), !dbg !1612
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1613), !dbg !1614
  call void @llvm.dbg.declare(metadata !{i32* %echo}, metadata !1615), !dbg !1616
  store i32 0, i32* %echo, align 4, !dbg !1617
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([24 x i8]* @.str60863, i32 0, i32 0)), !dbg !1618
  %2 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1619
  %cmp = icmp eq %struct.cauthctxt* %2, null, !dbg !1619
  br i1 %cmp, label %if.then, label %if.end, !dbg !1619

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([51 x i8]* @.str61864, i32 0, i32 0)) #11, !dbg !1621
  unreachable, !dbg !1621

if.end:                                           ; preds = %entry
  %3 = load %struct.cauthctxt** %authctxt, align 8, !dbg !1622
  %info_req_seen = getelementptr inbounds %struct.cauthctxt* %3, i32 0, i32 14, !dbg !1622
  store i32 1, i32* %info_req_seen, align 4, !dbg !1622
  %4 = load %struct.ssh** @active_state, align 8, !dbg !1623
  %call = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %4, i32* null), !dbg !1623
  store i8* %call, i8** %name, align 8, !dbg !1623
  %5 = load %struct.ssh** @active_state, align 8, !dbg !1624
  %call1 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %5, i32* null), !dbg !1624
  store i8* %call1, i8** %inst, align 8, !dbg !1624
  %6 = load %struct.ssh** @active_state, align 8, !dbg !1625
  %call2 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %6, i32* null), !dbg !1625
  store i8* %call2, i8** %lang, align 8, !dbg !1625
  %7 = load i8** %name, align 8, !dbg !1626
  %call3 = call i64 @strlen(i8* %7) #12, !dbg !1626
  %cmp4 = icmp ugt i64 %call3, 0, !dbg !1626
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1626

if.then5:                                         ; preds = %if.end
  %8 = load i8** %name, align 8, !dbg !1628
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([3 x i8]* @.str31834, i32 0, i32 0), i8* %8), !dbg !1628
  br label %if.end6, !dbg !1628

if.end6:                                          ; preds = %if.then5, %if.end
  %9 = load i8** %inst, align 8, !dbg !1629
  %call7 = call i64 @strlen(i8* %9) #12, !dbg !1629
  %cmp8 = icmp ugt i64 %call7, 0, !dbg !1629
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !1629

if.then9:                                         ; preds = %if.end6
  %10 = load i8** %inst, align 8, !dbg !1631
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([3 x i8]* @.str31834, i32 0, i32 0), i8* %10), !dbg !1631
  br label %if.end10, !dbg !1631

if.end10:                                         ; preds = %if.then9, %if.end6
  %11 = load i8** %name, align 8, !dbg !1632
  call void @free(i8* %11) #9, !dbg !1632
  %12 = load i8** %inst, align 8, !dbg !1633
  call void @free(i8* %12) #9, !dbg !1633
  %13 = load i8** %lang, align 8, !dbg !1634
  call void @free(i8* %13) #9, !dbg !1634
  %call11 = call i32 @packet_get_int(), !dbg !1635
  store i32 %call11, i32* %num_prompts, align 4, !dbg !1635
  %14 = load %struct.ssh** @active_state, align 8, !dbg !1636
  call void @ssh_packet_start(%struct.ssh* %14, i8 zeroext 61), !dbg !1636
  %15 = load %struct.ssh** @active_state, align 8, !dbg !1637
  %16 = load i32* %num_prompts, align 4, !dbg !1637
  call void @ssh_packet_put_int(%struct.ssh* %15, i32 %16), !dbg !1637
  %17 = load i32* %num_prompts, align 4, !dbg !1638
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([40 x i8]* @.str62865, i32 0, i32 0), i32 %17), !dbg !1638
  store i32 0, i32* %i, align 4, !dbg !1639
  br label %for.cond, !dbg !1639

for.cond:                                         ; preds = %for.inc, %if.end10
  %18 = load i32* %i, align 4, !dbg !1641
  %19 = load i32* %num_prompts, align 4, !dbg !1641
  %cmp12 = icmp ult i32 %18, %19, !dbg !1641
  br i1 %cmp12, label %for.body, label %for.end, !dbg !1641

for.body:                                         ; preds = %for.cond
  %20 = load %struct.ssh** @active_state, align 8, !dbg !1644
  %call13 = call i8* bitcast (i8* (%struct.ssh.68*, i32*)* @ssh_packet_get_string to i8* (%struct.ssh*, i32*)*)(%struct.ssh* %20, i32* null), !dbg !1644
  store i8* %call13, i8** %prompt, align 8, !dbg !1644
  %call14 = call i32 @packet_get_char(), !dbg !1646
  store i32 %call14, i32* %echo, align 4, !dbg !1646
  %21 = load i8** %prompt, align 8, !dbg !1647
  %22 = load i32* %echo, align 4, !dbg !1647
  %tobool = icmp ne i32 %22, 0, !dbg !1647
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !1647
  %call15 = call i8* @read_passphrase(i8* %21, i32 %cond), !dbg !1647
  store i8* %call15, i8** %response, align 8, !dbg !1647
  %23 = load %struct.ssh** @active_state, align 8, !dbg !1648
  %24 = load i8** %response, align 8, !dbg !1648
  call void @ssh_packet_put_cstring(%struct.ssh* %23, i8* %24), !dbg !1648
  %25 = load i8** %response, align 8, !dbg !1649
  %26 = load i8** %response, align 8, !dbg !1650
  %call16 = call i64 @strlen(i8* %26) #12, !dbg !1650
  call void @explicit_bzero(i8* %25, i64 %call16), !dbg !1649
  %27 = load i8** %response, align 8, !dbg !1651
  call void @free(i8* %27) #9, !dbg !1651
  %28 = load i8** %prompt, align 8, !dbg !1652
  call void @free(i8* %28) #9, !dbg !1652
  br label %for.inc, !dbg !1653

for.inc:                                          ; preds = %for.body
  %29 = load i32* %i, align 4, !dbg !1654
  %inc = add i32 %29, 1, !dbg !1654
  store i32 %inc, i32* %i, align 4, !dbg !1654
  br label %for.cond, !dbg !1654

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !1655

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata !{i32* %_len}, metadata !1656), !dbg !1658
  %30 = load %struct.ssh** @active_state, align 8, !dbg !1659
  %call17 = call i32 @ssh_packet_remaining(%struct.ssh* %30), !dbg !1659
  store i32 %call17, i32* %_len, align 4, !dbg !1659
  %31 = load i32* %_len, align 4, !dbg !1661
  %cmp18 = icmp sgt i32 %31, 0, !dbg !1661
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !1661

if.then19:                                        ; preds = %do.body
  %32 = load i32* %_len, align 4, !dbg !1663
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([53 x i8]* @.str36839, i32 0, i32 0), i32 %32, i8* getelementptr inbounds ([14 x i8]* @.str37840, i32 0, i32 0), i32 1566), !dbg !1663
  %33 = load %struct.ssh** @active_state, align 8, !dbg !1663
  call void (%struct.ssh*, i8*, ...)* @ssh_packet_disconnect(%struct.ssh* %33, i8* getelementptr inbounds ([24 x i8]* @.str38841, i32 0, i32 0)) #11, !dbg !1663
  unreachable, !dbg !1663

if.end20:                                         ; preds = %do.body
  br label %do.end, !dbg !1666

do.end:                                           ; preds = %if.end20
  %34 = load %struct.ssh** @active_state, align 8, !dbg !1668
  %call21 = call i32 @sshpkt_add_padding(%struct.ssh* %34, i8 zeroext 64), !dbg !1668
  %35 = load %struct.ssh** @active_state, align 8, !dbg !1669
  call void @ssh_packet_send(%struct.ssh* %35), !dbg !1669
  ret i32 0, !dbg !1670
}

; Function Attrs: nounwind
declare i8* @strsep(i8**, i8*) #4

declare i8* @get_local_name(i32) #1

declare i32 @sshkey_to_blob(%struct.sshkey*, i8**, i64*) #1

declare i32 @sshkey_sign(%struct.sshkey*, i8**, i64*, i8*, i64, i8*, i32) #1

declare i32 @sshpkt_put_string(%struct.ssh*, i8*, i64) #1

declare i8* @sshbuf_dup_string(%struct.sshbuf*) #1

declare i8* @match_list(i8*, i8*, i32*) #1

declare i32 @fflush(%struct._IO_FILE*) #1

declare i32 @ssh_msg_send(i32, i8 zeroext, %struct.sshbuf*) #1

declare i32 @ssh_msg_recv(i32, %struct.sshbuf*) #1

declare i32 @sshbuf_get_u8(%struct.sshbuf*, i8*) #1

declare i32 @sshbuf_get_string(%struct.sshbuf*, i8**, i64*) #1

; Function Attrs: nounwind
declare void @llvm.var.annotation(i8*, i8*, i8*, i32) #9

declare i32 @sshkey_load_private_type(i32, i8*, i8*, %struct.sshkey**, i8**, i32*) #1

declare i32 @key_to_blob(%struct.sshkey*, i8**, i32*) #1

declare i32 @sshkey_type_plain(i32) #1

declare void @ssh_close_authentication_socket(i32) #1

declare i32 @ssh_fetch_identitylist(i32, i32, %struct.ssh_identitylist**) #1

declare void @ssh_free_identitylist(%struct.ssh_identitylist*) #1

declare void @buffer_put_string(%struct.sshbuf*, i8*, i32) #1

declare void @buffer_put_cstring(%struct.sshbuf*, i8*) #1

declare i32 @sshkey_equal_public(%struct.sshkey*, %struct.sshkey*) #1

declare void @ssh_packet_put_raw(%struct.ssh*, i8*, i32) #1

declare i32 @ssh_agent_sign(i32, %struct.sshkey*, i8**, i64*, i8*, i64, i8*, i32) #1

declare i8* @xmalloc(i64) #1

; Function Attrs: nounwind sspreq uwtable
define internal i8* @order_hostkeyalgs(i8* %host, %struct.sockaddr* %hostaddr, i16 zeroext %port) #0 {
entry:
  %host.addr = alloca i8*, align 8
  %hostaddr.addr = alloca %struct.sockaddr*, align 8
  %port.addr = alloca i16, align 2
  %oavail = alloca i8*, align 8
  %avail = alloca i8*, align 8
  %first = alloca i8*, align 8
  %last = alloca i8*, align 8
  %alg = alloca i8*, align 8
  %hostname = alloca i8*, align 8
  %ret = alloca i8*, align 8
  %maxlen = alloca i64, align 8
  %hostkeys = alloca %struct.hostkeys*, align 8
  %ktype = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %host, i8** %host.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %host.addr}, metadata !1671), !dbg !1672
  store %struct.sockaddr* %hostaddr, %struct.sockaddr** %hostaddr.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sockaddr** %hostaddr.addr}, metadata !1673), !dbg !1674
  store i16 %port, i16* %port.addr, align 2
  call void @llvm.dbg.declare(metadata !{i16* %port.addr}, metadata !1675), !dbg !1676
  call void @llvm.dbg.declare(metadata !{i8** %oavail}, metadata !1677), !dbg !1678
  call void @llvm.dbg.declare(metadata !{i8** %avail}, metadata !1679), !dbg !1680
  call void @llvm.dbg.declare(metadata !{i8** %first}, metadata !1681), !dbg !1682
  call void @llvm.dbg.declare(metadata !{i8** %last}, metadata !1683), !dbg !1684
  call void @llvm.dbg.declare(metadata !{i8** %alg}, metadata !1685), !dbg !1686
  call void @llvm.dbg.declare(metadata !{i8** %hostname}, metadata !1687), !dbg !1688
  call void @llvm.dbg.declare(metadata !{i8** %ret}, metadata !1689), !dbg !1690
  call void @llvm.dbg.declare(metadata !{i64* %maxlen}, metadata !1691), !dbg !1692
  call void @llvm.dbg.declare(metadata !{%struct.hostkeys** %hostkeys}, metadata !1693), !dbg !1697
  call void @llvm.dbg.declare(metadata !{i32* %ktype}, metadata !1698), !dbg !1699
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1700), !dbg !1701
  %0 = load i8** %host.addr, align 8, !dbg !1702
  %1 = load %struct.sockaddr** %hostaddr.addr, align 8, !dbg !1702
  %2 = load i16* %port.addr, align 2, !dbg !1702
  call void @get_hostfile_hostname_ipaddr(i8* %0, %struct.sockaddr* %1, i16 zeroext %2, i8** %hostname, i8** null), !dbg !1702
  %call = call %struct.hostkeys* @init_hostkeys(), !dbg !1703
  store %struct.hostkeys* %call, %struct.hostkeys** %hostkeys, align 8, !dbg !1703
  store i32 0, i32* %i, align 4, !dbg !1704
  br label %for.cond, !dbg !1704

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32* %i, align 4, !dbg !1706
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 45), align 4, !dbg !1706
  %cmp = icmp ult i32 %3, %4, !dbg !1706
  br i1 %cmp, label %for.body, label %for.end, !dbg !1706

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hostkeys** %hostkeys, align 8, !dbg !1709
  %6 = load i8** %hostname, align 8, !dbg !1709
  %7 = load i32* %i, align 4, !dbg !1709
  %idxprom = zext i32 %7 to i64, !dbg !1709
  %arrayidx = getelementptr inbounds [32 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 46), i32 0, i64 %idxprom, !dbg !1709
  %8 = load i8** %arrayidx, align 8, !dbg !1709
  call void @load_hostkeys(%struct.hostkeys* %5, i8* %6, i8* %8), !dbg !1709
  br label %for.inc, !dbg !1709

for.inc:                                          ; preds = %for.body
  %9 = load i32* %i, align 4, !dbg !1710
  %inc = add i32 %9, 1, !dbg !1710
  store i32 %inc, i32* %i, align 4, !dbg !1710
  br label %for.cond, !dbg !1710

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !1711
  br label %for.cond1, !dbg !1711

for.cond1:                                        ; preds = %for.inc6, %for.end
  %10 = load i32* %i, align 4, !dbg !1713
  %11 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 43), align 4, !dbg !1713
  %cmp2 = icmp ult i32 %10, %11, !dbg !1713
  br i1 %cmp2, label %for.body3, label %for.end8, !dbg !1713

for.body3:                                        ; preds = %for.cond1
  %12 = load %struct.hostkeys** %hostkeys, align 8, !dbg !1716
  %13 = load i8** %hostname, align 8, !dbg !1716
  %14 = load i32* %i, align 4, !dbg !1716
  %idxprom4 = zext i32 %14 to i64, !dbg !1716
  %arrayidx5 = getelementptr inbounds [32 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 44), i32 0, i64 %idxprom4, !dbg !1716
  %15 = load i8** %arrayidx5, align 8, !dbg !1716
  call void @load_hostkeys(%struct.hostkeys* %12, i8* %13, i8* %15), !dbg !1716
  br label %for.inc6, !dbg !1716

for.inc6:                                         ; preds = %for.body3
  %16 = load i32* %i, align 4, !dbg !1717
  %inc7 = add i32 %16, 1, !dbg !1717
  store i32 %inc7, i32* %i, align 4, !dbg !1717
  br label %for.cond1, !dbg !1717

for.end8:                                         ; preds = %for.cond1
  %call9 = call i8* @xstrdup(i8* getelementptr inbounds ([291 x i8]* @.str1804, i32 0, i32 0)), !dbg !1718
  store i8* %call9, i8** %avail, align 8, !dbg !1718
  store i8* %call9, i8** %oavail, align 8, !dbg !1718
  %17 = load i8** %avail, align 8, !dbg !1719
  %call10 = call i64 @strlen(i8* %17) #12, !dbg !1719
  %add = add i64 %call10, 1, !dbg !1719
  store i64 %add, i64* %maxlen, align 8, !dbg !1719
  %18 = load i64* %maxlen, align 8, !dbg !1720
  %call11 = call i8* @xmalloc(i64 %18), !dbg !1720
  store i8* %call11, i8** %first, align 8, !dbg !1720
  %19 = load i64* %maxlen, align 8, !dbg !1721
  %call12 = call i8* @xmalloc(i64 %19), !dbg !1721
  store i8* %call12, i8** %last, align 8, !dbg !1721
  %20 = load i8** %last, align 8, !dbg !1722
  store i8 0, i8* %20, align 1, !dbg !1722
  %21 = load i8** %first, align 8, !dbg !1722
  store i8 0, i8* %21, align 1, !dbg !1722
  br label %while.cond, !dbg !1723

while.cond:                                       ; preds = %if.end39, %for.end8
  %call13 = call i8* @strsep(i8** %avail, i8* getelementptr inbounds ([2 x i8]* @.str63866, i32 0, i32 0)) #9, !dbg !1724
  store i8* %call13, i8** %alg, align 8, !dbg !1724
  %tobool = icmp ne i8* %call13, null, !dbg !1724
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !1724

land.rhs:                                         ; preds = %while.cond
  %22 = load i8** %alg, align 8, !dbg !1726
  %23 = load i8* %22, align 1, !dbg !1726
  %conv = sext i8 %23 to i32, !dbg !1726
  %cmp14 = icmp ne i32 %conv, 0, !dbg !1726
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %24 = phi i1 [ false, %while.cond ], [ %cmp14, %land.rhs ]
  br i1 %24, label %while.body, label %while.end, !dbg !1728

while.body:                                       ; preds = %land.end
  %25 = load i8** %alg, align 8, !dbg !1730
  %call16 = call i32 @sshkey_type_from_name(i8* %25), !dbg !1730
  store i32 %call16, i32* %ktype, align 4, !dbg !1730
  %cmp17 = icmp eq i32 %call16, 9, !dbg !1730
  br i1 %cmp17, label %if.then, label %if.end, !dbg !1730

if.then:                                          ; preds = %while.body
  %26 = load i8** %alg, align 8, !dbg !1733
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([19 x i8]* @.str127930, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.order_hostkeyalgs, i32 0, i32 0), i8* %26) #11, !dbg !1733
  unreachable, !dbg !1733

if.end:                                           ; preds = %while.body
  %27 = load %struct.hostkeys** %hostkeys, align 8, !dbg !1734
  %28 = load i32* %ktype, align 4, !dbg !1736
  %call19 = call i32 @sshkey_type_plain(i32 %28), !dbg !1736
  %call20 = call i32 @lookup_key_in_hostkeys_by_type(%struct.hostkeys* %27, i32 %call19, %struct.hostkey_entry** null), !dbg !1734
  %tobool21 = icmp ne i32 %call20, 0, !dbg !1734
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !1734

if.then22:                                        ; preds = %if.end
  br label %do.body, !dbg !1737

do.body:                                          ; preds = %if.then22
  %29 = load i8** %first, align 8, !dbg !1738
  %30 = load i8* %29, align 1, !dbg !1738
  %conv23 = sext i8 %30 to i32, !dbg !1738
  %cmp24 = icmp ne i32 %conv23, 0, !dbg !1738
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !1738

if.then26:                                        ; preds = %do.body
  %31 = load i8** %first, align 8, !dbg !1742
  %32 = load i64* %maxlen, align 8, !dbg !1742
  %call27 = call i64 @strlcat(i8* %31, i8* getelementptr inbounds ([2 x i8]* @.str63866, i32 0, i32 0), i64 %32), !dbg !1742
  br label %if.end28, !dbg !1742

if.end28:                                         ; preds = %if.then26, %do.body
  %33 = load i8** %first, align 8, !dbg !1744
  %34 = load i8** %alg, align 8, !dbg !1744
  %35 = load i64* %maxlen, align 8, !dbg !1744
  %call29 = call i64 @strlcat(i8* %33, i8* %34, i64 %35), !dbg !1744
  br label %do.end, !dbg !1744

do.end:                                           ; preds = %if.end28
  br label %if.end39, !dbg !1747

if.else:                                          ; preds = %if.end
  br label %do.body30, !dbg !1749

do.body30:                                        ; preds = %if.else
  %36 = load i8** %last, align 8, !dbg !1750
  %37 = load i8* %36, align 1, !dbg !1750
  %conv31 = sext i8 %37 to i32, !dbg !1750
  %cmp32 = icmp ne i32 %conv31, 0, !dbg !1750
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !1750

if.then34:                                        ; preds = %do.body30
  %38 = load i8** %last, align 8, !dbg !1754
  %39 = load i64* %maxlen, align 8, !dbg !1754
  %call35 = call i64 @strlcat(i8* %38, i8* getelementptr inbounds ([2 x i8]* @.str63866, i32 0, i32 0), i64 %39), !dbg !1754
  br label %if.end36, !dbg !1754

if.end36:                                         ; preds = %if.then34, %do.body30
  %40 = load i8** %last, align 8, !dbg !1756
  %41 = load i8** %alg, align 8, !dbg !1756
  %42 = load i64* %maxlen, align 8, !dbg !1756
  %call37 = call i64 @strlcat(i8* %40, i8* %41, i64 %42), !dbg !1756
  br label %do.end38, !dbg !1756

do.end38:                                         ; preds = %if.end36
  br label %if.end39

if.end39:                                         ; preds = %do.end38, %do.end
  br label %while.cond, !dbg !1759

while.end:                                        ; preds = %land.end
  %43 = load i8** %first, align 8, !dbg !1760
  %44 = load i8** %first, align 8, !dbg !1760
  %45 = load i8* %44, align 1, !dbg !1760
  %conv40 = sext i8 %45 to i32, !dbg !1760
  %cmp41 = icmp eq i32 %conv40, 0, !dbg !1760
  br i1 %cmp41, label %lor.end, label %lor.rhs, !dbg !1760

lor.rhs:                                          ; preds = %while.end
  %46 = load i8** %last, align 8, !dbg !1761
  %47 = load i8* %46, align 1, !dbg !1761
  %conv43 = sext i8 %47 to i32, !dbg !1761
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !1761
  br label %lor.end, !dbg !1761

lor.end:                                          ; preds = %lor.rhs, %while.end
  %48 = phi i1 [ true, %while.end ], [ %cmp44, %lor.rhs ]
  %cond = select i1 %48, i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str63866, i32 0, i32 0), !dbg !1763
  %49 = load i8** %last, align 8, !dbg !1763
  %call46 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %ret, i8* getelementptr inbounds ([7 x i8]* @.str128931, i32 0, i32 0), i8* %43, i8* %cond, i8* %49), !dbg !1763
  %50 = load i8** %first, align 8, !dbg !1766
  %51 = load i8* %50, align 1, !dbg !1766
  %conv47 = sext i8 %51 to i32, !dbg !1766
  %cmp48 = icmp ne i32 %conv47, 0, !dbg !1766
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !1766

if.then50:                                        ; preds = %lor.end
  %52 = load i8** %first, align 8, !dbg !1768
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([27 x i8]* @.str129932, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.order_hostkeyalgs, i32 0, i32 0), i8* %52), !dbg !1768
  br label %if.end51, !dbg !1768

if.end51:                                         ; preds = %if.then50, %lor.end
  %53 = load i8** %first, align 8, !dbg !1769
  call void @free(i8* %53) #9, !dbg !1769
  %54 = load i8** %last, align 8, !dbg !1770
  call void @free(i8* %54) #9, !dbg !1770
  %55 = load i8** %hostname, align 8, !dbg !1771
  call void @free(i8* %55) #9, !dbg !1771
  %56 = load i8** %oavail, align 8, !dbg !1772
  call void @free(i8* %56) #9, !dbg !1772
  %57 = load %struct.hostkeys** %hostkeys, align 8, !dbg !1773
  call void @free_hostkeys(%struct.hostkeys* %57), !dbg !1773
  %58 = load i8** %ret, align 8, !dbg !1774
  ret i8* %58, !dbg !1774
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @verify_host_key_callback(%struct.sshkey* %hostkey, %struct.ssh* %ssh) #0 {
entry:
  %hostkey.addr = alloca %struct.sshkey*, align 8
  %ssh.addr = alloca %struct.ssh*, align 8
  store %struct.sshkey* %hostkey, %struct.sshkey** %hostkey.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %hostkey.addr}, metadata !1775), !dbg !1776
  store %struct.ssh* %ssh, %struct.ssh** %ssh.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.ssh** %ssh.addr}, metadata !1777), !dbg !1778
  %0 = load i8** @xxx_host, align 8, !dbg !1779
  %1 = load %struct.sockaddr** @xxx_hostaddr, align 8, !dbg !1779
  %2 = load %struct.sshkey** %hostkey.addr, align 8, !dbg !1779
  %call = call i32 @verify_host_key(i8* %0, %struct.sockaddr* %1, %struct.sshkey* %2), !dbg !1779
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1779
  %4 = extractvalue { i32, i1 } %3, 0, !dbg !1779
  %5 = extractvalue { i32, i1 } %3, 1, !dbg !1779
  %6 = xor i1 %5, true, !dbg !1779
  br i1 %6, label %cont, label %trap, !dbg !1779

trap:                                             ; preds = %entry
  call void @llvm.trap() #3, !dbg !1781
  unreachable, !dbg !1781

cont:                                             ; preds = %entry
  %cmp = icmp eq i32 %call, %4, !dbg !1783
  br i1 %cmp, label %if.then, label %if.end, !dbg !1783

if.then:                                          ; preds = %cont
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str126929, i32 0, i32 0)) #11, !dbg !1785
  unreachable, !dbg !1785

if.end:                                           ; preds = %cont
  ret i32 0, !dbg !1786
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @ssh_keysign(%struct.sshkey* %key, i8** %sigp, i64* %lenp, i8* %data, i64 %datalen) #0 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca %struct.sshkey*, align 8
  %sigp.addr = alloca i8**, align 8
  %lenp.addr = alloca i64*, align 8
  %data.addr = alloca i8*, align 8
  %datalen.addr = alloca i64, align 8
  %b = alloca %struct.sshbuf*, align 8
  %st = alloca %struct.stat, align 8
  %pid = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %to = alloca [2 x i32], align 4
  %from = alloca [2 x i32], align 4
  %status = alloca i32, align 4
  %sock = alloca i32, align 4
  %rversion = alloca i8, align 1
  %version = alloca i8, align 1
  %osigchld = alloca void (i32)*, align 8
  %.compoundliteral = alloca %union.anon.3.180, align 4
  %.compoundliteral128 = alloca %union.anon.4.181, align 4
  %.compoundliteral135 = alloca %union.anon.5, align 4
  store %struct.sshkey* %key, %struct.sshkey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %key.addr}, metadata !1787), !dbg !1788
  store i8** %sigp, i8*** %sigp.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8*** %sigp.addr}, metadata !1789), !dbg !1790
  store i64* %lenp, i64** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata !{i64** %lenp.addr}, metadata !1791), !dbg !1792
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %data.addr}, metadata !1793), !dbg !1794
  store i64 %datalen, i64* %datalen.addr, align 8
  call void @llvm.dbg.declare(metadata !{i64* %datalen.addr}, metadata !1795), !dbg !1796
  call void @llvm.dbg.declare(metadata !{%struct.sshbuf** %b}, metadata !1797), !dbg !1798
  call void @llvm.dbg.declare(metadata !{%struct.stat* %st}, metadata !1799), !dbg !1836
  call void @llvm.dbg.declare(metadata !{i32* %pid}, metadata !1837), !dbg !1840
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !1841), !dbg !1842
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !1843), !dbg !1844
  call void @llvm.dbg.declare(metadata !{[2 x i32]* %to}, metadata !1845), !dbg !1847
  call void @llvm.dbg.declare(metadata !{[2 x i32]* %from}, metadata !1848), !dbg !1849
  call void @llvm.dbg.declare(metadata !{i32* %status}, metadata !1850), !dbg !1851
  call void @llvm.dbg.declare(metadata !{i32* %sock}, metadata !1852), !dbg !1853
  %0 = load %struct.ssh** @active_state, align 8, !dbg !1854
  %call = call i32 bitcast (i32 (%struct.ssh.68*)* @ssh_packet_get_connection_in to i32 (%struct.ssh*)*)(%struct.ssh* %0), !dbg !1854
  store i32 %call, i32* %sock, align 4, !dbg !1854
  call void @llvm.dbg.declare(metadata !{i8* %rversion}, metadata !1855), !dbg !1856
  store i8 0, i8* %rversion, align 1, !dbg !1857
  call void @llvm.dbg.declare(metadata !{i8* %version}, metadata !1858), !dbg !1859
  store i8 2, i8* %version, align 1, !dbg !1857
  call void @llvm.dbg.declare(metadata !{void (i32)** %osigchld}, metadata !1860), !dbg !1864
  %1 = load i8*** %sigp.addr, align 8, !dbg !1865
  store i8* null, i8** %1, align 8, !dbg !1865
  %2 = load i64** %lenp.addr, align 8, !dbg !1866
  store i64 0, i64* %2, align 8, !dbg !1866
  %call1 = call i32 @stat(i8* getelementptr inbounds ([31 x i8]* @.str87890, i32 0, i32 0), %struct.stat* %st) #9, !dbg !1867
  %cmp = icmp slt i32 %call1, 0, !dbg !1867
  br i1 %cmp, label %if.then, label %if.end, !dbg !1867

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #2, !dbg !1869
  %3 = load i32* %call2, align 4, !dbg !1869
  %call3 = call i8* @strerror(i32 %3) #9, !dbg !1871
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str88891, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call3), !dbg !1872
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1873
  %5 = extractvalue { i32, i1 } %4, 0, !dbg !1873
  %6 = extractvalue { i32, i1 } %4, 1, !dbg !1873
  %7 = xor i1 %6, true, !dbg !1873
  br i1 %7, label %cont, label %trap, !dbg !1873

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3, !dbg !1874
  unreachable, !dbg !1874

cont:                                             ; preds = %if.then
  store i32 %5, i32* %retval, !dbg !1876
  br label %return, !dbg !1876

if.end:                                           ; preds = %entry
  %8 = load %struct._IO_FILE** @stdout, align 8, !dbg !1878
  %call4 = call i32 @fflush(%struct._IO_FILE* %8), !dbg !1878
  %cmp5 = icmp ne i32 %call4, 0, !dbg !1878
  br i1 %cmp5, label %if.then6, label %if.end11, !dbg !1878

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #2, !dbg !1880
  %9 = load i32* %call7, align 4, !dbg !1880
  %call8 = call i8* @strerror(i32 %9) #9, !dbg !1882
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([15 x i8]* @.str89892, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call8), !dbg !1883
  %10 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1884
  %11 = extractvalue { i32, i1 } %10, 0, !dbg !1884
  %12 = extractvalue { i32, i1 } %10, 1, !dbg !1884
  %13 = xor i1 %12, true, !dbg !1884
  br i1 %13, label %cont10, label %trap9, !dbg !1884

trap9:                                            ; preds = %if.then6
  call void @llvm.trap() #3, !dbg !1885
  unreachable, !dbg !1885

cont10:                                           ; preds = %if.then6
  store i32 %11, i32* %retval, !dbg !1887
  br label %return, !dbg !1887

if.end11:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [2 x i32]* %to, i32 0, i32 0, !dbg !1889
  %call12 = call i32 @pipe(i32* %arraydecay) #9, !dbg !1889
  %cmp13 = icmp slt i32 %call12, 0, !dbg !1889
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !1889

if.then14:                                        ; preds = %if.end11
  %call15 = call i32* @__errno_location() #2, !dbg !1891
  %14 = load i32* %call15, align 4, !dbg !1891
  %call16 = call i8* @strerror(i32 %14) #9, !dbg !1893
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str90893, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call16), !dbg !1894
  %15 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1895
  %16 = extractvalue { i32, i1 } %15, 0, !dbg !1895
  %17 = extractvalue { i32, i1 } %15, 1, !dbg !1895
  %18 = xor i1 %17, true, !dbg !1895
  br i1 %18, label %cont18, label %trap17, !dbg !1895

trap17:                                           ; preds = %if.then14
  call void @llvm.trap() #3, !dbg !1896
  unreachable, !dbg !1896

cont18:                                           ; preds = %if.then14
  store i32 %16, i32* %retval, !dbg !1898
  br label %return, !dbg !1898

if.end19:                                         ; preds = %if.end11
  %arraydecay20 = getelementptr inbounds [2 x i32]* %from, i32 0, i32 0, !dbg !1900
  %call21 = call i32 @pipe(i32* %arraydecay20) #9, !dbg !1900
  %cmp22 = icmp slt i32 %call21, 0, !dbg !1900
  br i1 %cmp22, label %if.then23, label %if.end28, !dbg !1900

if.then23:                                        ; preds = %if.end19
  %call24 = call i32* @__errno_location() #2, !dbg !1902
  %19 = load i32* %call24, align 4, !dbg !1902
  %call25 = call i8* @strerror(i32 %19) #9, !dbg !1904
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str90893, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call25), !dbg !1905
  %20 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1906
  %21 = extractvalue { i32, i1 } %20, 0, !dbg !1906
  %22 = extractvalue { i32, i1 } %20, 1, !dbg !1906
  %23 = xor i1 %22, true, !dbg !1906
  br i1 %23, label %cont27, label %trap26, !dbg !1906

trap26:                                           ; preds = %if.then23
  call void @llvm.trap() #3, !dbg !1907
  unreachable, !dbg !1907

cont27:                                           ; preds = %if.then23
  store i32 %21, i32* %retval, !dbg !1909
  br label %return, !dbg !1909

if.end28:                                         ; preds = %if.end19
  %call29 = call i32 @fork() #9, !dbg !1911
  store i32 %call29, i32* %pid, align 4, !dbg !1911
  %cmp30 = icmp slt i32 %call29, 0, !dbg !1911
  br i1 %cmp30, label %if.then31, label %if.end36, !dbg !1911

if.then31:                                        ; preds = %if.end28
  %call32 = call i32* @__errno_location() #2, !dbg !1913
  %24 = load i32* %call32, align 4, !dbg !1913
  %call33 = call i8* @strerror(i32 %24) #9, !dbg !1915
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str91894, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call33), !dbg !1916
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1917
  %26 = extractvalue { i32, i1 } %25, 0, !dbg !1917
  %27 = extractvalue { i32, i1 } %25, 1, !dbg !1917
  %28 = xor i1 %27, true, !dbg !1917
  br i1 %28, label %cont35, label %trap34, !dbg !1917

trap34:                                           ; preds = %if.then31
  call void @llvm.trap() #3, !dbg !1918
  unreachable, !dbg !1918

cont35:                                           ; preds = %if.then31
  store i32 %26, i32* %retval, !dbg !1920
  br label %return, !dbg !1920

if.end36:                                         ; preds = %if.end28
  %call37 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 17, void (i32)* null), !dbg !1922
  store void (i32)* %call37, void (i32)** %osigchld, align 8, !dbg !1922
  %29 = load i32* %pid, align 4, !dbg !1923
  %cmp38 = icmp eq i32 %29, 0, !dbg !1923
  br i1 %cmp38, label %if.then39, label %if.end75, !dbg !1923

if.then39:                                        ; preds = %if.end36
  %30 = load i32* %sock, align 4, !dbg !1925
  %call40 = call i32 (i32, i32, ...)* @fcntl(i32 %30, i32 2, i32 0), !dbg !1925
  %call41 = call i32 @getuid() #9, !dbg !1927
  call void @permanently_drop_suid(i32 %call41), !dbg !1928
  %arrayidx = getelementptr inbounds [2 x i32]* %from, i32 0, i64 0, !dbg !1929
  %31 = load i32* %arrayidx, align 4, !dbg !1929
  %call42 = call i32 @close(i32 %31), !dbg !1929
  %arrayidx43 = getelementptr inbounds [2 x i32]* %from, i32 0, i64 1, !dbg !1930
  %32 = load i32* %arrayidx43, align 4, !dbg !1930
  %call44 = call i32 @dup2(i32 %32, i32 1) #9, !dbg !1930
  %cmp45 = icmp slt i32 %call44, 0, !dbg !1930
  br i1 %cmp45, label %if.then46, label %if.end49, !dbg !1930

if.then46:                                        ; preds = %if.then39
  %call47 = call i32* @__errno_location() #2, !dbg !1932
  %33 = load i32* %call47, align 4, !dbg !1932
  %call48 = call i8* @strerror(i32 %33) #9, !dbg !1933
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([13 x i8]* @.str92895, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call48) #11, !dbg !1934
  unreachable, !dbg !1934

if.end49:                                         ; preds = %if.then39
  %arrayidx50 = getelementptr inbounds [2 x i32]* %to, i32 0, i64 1, !dbg !1935
  %34 = load i32* %arrayidx50, align 4, !dbg !1935
  %call51 = call i32 @close(i32 %34), !dbg !1935
  %arrayidx52 = getelementptr inbounds [2 x i32]* %to, i32 0, i64 0, !dbg !1936
  %35 = load i32* %arrayidx52, align 4, !dbg !1936
  %call53 = call i32 @dup2(i32 %35, i32 0) #9, !dbg !1936
  %cmp54 = icmp slt i32 %call53, 0, !dbg !1936
  br i1 %cmp54, label %if.then55, label %if.end58, !dbg !1936

if.then55:                                        ; preds = %if.end49
  %call56 = call i32* @__errno_location() #2, !dbg !1938
  %36 = load i32* %call56, align 4, !dbg !1938
  %call57 = call i8* @strerror(i32 %36) #9, !dbg !1939
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([13 x i8]* @.str92895, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call57) #11, !dbg !1940
  unreachable, !dbg !1940

if.end58:                                         ; preds = %if.end49
  %arrayidx59 = getelementptr inbounds [2 x i32]* %from, i32 0, i64 1, !dbg !1941
  %37 = load i32* %arrayidx59, align 4, !dbg !1941
  %call60 = call i32 @close(i32 %37), !dbg !1941
  %arrayidx61 = getelementptr inbounds [2 x i32]* %to, i32 0, i64 0, !dbg !1942
  %38 = load i32* %arrayidx61, align 4, !dbg !1942
  %call62 = call i32 @close(i32 %38), !dbg !1942
  %39 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 2, i32 1), !dbg !1943
  %40 = extractvalue { i32, i1 } %39, 0, !dbg !1943
  %41 = extractvalue { i32, i1 } %39, 1, !dbg !1943
  %42 = xor i1 %41, true, !dbg !1943
  br i1 %42, label %cont64, label %trap63, !dbg !1943

trap63:                                           ; preds = %if.end58
  call void @llvm.trap() #3, !dbg !1945
  unreachable, !dbg !1945

cont64:                                           ; preds = %if.end58
  store i32 %40, i32* %i, align 4, !dbg !1947
  br label %for.cond, !dbg !1947

for.cond:                                         ; preds = %cont68, %cont64
  %43 = load i32* %i, align 4, !dbg !1949
  %44 = load i32* %sock, align 4, !dbg !1949
  %cmp65 = icmp slt i32 %43, %44, !dbg !1949
  br i1 %cmp65, label %for.body, label %for.end, !dbg !1949

for.body:                                         ; preds = %for.cond
  %45 = load i32* %i, align 4, !dbg !1952
  %call66 = call i32 @close(i32 %45), !dbg !1952
  br label %for.inc, !dbg !1952

for.inc:                                          ; preds = %for.body
  %46 = load i32* %i, align 4, !dbg !1953
  %47 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 1), !dbg !1953
  %48 = extractvalue { i32, i1 } %47, 0, !dbg !1953
  %49 = extractvalue { i32, i1 } %47, 1, !dbg !1953
  %50 = xor i1 %49, true, !dbg !1953
  br i1 %50, label %cont68, label %trap67, !dbg !1953

trap67:                                           ; preds = %for.inc
  call void @llvm.trap() #3, !dbg !1954
  unreachable, !dbg !1954

cont68:                                           ; preds = %for.inc
  store i32 %48, i32* %i, align 4, !dbg !1956
  br label %for.cond, !dbg !1956

for.end:                                          ; preds = %for.cond
  %51 = load i32* %sock, align 4, !dbg !1958
  %52 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 1), !dbg !1958
  %53 = extractvalue { i32, i1 } %52, 0, !dbg !1958
  %54 = extractvalue { i32, i1 } %52, 1, !dbg !1958
  %55 = xor i1 %54, true, !dbg !1958
  br i1 %55, label %cont70, label %trap69, !dbg !1958

trap69:                                           ; preds = %for.end
  call void @llvm.trap() #3, !dbg !1959
  unreachable, !dbg !1959

cont70:                                           ; preds = %for.end
  call void @closefrom(i32 %53), !dbg !1961
  %call71 = call i32 @getpid() #9, !dbg !1963
  %conv = sext i32 %call71 to i64, !dbg !1963
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([29 x i8]* @.str93896, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i64 %conv, i8* getelementptr inbounds ([31 x i8]* @.str87890, i32 0, i32 0)), !dbg !1964
  %call72 = call i32 (i8*, i8*, ...)* @execl(i8* getelementptr inbounds ([31 x i8]* @.str87890, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @.str87890, i32 0, i32 0), i8* null) #9, !dbg !1965
  %call73 = call i32* @__errno_location() #2, !dbg !1966
  %56 = load i32* %call73, align 4, !dbg !1966
  %call74 = call i8* @strerror(i32 %56) #9, !dbg !1967
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str94897, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @.str87890, i32 0, i32 0), i8* %call74) #11, !dbg !1968
  unreachable, !dbg !1968

if.end75:                                         ; preds = %if.end36
  %arrayidx76 = getelementptr inbounds [2 x i32]* %from, i32 0, i64 1, !dbg !1969
  %57 = load i32* %arrayidx76, align 4, !dbg !1969
  %call77 = call i32 @close(i32 %57), !dbg !1969
  %arrayidx78 = getelementptr inbounds [2 x i32]* %to, i32 0, i64 0, !dbg !1970
  %58 = load i32* %arrayidx78, align 4, !dbg !1970
  %call79 = call i32 @close(i32 %58), !dbg !1970
  %call80 = call %struct.sshbuf* @sshbuf_new(), !dbg !1971
  store %struct.sshbuf* %call80, %struct.sshbuf** %b, align 8, !dbg !1971
  %cmp81 = icmp eq %struct.sshbuf* %call80, null, !dbg !1971
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !1971

if.then83:                                        ; preds = %if.end75
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([22 x i8]* @.str71874, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0)) #11, !dbg !1973
  unreachable, !dbg !1973

if.end84:                                         ; preds = %if.end75
  %59 = load %struct.sshbuf** %b, align 8, !dbg !1974
  %60 = load i32* %sock, align 4, !dbg !1974
  %call85 = call i32 @sshbuf_put_u32(%struct.sshbuf* %59, i32 %60), !dbg !1974
  %cmp86 = icmp ne i32 %call85, 0, !dbg !1974
  %conv87 = zext i1 %cmp86 to i32, !dbg !1974
  store i32 %conv87, i32* %r, align 4, !dbg !1974
  br i1 %cmp86, label %if.then91, label %lor.lhs.false, !dbg !1974

lor.lhs.false:                                    ; preds = %if.end84
  %61 = load %struct.sshbuf** %b, align 8, !dbg !1976
  %62 = load i8** %data.addr, align 8, !dbg !1976
  %63 = load i64* %datalen.addr, align 8, !dbg !1976
  %call88 = call i32 @sshbuf_put_string(%struct.sshbuf* %61, i8* %62, i64 %63), !dbg !1976
  store i32 %call88, i32* %r, align 4, !dbg !1976
  %cmp89 = icmp ne i32 %call88, 0, !dbg !1976
  br i1 %cmp89, label %if.then91, label %if.end93, !dbg !1976

if.then91:                                        ; preds = %lor.lhs.false, %if.end84
  %64 = load i32* %r, align 4, !dbg !1977
  %call92 = call i8* @ssh_err(i32 %64), !dbg !1977
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str73876, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call92) #11, !dbg !1978
  unreachable, !dbg !1978

if.end93:                                         ; preds = %lor.lhs.false
  %arrayidx94 = getelementptr inbounds [2 x i32]* %to, i32 0, i64 1, !dbg !1979
  %65 = load i32* %arrayidx94, align 4, !dbg !1979
  %66 = load i8* %version, align 1, !dbg !1979
  %67 = load %struct.sshbuf** %b, align 8, !dbg !1979
  %call95 = call i32 @ssh_msg_send(i32 %65, i8 zeroext %66, %struct.sshbuf* %67), !dbg !1979
  %68 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !1979
  %69 = extractvalue { i32, i1 } %68, 0, !dbg !1979
  %70 = extractvalue { i32, i1 } %68, 1, !dbg !1979
  %71 = xor i1 %70, true, !dbg !1979
  br i1 %71, label %cont97, label %trap96, !dbg !1979

trap96:                                           ; preds = %if.end93
  call void @llvm.trap() #3, !dbg !1981
  unreachable, !dbg !1981

cont97:                                           ; preds = %if.end93
  %cmp98 = icmp eq i32 %call95, %69, !dbg !1983
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !1983

if.then100:                                       ; preds = %cont97
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([26 x i8]* @.str95898, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0)) #11, !dbg !1985
  unreachable, !dbg !1985

if.end101:                                        ; preds = %cont97
  %72 = load %struct.sshbuf** %b, align 8, !dbg !1986
  call void @sshbuf_reset(%struct.sshbuf* %72), !dbg !1986
  %arrayidx102 = getelementptr inbounds [2 x i32]* %from, i32 0, i64 0, !dbg !1987
  %73 = load i32* %arrayidx102, align 4, !dbg !1987
  %74 = load %struct.sshbuf** %b, align 8, !dbg !1987
  %call103 = call i32 @ssh_msg_recv(i32 %73, %struct.sshbuf* %74), !dbg !1987
  store i32 %call103, i32* %r, align 4, !dbg !1987
  %arrayidx104 = getelementptr inbounds [2 x i32]* %from, i32 0, i64 0, !dbg !1988
  %75 = load i32* %arrayidx104, align 4, !dbg !1988
  %call105 = call i32 @close(i32 %75), !dbg !1988
  %arrayidx106 = getelementptr inbounds [2 x i32]* %to, i32 0, i64 1, !dbg !1989
  %76 = load i32* %arrayidx106, align 4, !dbg !1989
  %call107 = call i32 @close(i32 %76), !dbg !1989
  %77 = load i32* %r, align 4, !dbg !1990
  %cmp108 = icmp slt i32 %77, 0, !dbg !1990
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !1990

if.then110:                                       ; preds = %if.end101
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([13 x i8]* @.str96899, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0)), !dbg !1992
  br label %fail, !dbg !1994

if.end111:                                        ; preds = %if.end101
  %call112 = call i32* @__errno_location() #2, !dbg !1995
  store i32 0, i32* %call112, align 4, !dbg !1995
  br label %while.cond, !dbg !1996

while.cond:                                       ; preds = %if.end123, %if.end111
  %78 = load i32* %pid, align 4, !dbg !1997
  %call113 = call i32 @waitpid(i32 %78, i32* %status, i32 0), !dbg !1997
  %cmp114 = icmp slt i32 %call113, 0, !dbg !1997
  br i1 %cmp114, label %while.body, label %while.end, !dbg !1997

while.body:                                       ; preds = %while.cond
  %call116 = call i32* @__errno_location() #2, !dbg !1999
  %79 = load i32* %call116, align 4, !dbg !1999
  %cmp117 = icmp ne i32 %79, 4, !dbg !1999
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !1999

if.then119:                                       ; preds = %while.body
  %80 = load i32* %pid, align 4, !dbg !2002
  %conv120 = sext i32 %80 to i64, !dbg !2002
  %call121 = call i32* @__errno_location() #2, !dbg !2004
  %81 = load i32* %call121, align 4, !dbg !2004
  %call122 = call i8* @strerror(i32 %81) #9, !dbg !2005
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([20 x i8]* @.str97900, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i64 %conv120, i8* %call122), !dbg !2002
  br label %fail, !dbg !2006

if.end123:                                        ; preds = %while.body
  br label %while.cond, !dbg !2007

while.end:                                        ; preds = %while.cond
  %__in = bitcast %union.anon.3.180* %.compoundliteral to i32*, !dbg !2008
  %82 = load i32* %status, align 4, !dbg !2008
  store i32 %82, i32* %__in, align 4, !dbg !2008
  %__i = bitcast %union.anon.3.180* %.compoundliteral to i32*, !dbg !2008
  %83 = load i32* %__i, align 4, !dbg !2008
  %and = and i32 %83, 127, !dbg !2008
  %cmp124 = icmp eq i32 %and, 0, !dbg !2008
  br i1 %cmp124, label %if.end127, label %if.then126, !dbg !2008

if.then126:                                       ; preds = %while.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str98901, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0)), !dbg !2010
  br label %fail, !dbg !2012

if.end127:                                        ; preds = %while.end
  %__in129 = bitcast %union.anon.4.181* %.compoundliteral128 to i32*, !dbg !2013
  %84 = load i32* %status, align 4, !dbg !2013
  store i32 %84, i32* %__in129, align 4, !dbg !2013
  %__i130 = bitcast %union.anon.4.181* %.compoundliteral128 to i32*, !dbg !2013
  %85 = load i32* %__i130, align 4, !dbg !2013
  %and131 = and i32 %85, 65280, !dbg !2013
  %shr = ashr i32 %and131, 8, !dbg !2013
  %cmp132 = icmp ne i32 %shr, 0, !dbg !2013
  br i1 %cmp132, label %if.then134, label %if.end140, !dbg !2013

if.then134:                                       ; preds = %if.end127
  %__in136 = bitcast %union.anon.5* %.compoundliteral135 to i32*, !dbg !2015
  %86 = load i32* %status, align 4, !dbg !2015
  store i32 %86, i32* %__in136, align 4, !dbg !2015
  %__i137 = bitcast %union.anon.5* %.compoundliteral135 to i32*, !dbg !2015
  %87 = load i32* %__i137, align 4, !dbg !2015
  %and138 = and i32 %87, 65280, !dbg !2015
  %shr139 = ashr i32 %and138, 8, !dbg !2015
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([26 x i8]* @.str99902, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i32 %shr139), !dbg !2015
  br label %fail, !dbg !2017

if.end140:                                        ; preds = %if.end127
  %88 = load %struct.sshbuf** %b, align 8, !dbg !2018
  %call141 = call i32 @sshbuf_get_u8(%struct.sshbuf* %88, i8* %rversion), !dbg !2018
  store i32 %call141, i32* %r, align 4, !dbg !2018
  %cmp142 = icmp ne i32 %call141, 0, !dbg !2018
  br i1 %cmp142, label %if.then144, label %if.end146, !dbg !2018

if.then144:                                       ; preds = %if.end140
  %89 = load i32* %r, align 4, !dbg !2020
  %call145 = call i8* @ssh_err(i32 %89), !dbg !2020
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([21 x i8]* @.str73876, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call145), !dbg !2022
  br label %fail, !dbg !2023

if.end146:                                        ; preds = %if.end140
  %90 = load i8* %rversion, align 1, !dbg !2024
  %conv147 = zext i8 %90 to i32, !dbg !2024
  %91 = load i8* %version, align 1, !dbg !2024
  %conv148 = zext i8 %91 to i32, !dbg !2024
  %cmp149 = icmp ne i32 %conv147, %conv148, !dbg !2024
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !2024

if.then151:                                       ; preds = %if.end146
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([16 x i8]* @.str100903, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0)), !dbg !2026
  br label %fail, !dbg !2028

if.end152:                                        ; preds = %if.end146
  %92 = load %struct.sshbuf** %b, align 8, !dbg !2029
  %93 = load i8*** %sigp.addr, align 8, !dbg !2029
  %94 = load i64** %lenp.addr, align 8, !dbg !2029
  %call153 = call i32 @sshbuf_get_string(%struct.sshbuf* %92, i8** %93, i64* %94), !dbg !2029
  store i32 %call153, i32* %r, align 4, !dbg !2029
  %cmp154 = icmp ne i32 %call153, 0, !dbg !2029
  br i1 %cmp154, label %if.then156, label %if.end161, !dbg !2029

if.then156:                                       ; preds = %if.end152
  %95 = load i32* %r, align 4, !dbg !2031
  %call157 = call i8* @ssh_err(i32 %95), !dbg !2031
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([21 x i8]* @.str73876, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @__func__.ssh_keysign, i32 0, i32 0), i8* %call157), !dbg !2033
  br label %fail, !dbg !2033

fail:                                             ; preds = %if.then156, %if.then151, %if.then144, %if.then134, %if.then126, %if.then119, %if.then110
  %96 = load void (i32)** %osigchld, align 8, !dbg !2034
  %call158 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 17, void (i32)* %96), !dbg !2034
  %97 = load %struct.sshbuf** %b, align 8, !dbg !2035
  call void @sshbuf_free(%struct.sshbuf* %97), !dbg !2035
  %98 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2036
  %99 = extractvalue { i32, i1 } %98, 0, !dbg !2036
  %100 = extractvalue { i32, i1 } %98, 1, !dbg !2036
  %101 = xor i1 %100, true, !dbg !2036
  br i1 %101, label %cont160, label %trap159, !dbg !2036

trap159:                                          ; preds = %fail
  call void @llvm.trap() #3, !dbg !2037
  unreachable, !dbg !2037

cont160:                                          ; preds = %fail
  store i32 %99, i32* %retval, !dbg !2039
  br label %return, !dbg !2039

if.end161:                                        ; preds = %if.end152
  %102 = load void (i32)** %osigchld, align 8, !dbg !2041
  %call162 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 17, void (i32)* %102), !dbg !2041
  %103 = load %struct.sshbuf** %b, align 8, !dbg !2042
  call void @sshbuf_free(%struct.sshbuf* %103), !dbg !2042
  store i32 0, i32* %retval, !dbg !2043
  br label %return, !dbg !2043

return:                                           ; preds = %if.end161, %cont160, %cont35, %cont27, %cont18, %cont10, %cont
  %104 = load i32* %retval, !dbg !2044
  ret i32 %104, !dbg !2044
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @try_identity(%struct.identity* %id) #0 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca %struct.identity*, align 8
  store %struct.identity* %id, %struct.identity** %id.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id.addr}, metadata !2045), !dbg !2046
  %0 = load %struct.identity** %id.addr, align 8, !dbg !2047
  %key = getelementptr inbounds %struct.identity* %0, i32 0, i32 2, !dbg !2047
  %1 = load %struct.sshkey** %key, align 8, !dbg !2047
  %tobool = icmp ne %struct.sshkey* %1, null, !dbg !2047
  br i1 %tobool, label %if.end, label %if.then, !dbg !2047

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !2049
  br label %return, !dbg !2049

if.end:                                           ; preds = %entry
  %2 = load %struct.identity** %id.addr, align 8, !dbg !2050
  %key1 = getelementptr inbounds %struct.identity* %2, i32 0, i32 2, !dbg !2050
  %3 = load %struct.sshkey** %key1, align 8, !dbg !2050
  %type = getelementptr inbounds %struct.sshkey* %3, i32 0, i32 0, !dbg !2050
  %4 = load i32* %type, align 4, !dbg !2050
  %call = call i32 @sshkey_type_plain(i32 %4), !dbg !2050
  %cmp = icmp eq i32 %call, 1, !dbg !2050
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !2050

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32* @datafellows, align 4, !dbg !2052
  %and = and i32 %5, 8192, !dbg !2052
  %cmp2 = icmp ne i32 %and, 0, !dbg !2052
  br i1 %cmp2, label %if.then3, label %if.end6, !dbg !2052

if.then3:                                         ; preds = %land.lhs.true
  %6 = load %struct.identity** %id.addr, align 8, !dbg !2054
  %key4 = getelementptr inbounds %struct.identity* %6, i32 0, i32 2, !dbg !2054
  %7 = load %struct.sshkey** %key4, align 8, !dbg !2054
  %call5 = call i8* @sshkey_type(%struct.sshkey* %7), !dbg !2054
  %8 = load %struct.identity** %id.addr, align 8, !dbg !2056
  %filename = getelementptr inbounds %struct.identity* %8, i32 0, i32 3, !dbg !2056
  %9 = load i8** %filename, align 8, !dbg !2056
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([37 x i8]* @.str112915, i32 0, i32 0), i8* %call5, i8* %9), !dbg !2056
  store i32 0, i32* %retval, !dbg !2057
  br label %return, !dbg !2057

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %10 = load %struct.identity** %id.addr, align 8, !dbg !2058
  %key7 = getelementptr inbounds %struct.identity* %10, i32 0, i32 2, !dbg !2058
  %11 = load %struct.sshkey** %key7, align 8, !dbg !2058
  %type8 = getelementptr inbounds %struct.sshkey* %11, i32 0, i32 0, !dbg !2058
  %12 = load i32* %type8, align 4, !dbg !2058
  %cmp9 = icmp ne i32 %12, 0, !dbg !2058
  %conv = zext i1 %cmp9 to i32, !dbg !2058
  store i32 %conv, i32* %retval, !dbg !2058
  br label %return, !dbg !2058

return:                                           ; preds = %if.end6, %if.then3, %if.then
  %13 = load i32* %retval, !dbg !2059
  ret i32 %13, !dbg !2059
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @send_pubkey_test(%struct.cauthctxt* %authctxt, %struct.identity* %id) #0 {
entry:
  %retval = alloca i32, align 4
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %id.addr = alloca %struct.identity*, align 8
  %blob = alloca i8*, align 8
  %bloblen = alloca i32, align 4
  %have_sig = alloca i32, align 4
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !2060), !dbg !2061
  store %struct.identity* %id, %struct.identity** %id.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id.addr}, metadata !2062), !dbg !2063
  call void @llvm.dbg.declare(metadata !{i8** %blob}, metadata !2064), !dbg !2065
  call void @llvm.dbg.declare(metadata !{i32* %bloblen}, metadata !2066), !dbg !2067
  call void @llvm.dbg.declare(metadata !{i32* %have_sig}, metadata !2068), !dbg !2069
  store i32 0, i32* %have_sig, align 4, !dbg !2070
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([17 x i8]* @.str108911, i32 0, i32 0)), !dbg !2071
  %0 = load %struct.identity** %id.addr, align 8, !dbg !2072
  %key = getelementptr inbounds %struct.identity* %0, i32 0, i32 2, !dbg !2072
  %1 = load %struct.sshkey** %key, align 8, !dbg !2072
  %call = call i32 @key_to_blob(%struct.sshkey* %1, i8** %blob, i32* %bloblen), !dbg !2072
  %cmp = icmp eq i32 %call, 0, !dbg !2072
  br i1 %cmp, label %if.then, label %if.end, !dbg !2072

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([36 x i8]* @.str109912, i32 0, i32 0)), !dbg !2074
  store i32 0, i32* %retval, !dbg !2076
  br label %return, !dbg !2076

if.end:                                           ; preds = %entry
  %2 = load %struct.ssh** @active_state, align 8, !dbg !2077
  call void bitcast (void (%struct.ssh.68*, i32, i32 (i32, i32, i8*)*)* @ssh_dispatch_set to void (%struct.ssh*, i32, i32 (i32, i32, i8*)*)*)(%struct.ssh* %2, i32 60, i32 (i32, i32, i8*)* @input_userauth_pk_ok), !dbg !2077
  %3 = load %struct.ssh** @active_state, align 8, !dbg !2078
  call void @ssh_packet_start(%struct.ssh* %3, i8 zeroext 50), !dbg !2078
  %4 = load %struct.ssh** @active_state, align 8, !dbg !2079
  %5 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2079
  %server_user = getelementptr inbounds %struct.cauthctxt* %5, i32 0, i32 0, !dbg !2079
  %6 = load i8** %server_user, align 8, !dbg !2079
  call void @ssh_packet_put_cstring(%struct.ssh* %4, i8* %6), !dbg !2079
  %7 = load %struct.ssh** @active_state, align 8, !dbg !2080
  %8 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2080
  %service = getelementptr inbounds %struct.cauthctxt* %8, i32 0, i32 3, !dbg !2080
  %9 = load i8** %service, align 8, !dbg !2080
  call void @ssh_packet_put_cstring(%struct.ssh* %7, i8* %9), !dbg !2080
  %10 = load %struct.ssh** @active_state, align 8, !dbg !2081
  %11 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2081
  %method = getelementptr inbounds %struct.cauthctxt* %11, i32 0, i32 4, !dbg !2081
  %12 = load %struct.cauthmethod** %method, align 8, !dbg !2081
  %name = getelementptr inbounds %struct.cauthmethod* %12, i32 0, i32 0, !dbg !2081
  %13 = load i8** %name, align 8, !dbg !2081
  call void @ssh_packet_put_cstring(%struct.ssh* %10, i8* %13), !dbg !2081
  %14 = load %struct.ssh** @active_state, align 8, !dbg !2082
  %15 = load i32* %have_sig, align 4, !dbg !2082
  call void @ssh_packet_put_char(%struct.ssh* %14, i32 %15), !dbg !2082
  %16 = load i32* @datafellows, align 4, !dbg !2083
  %and = and i32 %16, 32, !dbg !2083
  %tobool = icmp ne i32 %and, 0, !dbg !2083
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !2083

if.then1:                                         ; preds = %if.end
  %17 = load %struct.ssh** @active_state, align 8, !dbg !2085
  %18 = load %struct.identity** %id.addr, align 8, !dbg !2085
  %call2 = call i8* @identity_sign_encode(%struct.identity* %18), !dbg !2085
  call void @ssh_packet_put_cstring(%struct.ssh* %17, i8* %call2), !dbg !2085
  br label %if.end3, !dbg !2085

if.end3:                                          ; preds = %if.then1, %if.end
  %19 = load %struct.ssh** @active_state, align 8, !dbg !2086
  %20 = load i8** %blob, align 8, !dbg !2086
  %21 = load i32* %bloblen, align 4, !dbg !2086
  call void @ssh_packet_put_string(%struct.ssh* %19, i8* %20, i32 %21), !dbg !2086
  %22 = load i8** %blob, align 8, !dbg !2087
  call void @free(i8* %22) #9, !dbg !2087
  %23 = load %struct.ssh** @active_state, align 8, !dbg !2088
  call void @ssh_packet_send(%struct.ssh* %23), !dbg !2088
  store i32 1, i32* %retval, !dbg !2089
  br label %return, !dbg !2089

return:                                           ; preds = %if.end3, %if.then
  %24 = load i32* %retval, !dbg !2090
  ret i32 %24, !dbg !2090
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.sshkey* @load_identity_file(%struct.identity* %id) #0 {
entry:
  %retval = alloca %struct.sshkey*, align 8
  %id.addr = alloca %struct.identity*, align 8
  %private = alloca %struct.sshkey*, align 8
  %prompt = alloca [300 x i8], align 16
  %passphrase = alloca i8*, align 8
  %comment = alloca i8*, align 8
  %r = alloca i32, align 4
  %perm_ok = alloca i32, align 4
  %quit = alloca i32, align 4
  %i = alloca i32, align 4
  %st = alloca %struct.stat, align 8
  store %struct.identity* %id, %struct.identity** %id.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id.addr}, metadata !2091), !dbg !2092
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %private}, metadata !2093), !dbg !2094
  %private1 = bitcast %struct.sshkey** %private to i8*, !dbg !2095
  call void @llvm.var.annotation(i8* %private1, i8* getelementptr inbounds ([10 x i8]* @.str101904, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str102905, i32 0, i32 0), i32 1194), !dbg !2095
  store %struct.sshkey* null, %struct.sshkey** %private, align 8, !dbg !2095
  call void @llvm.dbg.declare(metadata !{[300 x i8]* %prompt}, metadata !2096), !dbg !2100
  call void @llvm.dbg.declare(metadata !{i8** %passphrase}, metadata !2101), !dbg !2102
  call void @llvm.dbg.declare(metadata !{i8** %comment}, metadata !2103), !dbg !2104
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !2105), !dbg !2106
  call void @llvm.dbg.declare(metadata !{i32* %perm_ok}, metadata !2107), !dbg !2108
  store i32 0, i32* %perm_ok, align 4, !dbg !2109
  call void @llvm.dbg.declare(metadata !{i32* %quit}, metadata !2110), !dbg !2111
  store i32 0, i32* %quit, align 4, !dbg !2109
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2112), !dbg !2113
  call void @llvm.dbg.declare(metadata !{%struct.stat* %st}, metadata !2114), !dbg !2115
  %0 = load %struct.identity** %id.addr, align 8, !dbg !2116
  %filename = getelementptr inbounds %struct.identity* %0, i32 0, i32 3, !dbg !2116
  %1 = load i8** %filename, align 8, !dbg !2116
  %call = call i32 @stat(i8* %1, %struct.stat* %st) #9, !dbg !2116
  %cmp = icmp slt i32 %call, 0, !dbg !2116
  br i1 %cmp, label %if.then, label %if.end, !dbg !2116

if.then:                                          ; preds = %entry
  %2 = load %struct.identity** %id.addr, align 8, !dbg !2118
  %userprovided = getelementptr inbounds %struct.identity* %2, i32 0, i32 6, !dbg !2118
  %3 = load i32* %userprovided, align 4, !dbg !2118
  %tobool = icmp ne i32 %3, 0, !dbg !2118
  %cond = select i1 %tobool, void (i8*, ...)* @logit, void (i8*, ...)* @debug3, !dbg !2118
  %4 = load %struct.identity** %id.addr, align 8, !dbg !2118
  %filename2 = getelementptr inbounds %struct.identity* %4, i32 0, i32 3, !dbg !2118
  %5 = load i8** %filename2, align 8, !dbg !2118
  %call3 = call i32* @__errno_location() #2, !dbg !2120
  %6 = load i32* %call3, align 4, !dbg !2120
  %call4 = call i8* @strerror(i32 %6) #9, !dbg !2121
  call void (i8*, ...)* %cond(i8* getelementptr inbounds ([25 x i8]* @.str103906, i32 0, i32 0), i8* %5, i8* %call4), !dbg !2118
  store %struct.sshkey* null, %struct.sshkey** %retval, !dbg !2122
  br label %return, !dbg !2122

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [300 x i8]* %prompt, i32 0, i32 0, !dbg !2123
  %7 = load %struct.identity** %id.addr, align 8, !dbg !2123
  %filename5 = getelementptr inbounds %struct.identity* %7, i32 0, i32 3, !dbg !2123
  %8 = load i8** %filename5, align 8, !dbg !2123
  %call6 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 300, i8* getelementptr inbounds ([36 x i8]* @.str104907, i32 0, i32 0), i8* %8) #9, !dbg !2123
  store i32 0, i32* %i, align 4, !dbg !2124
  br label %for.cond, !dbg !2124

for.cond:                                         ; preds = %cont61, %if.end
  %9 = load i32* %i, align 4, !dbg !2126
  %10 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 31), align 4, !dbg !2126
  %cmp7 = icmp sle i32 %9, %10, !dbg !2126
  br i1 %cmp7, label %for.body, label %for.end, !dbg !2126

for.body:                                         ; preds = %for.cond
  %11 = load i32* %i, align 4, !dbg !2129
  %cmp8 = icmp eq i32 %11, 0, !dbg !2129
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !2129

if.then9:                                         ; preds = %for.body
  store i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), i8** %passphrase, align 8, !dbg !2132
  br label %if.end16, !dbg !2132

if.else:                                          ; preds = %for.body
  %arraydecay10 = getelementptr inbounds [300 x i8]* %prompt, i32 0, i32 0, !dbg !2133
  %call11 = call i8* @read_passphrase(i8* %arraydecay10, i32 0), !dbg !2133
  store i8* %call11, i8** %passphrase, align 8, !dbg !2133
  %12 = load i8** %passphrase, align 8, !dbg !2135
  %13 = load i8* %12, align 1, !dbg !2135
  %conv = sext i8 %13 to i32, !dbg !2135
  %cmp12 = icmp eq i32 %conv, 0, !dbg !2135
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !2135

if.then14:                                        ; preds = %if.else
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([34 x i8]* @.str105908, i32 0, i32 0)), !dbg !2137
  %14 = load i8** %passphrase, align 8, !dbg !2139
  call void @free(i8* %14) #9, !dbg !2139
  br label %for.end, !dbg !2140

if.end15:                                         ; preds = %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then9
  %15 = load %struct.identity** %id.addr, align 8, !dbg !2141
  %filename17 = getelementptr inbounds %struct.identity* %15, i32 0, i32 3, !dbg !2141
  %16 = load i8** %filename17, align 8, !dbg !2141
  %17 = load i8** %passphrase, align 8, !dbg !2141
  %call18 = call i32 @sshkey_load_private_type(i32 9, i8* %16, i8* %17, %struct.sshkey** %private, i8** %comment, i32* %perm_ok), !dbg !2141
  store i32 %call18, i32* %r, align 4, !dbg !2141
  switch i32 %call18, label %sw.default [
    i32 0, label %sw.bb
    i32 -43, label %sw.bb19
    i32 -24, label %sw.bb27
  ], !dbg !2141

sw.bb:                                            ; preds = %if.end16
  br label %sw.epilog, !dbg !2142

sw.bb19:                                          ; preds = %if.end16
  %18 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 18), align 4, !dbg !2144
  %tobool20 = icmp ne i32 %18, 0, !dbg !2144
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !2144

if.then21:                                        ; preds = %sw.bb19
  store i32 1, i32* %quit, align 4, !dbg !2146
  br label %sw.epilog, !dbg !2148

if.end22:                                         ; preds = %sw.bb19
  %19 = load i32* %i, align 4, !dbg !2149
  %cmp23 = icmp ne i32 %19, 0, !dbg !2149
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !2149

if.then25:                                        ; preds = %if.end22
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([35 x i8]* @.str106909, i32 0, i32 0)), !dbg !2151
  br label %if.end26, !dbg !2151

if.end26:                                         ; preds = %if.then25, %if.end22
  br label %sw.epilog, !dbg !2152

sw.bb27:                                          ; preds = %if.end16
  %call28 = call i32* @__errno_location() #2, !dbg !2153
  %20 = load i32* %call28, align 4, !dbg !2153
  %cmp29 = icmp eq i32 %20, 2, !dbg !2153
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !2153

if.then31:                                        ; preds = %sw.bb27
  %21 = load %struct.identity** %id.addr, align 8, !dbg !2155
  %filename32 = getelementptr inbounds %struct.identity* %21, i32 0, i32 3, !dbg !2155
  %22 = load i8** %filename32, align 8, !dbg !2155
  %23 = load i32* %r, align 4, !dbg !2157
  %call33 = call i8* @ssh_err(i32 %23), !dbg !2157
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([18 x i8]* @.str107910, i32 0, i32 0), i8* %22, i8* %call33), !dbg !2155
  store i32 1, i32* %quit, align 4, !dbg !2158
  br label %sw.epilog, !dbg !2159

if.end34:                                         ; preds = %sw.bb27
  br label %sw.default, !dbg !2160

sw.default:                                       ; preds = %if.end34, %if.end16
  %24 = load %struct.identity** %id.addr, align 8, !dbg !2162
  %filename35 = getelementptr inbounds %struct.identity* %24, i32 0, i32 3, !dbg !2162
  %25 = load i8** %filename35, align 8, !dbg !2162
  %26 = load i32* %r, align 4, !dbg !2163
  %call36 = call i8* @ssh_err(i32 %26), !dbg !2163
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([18 x i8]* @.str107910, i32 0, i32 0), i8* %25, i8* %call36), !dbg !2162
  store i32 1, i32* %quit, align 4, !dbg !2164
  br label %sw.epilog, !dbg !2165

sw.epilog:                                        ; preds = %sw.default, %if.then31, %if.end26, %if.then21, %sw.bb
  %27 = load i32* %quit, align 4, !dbg !2166
  %tobool37 = icmp ne i32 %27, 0, !dbg !2166
  br i1 %tobool37, label %if.end49, label %land.lhs.true, !dbg !2166

land.lhs.true:                                    ; preds = %sw.epilog
  %28 = load %struct.sshkey** %private, align 8, !dbg !2168
  %cmp38 = icmp ne %struct.sshkey* %28, null, !dbg !2168
  br i1 %cmp38, label %land.lhs.true40, label %if.end49, !dbg !2168

land.lhs.true40:                                  ; preds = %land.lhs.true
  %29 = load %struct.identity** %id.addr, align 8, !dbg !2170
  %agent_fd = getelementptr inbounds %struct.identity* %29, i32 0, i32 1, !dbg !2170
  %30 = load i32* %agent_fd, align 4, !dbg !2170
  %31 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2170
  %32 = extractvalue { i32, i1 } %31, 0, !dbg !2170
  %33 = extractvalue { i32, i1 } %31, 1, !dbg !2170
  %34 = xor i1 %33, true, !dbg !2170
  br i1 %34, label %cont, label %trap, !dbg !2170

trap:                                             ; preds = %land.lhs.true40
  call void @llvm.trap() #3, !dbg !2172
  unreachable, !dbg !2172

cont:                                             ; preds = %land.lhs.true40
  %cmp41 = icmp eq i32 %30, %32, !dbg !2174
  br i1 %cmp41, label %land.lhs.true43, label %if.end49, !dbg !2174

land.lhs.true43:                                  ; preds = %cont
  %35 = load %struct.identity** %id.addr, align 8, !dbg !2176
  %key = getelementptr inbounds %struct.identity* %35, i32 0, i32 2, !dbg !2176
  %36 = load %struct.sshkey** %key, align 8, !dbg !2176
  %tobool44 = icmp ne %struct.sshkey* %36, null, !dbg !2176
  br i1 %tobool44, label %land.lhs.true45, label %if.then47, !dbg !2176

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %37 = load %struct.identity** %id.addr, align 8, !dbg !2178
  %isprivate = getelementptr inbounds %struct.identity* %37, i32 0, i32 5, !dbg !2178
  %38 = load i32* %isprivate, align 4, !dbg !2178
  %tobool46 = icmp ne i32 %38, 0, !dbg !2178
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !2178

if.then47:                                        ; preds = %land.lhs.true45, %land.lhs.true43
  %39 = load %struct.identity** %id.addr, align 8, !dbg !2180
  %filename48 = getelementptr inbounds %struct.identity* %39, i32 0, i32 3, !dbg !2180
  %40 = load i8** %filename48, align 8, !dbg !2180
  %41 = load %struct.sshkey** %private, align 8, !dbg !2180
  %42 = load i8** %comment, align 8, !dbg !2180
  %43 = load i8** %passphrase, align 8, !dbg !2180
  call void @maybe_add_key_to_agent(i8* %40, %struct.sshkey* %41, i8* %42, i8* %43), !dbg !2180
  br label %if.end49, !dbg !2180

if.end49:                                         ; preds = %if.then47, %land.lhs.true45, %cont, %land.lhs.true, %sw.epilog
  %44 = load i32* %i, align 4, !dbg !2181
  %cmp50 = icmp sgt i32 %44, 0, !dbg !2181
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !2181

if.then52:                                        ; preds = %if.end49
  %45 = load i8** %passphrase, align 8, !dbg !2183
  %46 = load i8** %passphrase, align 8, !dbg !2185
  %call53 = call i64 @strlen(i8* %46) #12, !dbg !2185
  call void @explicit_bzero(i8* %45, i64 %call53), !dbg !2183
  %47 = load i8** %passphrase, align 8, !dbg !2186
  call void @free(i8* %47) #9, !dbg !2186
  br label %if.end54, !dbg !2187

if.end54:                                         ; preds = %if.then52, %if.end49
  %48 = load i8** %comment, align 8, !dbg !2188
  call void @free(i8* %48) #9, !dbg !2188
  %49 = load %struct.sshkey** %private, align 8, !dbg !2189
  %cmp55 = icmp ne %struct.sshkey* %49, null, !dbg !2189
  br i1 %cmp55, label %if.then58, label %lor.lhs.false, !dbg !2189

lor.lhs.false:                                    ; preds = %if.end54
  %50 = load i32* %quit, align 4, !dbg !2191
  %tobool57 = icmp ne i32 %50, 0, !dbg !2191
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !2191

if.then58:                                        ; preds = %lor.lhs.false, %if.end54
  br label %for.end, !dbg !2193

if.end59:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !2194

for.inc:                                          ; preds = %if.end59
  %51 = load i32* %i, align 4, !dbg !2195
  %52 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 1), !dbg !2195
  %53 = extractvalue { i32, i1 } %52, 0, !dbg !2195
  %54 = extractvalue { i32, i1 } %52, 1, !dbg !2195
  %55 = xor i1 %54, true, !dbg !2195
  br i1 %55, label %cont61, label %trap60, !dbg !2195

trap60:                                           ; preds = %for.inc
  call void @llvm.trap() #3, !dbg !2196
  unreachable, !dbg !2196

cont61:                                           ; preds = %for.inc
  store i32 %53, i32* %i, align 4, !dbg !2198
  br label %for.cond, !dbg !2198

for.end:                                          ; preds = %if.then58, %if.then14, %for.cond
  %56 = load %struct.sshkey** %private, align 8, !dbg !2200
  store %struct.sshkey* %56, %struct.sshkey** %retval, !dbg !2200
  br label %return, !dbg !2200

return:                                           ; preds = %for.end, %if.then
  %57 = load %struct.sshkey** %retval, !dbg !2201
  ret %struct.sshkey* %57, !dbg !2201
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @sign_and_send_pubkey(%struct.cauthctxt* %authctxt, %struct.identity* %id) #0 {
entry:
  %retval = alloca i32, align 4
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %id.addr = alloca %struct.identity*, align 8
  %b = alloca %struct.sshbuf, align 8
  %private_id = alloca %struct.identity*, align 8
  %blob = alloca i8*, align 8
  %signature = alloca i8*, align 8
  %slen = alloca i64, align 8
  %bloblen = alloca i32, align 4
  %skip = alloca i32, align 4
  %matched = alloca i32, align 4
  %ret = alloca i32, align 4
  %have_sig = alloca i32, align 4
  %fp = alloca i8*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !2202), !dbg !2203
  store %struct.identity* %id, %struct.identity** %id.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id.addr}, metadata !2204), !dbg !2205
  call void @llvm.dbg.declare(metadata !{%struct.sshbuf* %b}, metadata !2206), !dbg !2207
  call void @llvm.dbg.declare(metadata !{%struct.identity** %private_id}, metadata !2208), !dbg !2209
  call void @llvm.dbg.declare(metadata !{i8** %blob}, metadata !2210), !dbg !2211
  call void @llvm.dbg.declare(metadata !{i8** %signature}, metadata !2212), !dbg !2213
  call void @llvm.dbg.declare(metadata !{i64* %slen}, metadata !2214), !dbg !2215
  call void @llvm.dbg.declare(metadata !{i32* %bloblen}, metadata !2216), !dbg !2217
  call void @llvm.dbg.declare(metadata !{i32* %skip}, metadata !2218), !dbg !2219
  store i32 0, i32* %skip, align 4, !dbg !2220
  call void @llvm.dbg.declare(metadata !{i32* %matched}, metadata !2221), !dbg !2222
  call void @llvm.dbg.declare(metadata !{i32* %ret}, metadata !2223), !dbg !2224
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2225
  %1 = extractvalue { i32, i1 } %0, 0, !dbg !2225
  %2 = extractvalue { i32, i1 } %0, 1, !dbg !2225
  %3 = xor i1 %2, true, !dbg !2225
  br i1 %3, label %cont, label %trap, !dbg !2225

trap:                                             ; preds = %entry
  call void @llvm.trap() #3, !dbg !2226
  unreachable, !dbg !2226

cont:                                             ; preds = %entry
  store i32 %1, i32* %ret, align 4, !dbg !2228
  call void @llvm.dbg.declare(metadata !{i32* %have_sig}, metadata !2230), !dbg !2231
  store i32 1, i32* %have_sig, align 4, !dbg !2225
  call void @llvm.dbg.declare(metadata !{i8** %fp}, metadata !2232), !dbg !2233
  %4 = load %struct.identity** %id.addr, align 8, !dbg !2234
  %key = getelementptr inbounds %struct.identity* %4, i32 0, i32 2, !dbg !2234
  %5 = load %struct.sshkey** %key, align 8, !dbg !2234
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 98), align 4, !dbg !2234
  %call = call i8* @sshkey_fingerprint(%struct.sshkey* %5, i32 %6, i32 0), !dbg !2234
  store i8* %call, i8** %fp, align 8, !dbg !2234
  %cmp = icmp eq i8* %call, null, !dbg !2234
  br i1 %cmp, label %if.then, label %if.end, !dbg !2234

if.then:                                          ; preds = %cont
  store i32 0, i32* %retval, !dbg !2236
  br label %return, !dbg !2236

if.end:                                           ; preds = %cont
  %7 = load %struct.identity** %id.addr, align 8, !dbg !2237
  %key1 = getelementptr inbounds %struct.identity* %7, i32 0, i32 2, !dbg !2237
  %8 = load %struct.sshkey** %key1, align 8, !dbg !2237
  %call2 = call i8* @sshkey_type(%struct.sshkey* %8), !dbg !2237
  %9 = load i8** %fp, align 8, !dbg !2238
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([10 x i8]* @.str119922, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.sign_and_send_pubkey, i32 0, i32 0), i8* %call2, i8* %9), !dbg !2238
  %10 = load i8** %fp, align 8, !dbg !2239
  call void @free(i8* %10) #9, !dbg !2239
  %11 = load %struct.identity** %id.addr, align 8, !dbg !2240
  %key3 = getelementptr inbounds %struct.identity* %11, i32 0, i32 2, !dbg !2240
  %12 = load %struct.sshkey** %key3, align 8, !dbg !2240
  %call4 = call i32 @key_to_blob(%struct.sshkey* %12, i8** %blob, i32* %bloblen), !dbg !2240
  %cmp5 = icmp eq i32 %call4, 0, !dbg !2240
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2240

if.then6:                                         ; preds = %if.end
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([40 x i8]* @.str120923, i32 0, i32 0)), !dbg !2242
  store i32 0, i32* %retval, !dbg !2244
  br label %return, !dbg !2244

if.end7:                                          ; preds = %if.end
  call void @sshbuf_init(%struct.sshbuf* %b), !dbg !2245
  %13 = load i32* @datafellows, align 4, !dbg !2246
  %and = and i32 %13, 16, !dbg !2246
  %tobool = icmp ne i32 %and, 0, !dbg !2246
  br i1 %tobool, label %if.then8, label %if.else, !dbg !2246

if.then8:                                         ; preds = %if.end7
  %14 = load i8** @session_id2, align 8, !dbg !2248
  %15 = load i32* @session_id2_len, align 4, !dbg !2248
  call void @buffer_append(%struct.sshbuf* %b, i8* %14, i32 %15), !dbg !2248
  %16 = load i32* @session_id2_len, align 4, !dbg !2250
  store i32 %16, i32* %skip, align 4, !dbg !2250
  br label %if.end10, !dbg !2251

if.else:                                          ; preds = %if.end7
  %17 = load i8** @session_id2, align 8, !dbg !2252
  %18 = load i32* @session_id2_len, align 4, !dbg !2252
  call void @buffer_put_string(%struct.sshbuf* %b, i8* %17, i32 %18), !dbg !2252
  %call9 = call i64 @sshbuf_len(%struct.sshbuf* %b), !dbg !2254
  %conv = trunc i64 %call9 to i32, !dbg !2254
  store i32 %conv, i32* %skip, align 4, !dbg !2254
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  call void @buffer_put_char(%struct.sshbuf* %b, i32 50), !dbg !2255
  %19 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2256
  %server_user = getelementptr inbounds %struct.cauthctxt* %19, i32 0, i32 0, !dbg !2256
  %20 = load i8** %server_user, align 8, !dbg !2256
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %20), !dbg !2256
  %21 = load i32* @datafellows, align 4, !dbg !2257
  %and11 = and i32 %21, 2, !dbg !2257
  %tobool12 = icmp ne i32 %and11, 0, !dbg !2257
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !2257

cond.true:                                        ; preds = %if.end10
  br label %cond.end, !dbg !2258

cond.false:                                       ; preds = %if.end10
  %22 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2260
  %service = getelementptr inbounds %struct.cauthctxt* %22, i32 0, i32 3, !dbg !2260
  %23 = load i8** %service, align 8, !dbg !2260
  br label %cond.end, !dbg !2260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([13 x i8]* @.str20823, i32 0, i32 0), %cond.true ], [ %23, %cond.false ], !dbg !2257
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %cond), !dbg !2262
  %24 = load i32* @datafellows, align 4, !dbg !2265
  %and13 = and i32 %24, 32, !dbg !2265
  %tobool14 = icmp ne i32 %and13, 0, !dbg !2265
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !2265

if.then15:                                        ; preds = %cond.end
  %25 = load i32* %have_sig, align 4, !dbg !2267
  call void @buffer_put_char(%struct.sshbuf* %b, i32 %25), !dbg !2267
  br label %if.end18, !dbg !2269

if.else16:                                        ; preds = %cond.end
  %26 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2270
  %method = getelementptr inbounds %struct.cauthctxt* %26, i32 0, i32 4, !dbg !2270
  %27 = load %struct.cauthmethod** %method, align 8, !dbg !2270
  %name = getelementptr inbounds %struct.cauthmethod* %27, i32 0, i32 0, !dbg !2270
  %28 = load i8** %name, align 8, !dbg !2270
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %28), !dbg !2270
  %29 = load i32* %have_sig, align 4, !dbg !2272
  call void @buffer_put_char(%struct.sshbuf* %b, i32 %29), !dbg !2272
  %30 = load %struct.identity** %id.addr, align 8, !dbg !2273
  %call17 = call i8* @identity_sign_encode(%struct.identity* %30), !dbg !2273
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %call17), !dbg !2274
  br label %if.end18

if.end18:                                         ; preds = %if.else16, %if.then15
  %31 = load i8** %blob, align 8, !dbg !2275
  %32 = load i32* %bloblen, align 4, !dbg !2275
  call void @buffer_put_string(%struct.sshbuf* %b, i8* %31, i32 %32), !dbg !2275
  %33 = load %struct.identity** %id.addr, align 8, !dbg !2276
  %key19 = getelementptr inbounds %struct.identity* %33, i32 0, i32 2, !dbg !2276
  %34 = load %struct.sshkey** %key19, align 8, !dbg !2276
  %call20 = call i32 @sshkey_is_cert(%struct.sshkey* %34), !dbg !2276
  %tobool21 = icmp ne i32 %call20, 0, !dbg !2276
  br i1 %tobool21, label %if.then22, label %if.end46, !dbg !2276

if.then22:                                        ; preds = %if.end18
  store i32 0, i32* %matched, align 4, !dbg !2278
  %35 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2280
  %keys = getelementptr inbounds %struct.cauthctxt* %35, i32 0, i32 8, !dbg !2280
  %tqh_first = getelementptr inbounds %struct.idlist* %keys, i32 0, i32 0, !dbg !2280
  %36 = load %struct.identity** %tqh_first, align 8, !dbg !2280
  store %struct.identity* %36, %struct.identity** %private_id, align 8, !dbg !2280
  br label %for.cond, !dbg !2280

for.cond:                                         ; preds = %for.inc, %if.then22
  %37 = load %struct.identity** %private_id, align 8, !dbg !2282
  %cmp23 = icmp ne %struct.identity* %37, null, !dbg !2282
  br i1 %cmp23, label %for.body, label %for.end, !dbg !2282

for.body:                                         ; preds = %for.cond
  %38 = load %struct.identity** %id.addr, align 8, !dbg !2285
  %key25 = getelementptr inbounds %struct.identity* %38, i32 0, i32 2, !dbg !2285
  %39 = load %struct.sshkey** %key25, align 8, !dbg !2285
  %40 = load %struct.identity** %private_id, align 8, !dbg !2285
  %key26 = getelementptr inbounds %struct.identity* %40, i32 0, i32 2, !dbg !2285
  %41 = load %struct.sshkey** %key26, align 8, !dbg !2285
  %call27 = call i32 @sshkey_equal_public(%struct.sshkey* %39, %struct.sshkey* %41), !dbg !2285
  %tobool28 = icmp ne i32 %call27, 0, !dbg !2285
  br i1 %tobool28, label %land.lhs.true, label %if.end35, !dbg !2285

land.lhs.true:                                    ; preds = %for.body
  %42 = load %struct.identity** %id.addr, align 8, !dbg !2288
  %key29 = getelementptr inbounds %struct.identity* %42, i32 0, i32 2, !dbg !2288
  %43 = load %struct.sshkey** %key29, align 8, !dbg !2288
  %type = getelementptr inbounds %struct.sshkey* %43, i32 0, i32 0, !dbg !2288
  %44 = load i32* %type, align 4, !dbg !2288
  %45 = load %struct.identity** %private_id, align 8, !dbg !2288
  %key30 = getelementptr inbounds %struct.identity* %45, i32 0, i32 2, !dbg !2288
  %46 = load %struct.sshkey** %key30, align 8, !dbg !2288
  %type31 = getelementptr inbounds %struct.sshkey* %46, i32 0, i32 0, !dbg !2288
  %47 = load i32* %type31, align 4, !dbg !2288
  %cmp32 = icmp ne i32 %44, %47, !dbg !2288
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !2288

if.then34:                                        ; preds = %land.lhs.true
  %48 = load %struct.identity** %private_id, align 8, !dbg !2290
  store %struct.identity* %48, %struct.identity** %id.addr, align 8, !dbg !2290
  store i32 1, i32* %matched, align 4, !dbg !2292
  br label %for.end, !dbg !2293

if.end35:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !2294

for.inc:                                          ; preds = %if.end35
  %49 = load %struct.identity** %private_id, align 8, !dbg !2280
  %next = getelementptr inbounds %struct.identity* %49, i32 0, i32 0, !dbg !2280
  %tqe_next = getelementptr inbounds %struct.anon.2.172* %next, i32 0, i32 0, !dbg !2280
  %50 = load %struct.identity** %tqe_next, align 8, !dbg !2280
  store %struct.identity* %50, %struct.identity** %private_id, align 8, !dbg !2280
  br label %for.cond, !dbg !2280

for.end:                                          ; preds = %if.then34, %for.cond
  %51 = load i32* %matched, align 4, !dbg !2295
  %tobool36 = icmp ne i32 %51, 0, !dbg !2295
  br i1 %tobool36, label %if.then37, label %if.else43, !dbg !2295

if.then37:                                        ; preds = %for.end
  %52 = load %struct.identity** %id.addr, align 8, !dbg !2297
  %filename = getelementptr inbounds %struct.identity* %52, i32 0, i32 3, !dbg !2297
  %53 = load i8** %filename, align 8, !dbg !2297
  %54 = load %struct.identity** %id.addr, align 8, !dbg !2297
  %agent_fd = getelementptr inbounds %struct.identity* %54, i32 0, i32 1, !dbg !2297
  %55 = load i32* %agent_fd, align 4, !dbg !2297
  %56 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2297
  %57 = extractvalue { i32, i1 } %56, 0, !dbg !2297
  %58 = extractvalue { i32, i1 } %56, 1, !dbg !2297
  %59 = xor i1 %58, true, !dbg !2297
  br i1 %59, label %cont39, label %trap38, !dbg !2297

trap38:                                           ; preds = %if.then37
  call void @llvm.trap() #3, !dbg !2299
  unreachable, !dbg !2299

cont39:                                           ; preds = %if.then37
  %cmp40 = icmp ne i32 %55, %57, !dbg !2301
  %cond42 = select i1 %cmp40, i8* getelementptr inbounds ([12 x i8]* @.str122925, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), !dbg !2301
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([45 x i8]* @.str121924, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.sign_and_send_pubkey, i32 0, i32 0), i8* %53, i8* %cond42), !dbg !2301
  br label %if.end45, !dbg !2303

if.else43:                                        ; preds = %for.end
  %60 = load %struct.identity** %id.addr, align 8, !dbg !2304
  %filename44 = getelementptr inbounds %struct.identity* %60, i32 0, i32 3, !dbg !2304
  %61 = load i8** %filename44, align 8, !dbg !2304
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([49 x i8]* @.str123926, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.sign_and_send_pubkey, i32 0, i32 0), i8* %61), !dbg !2304
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %cont39
  br label %if.end46, !dbg !2306

if.end46:                                         ; preds = %if.end45, %if.end18
  %62 = load %struct.identity** %id.addr, align 8, !dbg !2307
  %call47 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %b), !dbg !2308
  %call48 = call i64 @sshbuf_len(%struct.sshbuf* %b), !dbg !2309
  %conv49 = trunc i64 %call48 to i32, !dbg !2309
  %conv50 = zext i32 %conv49 to i64, !dbg !2309
  %63 = load i32* @datafellows, align 4, !dbg !2307
  %call51 = call i32 @identity_sign(%struct.identity* %62, i8** %signature, i64* %slen, i8* %call47, i64 %conv50, i32 %63), !dbg !2307
  store i32 %call51, i32* %ret, align 4, !dbg !2307
  %64 = load i32* %ret, align 4, !dbg !2310
  %cmp52 = icmp ne i32 %64, 0, !dbg !2310
  br i1 %cmp52, label %if.then54, label %if.end62, !dbg !2310

if.then54:                                        ; preds = %if.end46
  %65 = load i32* %ret, align 4, !dbg !2312
  %66 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 46), !dbg !2312
  %67 = extractvalue { i32, i1 } %66, 0, !dbg !2312
  %68 = extractvalue { i32, i1 } %66, 1, !dbg !2312
  %69 = xor i1 %68, true, !dbg !2312
  br i1 %69, label %cont56, label %trap55, !dbg !2312

trap55:                                           ; preds = %if.then54
  call void @llvm.trap() #3, !dbg !2315
  unreachable, !dbg !2315

cont56:                                           ; preds = %if.then54
  %cmp57 = icmp ne i32 %65, %67, !dbg !2317
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !2317

if.then59:                                        ; preds = %cont56
  %70 = load i32* %ret, align 4, !dbg !2319
  %call60 = call i8* @ssh_err(i32 %70), !dbg !2319
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([23 x i8]* @.str124927, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.sign_and_send_pubkey, i32 0, i32 0), i8* %call60), !dbg !2320
  br label %if.end61, !dbg !2320

if.end61:                                         ; preds = %if.then59, %cont56
  %71 = load i8** %blob, align 8, !dbg !2321
  call void @free(i8* %71) #9, !dbg !2321
  call void @sshbuf_free(%struct.sshbuf* %b), !dbg !2322
  store i32 0, i32* %retval, !dbg !2323
  br label %return, !dbg !2323

if.end62:                                         ; preds = %if.end46
  %72 = load i32* @datafellows, align 4, !dbg !2324
  %and63 = and i32 %72, 2, !dbg !2324
  %tobool64 = icmp ne i32 %and63, 0, !dbg !2324
  br i1 %tobool64, label %if.then65, label %if.end76, !dbg !2324

if.then65:                                        ; preds = %if.end62
  call void @sshbuf_reset(%struct.sshbuf* %b), !dbg !2326
  %73 = load i8** @session_id2, align 8, !dbg !2328
  %74 = load i32* @session_id2_len, align 4, !dbg !2328
  call void @buffer_append(%struct.sshbuf* %b, i8* %73, i32 %74), !dbg !2328
  %75 = load i32* @session_id2_len, align 4, !dbg !2329
  store i32 %75, i32* %skip, align 4, !dbg !2329
  call void @buffer_put_char(%struct.sshbuf* %b, i32 50), !dbg !2330
  %76 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2331
  %server_user66 = getelementptr inbounds %struct.cauthctxt* %76, i32 0, i32 0, !dbg !2331
  %77 = load i8** %server_user66, align 8, !dbg !2331
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %77), !dbg !2331
  %78 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2332
  %service67 = getelementptr inbounds %struct.cauthctxt* %78, i32 0, i32 3, !dbg !2332
  %79 = load i8** %service67, align 8, !dbg !2332
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %79), !dbg !2332
  %80 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2333
  %method68 = getelementptr inbounds %struct.cauthctxt* %80, i32 0, i32 4, !dbg !2333
  %81 = load %struct.cauthmethod** %method68, align 8, !dbg !2333
  %name69 = getelementptr inbounds %struct.cauthmethod* %81, i32 0, i32 0, !dbg !2333
  %82 = load i8** %name69, align 8, !dbg !2333
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %82), !dbg !2333
  %83 = load i32* %have_sig, align 4, !dbg !2334
  call void @buffer_put_char(%struct.sshbuf* %b, i32 %83), !dbg !2334
  %84 = load i32* @datafellows, align 4, !dbg !2335
  %and70 = and i32 %84, 32, !dbg !2335
  %tobool71 = icmp ne i32 %and70, 0, !dbg !2335
  br i1 %tobool71, label %if.end75, label %if.then72, !dbg !2335

if.then72:                                        ; preds = %if.then65
  %85 = load %struct.identity** %id.addr, align 8, !dbg !2337
  %key73 = getelementptr inbounds %struct.identity* %85, i32 0, i32 2, !dbg !2337
  %86 = load %struct.sshkey** %key73, align 8, !dbg !2337
  %call74 = call i8* @sshkey_ssh_name(%struct.sshkey* %86), !dbg !2337
  call void @buffer_put_cstring(%struct.sshbuf* %b, i8* %call74), !dbg !2338
  br label %if.end75, !dbg !2338

if.end75:                                         ; preds = %if.then72, %if.then65
  %87 = load i8** %blob, align 8, !dbg !2339
  %88 = load i32* %bloblen, align 4, !dbg !2339
  call void @buffer_put_string(%struct.sshbuf* %b, i8* %87, i32 %88), !dbg !2339
  br label %if.end76, !dbg !2340

if.end76:                                         ; preds = %if.end75, %if.end62
  %89 = load i8** %blob, align 8, !dbg !2341
  call void @free(i8* %89) #9, !dbg !2341
  %90 = load i8** %signature, align 8, !dbg !2342
  %91 = load i64* %slen, align 8, !dbg !2342
  %conv77 = trunc i64 %91 to i32, !dbg !2342
  call void @buffer_put_string(%struct.sshbuf* %b, i8* %90, i32 %conv77), !dbg !2342
  %92 = load i8** %signature, align 8, !dbg !2343
  call void @free(i8* %92) #9, !dbg !2343
  %call78 = call i64 @sshbuf_len(%struct.sshbuf* %b), !dbg !2344
  %conv79 = trunc i64 %call78 to i32, !dbg !2344
  %93 = load i32* %skip, align 4, !dbg !2344
  %add = add i32 %93, 1, !dbg !2344
  %cmp80 = icmp ult i32 %conv79, %add, !dbg !2344
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !2344

if.then82:                                        ; preds = %if.end76
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str125928, i32 0, i32 0)) #11, !dbg !2346
  unreachable, !dbg !2346

if.end83:                                         ; preds = %if.end76
  %94 = load i32* %skip, align 4, !dbg !2347
  %add84 = add i32 %94, 1, !dbg !2347
  call void @buffer_consume(%struct.sshbuf* %b, i32 %add84), !dbg !2347
  %95 = load %struct.ssh** @active_state, align 8, !dbg !2348
  call void @ssh_packet_start(%struct.ssh* %95, i8 zeroext 50), !dbg !2348
  %96 = load %struct.ssh** @active_state, align 8, !dbg !2349
  %call85 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %b), !dbg !2349
  %call86 = call i64 @sshbuf_len(%struct.sshbuf* %b), !dbg !2349
  %conv87 = trunc i64 %call86 to i32, !dbg !2349
  call void @ssh_packet_put_raw(%struct.ssh* %96, i8* %call85, i32 %conv87), !dbg !2349
  call void @sshbuf_free(%struct.sshbuf* %b), !dbg !2350
  %97 = load %struct.ssh** @active_state, align 8, !dbg !2351
  call void @ssh_packet_send(%struct.ssh* %97), !dbg !2351
  store i32 1, i32* %retval, !dbg !2352
  br label %return, !dbg !2352

return:                                           ; preds = %if.end83, %if.end61, %if.then6, %if.then
  %98 = load i32* %retval, !dbg !2353
  ret i32 %98, !dbg !2353
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @authmethods_get() #0 {
entry:
  %method = alloca %struct.cauthmethod*, align 8
  %b = alloca %struct.sshbuf, align 8
  %list = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthmethod** %method}, metadata !2354), !dbg !2355
  store %struct.cauthmethod* null, %struct.cauthmethod** %method, align 8, !dbg !2356
  call void @llvm.dbg.declare(metadata !{%struct.sshbuf* %b}, metadata !2357), !dbg !2358
  call void @llvm.dbg.declare(metadata !{i8** %list}, metadata !2359), !dbg !2360
  call void @sshbuf_init(%struct.sshbuf* %b), !dbg !2361
  store %struct.cauthmethod* getelementptr inbounds ([6 x %struct.cauthmethod]* @authmethods, i32 0, i32 0), %struct.cauthmethod** %method, align 8, !dbg !2362
  br label %for.cond, !dbg !2362

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.cauthmethod** %method, align 8, !dbg !2364
  %name = getelementptr inbounds %struct.cauthmethod* %0, i32 0, i32 0, !dbg !2364
  %1 = load i8** %name, align 8, !dbg !2364
  %cmp = icmp ne i8* %1, null, !dbg !2364
  br i1 %cmp, label %for.body, label %for.end, !dbg !2364

for.body:                                         ; preds = %for.cond
  %2 = load %struct.cauthmethod** %method, align 8, !dbg !2367
  %call = call i32 @authmethod_is_enabled(%struct.cauthmethod* %2), !dbg !2367
  %tobool = icmp ne i32 %call, 0, !dbg !2367
  br i1 %tobool, label %if.then, label %if.end9, !dbg !2367

if.then:                                          ; preds = %for.body
  %call1 = call i64 @sshbuf_len(%struct.sshbuf* %b), !dbg !2370
  %conv = trunc i64 %call1 to i32, !dbg !2370
  %cmp2 = icmp ugt i32 %conv, 0, !dbg !2370
  br i1 %cmp2, label %if.then4, label %if.end, !dbg !2370

if.then4:                                         ; preds = %if.then
  call void @buffer_append(%struct.sshbuf* %b, i8* getelementptr inbounds ([2 x i8]* @.str63866, i32 0, i32 0), i32 1), !dbg !2373
  br label %if.end, !dbg !2373

if.end:                                           ; preds = %if.then4, %if.then
  %3 = load %struct.cauthmethod** %method, align 8, !dbg !2374
  %name5 = getelementptr inbounds %struct.cauthmethod* %3, i32 0, i32 0, !dbg !2374
  %4 = load i8** %name5, align 8, !dbg !2374
  %5 = load %struct.cauthmethod** %method, align 8, !dbg !2375
  %name6 = getelementptr inbounds %struct.cauthmethod* %5, i32 0, i32 0, !dbg !2375
  %6 = load i8** %name6, align 8, !dbg !2375
  %call7 = call i64 @strlen(i8* %6) #12, !dbg !2375
  %conv8 = trunc i64 %call7 to i32, !dbg !2375
  call void @buffer_append(%struct.sshbuf* %b, i8* %4, i32 %conv8), !dbg !2374
  br label %if.end9, !dbg !2376

if.end9:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !2377

for.inc:                                          ; preds = %if.end9
  %7 = load %struct.cauthmethod** %method, align 8, !dbg !2378
  %incdec.ptr = getelementptr inbounds %struct.cauthmethod* %7, i32 1, !dbg !2378
  store %struct.cauthmethod* %incdec.ptr, %struct.cauthmethod** %method, align 8, !dbg !2378
  br label %for.cond, !dbg !2378

for.end:                                          ; preds = %for.cond
  %call10 = call i8* @sshbuf_dup_string(%struct.sshbuf* %b), !dbg !2379
  store i8* %call10, i8** %list, align 8, !dbg !2379
  %cmp11 = icmp eq i8* %call10, null, !dbg !2379
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !2379

if.then13:                                        ; preds = %for.end
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([29 x i8]* @.str77880, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @__func__.authmethods_get, i32 0, i32 0)) #11, !dbg !2381
  unreachable, !dbg !2381

if.end14:                                         ; preds = %for.end
  call void @sshbuf_free(%struct.sshbuf* %b), !dbg !2382
  %8 = load i8** %list, align 8, !dbg !2383
  ret i8* %8, !dbg !2383
}

; Function Attrs: nounwind sspreq uwtable
define internal void @pubkey_prepare(%struct.cauthctxt* %authctxt) #0 {
entry:
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %id = alloca %struct.identity*, align 8
  %id2 = alloca %struct.identity*, align 8
  %tmp = alloca %struct.identity*, align 8
  %agent = alloca %struct.idlist, align 8
  %files = alloca %struct.idlist, align 8
  %preferred = alloca %struct.idlist*, align 8
  %key = alloca %struct.sshkey*, align 8
  %agent_fd = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %found = alloca i32, align 4
  %j = alloca i64, align 8
  %idlist = alloca %struct.ssh_identitylist*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !2384), !dbg !2385
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id}, metadata !2386), !dbg !2387
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id2}, metadata !2388), !dbg !2389
  call void @llvm.dbg.declare(metadata !{%struct.identity** %tmp}, metadata !2390), !dbg !2391
  call void @llvm.dbg.declare(metadata !{%struct.idlist* %agent}, metadata !2392), !dbg !2393
  call void @llvm.dbg.declare(metadata !{%struct.idlist* %files}, metadata !2394), !dbg !2395
  call void @llvm.dbg.declare(metadata !{%struct.idlist** %preferred}, metadata !2396), !dbg !2398
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %key}, metadata !2399), !dbg !2400
  call void @llvm.dbg.declare(metadata !{i32* %agent_fd}, metadata !2401), !dbg !2402
  %0 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2403
  %1 = extractvalue { i32, i1 } %0, 0, !dbg !2403
  %2 = extractvalue { i32, i1 } %0, 1, !dbg !2403
  %3 = xor i1 %2, true, !dbg !2403
  br i1 %3, label %cont, label %trap, !dbg !2403

trap:                                             ; preds = %entry
  call void @llvm.trap() #3, !dbg !2404
  unreachable, !dbg !2404

cont:                                             ; preds = %entry
  store i32 %1, i32* %agent_fd, align 4, !dbg !2406
  call void @llvm.dbg.declare(metadata !{i32* %i}, metadata !2408), !dbg !2409
  call void @llvm.dbg.declare(metadata !{i32* %r}, metadata !2410), !dbg !2411
  call void @llvm.dbg.declare(metadata !{i32* %found}, metadata !2412), !dbg !2413
  call void @llvm.dbg.declare(metadata !{i64* %j}, metadata !2414), !dbg !2415
  call void @llvm.dbg.declare(metadata !{%struct.ssh_identitylist** %idlist}, metadata !2416), !dbg !2425
  br label %do.body, !dbg !2426

do.body:                                          ; preds = %cont
  %tqh_first = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 0, !dbg !2427
  store %struct.identity* null, %struct.identity** %tqh_first, align 8, !dbg !2427
  %tqh_first11 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 0, !dbg !2427
  %tqh_last = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 1, !dbg !2427
  store %struct.identity** %tqh_first11, %struct.identity*** %tqh_last, align 8, !dbg !2427
  br label %do.end, !dbg !2427

do.end:                                           ; preds = %do.body
  br label %do.body12, !dbg !2430

do.body12:                                        ; preds = %do.end
  %tqh_first13 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2431
  store %struct.identity* null, %struct.identity** %tqh_first13, align 8, !dbg !2431
  %tqh_first14 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2431
  %tqh_last15 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2431
  store %struct.identity** %tqh_first14, %struct.identity*** %tqh_last15, align 8, !dbg !2431
  br label %do.end16, !dbg !2431

do.end16:                                         ; preds = %do.body12
  %4 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2434
  %keys = getelementptr inbounds %struct.cauthctxt* %4, i32 0, i32 8, !dbg !2434
  store %struct.idlist* %keys, %struct.idlist** %preferred, align 8, !dbg !2434
  br label %do.body17, !dbg !2435

do.body17:                                        ; preds = %do.end16
  %5 = load %struct.idlist** %preferred, align 8, !dbg !2436
  %tqh_first18 = getelementptr inbounds %struct.idlist* %5, i32 0, i32 0, !dbg !2436
  store %struct.identity* null, %struct.identity** %tqh_first18, align 8, !dbg !2436
  %6 = load %struct.idlist** %preferred, align 8, !dbg !2436
  %tqh_first19 = getelementptr inbounds %struct.idlist* %6, i32 0, i32 0, !dbg !2436
  %7 = load %struct.idlist** %preferred, align 8, !dbg !2436
  %tqh_last20 = getelementptr inbounds %struct.idlist* %7, i32 0, i32 1, !dbg !2436
  store %struct.identity** %tqh_first19, %struct.identity*** %tqh_last20, align 8, !dbg !2436
  br label %do.end21, !dbg !2436

do.end21:                                         ; preds = %do.body17
  store i32 0, i32* %i, align 4, !dbg !2439
  br label %for.cond, !dbg !2439

for.cond:                                         ; preds = %cont52, %do.end21
  %8 = load i32* %i, align 4, !dbg !2441
  %9 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 51), align 4, !dbg !2441
  %cmp = icmp slt i32 %8, %9, !dbg !2441
  br i1 %cmp, label %for.body, label %for.end, !dbg !2441

for.body:                                         ; preds = %for.cond
  %10 = load i32* %i, align 4, !dbg !2444
  %idxprom = sext i32 %10 to i64, !dbg !2444
  %arrayidx = getelementptr inbounds [100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 54), i32 0, i64 %idxprom, !dbg !2444
  %11 = load %struct.sshkey** %arrayidx, align 8, !dbg !2444
  store %struct.sshkey* %11, %struct.sshkey** %key, align 8, !dbg !2444
  %12 = load %struct.sshkey** %key, align 8, !dbg !2446
  %tobool = icmp ne %struct.sshkey* %12, null, !dbg !2446
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2446

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.sshkey** %key, align 8, !dbg !2448
  %type = getelementptr inbounds %struct.sshkey* %13, i32 0, i32 0, !dbg !2448
  %14 = load i32* %type, align 4, !dbg !2448
  %cmp22 = icmp eq i32 %14, 0, !dbg !2448
  br i1 %cmp22, label %if.then, label %if.end, !dbg !2448

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc, !dbg !2450

if.end:                                           ; preds = %land.lhs.true, %for.body
  %15 = load %struct.sshkey** %key, align 8, !dbg !2451
  %tobool23 = icmp ne %struct.sshkey* %15, null, !dbg !2451
  br i1 %tobool23, label %land.lhs.true24, label %if.end31, !dbg !2451

land.lhs.true24:                                  ; preds = %if.end
  %16 = load %struct.sshkey** %key, align 8, !dbg !2453
  %cert = getelementptr inbounds %struct.sshkey* %16, i32 0, i32 8, !dbg !2453
  %17 = load %struct.sshkey_cert** %cert, align 8, !dbg !2453
  %tobool25 = icmp ne %struct.sshkey_cert* %17, null, !dbg !2453
  br i1 %tobool25, label %land.lhs.true26, label %if.end31, !dbg !2453

land.lhs.true26:                                  ; preds = %land.lhs.true24
  %18 = load %struct.sshkey** %key, align 8, !dbg !2455
  %cert27 = getelementptr inbounds %struct.sshkey* %18, i32 0, i32 8, !dbg !2455
  %19 = load %struct.sshkey_cert** %cert27, align 8, !dbg !2455
  %type28 = getelementptr inbounds %struct.sshkey_cert* %19, i32 0, i32 1, !dbg !2455
  %20 = load i32* %type28, align 4, !dbg !2455
  %cmp29 = icmp ne i32 %20, 1, !dbg !2455
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !2455

if.then30:                                        ; preds = %land.lhs.true26
  br label %for.inc, !dbg !2457

if.end31:                                         ; preds = %land.lhs.true26, %land.lhs.true24, %if.end
  %21 = load i32* %i, align 4, !dbg !2458
  %idxprom32 = sext i32 %21 to i64, !dbg !2458
  %arrayidx33 = getelementptr inbounds [100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 54), i32 0, i64 %idxprom32, !dbg !2458
  store %struct.sshkey* null, %struct.sshkey** %arrayidx33, align 8, !dbg !2458
  %call = call i8* @xcalloc(i64 1, i64 56), !dbg !2459
  %22 = bitcast i8* %call to %struct.identity*, !dbg !2459
  store %struct.identity* %22, %struct.identity** %id, align 8, !dbg !2459
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2460
  %24 = extractvalue { i32, i1 } %23, 0, !dbg !2460
  %25 = extractvalue { i32, i1 } %23, 1, !dbg !2460
  %26 = xor i1 %25, true, !dbg !2460
  br i1 %26, label %cont35, label %trap34, !dbg !2460

trap34:                                           ; preds = %if.end31
  call void @llvm.trap() #3, !dbg !2461
  unreachable, !dbg !2461

cont35:                                           ; preds = %if.end31
  %27 = load %struct.identity** %id, align 8, !dbg !2463
  %agent_fd36 = getelementptr inbounds %struct.identity* %27, i32 0, i32 1, !dbg !2463
  store i32 %24, i32* %agent_fd36, align 4, !dbg !2463
  %28 = load %struct.sshkey** %key, align 8, !dbg !2465
  %29 = load %struct.identity** %id, align 8, !dbg !2465
  %key37 = getelementptr inbounds %struct.identity* %29, i32 0, i32 2, !dbg !2465
  store %struct.sshkey* %28, %struct.sshkey** %key37, align 8, !dbg !2465
  %30 = load i32* %i, align 4, !dbg !2466
  %idxprom38 = sext i32 %30 to i64, !dbg !2466
  %arrayidx39 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 52), i32 0, i64 %idxprom38, !dbg !2466
  %31 = load i8** %arrayidx39, align 8, !dbg !2466
  %call40 = call i8* @xstrdup(i8* %31), !dbg !2466
  %32 = load %struct.identity** %id, align 8, !dbg !2466
  %filename = getelementptr inbounds %struct.identity* %32, i32 0, i32 3, !dbg !2466
  store i8* %call40, i8** %filename, align 8, !dbg !2466
  %33 = load i32* %i, align 4, !dbg !2467
  %idxprom41 = sext i32 %33 to i64, !dbg !2467
  %arrayidx42 = getelementptr inbounds [100 x i32]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 53), i32 0, i64 %idxprom41, !dbg !2467
  %34 = load i32* %arrayidx42, align 4, !dbg !2467
  %35 = load %struct.identity** %id, align 8, !dbg !2467
  %userprovided = getelementptr inbounds %struct.identity* %35, i32 0, i32 6, !dbg !2467
  store i32 %34, i32* %userprovided, align 4, !dbg !2467
  br label %do.body43, !dbg !2468

do.body43:                                        ; preds = %cont35
  %36 = load %struct.identity** %id, align 8, !dbg !2469
  %next = getelementptr inbounds %struct.identity* %36, i32 0, i32 0, !dbg !2469
  %tqe_next = getelementptr inbounds %struct.anon.2.172* %next, i32 0, i32 0, !dbg !2469
  store %struct.identity* null, %struct.identity** %tqe_next, align 8, !dbg !2469
  %tqh_last44 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2469
  %37 = load %struct.identity*** %tqh_last44, align 8, !dbg !2469
  %38 = load %struct.identity** %id, align 8, !dbg !2469
  %next45 = getelementptr inbounds %struct.identity* %38, i32 0, i32 0, !dbg !2469
  %tqe_prev = getelementptr inbounds %struct.anon.2.172* %next45, i32 0, i32 1, !dbg !2469
  store %struct.identity** %37, %struct.identity*** %tqe_prev, align 8, !dbg !2469
  %39 = load %struct.identity** %id, align 8, !dbg !2469
  %tqh_last46 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2469
  %40 = load %struct.identity*** %tqh_last46, align 8, !dbg !2469
  store %struct.identity* %39, %struct.identity** %40, align 8, !dbg !2469
  %41 = load %struct.identity** %id, align 8, !dbg !2469
  %next47 = getelementptr inbounds %struct.identity* %41, i32 0, i32 0, !dbg !2469
  %tqe_next48 = getelementptr inbounds %struct.anon.2.172* %next47, i32 0, i32 0, !dbg !2469
  %tqh_last49 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2469
  store %struct.identity** %tqe_next48, %struct.identity*** %tqh_last49, align 8, !dbg !2469
  br label %do.end50, !dbg !2469

do.end50:                                         ; preds = %do.body43
  br label %for.inc, !dbg !2472

for.inc:                                          ; preds = %do.end50, %if.then30, %if.then
  %42 = load i32* %i, align 4, !dbg !2473
  %43 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 1), !dbg !2473
  %44 = extractvalue { i32, i1 } %43, 0, !dbg !2473
  %45 = extractvalue { i32, i1 } %43, 1, !dbg !2473
  %46 = xor i1 %45, true, !dbg !2473
  br i1 %46, label %cont52, label %trap51, !dbg !2473

trap51:                                           ; preds = %for.inc
  call void @llvm.trap() #3, !dbg !2474
  unreachable, !dbg !2474

cont52:                                           ; preds = %for.inc
  store i32 %44, i32* %i, align 4, !dbg !2476
  br label %for.cond, !dbg !2476

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !2478
  br label %for.cond53, !dbg !2478

for.cond53:                                       ; preds = %cont93, %for.end
  %47 = load i32* %i, align 4, !dbg !2480
  %48 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 55), align 4, !dbg !2480
  %cmp54 = icmp slt i32 %47, %48, !dbg !2480
  br i1 %cmp54, label %for.body55, label %for.end94, !dbg !2480

for.body55:                                       ; preds = %for.cond53
  %49 = load i32* %i, align 4, !dbg !2483
  %idxprom56 = sext i32 %49 to i64, !dbg !2483
  %arrayidx57 = getelementptr inbounds [100 x %struct.sshkey*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 58), i32 0, i64 %idxprom56, !dbg !2483
  %50 = load %struct.sshkey** %arrayidx57, align 8, !dbg !2483
  store %struct.sshkey* %50, %struct.sshkey** %key, align 8, !dbg !2483
  %51 = load %struct.sshkey** %key, align 8, !dbg !2485
  %call58 = call i32 @sshkey_is_cert(%struct.sshkey* %51), !dbg !2485
  %tobool59 = icmp ne i32 %call58, 0, !dbg !2485
  br i1 %tobool59, label %lor.lhs.false, label %if.then66, !dbg !2485

lor.lhs.false:                                    ; preds = %for.body55
  %52 = load %struct.sshkey** %key, align 8, !dbg !2487
  %cert60 = getelementptr inbounds %struct.sshkey* %52, i32 0, i32 8, !dbg !2487
  %53 = load %struct.sshkey_cert** %cert60, align 8, !dbg !2487
  %cmp61 = icmp eq %struct.sshkey_cert* %53, null, !dbg !2487
  br i1 %cmp61, label %if.then66, label %lor.lhs.false62, !dbg !2487

lor.lhs.false62:                                  ; preds = %lor.lhs.false
  %54 = load %struct.sshkey** %key, align 8, !dbg !2489
  %cert63 = getelementptr inbounds %struct.sshkey* %54, i32 0, i32 8, !dbg !2489
  %55 = load %struct.sshkey_cert** %cert63, align 8, !dbg !2489
  %type64 = getelementptr inbounds %struct.sshkey_cert* %55, i32 0, i32 1, !dbg !2489
  %56 = load i32* %type64, align 4, !dbg !2489
  %cmp65 = icmp ne i32 %56, 1, !dbg !2489
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !2489

if.then66:                                        ; preds = %lor.lhs.false62, %lor.lhs.false, %for.body55
  br label %for.inc91, !dbg !2491

if.end67:                                         ; preds = %lor.lhs.false62
  %call68 = call i8* @xcalloc(i64 1, i64 56), !dbg !2492
  %57 = bitcast i8* %call68 to %struct.identity*, !dbg !2492
  store %struct.identity* %57, %struct.identity** %id, align 8, !dbg !2492
  %58 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2493
  %59 = extractvalue { i32, i1 } %58, 0, !dbg !2493
  %60 = extractvalue { i32, i1 } %58, 1, !dbg !2493
  %61 = xor i1 %60, true, !dbg !2493
  br i1 %61, label %cont70, label %trap69, !dbg !2493

trap69:                                           ; preds = %if.end67
  call void @llvm.trap() #3, !dbg !2494
  unreachable, !dbg !2494

cont70:                                           ; preds = %if.end67
  %62 = load %struct.identity** %id, align 8, !dbg !2496
  %agent_fd71 = getelementptr inbounds %struct.identity* %62, i32 0, i32 1, !dbg !2496
  store i32 %59, i32* %agent_fd71, align 4, !dbg !2496
  %63 = load %struct.sshkey** %key, align 8, !dbg !2498
  %64 = load %struct.identity** %id, align 8, !dbg !2498
  %key72 = getelementptr inbounds %struct.identity* %64, i32 0, i32 2, !dbg !2498
  store %struct.sshkey* %63, %struct.sshkey** %key72, align 8, !dbg !2498
  %65 = load i32* %i, align 4, !dbg !2499
  %idxprom73 = sext i32 %65 to i64, !dbg !2499
  %arrayidx74 = getelementptr inbounds [100 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 56), i32 0, i64 %idxprom73, !dbg !2499
  %66 = load i8** %arrayidx74, align 8, !dbg !2499
  %call75 = call i8* @xstrdup(i8* %66), !dbg !2499
  %67 = load %struct.identity** %id, align 8, !dbg !2499
  %filename76 = getelementptr inbounds %struct.identity* %67, i32 0, i32 3, !dbg !2499
  store i8* %call75, i8** %filename76, align 8, !dbg !2499
  %68 = load i32* %i, align 4, !dbg !2500
  %idxprom77 = sext i32 %68 to i64, !dbg !2500
  %arrayidx78 = getelementptr inbounds [100 x i32]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 57), i32 0, i64 %idxprom77, !dbg !2500
  %69 = load i32* %arrayidx78, align 4, !dbg !2500
  %70 = load %struct.identity** %id, align 8, !dbg !2500
  %userprovided79 = getelementptr inbounds %struct.identity* %70, i32 0, i32 6, !dbg !2500
  store i32 %69, i32* %userprovided79, align 4, !dbg !2500
  br label %do.body80, !dbg !2501

do.body80:                                        ; preds = %cont70
  %71 = load %struct.identity** %id, align 8, !dbg !2502
  %next81 = getelementptr inbounds %struct.identity* %71, i32 0, i32 0, !dbg !2502
  %tqe_next82 = getelementptr inbounds %struct.anon.2.172* %next81, i32 0, i32 0, !dbg !2502
  store %struct.identity* null, %struct.identity** %tqe_next82, align 8, !dbg !2502
  %72 = load %struct.idlist** %preferred, align 8, !dbg !2502
  %tqh_last83 = getelementptr inbounds %struct.idlist* %72, i32 0, i32 1, !dbg !2502
  %73 = load %struct.identity*** %tqh_last83, align 8, !dbg !2502
  %74 = load %struct.identity** %id, align 8, !dbg !2502
  %next84 = getelementptr inbounds %struct.identity* %74, i32 0, i32 0, !dbg !2502
  %tqe_prev85 = getelementptr inbounds %struct.anon.2.172* %next84, i32 0, i32 1, !dbg !2502
  store %struct.identity** %73, %struct.identity*** %tqe_prev85, align 8, !dbg !2502
  %75 = load %struct.identity** %id, align 8, !dbg !2502
  %76 = load %struct.idlist** %preferred, align 8, !dbg !2502
  %tqh_last86 = getelementptr inbounds %struct.idlist* %76, i32 0, i32 1, !dbg !2502
  %77 = load %struct.identity*** %tqh_last86, align 8, !dbg !2502
  store %struct.identity* %75, %struct.identity** %77, align 8, !dbg !2502
  %78 = load %struct.identity** %id, align 8, !dbg !2502
  %next87 = getelementptr inbounds %struct.identity* %78, i32 0, i32 0, !dbg !2502
  %tqe_next88 = getelementptr inbounds %struct.anon.2.172* %next87, i32 0, i32 0, !dbg !2502
  %79 = load %struct.idlist** %preferred, align 8, !dbg !2502
  %tqh_last89 = getelementptr inbounds %struct.idlist* %79, i32 0, i32 1, !dbg !2502
  store %struct.identity** %tqe_next88, %struct.identity*** %tqh_last89, align 8, !dbg !2502
  br label %do.end90, !dbg !2502

do.end90:                                         ; preds = %do.body80
  br label %for.inc91, !dbg !2505

for.inc91:                                        ; preds = %do.end90, %if.then66
  %80 = load i32* %i, align 4, !dbg !2506
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 1), !dbg !2506
  %82 = extractvalue { i32, i1 } %81, 0, !dbg !2506
  %83 = extractvalue { i32, i1 } %81, 1, !dbg !2506
  %84 = xor i1 %83, true, !dbg !2506
  br i1 %84, label %cont93, label %trap92, !dbg !2506

trap92:                                           ; preds = %for.inc91
  call void @llvm.trap() #3, !dbg !2507
  unreachable, !dbg !2507

cont93:                                           ; preds = %for.inc91
  store i32 %82, i32* %i, align 4, !dbg !2509
  br label %for.cond53, !dbg !2509

for.end94:                                        ; preds = %for.cond53
  %call95 = call i32 @ssh_get_authentication_socket(i32* %agent_fd), !dbg !2511
  store i32 %call95, i32* %r, align 4, !dbg !2511
  %cmp96 = icmp ne i32 %call95, 0, !dbg !2511
  br i1 %cmp96, label %if.then97, label %if.else, !dbg !2511

if.then97:                                        ; preds = %for.end94
  %85 = load i32* %r, align 4, !dbg !2513
  %86 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 47), !dbg !2513
  %87 = extractvalue { i32, i1 } %86, 0, !dbg !2513
  %88 = extractvalue { i32, i1 } %86, 1, !dbg !2513
  %89 = xor i1 %88, true, !dbg !2513
  br i1 %89, label %cont99, label %trap98, !dbg !2513

trap98:                                           ; preds = %if.then97
  call void @llvm.trap() #3, !dbg !2516
  unreachable, !dbg !2516

cont99:                                           ; preds = %if.then97
  %cmp100 = icmp ne i32 %85, %87, !dbg !2518
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !2518

if.then101:                                       ; preds = %cont99
  %90 = load i32* %r, align 4, !dbg !2520
  %call102 = call i8* @ssh_err(i32 %90), !dbg !2520
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([38 x i8]* @.str113916, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @__func__.pubkey_prepare, i32 0, i32 0), i8* %call102), !dbg !2521
  br label %if.end103, !dbg !2521

if.end103:                                        ; preds = %if.then101, %cont99
  br label %if.end236, !dbg !2522

if.else:                                          ; preds = %for.end94
  %91 = load i32* %agent_fd, align 4, !dbg !2523
  %call104 = call i32 @ssh_fetch_identitylist(i32 %91, i32 2, %struct.ssh_identitylist** %idlist), !dbg !2523
  store i32 %call104, i32* %r, align 4, !dbg !2523
  %cmp105 = icmp ne i32 %call104, 0, !dbg !2523
  br i1 %cmp105, label %if.then106, label %if.else114, !dbg !2523

if.then106:                                       ; preds = %if.else
  %92 = load i32* %r, align 4, !dbg !2525
  %93 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 48), !dbg !2525
  %94 = extractvalue { i32, i1 } %93, 0, !dbg !2525
  %95 = extractvalue { i32, i1 } %93, 1, !dbg !2525
  %96 = xor i1 %95, true, !dbg !2525
  br i1 %96, label %cont108, label %trap107, !dbg !2525

trap107:                                          ; preds = %if.then106
  call void @llvm.trap() #3, !dbg !2528
  unreachable, !dbg !2528

cont108:                                          ; preds = %if.then106
  %cmp109 = icmp ne i32 %92, %94, !dbg !2530
  br i1 %cmp109, label %if.then110, label %if.end112, !dbg !2530

if.then110:                                       ; preds = %cont108
  %97 = load i32* %r, align 4, !dbg !2532
  %call111 = call i8* @ssh_err(i32 %97), !dbg !2532
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([31 x i8]* @.str114917, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @__func__.pubkey_prepare, i32 0, i32 0), i8* %call111), !dbg !2533
  br label %if.end112, !dbg !2533

if.end112:                                        ; preds = %if.then110, %cont108
  %98 = load i32* %agent_fd, align 4, !dbg !2534
  %call113 = call i32 @close(i32 %98), !dbg !2534
  br label %if.end235, !dbg !2535

if.else114:                                       ; preds = %if.else
  store i64 0, i64* %j, align 8, !dbg !2536
  br label %for.cond115, !dbg !2536

for.cond115:                                      ; preds = %for.inc193, %if.else114
  %99 = load i64* %j, align 8, !dbg !2539
  %100 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2539
  %nkeys = getelementptr inbounds %struct.ssh_identitylist* %100, i32 0, i32 0, !dbg !2539
  %101 = load i64* %nkeys, align 8, !dbg !2539
  %cmp116 = icmp ult i64 %99, %101, !dbg !2539
  br i1 %cmp116, label %for.body117, label %for.end194, !dbg !2539

for.body117:                                      ; preds = %for.cond115
  store i32 0, i32* %found, align 4, !dbg !2542
  %tqh_first118 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2544
  %102 = load %struct.identity** %tqh_first118, align 8, !dbg !2544
  store %struct.identity* %102, %struct.identity** %id, align 8, !dbg !2544
  br label %for.cond119, !dbg !2544

for.cond119:                                      ; preds = %for.inc162, %for.body117
  %103 = load %struct.identity** %id, align 8, !dbg !2546
  %cmp120 = icmp ne %struct.identity* %103, null, !dbg !2546
  br i1 %cmp120, label %for.body121, label %for.end165, !dbg !2546

for.body121:                                      ; preds = %for.cond119
  %104 = load i64* %j, align 8, !dbg !2549
  %105 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2549
  %keys122 = getelementptr inbounds %struct.ssh_identitylist* %105, i32 0, i32 1, !dbg !2549
  %106 = load %struct.sshkey*** %keys122, align 8, !dbg !2549
  %arrayidx123 = getelementptr inbounds %struct.sshkey** %106, i64 %104, !dbg !2549
  %107 = load %struct.sshkey** %arrayidx123, align 8, !dbg !2549
  %108 = load %struct.identity** %id, align 8, !dbg !2549
  %key124 = getelementptr inbounds %struct.identity* %108, i32 0, i32 2, !dbg !2549
  %109 = load %struct.sshkey** %key124, align 8, !dbg !2549
  %call125 = call i32 @sshkey_equal(%struct.sshkey* %107, %struct.sshkey* %109), !dbg !2549
  %tobool126 = icmp ne i32 %call125, 0, !dbg !2549
  br i1 %tobool126, label %if.then127, label %if.end161, !dbg !2549

if.then127:                                       ; preds = %for.body121
  br label %do.body128, !dbg !2552

do.body128:                                       ; preds = %if.then127
  %110 = load %struct.identity** %id, align 8, !dbg !2554
  %next129 = getelementptr inbounds %struct.identity* %110, i32 0, i32 0, !dbg !2554
  %tqe_next130 = getelementptr inbounds %struct.anon.2.172* %next129, i32 0, i32 0, !dbg !2554
  %111 = load %struct.identity** %tqe_next130, align 8, !dbg !2554
  %cmp131 = icmp ne %struct.identity* %111, null, !dbg !2554
  br i1 %cmp131, label %if.then132, label %if.else139, !dbg !2554

if.then132:                                       ; preds = %do.body128
  %112 = load %struct.identity** %id, align 8, !dbg !2558
  %next133 = getelementptr inbounds %struct.identity* %112, i32 0, i32 0, !dbg !2558
  %tqe_prev134 = getelementptr inbounds %struct.anon.2.172* %next133, i32 0, i32 1, !dbg !2558
  %113 = load %struct.identity*** %tqe_prev134, align 8, !dbg !2558
  %114 = load %struct.identity** %id, align 8, !dbg !2558
  %next135 = getelementptr inbounds %struct.identity* %114, i32 0, i32 0, !dbg !2558
  %tqe_next136 = getelementptr inbounds %struct.anon.2.172* %next135, i32 0, i32 0, !dbg !2558
  %115 = load %struct.identity** %tqe_next136, align 8, !dbg !2558
  %next137 = getelementptr inbounds %struct.identity* %115, i32 0, i32 0, !dbg !2558
  %tqe_prev138 = getelementptr inbounds %struct.anon.2.172* %next137, i32 0, i32 1, !dbg !2558
  store %struct.identity** %113, %struct.identity*** %tqe_prev138, align 8, !dbg !2558
  br label %if.end143, !dbg !2558

if.else139:                                       ; preds = %do.body128
  %116 = load %struct.identity** %id, align 8, !dbg !2560
  %next140 = getelementptr inbounds %struct.identity* %116, i32 0, i32 0, !dbg !2560
  %tqe_prev141 = getelementptr inbounds %struct.anon.2.172* %next140, i32 0, i32 1, !dbg !2560
  %117 = load %struct.identity*** %tqe_prev141, align 8, !dbg !2560
  %tqh_last142 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2560
  store %struct.identity** %117, %struct.identity*** %tqh_last142, align 8, !dbg !2560
  br label %if.end143

if.end143:                                        ; preds = %if.else139, %if.then132
  %118 = load %struct.identity** %id, align 8, !dbg !2562
  %next144 = getelementptr inbounds %struct.identity* %118, i32 0, i32 0, !dbg !2562
  %tqe_next145 = getelementptr inbounds %struct.anon.2.172* %next144, i32 0, i32 0, !dbg !2562
  %119 = load %struct.identity** %tqe_next145, align 8, !dbg !2562
  %120 = load %struct.identity** %id, align 8, !dbg !2562
  %next146 = getelementptr inbounds %struct.identity* %120, i32 0, i32 0, !dbg !2562
  %tqe_prev147 = getelementptr inbounds %struct.anon.2.172* %next146, i32 0, i32 1, !dbg !2562
  %121 = load %struct.identity*** %tqe_prev147, align 8, !dbg !2562
  store %struct.identity* %119, %struct.identity** %121, align 8, !dbg !2562
  br label %do.end148, !dbg !2562

do.end148:                                        ; preds = %if.end143
  br label %do.body149, !dbg !2564

do.body149:                                       ; preds = %do.end148
  %122 = load %struct.identity** %id, align 8, !dbg !2565
  %next150 = getelementptr inbounds %struct.identity* %122, i32 0, i32 0, !dbg !2565
  %tqe_next151 = getelementptr inbounds %struct.anon.2.172* %next150, i32 0, i32 0, !dbg !2565
  store %struct.identity* null, %struct.identity** %tqe_next151, align 8, !dbg !2565
  %123 = load %struct.idlist** %preferred, align 8, !dbg !2565
  %tqh_last152 = getelementptr inbounds %struct.idlist* %123, i32 0, i32 1, !dbg !2565
  %124 = load %struct.identity*** %tqh_last152, align 8, !dbg !2565
  %125 = load %struct.identity** %id, align 8, !dbg !2565
  %next153 = getelementptr inbounds %struct.identity* %125, i32 0, i32 0, !dbg !2565
  %tqe_prev154 = getelementptr inbounds %struct.anon.2.172* %next153, i32 0, i32 1, !dbg !2565
  store %struct.identity** %124, %struct.identity*** %tqe_prev154, align 8, !dbg !2565
  %126 = load %struct.identity** %id, align 8, !dbg !2565
  %127 = load %struct.idlist** %preferred, align 8, !dbg !2565
  %tqh_last155 = getelementptr inbounds %struct.idlist* %127, i32 0, i32 1, !dbg !2565
  %128 = load %struct.identity*** %tqh_last155, align 8, !dbg !2565
  store %struct.identity* %126, %struct.identity** %128, align 8, !dbg !2565
  %129 = load %struct.identity** %id, align 8, !dbg !2565
  %next156 = getelementptr inbounds %struct.identity* %129, i32 0, i32 0, !dbg !2565
  %tqe_next157 = getelementptr inbounds %struct.anon.2.172* %next156, i32 0, i32 0, !dbg !2565
  %130 = load %struct.idlist** %preferred, align 8, !dbg !2565
  %tqh_last158 = getelementptr inbounds %struct.idlist* %130, i32 0, i32 1, !dbg !2565
  store %struct.identity** %tqe_next157, %struct.identity*** %tqh_last158, align 8, !dbg !2565
  br label %do.end159, !dbg !2565

do.end159:                                        ; preds = %do.body149
  %131 = load i32* %agent_fd, align 4, !dbg !2568
  %132 = load %struct.identity** %id, align 8, !dbg !2568
  %agent_fd160 = getelementptr inbounds %struct.identity* %132, i32 0, i32 1, !dbg !2568
  store i32 %131, i32* %agent_fd160, align 4, !dbg !2568
  store i32 1, i32* %found, align 4, !dbg !2569
  br label %for.end165, !dbg !2570

if.end161:                                        ; preds = %for.body121
  br label %for.inc162, !dbg !2571

for.inc162:                                       ; preds = %if.end161
  %133 = load %struct.identity** %id, align 8, !dbg !2544
  %next163 = getelementptr inbounds %struct.identity* %133, i32 0, i32 0, !dbg !2544
  %tqe_next164 = getelementptr inbounds %struct.anon.2.172* %next163, i32 0, i32 0, !dbg !2544
  %134 = load %struct.identity** %tqe_next164, align 8, !dbg !2544
  store %struct.identity* %134, %struct.identity** %id, align 8, !dbg !2544
  br label %for.cond119, !dbg !2544

for.end165:                                       ; preds = %do.end159, %for.cond119
  %135 = load i32* %found, align 4, !dbg !2572
  %tobool166 = icmp ne i32 %135, 0, !dbg !2572
  br i1 %tobool166, label %if.end192, label %land.lhs.true167, !dbg !2572

land.lhs.true167:                                 ; preds = %for.end165
  %136 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 72), align 4, !dbg !2574
  %tobool168 = icmp ne i32 %136, 0, !dbg !2574
  br i1 %tobool168, label %if.end192, label %if.then169, !dbg !2574

if.then169:                                       ; preds = %land.lhs.true167
  %call170 = call i8* @xcalloc(i64 1, i64 56), !dbg !2576
  %137 = bitcast i8* %call170 to %struct.identity*, !dbg !2576
  store %struct.identity* %137, %struct.identity** %id, align 8, !dbg !2576
  %138 = load i64* %j, align 8, !dbg !2578
  %139 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2578
  %keys171 = getelementptr inbounds %struct.ssh_identitylist* %139, i32 0, i32 1, !dbg !2578
  %140 = load %struct.sshkey*** %keys171, align 8, !dbg !2578
  %arrayidx172 = getelementptr inbounds %struct.sshkey** %140, i64 %138, !dbg !2578
  %141 = load %struct.sshkey** %arrayidx172, align 8, !dbg !2578
  %142 = load %struct.identity** %id, align 8, !dbg !2578
  %key173 = getelementptr inbounds %struct.identity* %142, i32 0, i32 2, !dbg !2578
  store %struct.sshkey* %141, %struct.sshkey** %key173, align 8, !dbg !2578
  %143 = load i64* %j, align 8, !dbg !2579
  %144 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2579
  %comments = getelementptr inbounds %struct.ssh_identitylist* %144, i32 0, i32 2, !dbg !2579
  %145 = load i8*** %comments, align 8, !dbg !2579
  %arrayidx174 = getelementptr inbounds i8** %145, i64 %143, !dbg !2579
  %146 = load i8** %arrayidx174, align 8, !dbg !2579
  %147 = load %struct.identity** %id, align 8, !dbg !2579
  %filename175 = getelementptr inbounds %struct.identity* %147, i32 0, i32 3, !dbg !2579
  store i8* %146, i8** %filename175, align 8, !dbg !2579
  %148 = load i64* %j, align 8, !dbg !2580
  %149 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2580
  %keys176 = getelementptr inbounds %struct.ssh_identitylist* %149, i32 0, i32 1, !dbg !2580
  %150 = load %struct.sshkey*** %keys176, align 8, !dbg !2580
  %arrayidx177 = getelementptr inbounds %struct.sshkey** %150, i64 %148, !dbg !2580
  store %struct.sshkey* null, %struct.sshkey** %arrayidx177, align 8, !dbg !2580
  %151 = load i64* %j, align 8, !dbg !2581
  %152 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2581
  %comments178 = getelementptr inbounds %struct.ssh_identitylist* %152, i32 0, i32 2, !dbg !2581
  %153 = load i8*** %comments178, align 8, !dbg !2581
  %arrayidx179 = getelementptr inbounds i8** %153, i64 %151, !dbg !2581
  store i8* null, i8** %arrayidx179, align 8, !dbg !2581
  %154 = load i32* %agent_fd, align 4, !dbg !2582
  %155 = load %struct.identity** %id, align 8, !dbg !2582
  %agent_fd180 = getelementptr inbounds %struct.identity* %155, i32 0, i32 1, !dbg !2582
  store i32 %154, i32* %agent_fd180, align 4, !dbg !2582
  br label %do.body181, !dbg !2583

do.body181:                                       ; preds = %if.then169
  %156 = load %struct.identity** %id, align 8, !dbg !2584
  %next182 = getelementptr inbounds %struct.identity* %156, i32 0, i32 0, !dbg !2584
  %tqe_next183 = getelementptr inbounds %struct.anon.2.172* %next182, i32 0, i32 0, !dbg !2584
  store %struct.identity* null, %struct.identity** %tqe_next183, align 8, !dbg !2584
  %tqh_last184 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 1, !dbg !2584
  %157 = load %struct.identity*** %tqh_last184, align 8, !dbg !2584
  %158 = load %struct.identity** %id, align 8, !dbg !2584
  %next185 = getelementptr inbounds %struct.identity* %158, i32 0, i32 0, !dbg !2584
  %tqe_prev186 = getelementptr inbounds %struct.anon.2.172* %next185, i32 0, i32 1, !dbg !2584
  store %struct.identity** %157, %struct.identity*** %tqe_prev186, align 8, !dbg !2584
  %159 = load %struct.identity** %id, align 8, !dbg !2584
  %tqh_last187 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 1, !dbg !2584
  %160 = load %struct.identity*** %tqh_last187, align 8, !dbg !2584
  store %struct.identity* %159, %struct.identity** %160, align 8, !dbg !2584
  %161 = load %struct.identity** %id, align 8, !dbg !2584
  %next188 = getelementptr inbounds %struct.identity* %161, i32 0, i32 0, !dbg !2584
  %tqe_next189 = getelementptr inbounds %struct.anon.2.172* %next188, i32 0, i32 0, !dbg !2584
  %tqh_last190 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 1, !dbg !2584
  store %struct.identity** %tqe_next189, %struct.identity*** %tqh_last190, align 8, !dbg !2584
  br label %do.end191, !dbg !2584

do.end191:                                        ; preds = %do.body181
  br label %if.end192, !dbg !2587

if.end192:                                        ; preds = %do.end191, %land.lhs.true167, %for.end165
  br label %for.inc193, !dbg !2588

for.inc193:                                       ; preds = %if.end192
  %162 = load i64* %j, align 8, !dbg !2589
  %inc = add i64 %162, 1, !dbg !2589
  store i64 %inc, i64* %j, align 8, !dbg !2589
  br label %for.cond115, !dbg !2589

for.end194:                                       ; preds = %for.cond115
  %163 = load %struct.ssh_identitylist** %idlist, align 8, !dbg !2590
  call void @ssh_free_identitylist(%struct.ssh_identitylist* %163), !dbg !2590
  %tqh_first195 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 0, !dbg !2591
  %164 = load %struct.identity** %tqh_first195, align 8, !dbg !2591
  store %struct.identity* %164, %struct.identity** %id, align 8, !dbg !2591
  br label %for.cond196, !dbg !2591

for.cond196:                                      ; preds = %for.inc231, %for.end194
  %165 = load %struct.identity** %id, align 8, !dbg !2593
  %tobool197 = icmp ne %struct.identity* %165, null, !dbg !2593
  br i1 %tobool197, label %for.body198, label %for.end233, !dbg !2593

for.body198:                                      ; preds = %for.cond196
  br label %do.body199, !dbg !2596

do.body199:                                       ; preds = %for.body198
  %166 = load %struct.identity** %id, align 8, !dbg !2598
  %next200 = getelementptr inbounds %struct.identity* %166, i32 0, i32 0, !dbg !2598
  %tqe_next201 = getelementptr inbounds %struct.anon.2.172* %next200, i32 0, i32 0, !dbg !2598
  %167 = load %struct.identity** %tqe_next201, align 8, !dbg !2598
  %cmp202 = icmp ne %struct.identity* %167, null, !dbg !2598
  br i1 %cmp202, label %if.then203, label %if.else210, !dbg !2598

if.then203:                                       ; preds = %do.body199
  %168 = load %struct.identity** %id, align 8, !dbg !2602
  %next204 = getelementptr inbounds %struct.identity* %168, i32 0, i32 0, !dbg !2602
  %tqe_prev205 = getelementptr inbounds %struct.anon.2.172* %next204, i32 0, i32 1, !dbg !2602
  %169 = load %struct.identity*** %tqe_prev205, align 8, !dbg !2602
  %170 = load %struct.identity** %id, align 8, !dbg !2602
  %next206 = getelementptr inbounds %struct.identity* %170, i32 0, i32 0, !dbg !2602
  %tqe_next207 = getelementptr inbounds %struct.anon.2.172* %next206, i32 0, i32 0, !dbg !2602
  %171 = load %struct.identity** %tqe_next207, align 8, !dbg !2602
  %next208 = getelementptr inbounds %struct.identity* %171, i32 0, i32 0, !dbg !2602
  %tqe_prev209 = getelementptr inbounds %struct.anon.2.172* %next208, i32 0, i32 1, !dbg !2602
  store %struct.identity** %169, %struct.identity*** %tqe_prev209, align 8, !dbg !2602
  br label %if.end214, !dbg !2602

if.else210:                                       ; preds = %do.body199
  %172 = load %struct.identity** %id, align 8, !dbg !2604
  %next211 = getelementptr inbounds %struct.identity* %172, i32 0, i32 0, !dbg !2604
  %tqe_prev212 = getelementptr inbounds %struct.anon.2.172* %next211, i32 0, i32 1, !dbg !2604
  %173 = load %struct.identity*** %tqe_prev212, align 8, !dbg !2604
  %tqh_last213 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 1, !dbg !2604
  store %struct.identity** %173, %struct.identity*** %tqh_last213, align 8, !dbg !2604
  br label %if.end214

if.end214:                                        ; preds = %if.else210, %if.then203
  %174 = load %struct.identity** %id, align 8, !dbg !2606
  %next215 = getelementptr inbounds %struct.identity* %174, i32 0, i32 0, !dbg !2606
  %tqe_next216 = getelementptr inbounds %struct.anon.2.172* %next215, i32 0, i32 0, !dbg !2606
  %175 = load %struct.identity** %tqe_next216, align 8, !dbg !2606
  %176 = load %struct.identity** %id, align 8, !dbg !2606
  %next217 = getelementptr inbounds %struct.identity* %176, i32 0, i32 0, !dbg !2606
  %tqe_prev218 = getelementptr inbounds %struct.anon.2.172* %next217, i32 0, i32 1, !dbg !2606
  %177 = load %struct.identity*** %tqe_prev218, align 8, !dbg !2606
  store %struct.identity* %175, %struct.identity** %177, align 8, !dbg !2606
  br label %do.end219, !dbg !2606

do.end219:                                        ; preds = %if.end214
  br label %do.body220, !dbg !2608

do.body220:                                       ; preds = %do.end219
  %178 = load %struct.identity** %id, align 8, !dbg !2609
  %next221 = getelementptr inbounds %struct.identity* %178, i32 0, i32 0, !dbg !2609
  %tqe_next222 = getelementptr inbounds %struct.anon.2.172* %next221, i32 0, i32 0, !dbg !2609
  store %struct.identity* null, %struct.identity** %tqe_next222, align 8, !dbg !2609
  %179 = load %struct.idlist** %preferred, align 8, !dbg !2609
  %tqh_last223 = getelementptr inbounds %struct.idlist* %179, i32 0, i32 1, !dbg !2609
  %180 = load %struct.identity*** %tqh_last223, align 8, !dbg !2609
  %181 = load %struct.identity** %id, align 8, !dbg !2609
  %next224 = getelementptr inbounds %struct.identity* %181, i32 0, i32 0, !dbg !2609
  %tqe_prev225 = getelementptr inbounds %struct.anon.2.172* %next224, i32 0, i32 1, !dbg !2609
  store %struct.identity** %180, %struct.identity*** %tqe_prev225, align 8, !dbg !2609
  %182 = load %struct.identity** %id, align 8, !dbg !2609
  %183 = load %struct.idlist** %preferred, align 8, !dbg !2609
  %tqh_last226 = getelementptr inbounds %struct.idlist* %183, i32 0, i32 1, !dbg !2609
  %184 = load %struct.identity*** %tqh_last226, align 8, !dbg !2609
  store %struct.identity* %182, %struct.identity** %184, align 8, !dbg !2609
  %185 = load %struct.identity** %id, align 8, !dbg !2609
  %next227 = getelementptr inbounds %struct.identity* %185, i32 0, i32 0, !dbg !2609
  %tqe_next228 = getelementptr inbounds %struct.anon.2.172* %next227, i32 0, i32 0, !dbg !2609
  %186 = load %struct.idlist** %preferred, align 8, !dbg !2609
  %tqh_last229 = getelementptr inbounds %struct.idlist* %186, i32 0, i32 1, !dbg !2609
  store %struct.identity** %tqe_next228, %struct.identity*** %tqh_last229, align 8, !dbg !2609
  br label %do.end230, !dbg !2609

do.end230:                                        ; preds = %do.body220
  br label %for.inc231, !dbg !2612

for.inc231:                                       ; preds = %do.end230
  %tqh_first232 = getelementptr inbounds %struct.idlist* %agent, i32 0, i32 0, !dbg !2613
  %187 = load %struct.identity** %tqh_first232, align 8, !dbg !2613
  store %struct.identity* %187, %struct.identity** %id, align 8, !dbg !2613
  br label %for.cond196, !dbg !2613

for.end233:                                       ; preds = %for.cond196
  %188 = load i32* %agent_fd, align 4, !dbg !2614
  %189 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2614
  %agent_fd234 = getelementptr inbounds %struct.cauthctxt* %189, i32 0, i32 9, !dbg !2614
  store i32 %188, i32* %agent_fd234, align 4, !dbg !2614
  br label %if.end235

if.end235:                                        ; preds = %for.end233, %if.end112
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.end103
  %tqh_first237 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2615
  %190 = load %struct.identity** %tqh_first237, align 8, !dbg !2615
  store %struct.identity* %190, %struct.identity** %id, align 8, !dbg !2615
  br label %for.cond238, !dbg !2615

for.cond238:                                      ; preds = %for.inc331, %if.end236
  %191 = load %struct.identity** %id, align 8, !dbg !2617
  %cmp239 = icmp ne %struct.identity* %191, null, !dbg !2617
  br i1 %cmp239, label %land.rhs, label %land.end, !dbg !2617

land.rhs:                                         ; preds = %for.cond238
  %192 = load %struct.identity** %id, align 8, !dbg !2620
  %next240 = getelementptr inbounds %struct.identity* %192, i32 0, i32 0, !dbg !2620
  %tqe_next241 = getelementptr inbounds %struct.anon.2.172* %next240, i32 0, i32 0, !dbg !2620
  %193 = load %struct.identity** %tqe_next241, align 8, !dbg !2620
  store %struct.identity* %193, %struct.identity** %tmp, align 8, !dbg !2620
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond238
  %194 = phi i1 [ false, %for.cond238 ], [ true, %land.rhs ]
  br i1 %194, label %for.body242, label %for.end332, !dbg !2622

for.body242:                                      ; preds = %land.end
  %195 = load %struct.identity** %id, align 8, !dbg !2624
  %key243 = getelementptr inbounds %struct.identity* %195, i32 0, i32 2, !dbg !2624
  %196 = load %struct.sshkey** %key243, align 8, !dbg !2624
  %cmp244 = icmp eq %struct.sshkey* %196, null, !dbg !2624
  br i1 %cmp244, label %if.then248, label %lor.lhs.false245, !dbg !2624

lor.lhs.false245:                                 ; preds = %for.body242
  %197 = load %struct.identity** %id, align 8, !dbg !2627
  %key246 = getelementptr inbounds %struct.identity* %197, i32 0, i32 2, !dbg !2627
  %198 = load %struct.sshkey** %key246, align 8, !dbg !2627
  %flags = getelementptr inbounds %struct.sshkey* %198, i32 0, i32 1, !dbg !2627
  %199 = load i32* %flags, align 4, !dbg !2627
  %and = and i32 %199, 1, !dbg !2627
  %cmp247 = icmp eq i32 %and, 0, !dbg !2627
  br i1 %cmp247, label %if.then248, label %if.end249, !dbg !2627

if.then248:                                       ; preds = %lor.lhs.false245, %for.body242
  br label %for.inc331, !dbg !2629

if.end249:                                        ; preds = %lor.lhs.false245
  store i32 0, i32* %found, align 4, !dbg !2630
  %tqh_first250 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2631
  %200 = load %struct.identity** %tqh_first250, align 8, !dbg !2631
  store %struct.identity* %200, %struct.identity** %id2, align 8, !dbg !2631
  br label %for.cond251, !dbg !2631

for.cond251:                                      ; preds = %for.inc301, %if.end249
  %201 = load %struct.identity** %id2, align 8, !dbg !2633
  %cmp252 = icmp ne %struct.identity* %201, null, !dbg !2633
  br i1 %cmp252, label %for.body253, label %for.end304, !dbg !2633

for.body253:                                      ; preds = %for.cond251
  %202 = load %struct.identity** %id2, align 8, !dbg !2636
  %key254 = getelementptr inbounds %struct.identity* %202, i32 0, i32 2, !dbg !2636
  %203 = load %struct.sshkey** %key254, align 8, !dbg !2636
  %cmp255 = icmp eq %struct.sshkey* %203, null, !dbg !2636
  br i1 %cmp255, label %if.then261, label %lor.lhs.false256, !dbg !2636

lor.lhs.false256:                                 ; preds = %for.body253
  %204 = load %struct.identity** %id2, align 8, !dbg !2639
  %key257 = getelementptr inbounds %struct.identity* %204, i32 0, i32 2, !dbg !2639
  %205 = load %struct.sshkey** %key257, align 8, !dbg !2639
  %flags258 = getelementptr inbounds %struct.sshkey* %205, i32 0, i32 1, !dbg !2639
  %206 = load i32* %flags258, align 4, !dbg !2639
  %and259 = and i32 %206, 1, !dbg !2639
  %cmp260 = icmp eq i32 %and259, 0, !dbg !2639
  br i1 %cmp260, label %if.then261, label %if.end262, !dbg !2639

if.then261:                                       ; preds = %lor.lhs.false256, %for.body253
  br label %for.inc301, !dbg !2641

if.end262:                                        ; preds = %lor.lhs.false256
  %207 = load %struct.identity** %id, align 8, !dbg !2642
  %key263 = getelementptr inbounds %struct.identity* %207, i32 0, i32 2, !dbg !2642
  %208 = load %struct.sshkey** %key263, align 8, !dbg !2642
  %209 = load %struct.identity** %id2, align 8, !dbg !2642
  %key264 = getelementptr inbounds %struct.identity* %209, i32 0, i32 2, !dbg !2642
  %210 = load %struct.sshkey** %key264, align 8, !dbg !2642
  %call265 = call i32 @sshkey_equal(%struct.sshkey* %208, %struct.sshkey* %210), !dbg !2642
  %tobool266 = icmp ne i32 %call265, 0, !dbg !2642
  br i1 %tobool266, label %if.then267, label %if.end300, !dbg !2642

if.then267:                                       ; preds = %if.end262
  br label %do.body268, !dbg !2644

do.body268:                                       ; preds = %if.then267
  %211 = load %struct.identity** %id, align 8, !dbg !2646
  %next269 = getelementptr inbounds %struct.identity* %211, i32 0, i32 0, !dbg !2646
  %tqe_next270 = getelementptr inbounds %struct.anon.2.172* %next269, i32 0, i32 0, !dbg !2646
  %212 = load %struct.identity** %tqe_next270, align 8, !dbg !2646
  %cmp271 = icmp ne %struct.identity* %212, null, !dbg !2646
  br i1 %cmp271, label %if.then272, label %if.else279, !dbg !2646

if.then272:                                       ; preds = %do.body268
  %213 = load %struct.identity** %id, align 8, !dbg !2650
  %next273 = getelementptr inbounds %struct.identity* %213, i32 0, i32 0, !dbg !2650
  %tqe_prev274 = getelementptr inbounds %struct.anon.2.172* %next273, i32 0, i32 1, !dbg !2650
  %214 = load %struct.identity*** %tqe_prev274, align 8, !dbg !2650
  %215 = load %struct.identity** %id, align 8, !dbg !2650
  %next275 = getelementptr inbounds %struct.identity* %215, i32 0, i32 0, !dbg !2650
  %tqe_next276 = getelementptr inbounds %struct.anon.2.172* %next275, i32 0, i32 0, !dbg !2650
  %216 = load %struct.identity** %tqe_next276, align 8, !dbg !2650
  %next277 = getelementptr inbounds %struct.identity* %216, i32 0, i32 0, !dbg !2650
  %tqe_prev278 = getelementptr inbounds %struct.anon.2.172* %next277, i32 0, i32 1, !dbg !2650
  store %struct.identity** %214, %struct.identity*** %tqe_prev278, align 8, !dbg !2650
  br label %if.end283, !dbg !2650

if.else279:                                       ; preds = %do.body268
  %217 = load %struct.identity** %id, align 8, !dbg !2652
  %next280 = getelementptr inbounds %struct.identity* %217, i32 0, i32 0, !dbg !2652
  %tqe_prev281 = getelementptr inbounds %struct.anon.2.172* %next280, i32 0, i32 1, !dbg !2652
  %218 = load %struct.identity*** %tqe_prev281, align 8, !dbg !2652
  %tqh_last282 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2652
  store %struct.identity** %218, %struct.identity*** %tqh_last282, align 8, !dbg !2652
  br label %if.end283

if.end283:                                        ; preds = %if.else279, %if.then272
  %219 = load %struct.identity** %id, align 8, !dbg !2654
  %next284 = getelementptr inbounds %struct.identity* %219, i32 0, i32 0, !dbg !2654
  %tqe_next285 = getelementptr inbounds %struct.anon.2.172* %next284, i32 0, i32 0, !dbg !2654
  %220 = load %struct.identity** %tqe_next285, align 8, !dbg !2654
  %221 = load %struct.identity** %id, align 8, !dbg !2654
  %next286 = getelementptr inbounds %struct.identity* %221, i32 0, i32 0, !dbg !2654
  %tqe_prev287 = getelementptr inbounds %struct.anon.2.172* %next286, i32 0, i32 1, !dbg !2654
  %222 = load %struct.identity*** %tqe_prev287, align 8, !dbg !2654
  store %struct.identity* %220, %struct.identity** %222, align 8, !dbg !2654
  br label %do.end288, !dbg !2654

do.end288:                                        ; preds = %if.end283
  br label %do.body289, !dbg !2656

do.body289:                                       ; preds = %do.end288
  %223 = load %struct.identity** %id, align 8, !dbg !2657
  %next290 = getelementptr inbounds %struct.identity* %223, i32 0, i32 0, !dbg !2657
  %tqe_next291 = getelementptr inbounds %struct.anon.2.172* %next290, i32 0, i32 0, !dbg !2657
  store %struct.identity* null, %struct.identity** %tqe_next291, align 8, !dbg !2657
  %224 = load %struct.idlist** %preferred, align 8, !dbg !2657
  %tqh_last292 = getelementptr inbounds %struct.idlist* %224, i32 0, i32 1, !dbg !2657
  %225 = load %struct.identity*** %tqh_last292, align 8, !dbg !2657
  %226 = load %struct.identity** %id, align 8, !dbg !2657
  %next293 = getelementptr inbounds %struct.identity* %226, i32 0, i32 0, !dbg !2657
  %tqe_prev294 = getelementptr inbounds %struct.anon.2.172* %next293, i32 0, i32 1, !dbg !2657
  store %struct.identity** %225, %struct.identity*** %tqe_prev294, align 8, !dbg !2657
  %227 = load %struct.identity** %id, align 8, !dbg !2657
  %228 = load %struct.idlist** %preferred, align 8, !dbg !2657
  %tqh_last295 = getelementptr inbounds %struct.idlist* %228, i32 0, i32 1, !dbg !2657
  %229 = load %struct.identity*** %tqh_last295, align 8, !dbg !2657
  store %struct.identity* %227, %struct.identity** %229, align 8, !dbg !2657
  %230 = load %struct.identity** %id, align 8, !dbg !2657
  %next296 = getelementptr inbounds %struct.identity* %230, i32 0, i32 0, !dbg !2657
  %tqe_next297 = getelementptr inbounds %struct.anon.2.172* %next296, i32 0, i32 0, !dbg !2657
  %231 = load %struct.idlist** %preferred, align 8, !dbg !2657
  %tqh_last298 = getelementptr inbounds %struct.idlist* %231, i32 0, i32 1, !dbg !2657
  store %struct.identity** %tqe_next297, %struct.identity*** %tqh_last298, align 8, !dbg !2657
  br label %do.end299, !dbg !2657

do.end299:                                        ; preds = %do.body289
  store i32 1, i32* %found, align 4, !dbg !2660
  br label %for.end304, !dbg !2661

if.end300:                                        ; preds = %if.end262
  br label %for.inc301, !dbg !2662

for.inc301:                                       ; preds = %if.end300, %if.then261
  %232 = load %struct.identity** %id2, align 8, !dbg !2631
  %next302 = getelementptr inbounds %struct.identity* %232, i32 0, i32 0, !dbg !2631
  %tqe_next303 = getelementptr inbounds %struct.anon.2.172* %next302, i32 0, i32 0, !dbg !2631
  %233 = load %struct.identity** %tqe_next303, align 8, !dbg !2631
  store %struct.identity* %233, %struct.identity** %id2, align 8, !dbg !2631
  br label %for.cond251, !dbg !2631

for.end304:                                       ; preds = %do.end299, %for.cond251
  %234 = load i32* %found, align 4, !dbg !2663
  %tobool305 = icmp ne i32 %234, 0, !dbg !2663
  br i1 %tobool305, label %if.end330, label %land.lhs.true306, !dbg !2663

land.lhs.true306:                                 ; preds = %for.end304
  %235 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 72), align 4, !dbg !2665
  %tobool307 = icmp ne i32 %235, 0, !dbg !2665
  br i1 %tobool307, label %if.then308, label %if.end330, !dbg !2665

if.then308:                                       ; preds = %land.lhs.true306
  br label %do.body309, !dbg !2667

do.body309:                                       ; preds = %if.then308
  %236 = load %struct.identity** %id, align 8, !dbg !2669
  %next310 = getelementptr inbounds %struct.identity* %236, i32 0, i32 0, !dbg !2669
  %tqe_next311 = getelementptr inbounds %struct.anon.2.172* %next310, i32 0, i32 0, !dbg !2669
  %237 = load %struct.identity** %tqe_next311, align 8, !dbg !2669
  %cmp312 = icmp ne %struct.identity* %237, null, !dbg !2669
  br i1 %cmp312, label %if.then313, label %if.else320, !dbg !2669

if.then313:                                       ; preds = %do.body309
  %238 = load %struct.identity** %id, align 8, !dbg !2673
  %next314 = getelementptr inbounds %struct.identity* %238, i32 0, i32 0, !dbg !2673
  %tqe_prev315 = getelementptr inbounds %struct.anon.2.172* %next314, i32 0, i32 1, !dbg !2673
  %239 = load %struct.identity*** %tqe_prev315, align 8, !dbg !2673
  %240 = load %struct.identity** %id, align 8, !dbg !2673
  %next316 = getelementptr inbounds %struct.identity* %240, i32 0, i32 0, !dbg !2673
  %tqe_next317 = getelementptr inbounds %struct.anon.2.172* %next316, i32 0, i32 0, !dbg !2673
  %241 = load %struct.identity** %tqe_next317, align 8, !dbg !2673
  %next318 = getelementptr inbounds %struct.identity* %241, i32 0, i32 0, !dbg !2673
  %tqe_prev319 = getelementptr inbounds %struct.anon.2.172* %next318, i32 0, i32 1, !dbg !2673
  store %struct.identity** %239, %struct.identity*** %tqe_prev319, align 8, !dbg !2673
  br label %if.end324, !dbg !2673

if.else320:                                       ; preds = %do.body309
  %242 = load %struct.identity** %id, align 8, !dbg !2675
  %next321 = getelementptr inbounds %struct.identity* %242, i32 0, i32 0, !dbg !2675
  %tqe_prev322 = getelementptr inbounds %struct.anon.2.172* %next321, i32 0, i32 1, !dbg !2675
  %243 = load %struct.identity*** %tqe_prev322, align 8, !dbg !2675
  %tqh_last323 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2675
  store %struct.identity** %243, %struct.identity*** %tqh_last323, align 8, !dbg !2675
  br label %if.end324

if.end324:                                        ; preds = %if.else320, %if.then313
  %244 = load %struct.identity** %id, align 8, !dbg !2677
  %next325 = getelementptr inbounds %struct.identity* %244, i32 0, i32 0, !dbg !2677
  %tqe_next326 = getelementptr inbounds %struct.anon.2.172* %next325, i32 0, i32 0, !dbg !2677
  %245 = load %struct.identity** %tqe_next326, align 8, !dbg !2677
  %246 = load %struct.identity** %id, align 8, !dbg !2677
  %next327 = getelementptr inbounds %struct.identity* %246, i32 0, i32 0, !dbg !2677
  %tqe_prev328 = getelementptr inbounds %struct.anon.2.172* %next327, i32 0, i32 1, !dbg !2677
  %247 = load %struct.identity*** %tqe_prev328, align 8, !dbg !2677
  store %struct.identity* %245, %struct.identity** %247, align 8, !dbg !2677
  br label %do.end329, !dbg !2677

do.end329:                                        ; preds = %if.end324
  %248 = load %struct.identity** %id, align 8, !dbg !2679
  %249 = bitcast %struct.identity* %248 to i8*, !dbg !2679
  call void @explicit_bzero(i8* %249, i64 56), !dbg !2679
  %250 = load %struct.identity** %id, align 8, !dbg !2680
  %251 = bitcast %struct.identity* %250 to i8*, !dbg !2680
  call void @free(i8* %251) #9, !dbg !2680
  br label %if.end330, !dbg !2681

if.end330:                                        ; preds = %do.end329, %land.lhs.true306, %for.end304
  br label %for.inc331, !dbg !2682

for.inc331:                                       ; preds = %if.end330, %if.then248
  %252 = load %struct.identity** %tmp, align 8, !dbg !2615
  store %struct.identity* %252, %struct.identity** %id, align 8, !dbg !2615
  br label %for.cond238, !dbg !2615

for.end332:                                       ; preds = %land.end
  %tqh_first333 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2683
  %253 = load %struct.identity** %tqh_first333, align 8, !dbg !2683
  store %struct.identity* %253, %struct.identity** %id, align 8, !dbg !2683
  br label %for.cond334, !dbg !2683

for.cond334:                                      ; preds = %for.inc369, %for.end332
  %254 = load %struct.identity** %id, align 8, !dbg !2685
  %tobool335 = icmp ne %struct.identity* %254, null, !dbg !2685
  br i1 %tobool335, label %for.body336, label %for.end371, !dbg !2685

for.body336:                                      ; preds = %for.cond334
  br label %do.body337, !dbg !2688

do.body337:                                       ; preds = %for.body336
  %255 = load %struct.identity** %id, align 8, !dbg !2690
  %next338 = getelementptr inbounds %struct.identity* %255, i32 0, i32 0, !dbg !2690
  %tqe_next339 = getelementptr inbounds %struct.anon.2.172* %next338, i32 0, i32 0, !dbg !2690
  %256 = load %struct.identity** %tqe_next339, align 8, !dbg !2690
  %cmp340 = icmp ne %struct.identity* %256, null, !dbg !2690
  br i1 %cmp340, label %if.then341, label %if.else348, !dbg !2690

if.then341:                                       ; preds = %do.body337
  %257 = load %struct.identity** %id, align 8, !dbg !2694
  %next342 = getelementptr inbounds %struct.identity* %257, i32 0, i32 0, !dbg !2694
  %tqe_prev343 = getelementptr inbounds %struct.anon.2.172* %next342, i32 0, i32 1, !dbg !2694
  %258 = load %struct.identity*** %tqe_prev343, align 8, !dbg !2694
  %259 = load %struct.identity** %id, align 8, !dbg !2694
  %next344 = getelementptr inbounds %struct.identity* %259, i32 0, i32 0, !dbg !2694
  %tqe_next345 = getelementptr inbounds %struct.anon.2.172* %next344, i32 0, i32 0, !dbg !2694
  %260 = load %struct.identity** %tqe_next345, align 8, !dbg !2694
  %next346 = getelementptr inbounds %struct.identity* %260, i32 0, i32 0, !dbg !2694
  %tqe_prev347 = getelementptr inbounds %struct.anon.2.172* %next346, i32 0, i32 1, !dbg !2694
  store %struct.identity** %258, %struct.identity*** %tqe_prev347, align 8, !dbg !2694
  br label %if.end352, !dbg !2694

if.else348:                                       ; preds = %do.body337
  %261 = load %struct.identity** %id, align 8, !dbg !2696
  %next349 = getelementptr inbounds %struct.identity* %261, i32 0, i32 0, !dbg !2696
  %tqe_prev350 = getelementptr inbounds %struct.anon.2.172* %next349, i32 0, i32 1, !dbg !2696
  %262 = load %struct.identity*** %tqe_prev350, align 8, !dbg !2696
  %tqh_last351 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 1, !dbg !2696
  store %struct.identity** %262, %struct.identity*** %tqh_last351, align 8, !dbg !2696
  br label %if.end352

if.end352:                                        ; preds = %if.else348, %if.then341
  %263 = load %struct.identity** %id, align 8, !dbg !2698
  %next353 = getelementptr inbounds %struct.identity* %263, i32 0, i32 0, !dbg !2698
  %tqe_next354 = getelementptr inbounds %struct.anon.2.172* %next353, i32 0, i32 0, !dbg !2698
  %264 = load %struct.identity** %tqe_next354, align 8, !dbg !2698
  %265 = load %struct.identity** %id, align 8, !dbg !2698
  %next355 = getelementptr inbounds %struct.identity* %265, i32 0, i32 0, !dbg !2698
  %tqe_prev356 = getelementptr inbounds %struct.anon.2.172* %next355, i32 0, i32 1, !dbg !2698
  %266 = load %struct.identity*** %tqe_prev356, align 8, !dbg !2698
  store %struct.identity* %264, %struct.identity** %266, align 8, !dbg !2698
  br label %do.end357, !dbg !2698

do.end357:                                        ; preds = %if.end352
  br label %do.body358, !dbg !2700

do.body358:                                       ; preds = %do.end357
  %267 = load %struct.identity** %id, align 8, !dbg !2701
  %next359 = getelementptr inbounds %struct.identity* %267, i32 0, i32 0, !dbg !2701
  %tqe_next360 = getelementptr inbounds %struct.anon.2.172* %next359, i32 0, i32 0, !dbg !2701
  store %struct.identity* null, %struct.identity** %tqe_next360, align 8, !dbg !2701
  %268 = load %struct.idlist** %preferred, align 8, !dbg !2701
  %tqh_last361 = getelementptr inbounds %struct.idlist* %268, i32 0, i32 1, !dbg !2701
  %269 = load %struct.identity*** %tqh_last361, align 8, !dbg !2701
  %270 = load %struct.identity** %id, align 8, !dbg !2701
  %next362 = getelementptr inbounds %struct.identity* %270, i32 0, i32 0, !dbg !2701
  %tqe_prev363 = getelementptr inbounds %struct.anon.2.172* %next362, i32 0, i32 1, !dbg !2701
  store %struct.identity** %269, %struct.identity*** %tqe_prev363, align 8, !dbg !2701
  %271 = load %struct.identity** %id, align 8, !dbg !2701
  %272 = load %struct.idlist** %preferred, align 8, !dbg !2701
  %tqh_last364 = getelementptr inbounds %struct.idlist* %272, i32 0, i32 1, !dbg !2701
  %273 = load %struct.identity*** %tqh_last364, align 8, !dbg !2701
  store %struct.identity* %271, %struct.identity** %273, align 8, !dbg !2701
  %274 = load %struct.identity** %id, align 8, !dbg !2701
  %next365 = getelementptr inbounds %struct.identity* %274, i32 0, i32 0, !dbg !2701
  %tqe_next366 = getelementptr inbounds %struct.anon.2.172* %next365, i32 0, i32 0, !dbg !2701
  %275 = load %struct.idlist** %preferred, align 8, !dbg !2701
  %tqh_last367 = getelementptr inbounds %struct.idlist* %275, i32 0, i32 1, !dbg !2701
  store %struct.identity** %tqe_next366, %struct.identity*** %tqh_last367, align 8, !dbg !2701
  br label %do.end368, !dbg !2701

do.end368:                                        ; preds = %do.body358
  br label %for.inc369, !dbg !2704

for.inc369:                                       ; preds = %do.end368
  %tqh_first370 = getelementptr inbounds %struct.idlist* %files, i32 0, i32 0, !dbg !2705
  %276 = load %struct.identity** %tqh_first370, align 8, !dbg !2705
  store %struct.identity* %276, %struct.identity** %id, align 8, !dbg !2705
  br label %for.cond334, !dbg !2705

for.end371:                                       ; preds = %for.cond334
  %277 = load %struct.idlist** %preferred, align 8, !dbg !2706
  %tqh_first372 = getelementptr inbounds %struct.idlist* %277, i32 0, i32 0, !dbg !2706
  %278 = load %struct.identity** %tqh_first372, align 8, !dbg !2706
  store %struct.identity* %278, %struct.identity** %id, align 8, !dbg !2706
  br label %for.cond373, !dbg !2706

for.cond373:                                      ; preds = %for.inc424, %for.end371
  %279 = load %struct.identity** %id, align 8, !dbg !2708
  %cmp374 = icmp ne %struct.identity* %279, null, !dbg !2708
  br i1 %cmp374, label %land.rhs375, label %land.end378, !dbg !2708

land.rhs375:                                      ; preds = %for.cond373
  %280 = load %struct.identity** %id, align 8, !dbg !2711
  %next376 = getelementptr inbounds %struct.identity* %280, i32 0, i32 0, !dbg !2711
  %tqe_next377 = getelementptr inbounds %struct.anon.2.172* %next376, i32 0, i32 0, !dbg !2711
  %281 = load %struct.identity** %tqe_next377, align 8, !dbg !2711
  store %struct.identity* %281, %struct.identity** %id2, align 8, !dbg !2711
  br label %land.end378

land.end378:                                      ; preds = %land.rhs375, %for.cond373
  %282 = phi i1 [ false, %for.cond373 ], [ true, %land.rhs375 ]
  br i1 %282, label %for.body379, label %for.end425, !dbg !2713

for.body379:                                      ; preds = %land.end378
  %283 = load %struct.identity** %id, align 8, !dbg !2715
  %key380 = getelementptr inbounds %struct.identity* %283, i32 0, i32 2, !dbg !2715
  %284 = load %struct.sshkey** %key380, align 8, !dbg !2715
  %cmp381 = icmp ne %struct.sshkey* %284, null, !dbg !2715
  br i1 %cmp381, label %land.lhs.true382, label %if.end414, !dbg !2715

land.lhs.true382:                                 ; preds = %for.body379
  %285 = load %struct.identity** %id, align 8, !dbg !2718
  %key383 = getelementptr inbounds %struct.identity* %285, i32 0, i32 2, !dbg !2718
  %286 = load %struct.sshkey** %key383, align 8, !dbg !2718
  %call384 = call i8* @sshkey_ssh_name(%struct.sshkey* %286), !dbg !2718
  %287 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 101), align 8, !dbg !2719
  %call385 = call i32 @match_pattern_list(i8* %call384, i8* %287, i32 0), !dbg !2719
  %cmp386 = icmp ne i32 %call385, 1, !dbg !2719
  br i1 %cmp386, label %if.then387, label %if.end414, !dbg !2719

if.then387:                                       ; preds = %land.lhs.true382
  %288 = load %struct.identity** %id, align 8, !dbg !2720
  %key388 = getelementptr inbounds %struct.identity* %288, i32 0, i32 2, !dbg !2720
  %289 = load %struct.sshkey** %key388, align 8, !dbg !2720
  %call389 = call i8* @sshkey_ssh_name(%struct.sshkey* %289), !dbg !2720
  %290 = load %struct.identity** %id, align 8, !dbg !2722
  %filename390 = getelementptr inbounds %struct.identity* %290, i32 0, i32 3, !dbg !2722
  %291 = load i8** %filename390, align 8, !dbg !2722
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([51 x i8]* @.str115918, i32 0, i32 0), i8* %call389, i8* %291), !dbg !2722
  br label %do.body391, !dbg !2723

do.body391:                                       ; preds = %if.then387
  %292 = load %struct.identity** %id, align 8, !dbg !2724
  %next392 = getelementptr inbounds %struct.identity* %292, i32 0, i32 0, !dbg !2724
  %tqe_next393 = getelementptr inbounds %struct.anon.2.172* %next392, i32 0, i32 0, !dbg !2724
  %293 = load %struct.identity** %tqe_next393, align 8, !dbg !2724
  %cmp394 = icmp ne %struct.identity* %293, null, !dbg !2724
  br i1 %cmp394, label %if.then395, label %if.else402, !dbg !2724

if.then395:                                       ; preds = %do.body391
  %294 = load %struct.identity** %id, align 8, !dbg !2728
  %next396 = getelementptr inbounds %struct.identity* %294, i32 0, i32 0, !dbg !2728
  %tqe_prev397 = getelementptr inbounds %struct.anon.2.172* %next396, i32 0, i32 1, !dbg !2728
  %295 = load %struct.identity*** %tqe_prev397, align 8, !dbg !2728
  %296 = load %struct.identity** %id, align 8, !dbg !2728
  %next398 = getelementptr inbounds %struct.identity* %296, i32 0, i32 0, !dbg !2728
  %tqe_next399 = getelementptr inbounds %struct.anon.2.172* %next398, i32 0, i32 0, !dbg !2728
  %297 = load %struct.identity** %tqe_next399, align 8, !dbg !2728
  %next400 = getelementptr inbounds %struct.identity* %297, i32 0, i32 0, !dbg !2728
  %tqe_prev401 = getelementptr inbounds %struct.anon.2.172* %next400, i32 0, i32 1, !dbg !2728
  store %struct.identity** %295, %struct.identity*** %tqe_prev401, align 8, !dbg !2728
  br label %if.end406, !dbg !2728

if.else402:                                       ; preds = %do.body391
  %298 = load %struct.identity** %id, align 8, !dbg !2730
  %next403 = getelementptr inbounds %struct.identity* %298, i32 0, i32 0, !dbg !2730
  %tqe_prev404 = getelementptr inbounds %struct.anon.2.172* %next403, i32 0, i32 1, !dbg !2730
  %299 = load %struct.identity*** %tqe_prev404, align 8, !dbg !2730
  %300 = load %struct.idlist** %preferred, align 8, !dbg !2730
  %tqh_last405 = getelementptr inbounds %struct.idlist* %300, i32 0, i32 1, !dbg !2730
  store %struct.identity** %299, %struct.identity*** %tqh_last405, align 8, !dbg !2730
  br label %if.end406

if.end406:                                        ; preds = %if.else402, %if.then395
  %301 = load %struct.identity** %id, align 8, !dbg !2732
  %next407 = getelementptr inbounds %struct.identity* %301, i32 0, i32 0, !dbg !2732
  %tqe_next408 = getelementptr inbounds %struct.anon.2.172* %next407, i32 0, i32 0, !dbg !2732
  %302 = load %struct.identity** %tqe_next408, align 8, !dbg !2732
  %303 = load %struct.identity** %id, align 8, !dbg !2732
  %next409 = getelementptr inbounds %struct.identity* %303, i32 0, i32 0, !dbg !2732
  %tqe_prev410 = getelementptr inbounds %struct.anon.2.172* %next409, i32 0, i32 1, !dbg !2732
  %304 = load %struct.identity*** %tqe_prev410, align 8, !dbg !2732
  store %struct.identity* %302, %struct.identity** %304, align 8, !dbg !2732
  br label %do.end411, !dbg !2732

do.end411:                                        ; preds = %if.end406
  %305 = load %struct.identity** %id, align 8, !dbg !2734
  %key412 = getelementptr inbounds %struct.identity* %305, i32 0, i32 2, !dbg !2734
  %306 = load %struct.sshkey** %key412, align 8, !dbg !2734
  call void @sshkey_free(%struct.sshkey* %306), !dbg !2734
  %307 = load %struct.identity** %id, align 8, !dbg !2735
  %filename413 = getelementptr inbounds %struct.identity* %307, i32 0, i32 3, !dbg !2735
  %308 = load i8** %filename413, align 8, !dbg !2735
  call void @free(i8* %308) #9, !dbg !2735
  %309 = load %struct.identity** %id, align 8, !dbg !2736
  %310 = bitcast %struct.identity* %309 to i8*, !dbg !2736
  call void @llvm.memset.p0i8.i64(i8* %310, i8 0, i64 56, i32 8, i1 false), !dbg !2736
  br label %for.inc424, !dbg !2737

if.end414:                                        ; preds = %land.lhs.true382, %for.body379
  %311 = load %struct.identity** %id, align 8, !dbg !2738
  %filename415 = getelementptr inbounds %struct.identity* %311, i32 0, i32 3, !dbg !2738
  %312 = load i8** %filename415, align 8, !dbg !2738
  %313 = load %struct.identity** %id, align 8, !dbg !2738
  %key416 = getelementptr inbounds %struct.identity* %313, i32 0, i32 2, !dbg !2738
  %314 = load %struct.sshkey** %key416, align 8, !dbg !2738
  %315 = load %struct.identity** %id, align 8, !dbg !2738
  %userprovided417 = getelementptr inbounds %struct.identity* %315, i32 0, i32 6, !dbg !2738
  %316 = load i32* %userprovided417, align 4, !dbg !2738
  %tobool418 = icmp ne i32 %316, 0, !dbg !2738
  %cond = select i1 %tobool418, i8* getelementptr inbounds ([11 x i8]* @.str117920, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), !dbg !2738
  %317 = load %struct.identity** %id, align 8, !dbg !2738
  %agent_fd419 = getelementptr inbounds %struct.identity* %317, i32 0, i32 1, !dbg !2738
  %318 = load i32* %agent_fd419, align 4, !dbg !2738
  %319 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2738
  %320 = extractvalue { i32, i1 } %319, 0, !dbg !2738
  %321 = extractvalue { i32, i1 } %319, 1, !dbg !2738
  %322 = xor i1 %321, true, !dbg !2738
  br i1 %322, label %cont421, label %trap420, !dbg !2738

trap420:                                          ; preds = %if.end414
  call void @llvm.trap() #3, !dbg !2739
  unreachable, !dbg !2739

cont421:                                          ; preds = %if.end414
  %cmp422 = icmp ne i32 %318, %320, !dbg !2741
  %cond423 = select i1 %cmp422, i8* getelementptr inbounds ([8 x i8]* @.str118921, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str5808, i32 0, i32 0), !dbg !2741
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([17 x i8]* @.str116919, i32 0, i32 0), i8* %312, %struct.sshkey* %314, i8* %cond, i8* %cond423), !dbg !2741
  br label %for.inc424, !dbg !2743

for.inc424:                                       ; preds = %cont421, %do.end411
  %323 = load %struct.identity** %id2, align 8, !dbg !2706
  store %struct.identity* %323, %struct.identity** %id, align 8, !dbg !2706
  br label %for.cond373, !dbg !2706

for.end425:                                       ; preds = %land.end378
  ret void, !dbg !2744
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.cauthmethod* @authmethod_lookup(i8* %name) #0 {
entry:
  %retval = alloca %struct.cauthmethod*, align 8
  %name.addr = alloca i8*, align 8
  %method = alloca %struct.cauthmethod*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %name.addr}, metadata !2745), !dbg !2746
  call void @llvm.dbg.declare(metadata !{%struct.cauthmethod** %method}, metadata !2747), !dbg !2748
  store %struct.cauthmethod* null, %struct.cauthmethod** %method, align 8, !dbg !2749
  %0 = load i8** %name.addr, align 8, !dbg !2750
  %cmp = icmp ne i8* %0, null, !dbg !2750
  br i1 %cmp, label %if.then, label %if.end6, !dbg !2750

if.then:                                          ; preds = %entry
  store %struct.cauthmethod* getelementptr inbounds ([6 x %struct.cauthmethod]* @authmethods, i32 0, i32 0), %struct.cauthmethod** %method, align 8, !dbg !2752
  br label %for.cond, !dbg !2752

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load %struct.cauthmethod** %method, align 8, !dbg !2754
  %name1 = getelementptr inbounds %struct.cauthmethod* %1, i32 0, i32 0, !dbg !2754
  %2 = load i8** %name1, align 8, !dbg !2754
  %cmp2 = icmp ne i8* %2, null, !dbg !2754
  br i1 %cmp2, label %for.body, label %for.end, !dbg !2754

for.body:                                         ; preds = %for.cond
  %3 = load i8** %name.addr, align 8, !dbg !2757
  %4 = load %struct.cauthmethod** %method, align 8, !dbg !2757
  %name3 = getelementptr inbounds %struct.cauthmethod* %4, i32 0, i32 0, !dbg !2757
  %5 = load i8** %name3, align 8, !dbg !2757
  %call = call i32 @strcmp(i8* %3, i8* %5) #12, !dbg !2757
  %cmp4 = icmp eq i32 %call, 0, !dbg !2757
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !2757

if.then5:                                         ; preds = %for.body
  %6 = load %struct.cauthmethod** %method, align 8, !dbg !2759
  store %struct.cauthmethod* %6, %struct.cauthmethod** %retval, !dbg !2759
  br label %return, !dbg !2759

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !2760

for.inc:                                          ; preds = %if.end
  %7 = load %struct.cauthmethod** %method, align 8, !dbg !2762
  %incdec.ptr = getelementptr inbounds %struct.cauthmethod* %7, i32 1, !dbg !2762
  store %struct.cauthmethod* %incdec.ptr, %struct.cauthmethod** %method, align 8, !dbg !2762
  br label %for.cond, !dbg !2762

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !2763

if.end6:                                          ; preds = %for.end, %entry
  %8 = load i8** %name.addr, align 8, !dbg !2764
  %tobool = icmp ne i8* %8, null, !dbg !2764
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !2764

cond.true:                                        ; preds = %if.end6
  %9 = load i8** %name.addr, align 8, !dbg !2765
  br label %cond.end, !dbg !2765

cond.false:                                       ; preds = %if.end6
  br label %cond.end, !dbg !2767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %9, %cond.true ], [ getelementptr inbounds ([5 x i8]* @.str86889, i32 0, i32 0), %cond.false ], !dbg !2764
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([44 x i8]* @.str85888, i32 0, i32 0), i8* %cond), !dbg !2769
  store %struct.cauthmethod* null, %struct.cauthmethod** %retval, !dbg !2772
  br label %return, !dbg !2772

return:                                           ; preds = %cond.end, %if.then5
  %10 = load %struct.cauthmethod** %retval, !dbg !2773
  ret %struct.cauthmethod* %10, !dbg !2773
}

; Function Attrs: nounwind sspreq uwtable
define internal void @pubkey_cleanup(%struct.cauthctxt* %authctxt) #0 {
entry:
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %id = alloca %struct.identity*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !2774), !dbg !2775
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id}, metadata !2776), !dbg !2777
  %0 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2778
  %agent_fd = getelementptr inbounds %struct.cauthctxt* %0, i32 0, i32 9, !dbg !2778
  %1 = load i32* %agent_fd, align 4, !dbg !2778
  %2 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2778
  %3 = extractvalue { i32, i1 } %2, 0, !dbg !2778
  %4 = extractvalue { i32, i1 } %2, 1, !dbg !2778
  %5 = xor i1 %4, true, !dbg !2778
  br i1 %5, label %cont, label %trap, !dbg !2778

trap:                                             ; preds = %entry
  call void @llvm.trap() #3, !dbg !2780
  unreachable, !dbg !2780

cont:                                             ; preds = %entry
  %cmp = icmp ne i32 %1, %3, !dbg !2782
  br i1 %cmp, label %if.then, label %if.end, !dbg !2782

if.then:                                          ; preds = %cont
  %6 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2784
  %agent_fd1 = getelementptr inbounds %struct.cauthctxt* %6, i32 0, i32 9, !dbg !2784
  %7 = load i32* %agent_fd1, align 4, !dbg !2784
  call void @ssh_close_authentication_socket(i32 %7), !dbg !2784
  br label %if.end, !dbg !2784

if.end:                                           ; preds = %if.then, %cont
  %8 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2785
  %keys = getelementptr inbounds %struct.cauthctxt* %8, i32 0, i32 8, !dbg !2785
  %tqh_first = getelementptr inbounds %struct.idlist* %keys, i32 0, i32 0, !dbg !2785
  %9 = load %struct.identity** %tqh_first, align 8, !dbg !2785
  store %struct.identity* %9, %struct.identity** %id, align 8, !dbg !2785
  br label %for.cond, !dbg !2785

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.identity** %id, align 8, !dbg !2787
  %tobool = icmp ne %struct.identity* %10, null, !dbg !2787
  br i1 %tobool, label %for.body, label %for.end, !dbg !2787

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !2789

do.body:                                          ; preds = %for.body
  %11 = load %struct.identity** %id, align 8, !dbg !2791
  %next = getelementptr inbounds %struct.identity* %11, i32 0, i32 0, !dbg !2791
  %tqe_next = getelementptr inbounds %struct.anon.2.172* %next, i32 0, i32 0, !dbg !2791
  %12 = load %struct.identity** %tqe_next, align 8, !dbg !2791
  %cmp2 = icmp ne %struct.identity* %12, null, !dbg !2791
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !2791

if.then3:                                         ; preds = %do.body
  %13 = load %struct.identity** %id, align 8, !dbg !2795
  %next4 = getelementptr inbounds %struct.identity* %13, i32 0, i32 0, !dbg !2795
  %tqe_prev = getelementptr inbounds %struct.anon.2.172* %next4, i32 0, i32 1, !dbg !2795
  %14 = load %struct.identity*** %tqe_prev, align 8, !dbg !2795
  %15 = load %struct.identity** %id, align 8, !dbg !2795
  %next5 = getelementptr inbounds %struct.identity* %15, i32 0, i32 0, !dbg !2795
  %tqe_next6 = getelementptr inbounds %struct.anon.2.172* %next5, i32 0, i32 0, !dbg !2795
  %16 = load %struct.identity** %tqe_next6, align 8, !dbg !2795
  %next7 = getelementptr inbounds %struct.identity* %16, i32 0, i32 0, !dbg !2795
  %tqe_prev8 = getelementptr inbounds %struct.anon.2.172* %next7, i32 0, i32 1, !dbg !2795
  store %struct.identity** %14, %struct.identity*** %tqe_prev8, align 8, !dbg !2795
  br label %if.end12, !dbg !2795

if.else:                                          ; preds = %do.body
  %17 = load %struct.identity** %id, align 8, !dbg !2797
  %next9 = getelementptr inbounds %struct.identity* %17, i32 0, i32 0, !dbg !2797
  %tqe_prev10 = getelementptr inbounds %struct.anon.2.172* %next9, i32 0, i32 1, !dbg !2797
  %18 = load %struct.identity*** %tqe_prev10, align 8, !dbg !2797
  %19 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2797
  %keys11 = getelementptr inbounds %struct.cauthctxt* %19, i32 0, i32 8, !dbg !2797
  %tqh_last = getelementptr inbounds %struct.idlist* %keys11, i32 0, i32 1, !dbg !2797
  store %struct.identity** %18, %struct.identity*** %tqh_last, align 8, !dbg !2797
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then3
  %20 = load %struct.identity** %id, align 8, !dbg !2799
  %next13 = getelementptr inbounds %struct.identity* %20, i32 0, i32 0, !dbg !2799
  %tqe_next14 = getelementptr inbounds %struct.anon.2.172* %next13, i32 0, i32 0, !dbg !2799
  %21 = load %struct.identity** %tqe_next14, align 8, !dbg !2799
  %22 = load %struct.identity** %id, align 8, !dbg !2799
  %next15 = getelementptr inbounds %struct.identity* %22, i32 0, i32 0, !dbg !2799
  %tqe_prev16 = getelementptr inbounds %struct.anon.2.172* %next15, i32 0, i32 1, !dbg !2799
  %23 = load %struct.identity*** %tqe_prev16, align 8, !dbg !2799
  store %struct.identity* %21, %struct.identity** %23, align 8, !dbg !2799
  br label %do.end, !dbg !2799

do.end:                                           ; preds = %if.end12
  %24 = load %struct.identity** %id, align 8, !dbg !2801
  %key = getelementptr inbounds %struct.identity* %24, i32 0, i32 2, !dbg !2801
  %25 = load %struct.sshkey** %key, align 8, !dbg !2801
  call void @sshkey_free(%struct.sshkey* %25), !dbg !2801
  %26 = load %struct.identity** %id, align 8, !dbg !2802
  %filename = getelementptr inbounds %struct.identity* %26, i32 0, i32 3, !dbg !2802
  %27 = load i8** %filename, align 8, !dbg !2802
  call void @free(i8* %27) #9, !dbg !2802
  %28 = load %struct.identity** %id, align 8, !dbg !2803
  %29 = bitcast %struct.identity* %28 to i8*, !dbg !2803
  call void @free(i8* %29) #9, !dbg !2803
  br label %for.inc, !dbg !2804

for.inc:                                          ; preds = %do.end
  %30 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2805
  %keys17 = getelementptr inbounds %struct.cauthctxt* %30, i32 0, i32 8, !dbg !2805
  %tqh_first18 = getelementptr inbounds %struct.idlist* %keys17, i32 0, i32 0, !dbg !2805
  %31 = load %struct.identity** %tqh_first18, align 8, !dbg !2805
  store %struct.identity* %31, %struct.identity** %id, align 8, !dbg !2805
  br label %for.cond, !dbg !2805

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2806
}

; Function Attrs: nounwind sspreq uwtable
define internal void @pubkey_reset(%struct.cauthctxt* %authctxt) #0 {
entry:
  %authctxt.addr = alloca %struct.cauthctxt*, align 8
  %id = alloca %struct.identity*, align 8
  store %struct.cauthctxt* %authctxt, %struct.cauthctxt** %authctxt.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthctxt** %authctxt.addr}, metadata !2807), !dbg !2808
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id}, metadata !2809), !dbg !2810
  %0 = load %struct.cauthctxt** %authctxt.addr, align 8, !dbg !2811
  %keys = getelementptr inbounds %struct.cauthctxt* %0, i32 0, i32 8, !dbg !2811
  %tqh_first = getelementptr inbounds %struct.idlist* %keys, i32 0, i32 0, !dbg !2811
  %1 = load %struct.identity** %tqh_first, align 8, !dbg !2811
  store %struct.identity* %1, %struct.identity** %id, align 8, !dbg !2811
  br label %for.cond, !dbg !2811

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.identity** %id, align 8, !dbg !2813
  %cmp = icmp ne %struct.identity* %2, null, !dbg !2813
  br i1 %cmp, label %for.body, label %for.end, !dbg !2813

for.body:                                         ; preds = %for.cond
  %3 = load %struct.identity** %id, align 8, !dbg !2816
  %tried = getelementptr inbounds %struct.identity* %3, i32 0, i32 4, !dbg !2816
  store i32 0, i32* %tried, align 4, !dbg !2816
  br label %for.inc, !dbg !2816

for.inc:                                          ; preds = %for.body
  %4 = load %struct.identity** %id, align 8, !dbg !2811
  %next = getelementptr inbounds %struct.identity* %4, i32 0, i32 0, !dbg !2811
  %tqe_next = getelementptr inbounds %struct.anon.2.172* %next, i32 0, i32 0, !dbg !2811
  %5 = load %struct.identity** %tqe_next, align 8, !dbg !2811
  store %struct.identity* %5, %struct.identity** %id, align 8, !dbg !2811
  br label %for.cond, !dbg !2811

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2817
}

; Function Attrs: nounwind sspreq uwtable
define internal %struct.cauthmethod* @authmethod_get(i8* %authlist) #0 {
entry:
  %retval = alloca %struct.cauthmethod*, align 8
  %authlist.addr = alloca i8*, align 8
  %name = alloca i8*, align 8
  %next = alloca i32, align 4
  store i8* %authlist, i8** %authlist.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %authlist.addr}, metadata !2818), !dbg !2819
  call void @llvm.dbg.declare(metadata !{i8** %name}, metadata !2820), !dbg !2821
  store i8* null, i8** %name, align 8, !dbg !2822
  call void @llvm.dbg.declare(metadata !{i32* %next}, metadata !2823), !dbg !2824
  %0 = load i8** %authlist.addr, align 8, !dbg !2825
  %cmp = icmp eq i8* %0, null, !dbg !2825
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2825

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8** %authlist.addr, align 8, !dbg !2827
  %call = call i64 @strlen(i8* %1) #12, !dbg !2827
  %cmp1 = icmp eq i64 %call, 0, !dbg !2827
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2827

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 47), align 8, !dbg !2829
  store i8* %2, i8** %authlist.addr, align 8, !dbg !2829
  br label %if.end, !dbg !2829

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %3 = load i8** @supported, align 8, !dbg !2830
  %cmp2 = icmp eq i8* %3, null, !dbg !2830
  br i1 %cmp2, label %if.then6, label %lor.lhs.false3, !dbg !2830

lor.lhs.false3:                                   ; preds = %if.end
  %4 = load i8** %authlist.addr, align 8, !dbg !2832
  %5 = load i8** @supported, align 8, !dbg !2832
  %call4 = call i32 @strcmp(i8* %4, i8* %5) #12, !dbg !2832
  %cmp5 = icmp ne i32 %call4, 0, !dbg !2832
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2832

if.then6:                                         ; preds = %lor.lhs.false3, %if.end
  %6 = load i8** %authlist.addr, align 8, !dbg !2834
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([39 x i8]* @.str78881, i32 0, i32 0), i8* %6), !dbg !2834
  %7 = load i8** @supported, align 8, !dbg !2836
  call void @free(i8* %7) #9, !dbg !2836
  %8 = load i8** %authlist.addr, align 8, !dbg !2837
  %call7 = call i8* @xstrdup(i8* %8), !dbg !2837
  store i8* %call7, i8** @supported, align 8, !dbg !2837
  %9 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 47), align 8, !dbg !2838
  store i8* %9, i8** @preferred, align 8, !dbg !2838
  %10 = load i8** @preferred, align 8, !dbg !2839
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([13 x i8]* @.str79882, i32 0, i32 0), i8* %10), !dbg !2839
  store %struct.cauthmethod* null, %struct.cauthmethod** @current, align 8, !dbg !2840
  br label %if.end12, !dbg !2841

if.else:                                          ; preds = %lor.lhs.false3
  %11 = load %struct.cauthmethod** @current, align 8, !dbg !2842
  %cmp8 = icmp ne %struct.cauthmethod* %11, null, !dbg !2842
  br i1 %cmp8, label %land.lhs.true, label %if.end11, !dbg !2842

land.lhs.true:                                    ; preds = %if.else
  %12 = load %struct.cauthmethod** @current, align 8, !dbg !2844
  %call9 = call i32 @authmethod_is_enabled(%struct.cauthmethod* %12), !dbg !2844
  %tobool = icmp ne i32 %call9, 0, !dbg !2844
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !2844

if.then10:                                        ; preds = %land.lhs.true
  %13 = load %struct.cauthmethod** @current, align 8, !dbg !2846
  store %struct.cauthmethod* %13, %struct.cauthmethod** %retval, !dbg !2846
  br label %return, !dbg !2846

if.end11:                                         ; preds = %land.lhs.true, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then6
  br label %for.cond, !dbg !2847

for.cond:                                         ; preds = %if.end23, %if.end12
  %14 = load i8** @preferred, align 8, !dbg !2849
  %15 = load i8** @supported, align 8, !dbg !2849
  %call13 = call i8* @match_list(i8* %14, i8* %15, i32* %next), !dbg !2849
  store i8* %call13, i8** %name, align 8, !dbg !2849
  %cmp14 = icmp eq i8* %call13, null, !dbg !2849
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2849

if.then15:                                        ; preds = %for.cond
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([39 x i8]* @.str80883, i32 0, i32 0)), !dbg !2852
  store %struct.cauthmethod* null, %struct.cauthmethod** @current, align 8, !dbg !2854
  store %struct.cauthmethod* null, %struct.cauthmethod** %retval, !dbg !2855
  br label %return, !dbg !2855

if.end16:                                         ; preds = %for.cond
  %16 = load i32* %next, align 4, !dbg !2856
  %17 = load i8** @preferred, align 8, !dbg !2856
  %idx.ext = zext i32 %16 to i64, !dbg !2856
  %add.ptr = getelementptr inbounds i8* %17, i64 %idx.ext, !dbg !2856
  store i8* %add.ptr, i8** @preferred, align 8, !dbg !2856
  %18 = load i8** %name, align 8, !dbg !2857
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([21 x i8]* @.str81884, i32 0, i32 0), i8* %18), !dbg !2857
  %19 = load i8** @preferred, align 8, !dbg !2858
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([24 x i8]* @.str82885, i32 0, i32 0), i8* %19), !dbg !2858
  %20 = load i8** %name, align 8, !dbg !2859
  %call17 = call %struct.cauthmethod* @authmethod_lookup(i8* %20), !dbg !2859
  store %struct.cauthmethod* %call17, %struct.cauthmethod** @current, align 8, !dbg !2859
  %cmp18 = icmp ne %struct.cauthmethod* %call17, null, !dbg !2859
  br i1 %cmp18, label %land.lhs.true19, label %if.end23, !dbg !2859

land.lhs.true19:                                  ; preds = %if.end16
  %21 = load %struct.cauthmethod** @current, align 8, !dbg !2861
  %call20 = call i32 @authmethod_is_enabled(%struct.cauthmethod* %21), !dbg !2861
  %tobool21 = icmp ne i32 %call20, 0, !dbg !2861
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !2861

if.then22:                                        ; preds = %land.lhs.true19
  %22 = load i8** %name, align 8, !dbg !2862
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([25 x i8]* @.str83886, i32 0, i32 0), i8* %22), !dbg !2862
  %23 = load i8** %name, align 8, !dbg !2864
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([31 x i8]* @.str84887, i32 0, i32 0), i8* %23), !dbg !2864
  %24 = load i8** %name, align 8, !dbg !2865
  call void @free(i8* %24) #9, !dbg !2865
  %25 = load %struct.cauthmethod** @current, align 8, !dbg !2866
  store %struct.cauthmethod* %25, %struct.cauthmethod** %retval, !dbg !2866
  br label %return, !dbg !2866

if.end23:                                         ; preds = %land.lhs.true19, %if.end16
  %26 = load i8** %name, align 8, !dbg !2867
  call void @free(i8* %26) #9, !dbg !2867
  br label %for.cond, !dbg !2868

return:                                           ; preds = %if.then22, %if.then15, %if.then10
  %27 = load %struct.cauthmethod** %retval, !dbg !2869
  ret %struct.cauthmethod* %27, !dbg !2869
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @authmethod_is_enabled(%struct.cauthmethod* %method) #0 {
entry:
  %retval = alloca i32, align 4
  %method.addr = alloca %struct.cauthmethod*, align 8
  store %struct.cauthmethod* %method, %struct.cauthmethod** %method.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.cauthmethod** %method.addr}, metadata !2870), !dbg !2871
  %0 = load %struct.cauthmethod** %method.addr, align 8, !dbg !2872
  %cmp = icmp eq %struct.cauthmethod* %0, null, !dbg !2872
  br i1 %cmp, label %if.then, label %if.end, !dbg !2872

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, !dbg !2874
  br label %return, !dbg !2874

if.end:                                           ; preds = %entry
  %1 = load %struct.cauthmethod** %method.addr, align 8, !dbg !2875
  %enabled = getelementptr inbounds %struct.cauthmethod* %1, i32 0, i32 3, !dbg !2875
  %2 = load i32** %enabled, align 8, !dbg !2875
  %cmp1 = icmp eq i32* %2, null, !dbg !2875
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !2875

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.cauthmethod** %method.addr, align 8, !dbg !2877
  %enabled2 = getelementptr inbounds %struct.cauthmethod* %3, i32 0, i32 3, !dbg !2877
  %4 = load i32** %enabled2, align 8, !dbg !2877
  %5 = load i32* %4, align 4, !dbg !2877
  %cmp3 = icmp eq i32 %5, 0, !dbg !2877
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2877

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, !dbg !2879
  br label %return, !dbg !2879

if.end5:                                          ; preds = %lor.lhs.false
  %6 = load %struct.cauthmethod** %method.addr, align 8, !dbg !2880
  %batch_flag = getelementptr inbounds %struct.cauthmethod* %6, i32 0, i32 4, !dbg !2880
  %7 = load i32** %batch_flag, align 8, !dbg !2880
  %cmp6 = icmp ne i32* %7, null, !dbg !2880
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !2880

land.lhs.true:                                    ; preds = %if.end5
  %8 = load %struct.cauthmethod** %method.addr, align 8, !dbg !2882
  %batch_flag7 = getelementptr inbounds %struct.cauthmethod* %8, i32 0, i32 4, !dbg !2882
  %9 = load i32** %batch_flag7, align 8, !dbg !2882
  %10 = load i32* %9, align 4, !dbg !2882
  %cmp8 = icmp ne i32 %10, 0, !dbg !2882
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !2882

if.then9:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, !dbg !2884
  br label %return, !dbg !2884

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  store i32 1, i32* %retval, !dbg !2885
  br label %return, !dbg !2885

return:                                           ; preds = %if.end10, %if.then9, %if.then4, %if.then
  %11 = load i32* %retval, !dbg !2886
  ret i32 %11, !dbg !2886
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @identity_sign_encode(%struct.identity* %id) #0 {
entry:
  %retval = alloca i8*, align 8
  %id.addr = alloca %struct.identity*, align 8
  %ssh = alloca %struct.ssh*, align 8
  store %struct.identity* %id, %struct.identity** %id.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id.addr}, metadata !2887), !dbg !2888
  call void @llvm.dbg.declare(metadata !{%struct.ssh** %ssh}, metadata !2889), !dbg !2890
  %0 = load %struct.ssh** @active_state, align 8, !dbg !2891
  store %struct.ssh* %0, %struct.ssh** %ssh, align 8, !dbg !2891
  %1 = load %struct.identity** %id.addr, align 8, !dbg !2892
  %key = getelementptr inbounds %struct.identity* %1, i32 0, i32 2, !dbg !2892
  %2 = load %struct.sshkey** %key, align 8, !dbg !2892
  %type = getelementptr inbounds %struct.sshkey* %2, i32 0, i32 0, !dbg !2892
  %3 = load i32* %type, align 4, !dbg !2892
  %cmp = icmp eq i32 %3, 1, !dbg !2892
  br i1 %cmp, label %if.then, label %if.end, !dbg !2892

if.then:                                          ; preds = %entry
  %4 = load %struct.ssh** %ssh, align 8, !dbg !2894
  %kex = getelementptr inbounds %struct.ssh* %4, i32 0, i32 1, !dbg !2894
  %5 = load %struct.kex** %kex, align 8, !dbg !2894
  %rsa_sha2 = getelementptr inbounds %struct.kex* %5, i32 0, i32 11, !dbg !2894
  %6 = load i32* %rsa_sha2, align 4, !dbg !2894
  switch i32 %6, label %sw.epilog [
    i32 256, label %sw.bb
    i32 512, label %sw.bb1
  ], !dbg !2894

sw.bb:                                            ; preds = %if.then
  store i8* getelementptr inbounds ([13 x i8]* @.str110913, i32 0, i32 0), i8** %retval, !dbg !2896
  br label %return, !dbg !2896

sw.bb1:                                           ; preds = %if.then
  store i8* getelementptr inbounds ([13 x i8]* @.str111914, i32 0, i32 0), i8** %retval, !dbg !2898
  br label %return, !dbg !2898

sw.epilog:                                        ; preds = %if.then
  br label %if.end, !dbg !2899

if.end:                                           ; preds = %sw.epilog, %entry
  %7 = load %struct.identity** %id.addr, align 8, !dbg !2900
  %key2 = getelementptr inbounds %struct.identity* %7, i32 0, i32 2, !dbg !2900
  %8 = load %struct.sshkey** %key2, align 8, !dbg !2900
  %call = call i8* @sshkey_ssh_name(%struct.sshkey* %8), !dbg !2900
  store i8* %call, i8** %retval, !dbg !2900
  br label %return, !dbg !2900

return:                                           ; preds = %if.end, %sw.bb1, %sw.bb
  %9 = load i8** %retval, !dbg !2901
  ret i8* %9, !dbg !2901
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @identity_sign(%struct.identity* %id, i8** %sigp, i64* %lenp, i8* %data, i64 %datalen, i32 %compat) #0 {
entry:
  %retval = alloca i32, align 4
  %id.addr = alloca %struct.identity*, align 8
  %sigp.addr = alloca i8**, align 8
  %lenp.addr = alloca i64*, align 8
  %data.addr = alloca i8*, align 8
  %datalen.addr = alloca i64, align 8
  %compat.addr = alloca i32, align 4
  %prv = alloca %struct.sshkey*, align 8
  %ret = alloca i32, align 4
  %alg = alloca i8*, align 8
  store %struct.identity* %id, %struct.identity** %id.addr, align 8
  call void @llvm.dbg.declare(metadata !{%struct.identity** %id.addr}, metadata !2902), !dbg !2903
  store i8** %sigp, i8*** %sigp.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8*** %sigp.addr}, metadata !2904), !dbg !2905
  store i64* %lenp, i64** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata !{i64** %lenp.addr}, metadata !2906), !dbg !2907
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata !{i8** %data.addr}, metadata !2908), !dbg !2909
  store i64 %datalen, i64* %datalen.addr, align 8
  call void @llvm.dbg.declare(metadata !{i64* %datalen.addr}, metadata !2910), !dbg !2911
  store i32 %compat, i32* %compat.addr, align 4
  call void @llvm.dbg.declare(metadata !{i32* %compat.addr}, metadata !2912), !dbg !2913
  call void @llvm.dbg.declare(metadata !{%struct.sshkey** %prv}, metadata !2914), !dbg !2915
  call void @llvm.dbg.declare(metadata !{i32* %ret}, metadata !2916), !dbg !2917
  call void @llvm.dbg.declare(metadata !{i8** %alg}, metadata !2918), !dbg !2919
  %0 = load %struct.identity** %id.addr, align 8, !dbg !2920
  %call = call i8* @identity_sign_encode(%struct.identity* %0), !dbg !2920
  store i8* %call, i8** %alg, align 8, !dbg !2920
  %1 = load %struct.identity** %id.addr, align 8, !dbg !2921
  %agent_fd = getelementptr inbounds %struct.identity* %1, i32 0, i32 1, !dbg !2921
  %2 = load i32* %agent_fd, align 4, !dbg !2921
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1), !dbg !2921
  %4 = extractvalue { i32, i1 } %3, 0, !dbg !2921
  %5 = extractvalue { i32, i1 } %3, 1, !dbg !2921
  %6 = xor i1 %5, true, !dbg !2921
  br i1 %6, label %cont, label %trap, !dbg !2921

trap:                                             ; preds = %entry
  call void @llvm.trap() #3, !dbg !2923
  unreachable, !dbg !2923

cont:                                             ; preds = %entry
  %cmp = icmp ne i32 %2, %4, !dbg !2925
  br i1 %cmp, label %if.then, label %if.end, !dbg !2925

if.then:                                          ; preds = %cont
  %7 = load %struct.identity** %id.addr, align 8, !dbg !2927
  %agent_fd1 = getelementptr inbounds %struct.identity* %7, i32 0, i32 1, !dbg !2927
  %8 = load i32* %agent_fd1, align 4, !dbg !2927
  %9 = load %struct.identity** %id.addr, align 8, !dbg !2927
  %key = getelementptr inbounds %struct.identity* %9, i32 0, i32 2, !dbg !2927
  %10 = load %struct.sshkey** %key, align 8, !dbg !2927
  %11 = load i8*** %sigp.addr, align 8, !dbg !2927
  %12 = load i64** %lenp.addr, align 8, !dbg !2927
  %13 = load i8** %data.addr, align 8, !dbg !2927
  %14 = load i64* %datalen.addr, align 8, !dbg !2927
  %15 = load i8** %alg, align 8, !dbg !2927
  %16 = load i32* %compat.addr, align 4, !dbg !2927
  %call2 = call i32 @ssh_agent_sign(i32 %8, %struct.sshkey* %10, i8** %11, i64* %12, i8* %13, i64 %14, i8* %15, i32 %16), !dbg !2927
  store i32 %call2, i32* %retval, !dbg !2927
  br label %return, !dbg !2927

if.end:                                           ; preds = %cont
  %17 = load %struct.identity** %id.addr, align 8, !dbg !2928
  %isprivate = getelementptr inbounds %struct.identity* %17, i32 0, i32 5, !dbg !2928
  %18 = load i32* %isprivate, align 4, !dbg !2928
  %tobool = icmp ne i32 %18, 0, !dbg !2928
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !2928

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.identity** %id.addr, align 8, !dbg !2930
  %key3 = getelementptr inbounds %struct.identity* %19, i32 0, i32 2, !dbg !2930
  %20 = load %struct.sshkey** %key3, align 8, !dbg !2930
  %flags = getelementptr inbounds %struct.sshkey* %20, i32 0, i32 1, !dbg !2930
  %21 = load i32* %flags, align 4, !dbg !2930
  %and = and i32 %21, 1, !dbg !2930
  %tobool4 = icmp ne i32 %and, 0, !dbg !2930
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !2930

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %22 = load %struct.identity** %id.addr, align 8, !dbg !2932
  %key6 = getelementptr inbounds %struct.identity* %22, i32 0, i32 2, !dbg !2932
  %23 = load %struct.sshkey** %key6, align 8, !dbg !2932
  %24 = load i8*** %sigp.addr, align 8, !dbg !2932
  %25 = load i64** %lenp.addr, align 8, !dbg !2932
  %26 = load i8** %data.addr, align 8, !dbg !2932
  %27 = load i64* %datalen.addr, align 8, !dbg !2932
  %28 = load i8** %alg, align 8, !dbg !2932
  %29 = load i32* %compat.addr, align 4, !dbg !2932
  %call7 = call i32 @sshkey_sign(%struct.sshkey* %23, i8** %24, i64* %25, i8* %26, i64 %27, i8* %28, i32 %29), !dbg !2932
  store i32 %call7, i32* %retval, !dbg !2932
  br label %return, !dbg !2932

if.end8:                                          ; preds = %lor.lhs.false
  %30 = load %struct.identity** %id.addr, align 8, !dbg !2933
  %call9 = call %struct.sshkey* @load_identity_file(%struct.identity* %30), !dbg !2933
  store %struct.sshkey* %call9, %struct.sshkey** %prv, align 8, !dbg !2933
  %cmp10 = icmp eq %struct.sshkey* %call9, null, !dbg !2933
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !2933

if.then11:                                        ; preds = %if.end8
  %31 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 46), !dbg !2935
  %32 = extractvalue { i32, i1 } %31, 0, !dbg !2935
  %33 = extractvalue { i32, i1 } %31, 1, !dbg !2935
  %34 = xor i1 %33, true, !dbg !2935
  br i1 %34, label %cont13, label %trap12, !dbg !2935

trap12:                                           ; preds = %if.then11
  call void @llvm.trap() #3, !dbg !2936
  unreachable, !dbg !2936

cont13:                                           ; preds = %if.then11
  store i32 %32, i32* %retval, !dbg !2938
  br label %return, !dbg !2938

if.end14:                                         ; preds = %if.end8
  %35 = load %struct.sshkey** %prv, align 8, !dbg !2940
  %36 = load i8*** %sigp.addr, align 8, !dbg !2940
  %37 = load i64** %lenp.addr, align 8, !dbg !2940
  %38 = load i8** %data.addr, align 8, !dbg !2940
  %39 = load i64* %datalen.addr, align 8, !dbg !2940
  %40 = load i8** %alg, align 8, !dbg !2940
  %41 = load i32* %compat.addr, align 4, !dbg !2940
  %call15 = call i32 @sshkey_sign(%struct.sshkey* %35, i8** %36, i64* %37, i8* %38, i64 %39, i8* %40, i32 %41), !dbg !2940
  store i32 %call15, i32* %ret, align 4, !dbg !2940
  %42 = load %struct.sshkey** %prv, align 8, !dbg !2941
  call void @sshkey_free(%struct.sshkey* %42), !dbg !2941
  %43 = load i32* %ret, align 4, !dbg !2942
  store i32 %43, i32* %retval, !dbg !2942
  br label %return, !dbg !2942

return:                                           ; preds = %if.end14, %cont13, %if.then5, %if.then
  %44 = load i32* %retval, !dbg !2943
  ret i32 %44, !dbg !2943
}

; Function Attrs: nounwind sspreq uwtable
define void @mux_exit_message(%struct.Channel* %c, i32 %exitval) #0 {
entry:
  %c.addr = alloca %struct.Channel*, align 8
  %exitval.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %mux_chan = alloca %struct.Channel*, align 8
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store i32 %exitval, i32* %exitval.addr, align 4
  %0 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %0, i32 0, i32 1
  %1 = load i32* %self, align 4
  %2 = load i32* %exitval.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([41 x i8]* @.str941, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.mux_exit_message, i32 0, i32 0), i32 %1, i32 %2)
  %3 = load %struct.Channel** %c.addr, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %3, i32 0, i32 10
  %4 = load i32* %ctl_chan, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %4)
  store %struct.Channel* %call, %struct.Channel** %mux_chan, align 8
  %cmp = icmp eq %struct.Channel* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load %struct.Channel** %c.addr, align 8
  %self1 = getelementptr inbounds %struct.Channel* %5, i32 0, i32 1
  %6 = load i32* %self1, align 4
  %7 = load %struct.Channel** %c.addr, align 8
  %ctl_chan2 = getelementptr inbounds %struct.Channel* %7, i32 0, i32 10
  %8 = load i32* %ctl_chan2, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([38 x i8]* @.str1942, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.mux_exit_message, i32 0, i32 0), i32 %6, i32 %8) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 -2147483644)
  %9 = load %struct.Channel** %c.addr, align 8
  %self3 = getelementptr inbounds %struct.Channel* %9, i32 0, i32 1
  %10 = load i32* %self3, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %10)
  %11 = load i32* %exitval.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %11)
  %12 = load %struct.Channel** %mux_chan, align 8
  %output = getelementptr inbounds %struct.Channel* %12, i32 0, i32 17
  %call4 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %m)
  %call5 = call i64 @sshbuf_len(%struct.sshbuf* %m)
  %conv = trunc i64 %call5 to i32
  call void @buffer_put_string(%struct.sshbuf* %output, i8* %call4, i32 %conv)
  call void @sshbuf_free(%struct.sshbuf* %m)
  ret void
}

declare %struct.Channel* @channel_by_id(i32) #1

declare void @buffer_put_int(%struct.sshbuf*, i32) #1

; Function Attrs: nounwind sspreq uwtable
define void @mux_tty_alloc_failed(%struct.Channel* %c) #0 {
entry:
  %c.addr = alloca %struct.Channel*, align 8
  %m = alloca %struct.sshbuf, align 8
  %mux_chan = alloca %struct.Channel*, align 8
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %0, i32 0, i32 1
  %1 = load i32* %self, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([33 x i8]* @.str2943, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.mux_tty_alloc_failed, i32 0, i32 0), i32 %1)
  %2 = load %struct.Channel** %c.addr, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %2, i32 0, i32 10
  %3 = load i32* %ctl_chan, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %3)
  store %struct.Channel* %call, %struct.Channel** %mux_chan, align 8
  %cmp = icmp eq %struct.Channel* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.Channel** %c.addr, align 8
  %self1 = getelementptr inbounds %struct.Channel* %4, i32 0, i32 1
  %5 = load i32* %self1, align 4
  %6 = load %struct.Channel** %c.addr, align 8
  %ctl_chan2 = getelementptr inbounds %struct.Channel* %6, i32 0, i32 10
  %7 = load i32* %ctl_chan2, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([38 x i8]* @.str1942, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.mux_tty_alloc_failed, i32 0, i32 0), i32 %5, i32 %7) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 -2147483640)
  %8 = load %struct.Channel** %c.addr, align 8
  %self3 = getelementptr inbounds %struct.Channel* %8, i32 0, i32 1
  %9 = load i32* %self3, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %9)
  %10 = load %struct.Channel** %mux_chan, align 8
  %output = getelementptr inbounds %struct.Channel* %10, i32 0, i32 17
  %call4 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %m)
  %call5 = call i64 @sshbuf_len(%struct.sshbuf* %m)
  %conv = trunc i64 %call5 to i32
  call void @buffer_put_string(%struct.sshbuf* %output, i8* %call4, i32 %conv)
  call void @sshbuf_free(%struct.sshbuf* %m)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define void @muxserver_listen() #0 {
entry:
  %old_umask = alloca i32, align 4
  %orig_control_path = alloca i8*, align 8
  %rbuf = alloca [17 x i8], align 16
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %oerrno = alloca i32, align 4
  %0 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  store i8* %0, i8** %orig_control_path, align 8
  %1 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp1 = icmp eq i32 %2, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([35 x i8]* @.str3944, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32* %i, align 4
  %conv = zext i32 %3 to i64
  %cmp2 = icmp ult i64 %conv, 16
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 26, i32 26)
  %5 = extractvalue { i32, i1 } %4, 0
  %6 = extractvalue { i32, i1 } %4, 1
  %7 = xor i1 %6, true
  br i1 %7, label %cont, label %trap

trap:                                             ; preds = %for.body
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.body
  %8 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 10)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont5, label %trap4

trap4:                                            ; preds = %cont
  call void @llvm.trap() #3
  unreachable

cont5:                                            ; preds = %cont
  %call = call i32 @arc4random_uniform(i32 %9)
  store i32 %call, i32* %r, align 4
  %12 = load i32* %r, align 4
  %cmp6 = icmp ult i32 %12, 26
  br i1 %cmp6, label %cond.true, label %cond.false

cond.true:                                        ; preds = %cont5
  %13 = load i32* %r, align 4
  %add = add i32 97, %13
  br label %cond.end18

cond.false:                                       ; preds = %cont5
  %14 = load i32* %r, align 4
  %15 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 26, i32 2)
  %16 = extractvalue { i32, i1 } %15, 0
  %17 = extractvalue { i32, i1 } %15, 1
  %18 = xor i1 %17, true
  br i1 %18, label %cont9, label %trap8

trap8:                                            ; preds = %cond.false
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %cond.false
  %cmp10 = icmp ult i32 %14, %16
  br i1 %cmp10, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %cont9
  %19 = load i32* %r, align 4
  %add13 = add i32 65, %19
  %sub = sub i32 %add13, 26
  br label %cond.end

cond.false14:                                     ; preds = %cont9
  %20 = load i32* %r, align 4
  %add15 = add i32 48, %20
  %sub16 = sub i32 %add15, 26
  %sub17 = sub i32 %sub16, 26
  br label %cond.end

cond.end:                                         ; preds = %cond.false14, %cond.true12
  %cond = phi i32 [ %sub, %cond.true12 ], [ %sub17, %cond.false14 ]
  br label %cond.end18

cond.end18:                                       ; preds = %cond.end, %cond.true
  %cond19 = phi i32 [ %add, %cond.true ], [ %cond, %cond.end ]
  %conv20 = trunc i32 %cond19 to i8
  %21 = load i32* %i, align 4
  %idxprom = zext i32 %21 to i64
  %arrayidx = getelementptr inbounds [17 x i8]* %rbuf, i32 0, i64 %idxprom
  store i8 %conv20, i8* %arrayidx, align 1
  br label %for.inc

for.inc:                                          ; preds = %cond.end18
  %22 = load i32* %i, align 4
  %inc = add i32 %22, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arrayidx21 = getelementptr inbounds [17 x i8]* %rbuf, i32 0, i64 16
  store i8 0, i8* %arrayidx21, align 1
  store i8* null, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %23 = load i8** %orig_control_path, align 8
  %arraydecay = getelementptr inbounds [17 x i8]* %rbuf, i32 0, i32 0
  %call22 = call i32 (i8**, i8*, ...)* @xasprintf(i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), i8* getelementptr inbounds ([6 x i8]* @.str4945, i32 0, i32 0), i8* %23, i8* %arraydecay)
  %24 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([30 x i8]* @.str5946, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.muxserver_listen, i32 0, i32 0), i8* %24)
  %call23 = call i32 @umask(i32 127) #9
  store i32 %call23, i32* %old_umask, align 4
  %25 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call24 = call i32 @unix_listener(i8* %25, i32 64, i32 0)
  store i32 %call24, i32* @muxserver_sock, align 4
  %call25 = call i32* @__errno_location() #2
  %26 = load i32* %call25, align 4
  store i32 %26, i32* %oerrno, align 4
  %27 = load i32* %old_umask, align 4
  %call26 = call i32 @umask(i32 %27) #9
  %28 = load i32* @muxserver_sock, align 4
  %cmp27 = icmp slt i32 %28, 0
  br i1 %cmp27, label %if.then29, label %if.end45

if.then29:                                        ; preds = %for.end
  %29 = load i32* %oerrno, align 4
  %cmp30 = icmp eq i32 %29, 22
  br i1 %cmp30, label %if.then35, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.then29
  %30 = load i32* %oerrno, align 4
  %cmp33 = icmp eq i32 %30, 98
  br i1 %cmp33, label %if.then35, label %if.else

if.then35:                                        ; preds = %lor.lhs.false32, %if.then29
  %31 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([56 x i8]* @.str6947, i32 0, i32 0), i8* %31)
  br label %disable_mux_master

disable_mux_master:                               ; preds = %if.end56, %if.then35
  %32 = load i32* @muxserver_sock, align 4
  %33 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %34 = extractvalue { i32, i1 } %33, 0
  %35 = extractvalue { i32, i1 } %33, 1
  %36 = xor i1 %35, true
  br i1 %36, label %cont37, label %trap36

trap36:                                           ; preds = %disable_mux_master
  call void @llvm.trap() #3
  unreachable

cont37:                                           ; preds = %disable_mux_master
  %cmp38 = icmp ne i32 %32, %34
  br i1 %cmp38, label %if.then40, label %if.end44

if.then40:                                        ; preds = %cont37
  %37 = load i32* @muxserver_sock, align 4
  %call41 = call i32 @close(i32 %37)
  %38 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %39 = extractvalue { i32, i1 } %38, 0
  %40 = extractvalue { i32, i1 } %38, 1
  %41 = xor i1 %40, true
  br i1 %41, label %cont43, label %trap42

trap42:                                           ; preds = %if.then40
  call void @llvm.trap() #3
  unreachable

cont43:                                           ; preds = %if.then40
  store i32 %39, i32* @muxserver_sock, align 4
  br label %if.end44

if.end44:                                         ; preds = %cont43, %cont37
  %42 = load i8** %orig_control_path, align 8
  call void @free(i8* %42) #9
  %43 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void @free(i8* %43) #9
  store i8* null, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  store i32 0, i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  br label %return

if.else:                                          ; preds = %lor.lhs.false32
  call void @cleanup_exit(i32 255) #11
  unreachable

if.end45:                                         ; preds = %for.end
  %44 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %45 = load i8** %orig_control_path, align 8
  %call46 = call i32 @link(i8* %44, i8* %45) #9
  %cmp47 = icmp ne i32 %call46, 0
  br i1 %cmp47, label %if.then49, label %if.end58

if.then49:                                        ; preds = %if.end45
  %call50 = call i32* @__errno_location() #2
  %46 = load i32* %call50, align 4
  %cmp51 = icmp ne i32 %46, 17
  br i1 %cmp51, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.then49
  %47 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %48 = load i8** %orig_control_path, align 8
  %call54 = call i32* @__errno_location() #2
  %49 = load i32* %call54, align 4
  %call55 = call i8* @strerror(i32 %49) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([35 x i8]* @.str7948, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.muxserver_listen, i32 0, i32 0), i8* %47, i8* %48, i8* %call55) #11
  unreachable

if.end56:                                         ; preds = %if.then49
  %50 = load i8** %orig_control_path, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([56 x i8]* @.str6947, i32 0, i32 0), i8* %50)
  %51 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call57 = call i32 @unlink(i8* %51) #9
  br label %disable_mux_master

if.end58:                                         ; preds = %if.end45
  %52 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call59 = call i32 @unlink(i8* %52) #9
  %53 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void @free(i8* %53) #9
  %54 = load i8** %orig_control_path, align 8
  store i8* %54, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %55 = load i32* @muxserver_sock, align 4
  %call60 = call i32 @set_nonblock(i32 %55)
  %56 = load i32* @muxserver_sock, align 4
  %57 = load i32* @muxserver_sock, align 4
  %58 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %59 = extractvalue { i32, i1 } %58, 0
  %60 = extractvalue { i32, i1 } %58, 1
  %61 = xor i1 %60, true
  br i1 %61, label %cont62, label %trap61

trap61:                                           ; preds = %if.end58
  call void @llvm.trap() #3
  unreachable

cont62:                                           ; preds = %if.end58
  %62 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %63 = extractvalue { i32, i1 } %62, 0
  %64 = extractvalue { i32, i1 } %62, 1
  %65 = xor i1 %64, true
  br i1 %65, label %cont64, label %trap63

trap63:                                           ; preds = %cont62
  call void @llvm.trap() #3
  unreachable

cont64:                                           ; preds = %cont62
  %66 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 64, i32 %63)
  %67 = extractvalue { i32, i1 } %66, 0
  %68 = extractvalue { i32, i1 } %66, 1
  %69 = xor i1 %68, true
  br i1 %69, label %cont66, label %trap65

trap65:                                           ; preds = %cont64
  call void @llvm.trap() #3
  unreachable

cont66:                                           ; preds = %cont64
  %70 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %71 = extractvalue { i32, i1 } %70, 0
  %72 = extractvalue { i32, i1 } %70, 1
  %73 = xor i1 %72, true
  br i1 %73, label %cont68, label %trap67

trap67:                                           ; preds = %cont66
  call void @llvm.trap() #3
  unreachable

cont68:                                           ; preds = %cont66
  %74 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  %call69 = call %struct.Channel* @channel_new(i8* getelementptr inbounds ([13 x i8]* @.str8949, i32 0, i32 0), i32 15, i32 %56, i32 %57, i32 %59, i32 %67, i32 %71, i32 0, i8* %74, i32 1)
  store %struct.Channel* %call69, %struct.Channel** @mux_listener_channel, align 8
  %75 = load %struct.Channel** @mux_listener_channel, align 8
  %mux_rcb = getelementptr inbounds %struct.Channel* %75, i32 0, i32 44
  store i32 (%struct.Channel*)* @mux_master_read_cb, i32 (%struct.Channel*)** %mux_rcb, align 8
  %76 = load %struct.Channel** @mux_listener_channel, align 8
  %self = getelementptr inbounds %struct.Channel* %76, i32 0, i32 1
  %77 = load i32* %self, align 4
  %78 = load %struct.Channel** @mux_listener_channel, align 8
  %sock = getelementptr inbounds %struct.Channel* %78, i32 0, i32 9
  %79 = load i32* %sock, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([34 x i8]* @.str9950, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.muxserver_listen, i32 0, i32 0), i32 %77, i32 %79)
  br label %return

return:                                           ; preds = %cont68, %if.end44, %if.then
  ret void
}

declare i32 @arc4random_uniform(i32) #1

declare i32 @unix_listener(i8*, i32, i32) #1

; Function Attrs: nounwind
declare i32 @link(i8*, i8*) #4

; Function Attrs: nounwind sspreq uwtable
define i32 @muxclient(i8* %path) #0 {
entry:
  %retval = alloca i32, align 4
  %path.addr = alloca i8*, align 8
  %addr = alloca %struct.sockaddr_un, align 2
  %sun_len = alloca i32, align 4
  %sock = alloca i32, align 4
  %pid = alloca i32, align 4
  %agg.tmp = alloca %union.__CONST_SOCKADDR_ARG, align 8
  store i8* %path, i8** %path.addr, align 8
  %0 = load i32* @muxclient_command, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %1 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  %cmp1 = icmp ne i8* %1, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  store i32 4, i32* @muxclient_command, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store i32 1, i32* @muxclient_command, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  switch i32 %2, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 0, label %sw.bb4
  ]

sw.bb:                                            ; preds = %if.end3, %if.end3
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([33 x i8]* @.str10951, i32 0, i32 0))
  br label %sw.bb4

sw.bb4:                                           ; preds = %sw.bb, %if.end3
  br label %sw.epilog

sw.default:                                       ; preds = %if.end3
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %sw.default
  store i32 %4, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb4
  %7 = bitcast %struct.sockaddr_un* %addr to i8*
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 110, i32 2, i1 false)
  %sun_family = getelementptr inbounds %struct.sockaddr_un* %addr, i32 0, i32 0
  store i16 1, i16* %sun_family, align 2
  %8 = load i8** %path.addr, align 8
  %call = call i64 @strlen(i8* %8) #12
  %add = add i64 2, %call
  %add5 = add i64 %add, 1
  %conv = trunc i64 %add5 to i32
  store i32 %conv, i32* %sun_len, align 4
  %sun_path = getelementptr inbounds %struct.sockaddr_un* %addr, i32 0, i32 1
  %arraydecay = getelementptr inbounds [108 x i8]* %sun_path, i32 0, i32 0
  %9 = load i8** %path.addr, align 8
  %call6 = call i64 @strlcpy(i8* %arraydecay, i8* %9, i64 108)
  %cmp7 = icmp uge i64 %call6, 108
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %sw.epilog
  %10 = load i8** %path.addr, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str11952, i32 0, i32 0), i8* %10, i32 108) #11
  unreachable

if.end10:                                         ; preds = %sw.epilog
  %call11 = call i32 @socket(i32 1, i32 1, i32 0) #9
  store i32 %call11, i32* %sock, align 4
  %cmp12 = icmp slt i32 %call11, 0
  br i1 %cmp12, label %if.then14, label %if.end17

if.then14:                                        ; preds = %if.end10
  %call15 = call i32* @__errno_location() #2
  %11 = load i32* %call15, align 4
  %call16 = call i8* @strerror(i32 %11) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str12953, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @__func__.muxclient, i32 0, i32 0), i8* %call16) #11
  unreachable

if.end17:                                         ; preds = %if.end10
  %12 = load i32* %sock, align 4
  %__sockaddr__ = bitcast %union.__CONST_SOCKADDR_ARG* %agg.tmp to %struct.sockaddr**
  %13 = bitcast %struct.sockaddr_un* %addr to %struct.sockaddr*
  store %struct.sockaddr* %13, %struct.sockaddr** %__sockaddr__, align 8
  %14 = load i32* %sun_len, align 4
  %coerce.dive = getelementptr %union.__CONST_SOCKADDR_ARG* %agg.tmp, i32 0, i32 0
  %15 = load %struct.sockaddr** %coerce.dive
  %call18 = call i32 @connect(i32 %12, %struct.sockaddr* %15, i32 %14)
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont20, label %trap19

trap19:                                           ; preds = %if.end17
  call void @llvm.trap() #3
  unreachable

cont20:                                           ; preds = %if.end17
  %cmp21 = icmp eq i32 %call18, %17
  br i1 %cmp21, label %if.then23, label %if.end49

if.then23:                                        ; preds = %cont20
  %20 = load i32* @muxclient_command, align 4
  switch i32 %20, label %sw.default25 [
    i32 1, label %sw.bb24
    i32 4, label %sw.bb24
  ]

sw.bb24:                                          ; preds = %if.then23, %if.then23
  br label %sw.epilog28

sw.default25:                                     ; preds = %if.then23
  %21 = load i8** %path.addr, align 8
  %call26 = call i32* @__errno_location() #2
  %22 = load i32* %call26, align 4
  %call27 = call i8* @strerror(i32 %22) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([35 x i8]* @.str13954, i32 0, i32 0), i8* %21, i8* %call27) #11
  unreachable

sw.epilog28:                                      ; preds = %sw.bb24
  %call29 = call i32* @__errno_location() #2
  %23 = load i32* %call29, align 4
  %cmp30 = icmp eq i32 %23, 111
  br i1 %cmp30, label %land.lhs.true, label %if.else36

land.lhs.true:                                    ; preds = %sw.epilog28
  %24 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp32 = icmp ne i32 %24, 0
  br i1 %cmp32, label %if.then34, label %if.else36

if.then34:                                        ; preds = %land.lhs.true
  %25 = load i8** %path.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([39 x i8]* @.str14955, i32 0, i32 0), i8* %25)
  %26 = load i8** %path.addr, align 8
  %call35 = call i32 @unlink(i8* %26) #9
  br label %if.end45

if.else36:                                        ; preds = %land.lhs.true, %sw.epilog28
  %call37 = call i32* @__errno_location() #2
  %27 = load i32* %call37, align 4
  %cmp38 = icmp eq i32 %27, 2
  br i1 %cmp38, label %if.then40, label %if.else41

if.then40:                                        ; preds = %if.else36
  %28 = load i8** %path.addr, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([39 x i8]* @.str15956, i32 0, i32 0), i8* %28)
  br label %if.end44

if.else41:                                        ; preds = %if.else36
  %29 = load i8** %path.addr, align 8
  %call42 = call i32* @__errno_location() #2
  %30 = load i32* %call42, align 4
  %call43 = call i8* @strerror(i32 %30) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str13954, i32 0, i32 0), i8* %29, i8* %call43)
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then40
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then34
  %31 = load i32* %sock, align 4
  %call46 = call i32 @close(i32 %31)
  %32 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %33 = extractvalue { i32, i1 } %32, 0
  %34 = extractvalue { i32, i1 } %32, 1
  %35 = xor i1 %34, true
  br i1 %35, label %cont48, label %trap47

trap47:                                           ; preds = %if.end45
  call void @llvm.trap() #3
  unreachable

cont48:                                           ; preds = %if.end45
  store i32 %33, i32* %retval
  br label %return

if.end49:                                         ; preds = %cont20
  %36 = load i32* %sock, align 4
  %call50 = call i32 @set_nonblock(i32 %36)
  %37 = load i32* %sock, align 4
  %call51 = call i32 @mux_client_hello_exchange(i32 %37)
  %cmp52 = icmp ne i32 %call51, 0
  br i1 %cmp52, label %if.then54, label %if.end58

if.then54:                                        ; preds = %if.end49
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([33 x i8]* @.str16957, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @__func__.muxclient, i32 0, i32 0))
  %38 = load i32* %sock, align 4
  %call55 = call i32 @close(i32 %38)
  %39 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont57, label %trap56

trap56:                                           ; preds = %if.then54
  call void @llvm.trap() #3
  unreachable

cont57:                                           ; preds = %if.then54
  store i32 %40, i32* %retval
  br label %return

if.end58:                                         ; preds = %if.end49
  %43 = load i32* @muxclient_command, align 4
  switch i32 %43, label %sw.default105 [
    i32 2, label %sw.bb59
    i32 3, label %sw.bb66
    i32 5, label %sw.bb72
    i32 1, label %sw.bb78
    i32 4, label %sw.bb89
    i32 6, label %sw.bb91
    i32 7, label %sw.bb97
    i32 8, label %sw.bb103
  ]

sw.bb59:                                          ; preds = %if.end58
  %44 = load i32* %sock, align 4
  %call60 = call i32 @mux_client_request_alive(i32 %44)
  store i32 %call60, i32* %pid, align 4
  %cmp61 = icmp eq i32 %call60, 0
  br i1 %cmp61, label %if.then63, label %if.end64

if.then63:                                        ; preds = %sw.bb59
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str17958, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @__func__.muxclient, i32 0, i32 0)) #11
  unreachable

if.end64:                                         ; preds = %sw.bb59
  %45 = load %struct._IO_FILE** @stderr, align 8
  %46 = load i32* %pid, align 4
  %call65 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([26 x i8]* @.str18959, i32 0, i32 0), i32 %46)
  call void @exit(i32 0) #3
  unreachable

sw.bb66:                                          ; preds = %if.end58
  %47 = load i32* %sock, align 4
  call void @mux_client_request_terminate(i32 %47)
  %48 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp67 = icmp ne i32 %48, 0
  br i1 %cmp67, label %if.then69, label %if.end71

if.then69:                                        ; preds = %sw.bb66
  %49 = load %struct._IO_FILE** @stderr, align 8
  %call70 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %49, i8* getelementptr inbounds ([21 x i8]* @.str19960, i32 0, i32 0))
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %sw.bb66
  call void @exit(i32 0) #3
  unreachable

sw.bb72:                                          ; preds = %if.end58
  %50 = load i32* %sock, align 4
  %call73 = call i32 @mux_client_forwards(i32 %50, i32 0)
  %cmp74 = icmp ne i32 %call73, 0
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %sw.bb72
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str20961, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @__func__.muxclient, i32 0, i32 0)) #11
  unreachable

if.end77:                                         ; preds = %sw.bb72
  call void @exit(i32 0) #3
  unreachable

sw.bb78:                                          ; preds = %if.end58
  %51 = load i32* %sock, align 4
  %call79 = call i32 @mux_client_forwards(i32 %51, i32 0)
  %cmp80 = icmp ne i32 %call79, 0
  br i1 %cmp80, label %if.then82, label %if.end85

if.then82:                                        ; preds = %sw.bb78
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str20961, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @__func__.muxclient, i32 0, i32 0))
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %53 = extractvalue { i32, i1 } %52, 0
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = xor i1 %54, true
  br i1 %55, label %cont84, label %trap83

trap83:                                           ; preds = %if.then82
  call void @llvm.trap() #3
  unreachable

cont84:                                           ; preds = %if.then82
  store i32 %53, i32* %retval
  br label %return

if.end85:                                         ; preds = %sw.bb78
  %56 = load i32* %sock, align 4
  %call86 = call i32 @mux_client_request_session(i32 %56)
  %57 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %58 = extractvalue { i32, i1 } %57, 0
  %59 = extractvalue { i32, i1 } %57, 1
  %60 = xor i1 %59, true
  br i1 %60, label %cont88, label %trap87

trap87:                                           ; preds = %if.end85
  call void @llvm.trap() #3
  unreachable

cont88:                                           ; preds = %if.end85
  store i32 %58, i32* %retval
  br label %return

sw.bb89:                                          ; preds = %if.end58
  %61 = load i32* %sock, align 4
  %call90 = call i32 @mux_client_request_stdio_fwd(i32 %61)
  call void @exit(i32 0) #3
  unreachable

sw.bb91:                                          ; preds = %if.end58
  %62 = load i32* %sock, align 4
  call void @mux_client_request_stop_listening(i32 %62)
  %63 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp92 = icmp ne i32 %63, 0
  br i1 %cmp92, label %if.then94, label %if.end96

if.then94:                                        ; preds = %sw.bb91
  %64 = load %struct._IO_FILE** @stderr, align 8
  %call95 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([31 x i8]* @.str21962, i32 0, i32 0))
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %sw.bb91
  call void @exit(i32 0) #3
  unreachable

sw.bb97:                                          ; preds = %if.end58
  %65 = load i32* %sock, align 4
  %call98 = call i32 @mux_client_forwards(i32 %65, i32 1)
  %cmp99 = icmp ne i32 %call98, 0
  br i1 %cmp99, label %if.then101, label %if.end102

if.then101:                                       ; preds = %sw.bb97
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str22963, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @__func__.muxclient, i32 0, i32 0))
  br label %if.end102

if.end102:                                        ; preds = %if.then101, %sw.bb97
  call void @exit(i32 0) #3
  unreachable

sw.bb103:                                         ; preds = %if.end58
  %66 = load i32* %sock, align 4
  %call104 = call i32 @mux_client_proxy(i32 %66)
  %67 = load i32* %sock, align 4
  store i32 %67, i32* %retval
  br label %return

sw.default105:                                    ; preds = %if.end58
  %68 = load i32* @muxclient_command, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([34 x i8]* @.str23964, i32 0, i32 0), i32 %68) #11
  unreachable

return:                                           ; preds = %sw.bb103, %cont88, %cont84, %cont57, %cont48, %cont
  %69 = load i32* %retval
  ret i32 %69
}

declare i32 @buffer_get_int(%struct.sshbuf*) #1

declare i32 @get_u32(i8*) #1

declare i8* @buffer_get_string_ptr(%struct.sshbuf*, i32*) #1

declare i8* @buffer_append_space(%struct.sshbuf*, i32) #1

declare i32 @poll(%struct.pollfd*, i64, i32) #1

declare i32 @mm_send_fd(i32, i32) #1

declare void @platform_pledge_mux() #1

declare i8* @buffer_get_string_ptr_ret(%struct.sshbuf*, i32*) #1

declare i32 @buffer_get_int_ret(i32*, %struct.sshbuf*) #1

declare i32 @channel_proxy_downstream(%struct.Channel*) #1

declare void @channel_free(%struct.Channel*) #1

declare i8* @buffer_get_string_ret(%struct.sshbuf*, i32*) #1

declare void @chan_rcvd_oclose(%struct.Channel*) #1

declare void @chan_mark_dead(%struct.Channel*) #1

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_master_read_cb(%struct.Channel* %c) #0 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %state = alloca %struct.mux_master_state*, align 8
  %in = alloca %struct.sshbuf, align 8
  %out = alloca %struct.sshbuf, align 8
  %ptr = alloca i8*, align 8
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  %have = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %mux_ctx = getelementptr inbounds %struct.Channel* %0, i32 0, i32 45
  %1 = load i8** %mux_ctx, align 8
  %2 = bitcast i8* %1 to %struct.mux_master_state*
  store %struct.mux_master_state* %2, %struct.mux_master_state** %state, align 8
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %entry
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %entry
  store i32 %4, i32* %ret, align 4
  %7 = load %struct.Channel** %c.addr, align 8
  %mux_ctx1 = getelementptr inbounds %struct.Channel* %7, i32 0, i32 45
  %8 = load i8** %mux_ctx1, align 8
  %cmp = icmp eq i8* %8, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cont
  %call = call i8* @xcalloc(i64 1, i64 4)
  %9 = bitcast i8* %call to %struct.mux_master_state*
  store %struct.mux_master_state* %9, %struct.mux_master_state** %state, align 8
  %10 = load %struct.mux_master_state** %state, align 8
  %11 = bitcast %struct.mux_master_state* %10 to i8*
  %12 = load %struct.Channel** %c.addr, align 8
  %mux_ctx2 = getelementptr inbounds %struct.Channel* %12, i32 0, i32 45
  store i8* %11, i8** %mux_ctx2, align 8
  %13 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %13, i32 0, i32 1
  %14 = load i32* %self, align 4
  call void @channel_register_cleanup(i32 %14, void (i32, i8*)* @mux_master_control_cleanup_cb, i32 0)
  call void @sshbuf_init(%struct.sshbuf* %out)
  call void @buffer_put_int(%struct.sshbuf* %out, i32 1)
  call void @buffer_put_int(%struct.sshbuf* %out, i32 4)
  %15 = load %struct.Channel** %c.addr, align 8
  %output = getelementptr inbounds %struct.Channel* %15, i32 0, i32 17
  %call3 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %out)
  %call4 = call i64 @sshbuf_len(%struct.sshbuf* %out)
  %conv = trunc i64 %call4 to i32
  call void @buffer_put_string(%struct.sshbuf* %output, i8* %call3, i32 %conv)
  call void @sshbuf_free(%struct.sshbuf* %out)
  %16 = load %struct.Channel** %c.addr, align 8
  %self5 = getelementptr inbounds %struct.Channel* %16, i32 0, i32 1
  %17 = load i32* %self5, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([27 x i8]* @.str861027, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_master_read_cb, i32 0, i32 0), i32 %17)
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %cont
  call void @sshbuf_init(%struct.sshbuf* %in)
  call void @sshbuf_init(%struct.sshbuf* %out)
  %18 = load %struct.Channel** %c.addr, align 8
  %input = getelementptr inbounds %struct.Channel* %18, i32 0, i32 16
  %call6 = call i8* @buffer_get_string_ptr_ret(%struct.sshbuf* %input, i32* %have)
  store i8* %call6, i8** %ptr, align 8
  %cmp7 = icmp eq i8* %call6, null
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  br label %malf

malf:                                             ; preds = %if.then27, %if.then14, %if.then9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str871028, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_master_read_cb, i32 0, i32 0))
  br label %out60

if.end10:                                         ; preds = %if.end
  %19 = load i8** %ptr, align 8
  %20 = load i32* %have, align 4
  call void @buffer_append(%struct.sshbuf* %in, i8* %19, i32 %20)
  %call11 = call i32 @buffer_get_int_ret(i32* %type, %struct.sshbuf* %in)
  %cmp12 = icmp ne i32 %call11, 0
  br i1 %cmp12, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end10
  br label %malf

if.end15:                                         ; preds = %if.end10
  %21 = load %struct.Channel** %c.addr, align 8
  %self16 = getelementptr inbounds %struct.Channel* %21, i32 0, i32 1
  %22 = load i32* %self16, align 4
  %23 = load i32* %type, align 4
  %call17 = call i64 @sshbuf_len(%struct.sshbuf* %in)
  %conv18 = trunc i64 %call17 to i32
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([41 x i8]* @.str881029, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_master_read_cb, i32 0, i32 0), i32 %22, i32 %23, i32 %conv18)
  %24 = load i32* %type, align 4
  %cmp19 = icmp eq i32 %24, 1
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.end15
  store i32 0, i32* %rid, align 4
  br label %if.end29

if.else:                                          ; preds = %if.end15
  %25 = load %struct.mux_master_state** %state, align 8
  %hello_rcvd = getelementptr inbounds %struct.mux_master_state* %25, i32 0, i32 0
  %26 = load i32* %hello_rcvd, align 4
  %tobool = icmp ne i32 %26, 0
  br i1 %tobool, label %if.end23, label %if.then22

if.then22:                                        ; preds = %if.else
  %27 = load i32* %type, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([52 x i8]* @.str891030, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_master_read_cb, i32 0, i32 0), i32 1, i32 %27)
  br label %out60

if.end23:                                         ; preds = %if.else
  %call24 = call i32 @buffer_get_int_ret(i32* %rid, %struct.sshbuf* %in)
  %cmp25 = icmp ne i32 %call24, 0
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end23
  br label %malf

if.end28:                                         ; preds = %if.end23
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then21
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end29
  %28 = load i32* %i, align 4
  %idxprom = zext i32 %28 to i64
  %arrayidx = getelementptr inbounds [10 x %struct.anon.1.214]* @mux_master_handlers, i32 0, i64 %idxprom
  %handler = getelementptr inbounds %struct.anon.1.214* %arrayidx, i32 0, i32 1
  %29 = load i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)** %handler, align 8
  %cmp30 = icmp ne i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* %29, null
  br i1 %cmp30, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %30 = load i32* %type, align 4
  %31 = load i32* %i, align 4
  %idxprom32 = zext i32 %31 to i64
  %arrayidx33 = getelementptr inbounds [10 x %struct.anon.1.214]* @mux_master_handlers, i32 0, i64 %idxprom32
  %type34 = getelementptr inbounds %struct.anon.1.214* %arrayidx33, i32 0, i32 0
  %32 = load i32* %type34, align 4
  %cmp35 = icmp eq i32 %30, %32
  br i1 %cmp35, label %if.then37, label %if.end42

if.then37:                                        ; preds = %for.body
  %33 = load i32* %i, align 4
  %idxprom38 = zext i32 %33 to i64
  %arrayidx39 = getelementptr inbounds [10 x %struct.anon.1.214]* @mux_master_handlers, i32 0, i64 %idxprom38
  %handler40 = getelementptr inbounds %struct.anon.1.214* %arrayidx39, i32 0, i32 1
  %34 = load i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)** %handler40, align 8
  %35 = load i32* %rid, align 4
  %36 = load %struct.Channel** %c.addr, align 8
  %call41 = call i32 %34(i32 %35, %struct.Channel* %36, %struct.sshbuf* %in, %struct.sshbuf* %out)
  store i32 %call41, i32* %ret, align 4
  br label %for.end

if.end42:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end42
  %37 = load i32* %i, align 4
  %inc = add i32 %37, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then37, %for.cond
  %38 = load i32* %i, align 4
  %idxprom43 = zext i32 %38 to i64
  %arrayidx44 = getelementptr inbounds [10 x %struct.anon.1.214]* @mux_master_handlers, i32 0, i64 %idxprom43
  %handler45 = getelementptr inbounds %struct.anon.1.214* %arrayidx44, i32 0, i32 1
  %39 = load i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)** %handler45, align 8
  %cmp46 = icmp eq i32 (i32, %struct.Channel*, %struct.sshbuf*, %struct.sshbuf*)* %39, null
  br i1 %cmp46, label %if.then48, label %if.end49

if.then48:                                        ; preds = %for.end
  %40 = load i32* %type, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str901031, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_master_read_cb, i32 0, i32 0), i32 %40)
  call void @buffer_put_int(%struct.sshbuf* %out, i32 -2147483645)
  %41 = load i32* %rid, align 4
  call void @buffer_put_int(%struct.sshbuf* %out, i32 %41)
  call void @buffer_put_cstring(%struct.sshbuf* %out, i8* getelementptr inbounds ([20 x i8]* @.str911032, i32 0, i32 0))
  store i32 0, i32* %ret, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %for.end
  %call50 = call i64 @sshbuf_len(%struct.sshbuf* %out)
  %conv51 = trunc i64 %call50 to i32
  %cmp52 = icmp ne i32 %conv51, 0
  br i1 %cmp52, label %if.then54, label %if.end59

if.then54:                                        ; preds = %if.end49
  %42 = load %struct.Channel** %c.addr, align 8
  %output55 = getelementptr inbounds %struct.Channel* %42, i32 0, i32 17
  %call56 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %out)
  %call57 = call i64 @sshbuf_len(%struct.sshbuf* %out)
  %conv58 = trunc i64 %call57 to i32
  call void @buffer_put_string(%struct.sshbuf* %output55, i8* %call56, i32 %conv58)
  br label %if.end59

if.end59:                                         ; preds = %if.then54, %if.end49
  br label %out60

out60:                                            ; preds = %if.end59, %if.then22, %malf
  call void @sshbuf_free(%struct.sshbuf* %in)
  call void @sshbuf_free(%struct.sshbuf* %out)
  %43 = load i32* %ret, align 4
  store i32 %43, i32* %retval
  br label %return

return:                                           ; preds = %out60, %if.then
  %44 = load i32* %retval
  ret i32 %44
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_hello_exchange(i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %type = alloca i32, align 4
  %ver = alloca i32, align 4
  %name = alloca i8*, align 8
  %value = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 1)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 4)
  %0 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_write_packet(i32 %0, %struct.sshbuf* %m)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %1 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %1) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @__func__.mux_client_hello_exchange, i32 0, i32 0), i8* %call2) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %2 = load i32* %fd.addr, align 4
  %call3 = call i32 @mux_client_read_packet(i32 %2, %struct.sshbuf* %m)
  %cmp4 = icmp ne i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @sshbuf_free(%struct.sshbuf* %m)
  %3 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %4 = extractvalue { i32, i1 } %3, 0
  %5 = extractvalue { i32, i1 } %3, 1
  %6 = xor i1 %5, true
  br i1 %6, label %cont, label %trap

trap:                                             ; preds = %if.then5
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then5
  store i32 %4, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call7, i32* %type, align 4
  %7 = load i32* %type, align 4
  %cmp8 = icmp ne i32 %7, 1
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end6
  %8 = load i32* %type, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str821023, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @__func__.mux_client_hello_exchange, i32 0, i32 0), i32 1, i32 %8) #11
  unreachable

if.end10:                                         ; preds = %if.end6
  %call11 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call11, i32* %ver, align 4
  %9 = load i32* %ver, align 4
  %cmp12 = icmp ne i32 %9, 4
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end10
  %10 = load i32* %ver, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([59 x i8]* @.str831024, i32 0, i32 0), i32 %10, i32 4) #11
  unreachable

if.end14:                                         ; preds = %if.end10
  %11 = load i32* %ver, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([22 x i8]* @.str841025, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @__func__.mux_client_hello_exchange, i32 0, i32 0), i32 %11)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end14
  %call15 = call i64 @sshbuf_len(%struct.sshbuf* %m)
  %conv = trunc i64 %call15 to i32
  %cmp16 = icmp ugt i32 %conv, 0
  br i1 %cmp16, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call18 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call18, i8** %name, align 8
  %call19 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call19, i8** %value, align 8
  %12 = load i8** %name, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([35 x i8]* @.str851026, i32 0, i32 0), i8* %12)
  %13 = load i8** %name, align 8
  call void @free(i8* %13) #9
  %14 = load i8** %value, align 8
  call void @free(i8* %14) #9
  br label %while.cond

while.end:                                        ; preds = %while.cond
  call void @sshbuf_free(%struct.sshbuf* %m)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %cont
  %15 = load i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_request_alive(i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %pid = alloca i32, align 4
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([13 x i8]* @.str30971, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.mux_client_request_alive, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 268435460)
  %0 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %0)
  %1 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_write_packet(i32 %1, %struct.sshbuf* %m)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %2 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %2) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.mux_client_request_alive, i32 0, i32 0), i8* %call2) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %3 = load i32* %fd.addr, align 4
  %call3 = call i32 @mux_client_read_packet(i32 %3, %struct.sshbuf* %m)
  %cmp4 = icmp ne i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @sshbuf_free(%struct.sshbuf* %m)
  store i32 0, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call7, i32* %type, align 4
  %4 = load i32* %type, align 4
  %cmp8 = icmp ne i32 %4, -2147483643
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end6
  %call10 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call10, i8** %e, align 8
  %5 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str25966, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.mux_client_request_alive, i32 0, i32 0), i8* %5) #11
  unreachable

if.end11:                                         ; preds = %if.end6
  %call12 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call12, i32* %rid, align 4
  %6 = load i32* @muxclient_request_id, align 4
  %cmp13 = icmp ne i32 %call12, %6
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end11
  %7 = load i32* @muxclient_request_id, align 4
  %8 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.mux_client_request_alive, i32 0, i32 0), i32 %7, i32 %8) #11
  unreachable

if.end15:                                         ; preds = %if.end11
  %call16 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call16, i32* %pid, align 4
  call void @sshbuf_free(%struct.sshbuf* %m)
  %9 = load i32* %pid, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([18 x i8]* @.str811022, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.mux_client_request_alive, i32 0, i32 0), i32 %9)
  %10 = load i32* @muxclient_request_id, align 4
  %inc = add i32 %10, 1
  store i32 %inc, i32* @muxclient_request_id, align 4
  %11 = load i32* %pid, align 4
  store i32 %11, i32* %retval
  br label %return

return:                                           ; preds = %if.end15, %if.then5
  %12 = load i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_client_request_terminate(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([13 x i8]* @.str30971, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_terminate, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 268435461)
  %0 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %0)
  %1 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_write_packet(i32 %1, %struct.sshbuf* %m)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %2 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %2) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_terminate, i32 0, i32 0), i8* %call2) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %3 = load i32* %fd.addr, align 4
  %call3 = call i32 @mux_client_read_packet(i32 %3, %struct.sshbuf* %m)
  %cmp4 = icmp ne i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %if.end12

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #2
  %4 = load i32* %call6, align 4
  %cmp7 = icmp eq i32 %4, 32
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.then5
  call void @sshbuf_free(%struct.sshbuf* %m)
  br label %return

if.end9:                                          ; preds = %if.then5
  %call10 = call i32* @__errno_location() #2
  %5 = load i32* %call10, align 4
  %call11 = call i8* @strerror(i32 %5) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str31972, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_terminate, i32 0, i32 0), i8* %call11) #11
  unreachable

if.end12:                                         ; preds = %if.end
  %call13 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call13, i32* %type, align 4
  %call14 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call14, i32* %rid, align 4
  %6 = load i32* @muxclient_request_id, align 4
  %cmp15 = icmp ne i32 %call14, %6
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end12
  %7 = load i32* @muxclient_request_id, align 4
  %8 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_terminate, i32 0, i32 0), i32 %7, i32 %8) #11
  unreachable

if.end17:                                         ; preds = %if.end12
  %9 = load i32* %type, align 4
  switch i32 %9, label %sw.default [
    i32 -2147483647, label %sw.bb
    i32 -2147483646, label %sw.bb18
    i32 -2147483645, label %sw.bb20
  ]

sw.bb:                                            ; preds = %if.end17
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end17
  %call19 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call19, i8** %e, align 8
  %10 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([39 x i8]* @.str791020, i32 0, i32 0), i8* %10) #11
  unreachable

sw.bb20:                                          ; preds = %if.end17
  %call21 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call21, i8** %e, align 8
  %11 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([35 x i8]* @.str801021, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_terminate, i32 0, i32 0), i8* %11) #11
  unreachable

sw.default:                                       ; preds = %if.end17
  %12 = load i32* %type, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str34975, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_terminate, i32 0, i32 0), i32 %12) #11
  unreachable

sw.epilog:                                        ; preds = %sw.bb
  call void @sshbuf_free(%struct.sshbuf* %m)
  %13 = load i32* @muxclient_request_id, align 4
  %inc = add i32 %13, 1
  store i32 %inc, i32* @muxclient_request_id, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then8
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_forwards(i32 %fd, i32 %cancel_flag) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %cancel_flag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 %cancel_flag, i32* %cancel_flag.addr, align 4
  store i32 0, i32* %ret, align 4
  %0 = load i32* %cancel_flag.addr, align 4
  %tobool = icmp ne i32 %0, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([7 x i8]* @.str631004, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str641005, i32 0, i32 0)
  %1 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([40 x i8]* @.str621003, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_client_forwards, i32 0, i32 0), i8* %cond, i32 %1, i32 %2)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont5, %entry
  %3 = load i32* %i, align 4
  %4 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32* %fd.addr, align 4
  %6 = load i32* %cancel_flag.addr, align 4
  %7 = load i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %8, i64 %idxprom
  %connect_port = getelementptr inbounds %struct.Forward* %arrayidx, i32 0, i32 4
  %9 = load i32* %connect_port, align 4
  %cmp1 = icmp eq i32 %9, 0
  %cond2 = select i1 %cmp1, i32 3, i32 1
  %10 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %11 = load i32* %i, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds %struct.Forward* %10, i64 %idx.ext
  %call = call i32 @mux_client_forward(i32 %5, i32 %6, i32 %cond2, %struct.Forward* %add.ptr)
  %cmp3 = icmp ne i32 %call, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %13 = extractvalue { i32, i1 } %12, 0
  %14 = extractvalue { i32, i1 } %12, 1
  %15 = xor i1 %14, true
  br i1 %15, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %13, i32* %ret, align 4
  br label %if.end

if.end:                                           ; preds = %cont, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32* %i, align 4
  %17 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont5, label %trap4

trap4:                                            ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont5:                                            ; preds = %for.inc
  store i32 %18, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %cont19, %for.end
  %21 = load i32* %i, align 4
  %22 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp7 = icmp slt i32 %21, %22
  br i1 %cmp7, label %for.body8, label %for.end20

for.body8:                                        ; preds = %for.cond6
  %23 = load i32* %fd.addr, align 4
  %24 = load i32* %cancel_flag.addr, align 4
  %25 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %26 = load i32* %i, align 4
  %idx.ext9 = sext i32 %26 to i64
  %add.ptr10 = getelementptr inbounds %struct.Forward* %25, i64 %idx.ext9
  %call11 = call i32 @mux_client_forward(i32 %23, i32 %24, i32 2, %struct.Forward* %add.ptr10)
  %cmp12 = icmp ne i32 %call11, 0
  br i1 %cmp12, label %if.then13, label %if.end16

if.then13:                                        ; preds = %for.body8
  %27 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %28 = extractvalue { i32, i1 } %27, 0
  %29 = extractvalue { i32, i1 } %27, 1
  %30 = xor i1 %29, true
  br i1 %30, label %cont15, label %trap14

trap14:                                           ; preds = %if.then13
  call void @llvm.trap() #3
  unreachable

cont15:                                           ; preds = %if.then13
  store i32 %28, i32* %ret, align 4
  br label %if.end16

if.end16:                                         ; preds = %cont15, %for.body8
  br label %for.inc17

for.inc17:                                        ; preds = %if.end16
  %31 = load i32* %i, align 4
  %32 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 1)
  %33 = extractvalue { i32, i1 } %32, 0
  %34 = extractvalue { i32, i1 } %32, 1
  %35 = xor i1 %34, true
  br i1 %35, label %cont19, label %trap18

trap18:                                           ; preds = %for.inc17
  call void @llvm.trap() #3
  unreachable

cont19:                                           ; preds = %for.inc17
  store i32 %33, i32* %i, align 4
  br label %for.cond6

for.end20:                                        ; preds = %for.cond6
  %36 = load i32* %ret, align 4
  ret i32 %36
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_request_session(i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %term = alloca i8*, align 8
  %i = alloca i32, align 4
  %rid = alloca i32, align 4
  %sid = alloca i32, align 4
  %esid = alloca i32, align 4
  %exitval = alloca i32, align 4
  %type = alloca i32, align 4
  %exitval_seen = alloca i32, align 4
  %devnull = alloca i32, align 4
  %rawmode = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([13 x i8]* @.str30971, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0))
  %0 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_request_alive(i32 %0)
  store i32 %call, i32* @muxserver_pid, align 4
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str35976, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0))
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*))
  %5 = load i32* @stdin_null_flag, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then2, label %if.end23

if.then2:                                         ; preds = %if.end
  %call3 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str36977, i32 0, i32 0), i32 0)
  store i32 %call3, i32* %devnull, align 4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont5, label %trap4

trap4:                                            ; preds = %if.then2
  call void @llvm.trap() #3
  unreachable

cont5:                                            ; preds = %if.then2
  %cmp6 = icmp eq i32 %call3, %7
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %cont5
  %call8 = call i32* @__errno_location() #2
  %10 = load i32* %call8, align 4
  %call9 = call i8* @strerror(i32 %10) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str37978, i32 0, i32 0), i8* %call9) #11
  unreachable

if.end10:                                         ; preds = %cont5
  %11 = load i32* %devnull, align 4
  %call11 = call i32 @dup2(i32 %11, i32 0) #9
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %13 = extractvalue { i32, i1 } %12, 0
  %14 = extractvalue { i32, i1 } %12, 1
  %15 = xor i1 %14, true
  br i1 %15, label %cont13, label %trap12

trap12:                                           ; preds = %if.end10
  call void @llvm.trap() #3
  unreachable

cont13:                                           ; preds = %if.end10
  %cmp14 = icmp eq i32 %call11, %13
  br i1 %cmp14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %cont13
  %call16 = call i32* @__errno_location() #2
  %16 = load i32* %call16, align 4
  %call17 = call i8* @strerror(i32 %16) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([9 x i8]* @.str38979, i32 0, i32 0), i8* %call17) #11
  unreachable

if.end18:                                         ; preds = %cont13
  %17 = load i32* %devnull, align 4
  %cmp19 = icmp sgt i32 %17, 2
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end18
  %18 = load i32* %devnull, align 4
  %call21 = call i32 @close(i32 %18)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end18
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  %call24 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8]* @.str49990, i32 0, i32 0)) #9
  store i8* %call24, i8** %term, align 8
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 268435458)
  %19 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %19)
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* getelementptr inbounds ([1 x i8]* @.str39980, i32 0, i32 0))
  %20 = load i32* @tty_flag, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %20)
  %21 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %21)
  %22 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %22)
  %23 = load i32* @subsystem_flag, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %23)
  %24 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont26, label %trap25

trap25:                                           ; preds = %if.end23
  call void @llvm.trap() #3
  unreachable

cont26:                                           ; preds = %if.end23
  %cmp27 = icmp eq i32 %24, %26
  br i1 %cmp27, label %cond.true, label %cond.false

cond.true:                                        ; preds = %cont26
  br label %cond.end

cond.false:                                       ; preds = %cont26
  %29 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 42), align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %29, %cond.false ]
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %cond)
  %30 = load i8** %term, align 8
  %cmp28 = icmp eq i8* %30, null
  br i1 %cmp28, label %cond.true29, label %cond.false30

cond.true29:                                      ; preds = %cond.end
  br label %cond.end31

cond.false30:                                     ; preds = %cond.end
  %31 = load i8** %term, align 8
  br label %cond.end31

cond.end31:                                       ; preds = %cond.false30, %cond.true29
  %cond32 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str39980, i32 0, i32 0), %cond.true29 ], [ %31, %cond.false30 ]
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %cond32)
  %call33 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* @command)
  %call34 = call i64 @sshbuf_len(%struct.sshbuf* @command)
  %conv = trunc i64 %call34 to i32
  call void @buffer_put_string(%struct.sshbuf* %m, i8* %call33, i32 %conv)
  %32 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 75), align 4
  %cmp35 = icmp sgt i32 %32, 0
  br i1 %cmp35, label %land.lhs.true, label %if.end50

land.lhs.true:                                    ; preds = %cond.end31
  %33 = load i8*** @environ, align 8
  %cmp37 = icmp ne i8** %33, null
  br i1 %cmp37, label %if.then39, label %if.end50

if.then39:                                        ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then39
  %34 = load i32* %i, align 4
  %idxprom = zext i32 %34 to i64
  %35 = load i8*** @environ, align 8
  %arrayidx = getelementptr inbounds i8** %35, i64 %idxprom
  %36 = load i8** %arrayidx, align 8
  %cmp40 = icmp ne i8* %36, null
  br i1 %cmp40, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %37 = load i32* %i, align 4
  %idxprom42 = zext i32 %37 to i64
  %38 = load i8*** @environ, align 8
  %arrayidx43 = getelementptr inbounds i8** %38, i64 %idxprom42
  %39 = load i8** %arrayidx43, align 8
  %call44 = call i32 @env_permitted(i8* %39)
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %for.body
  %40 = load i32* %i, align 4
  %idxprom47 = zext i32 %40 to i64
  %41 = load i8*** @environ, align 8
  %arrayidx48 = getelementptr inbounds i8** %41, i64 %idxprom47
  %42 = load i8** %arrayidx48, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %42)
  br label %if.end49

if.end49:                                         ; preds = %if.then46, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end49
  %43 = load i32* %i, align 4
  %inc = add i32 %43, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end50

if.end50:                                         ; preds = %for.end, %land.lhs.true, %cond.end31
  %44 = load i32* %fd.addr, align 4
  %call51 = call i32 @mux_client_write_packet(i32 %44, %struct.sshbuf* %m)
  %cmp52 = icmp ne i32 %call51, 0
  br i1 %cmp52, label %if.then54, label %if.end57

if.then54:                                        ; preds = %if.end50
  %call55 = call i32* @__errno_location() #2
  %45 = load i32* %call55, align 4
  %call56 = call i8* @strerror(i32 %45) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i8* %call56) #11
  unreachable

if.end57:                                         ; preds = %if.end50
  %46 = load i32* %fd.addr, align 4
  %call58 = call i32 @mm_send_fd(i32 %46, i32 0)
  %47 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %48 = extractvalue { i32, i1 } %47, 0
  %49 = extractvalue { i32, i1 } %47, 1
  %50 = xor i1 %49, true
  br i1 %50, label %cont60, label %trap59

trap59:                                           ; preds = %if.end57
  call void @llvm.trap() #3
  unreachable

cont60:                                           ; preds = %if.end57
  %cmp61 = icmp eq i32 %call58, %48
  br i1 %cmp61, label %if.then74, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cont60
  %51 = load i32* %fd.addr, align 4
  %call63 = call i32 @mm_send_fd(i32 %51, i32 1)
  %52 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %53 = extractvalue { i32, i1 } %52, 0
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = xor i1 %54, true
  br i1 %55, label %cont65, label %trap64

trap64:                                           ; preds = %lor.lhs.false
  call void @llvm.trap() #3
  unreachable

cont65:                                           ; preds = %lor.lhs.false
  %cmp66 = icmp eq i32 %call63, %53
  br i1 %cmp66, label %if.then74, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %cont65
  %56 = load i32* %fd.addr, align 4
  %call69 = call i32 @mm_send_fd(i32 %56, i32 2)
  %57 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %58 = extractvalue { i32, i1 } %57, 0
  %59 = extractvalue { i32, i1 } %57, 1
  %60 = xor i1 %59, true
  br i1 %60, label %cont71, label %trap70

trap70:                                           ; preds = %lor.lhs.false68
  call void @llvm.trap() #3
  unreachable

cont71:                                           ; preds = %lor.lhs.false68
  %cmp72 = icmp eq i32 %call69, %58
  br i1 %cmp72, label %if.then74, label %if.end75

if.then74:                                        ; preds = %cont71, %cont65, %cont60
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str40981, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0)) #11
  unreachable

if.end75:                                         ; preds = %cont71
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([25 x i8]* @.str50991, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0))
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %61 = load i32* %fd.addr, align 4
  %call76 = call i32 @mux_client_read_packet(i32 %61, %struct.sshbuf* %m)
  %cmp77 = icmp ne i32 %call76, 0
  br i1 %cmp77, label %if.then79, label %if.end84

if.then79:                                        ; preds = %if.end75
  %call80 = call i32* @__errno_location() #2
  %62 = load i32* %call80, align 4
  %call81 = call i8* @strerror(i32 %62) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str31972, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i8* %call81)
  call void @sshbuf_free(%struct.sshbuf* %m)
  %63 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %64 = extractvalue { i32, i1 } %63, 0
  %65 = extractvalue { i32, i1 } %63, 1
  %66 = xor i1 %65, true
  br i1 %66, label %cont83, label %trap82

trap82:                                           ; preds = %if.then79
  call void @llvm.trap() #3
  unreachable

cont83:                                           ; preds = %if.then79
  store i32 %64, i32* %retval
  br label %return

if.end84:                                         ; preds = %if.end75
  %call85 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call85, i32* %type, align 4
  %call86 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call86, i32* %rid, align 4
  %67 = load i32* @muxclient_request_id, align 4
  %cmp87 = icmp ne i32 %call86, %67
  br i1 %cmp87, label %if.then89, label %if.end90

if.then89:                                        ; preds = %if.end84
  %68 = load i32* @muxclient_request_id, align 4
  %69 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i32 %68, i32 %69) #11
  unreachable

if.end90:                                         ; preds = %if.end84
  %70 = load i32* %type, align 4
  switch i32 %70, label %sw.default [
    i32 -2147483642, label %sw.bb
    i32 -2147483646, label %sw.bb92
    i32 -2147483645, label %sw.bb96
  ]

sw.bb:                                            ; preds = %if.end90
  %call91 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call91, i32* %sid, align 4
  %71 = load i32* %sid, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([26 x i8]* @.str44985, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i32 %71)
  br label %sw.epilog

sw.bb92:                                          ; preds = %if.end90
  %call93 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call93, i8** %e, align 8
  call void @sshbuf_free(%struct.sshbuf* %m)
  %72 = load i8** %e, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([35 x i8]* @.str51992, i32 0, i32 0), i8* %72)
  %73 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %74 = extractvalue { i32, i1 } %73, 0
  %75 = extractvalue { i32, i1 } %73, 1
  %76 = xor i1 %75, true
  br i1 %76, label %cont95, label %trap94

trap94:                                           ; preds = %sw.bb92
  call void @llvm.trap() #3
  unreachable

cont95:                                           ; preds = %sw.bb92
  store i32 %74, i32* %retval
  br label %return

sw.bb96:                                          ; preds = %if.end90
  %call97 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call97, i8** %e, align 8
  call void @sshbuf_free(%struct.sshbuf* %m)
  %77 = load i8** %e, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([31 x i8]* @.str52993, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i8* %77)
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %79 = extractvalue { i32, i1 } %78, 0
  %80 = extractvalue { i32, i1 } %78, 1
  %81 = xor i1 %80, true
  br i1 %81, label %cont99, label %trap98

trap98:                                           ; preds = %sw.bb96
  call void @llvm.trap() #3
  unreachable

cont99:                                           ; preds = %sw.bb96
  store i32 %79, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end90
  call void @sshbuf_free(%struct.sshbuf* %m)
  %82 = load i32* %type, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str34975, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i32 %82)
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %84 = extractvalue { i32, i1 } %83, 0
  %85 = extractvalue { i32, i1 } %83, 1
  %86 = xor i1 %85, true
  br i1 %86, label %cont101, label %trap100

trap100:                                          ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont101:                                          ; preds = %sw.default
  store i32 %84, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb
  %87 = load i32* @muxclient_request_id, align 4
  %inc102 = add i32 %87, 1
  store i32 %inc102, i32* @muxclient_request_id, align 4
  %call103 = call i32 @pledge(i8* getelementptr inbounds ([15 x i8]* @.str41982, i32 0, i32 0), i8** null)
  %88 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %89 = extractvalue { i32, i1 } %88, 0
  %90 = extractvalue { i32, i1 } %88, 1
  %91 = xor i1 %90, true
  br i1 %91, label %cont105, label %trap104

trap104:                                          ; preds = %sw.epilog
  call void @llvm.trap() #3
  unreachable

cont105:                                          ; preds = %sw.epilog
  %cmp106 = icmp eq i32 %call103, %89
  br i1 %cmp106, label %if.then108, label %if.end111

if.then108:                                       ; preds = %cont105
  %call109 = call i32* @__errno_location() #2
  %92 = load i32* %call109, align 4
  %call110 = call i8* @strerror(i32 %92) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str42983, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i8* %call110) #11
  unreachable

if.end111:                                        ; preds = %cont105
  call void @platform_pledge_mux()
  %call112 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 1, void (i32)* @control_client_sighandler)
  %call113 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 2, void (i32)* @control_client_sighandler)
  %call114 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 15, void (i32)* @control_client_sighandler)
  %call115 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 28, void (i32)* @control_client_sigrelay)
  %93 = load i32* @tty_flag, align 4
  store i32 %93, i32* %rawmode, align 4
  %94 = load i32* @tty_flag, align 4
  %tobool116 = icmp ne i32 %94, 0
  br i1 %tobool116, label %if.then117, label %if.end120

if.then117:                                       ; preds = %if.end111
  %95 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp118 = icmp eq i32 %95, 3
  %conv119 = zext i1 %cmp118 to i32
  call void @enter_raw_mode(i32 %conv119)
  br label %if.end120

if.end120:                                        ; preds = %if.then117, %if.end111
  store i32 255, i32* %exitval, align 4
  store i32 0, i32* %exitval_seen, align 4
  br label %for.cond121

for.cond121:                                      ; preds = %if.end144, %if.end133, %if.end120
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %96 = load i32* %fd.addr, align 4
  %call122 = call i32 @mux_client_read_packet(i32 %96, %struct.sshbuf* %m)
  %cmp123 = icmp ne i32 %call122, 0
  br i1 %cmp123, label %if.then125, label %if.end126

if.then125:                                       ; preds = %for.cond121
  br label %for.end148

if.end126:                                        ; preds = %for.cond121
  %call127 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call127, i32* %type, align 4
  %97 = load i32* %type, align 4
  switch i32 %97, label %sw.default146 [
    i32 -2147483640, label %sw.bb128
    i32 -2147483644, label %sw.bb136
  ]

sw.bb128:                                         ; preds = %if.end126
  %call129 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call129, i32* %esid, align 4
  %98 = load i32* %sid, align 4
  %cmp130 = icmp ne i32 %call129, %98
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %sw.bb128
  %99 = load i32* %sid, align 4
  %100 = load i32* %esid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([58 x i8]* @.str53994, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i32 %99, i32 %100) #11
  unreachable

if.end133:                                        ; preds = %sw.bb128
  %101 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp134 = icmp eq i32 %101, 3
  %conv135 = zext i1 %cmp134 to i32
  call void @leave_raw_mode(i32 %conv135)
  store i32 0, i32* %rawmode, align 4
  br label %for.cond121

sw.bb136:                                         ; preds = %if.end126
  %call137 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call137, i32* %esid, align 4
  %102 = load i32* %sid, align 4
  %cmp138 = icmp ne i32 %call137, %102
  br i1 %cmp138, label %if.then140, label %if.end141

if.then140:                                       ; preds = %sw.bb136
  %103 = load i32* %sid, align 4
  %104 = load i32* %esid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([48 x i8]* @.str54995, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i32 %103, i32 %104) #11
  unreachable

if.end141:                                        ; preds = %sw.bb136
  %105 = load i32* %exitval_seen, align 4
  %tobool142 = icmp ne i32 %105, 0
  br i1 %tobool142, label %if.then143, label %if.end144

if.then143:                                       ; preds = %if.end141
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([23 x i8]* @.str55996, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0)) #11
  unreachable

if.end144:                                        ; preds = %if.end141
  %call145 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call145, i32* %exitval, align 4
  store i32 1, i32* %exitval_seen, align 4
  br label %for.cond121

sw.default146:                                    ; preds = %if.end126
  %call147 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call147, i8** %e, align 8
  %106 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str25966, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_client_request_session, i32 0, i32 0), i8* %106) #11
  unreachable

for.end148:                                       ; preds = %if.then125
  %107 = load i32* %fd.addr, align 4
  %call149 = call i32 @close(i32 %107)
  %108 = load i32* %rawmode, align 4
  %tobool150 = icmp ne i32 %108, 0
  br i1 %tobool150, label %if.then151, label %if.end154

if.then151:                                       ; preds = %for.end148
  %109 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 88), align 4
  %cmp152 = icmp eq i32 %109, 3
  %conv153 = zext i1 %cmp152 to i32
  call void @leave_raw_mode(i32 %conv153)
  br label %if.end154

if.end154:                                        ; preds = %if.then151, %for.end148
  %110 = load volatile i32* @muxclient_terminate, align 4
  %tobool155 = icmp ne i32 %110, 0
  br i1 %tobool155, label %if.then156, label %if.else

if.then156:                                       ; preds = %if.end154
  %111 = load volatile i32* @muxclient_terminate, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([21 x i8]* @.str56997, i32 0, i32 0), i32 %111)
  store i32 255, i32* %exitval, align 4
  br label %if.end161

if.else:                                          ; preds = %if.end154
  %112 = load i32* %exitval_seen, align 4
  %tobool157 = icmp ne i32 %112, 0
  br i1 %tobool157, label %if.else159, label %if.then158

if.then158:                                       ; preds = %if.else
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([39 x i8]* @.str57998, i32 0, i32 0))
  store i32 255, i32* %exitval, align 4
  br label %if.end160

if.else159:                                       ; preds = %if.else
  %113 = load i32* %exitval, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([36 x i8]* @.str58999, i32 0, i32 0), i32 %113)
  br label %if.end160

if.end160:                                        ; preds = %if.else159, %if.then158
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then156
  %114 = load i32* @tty_flag, align 4
  %tobool162 = icmp ne i32 %114, 0
  br i1 %tobool162, label %land.lhs.true163, label %if.end168

land.lhs.true163:                                 ; preds = %if.end161
  %115 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 26), align 4
  %cmp164 = icmp ne i32 %115, 0
  br i1 %cmp164, label %if.then166, label %if.end168

if.then166:                                       ; preds = %land.lhs.true163
  %116 = load %struct._IO_FILE** @stderr, align 8
  %117 = load i8** @host, align 8
  %call167 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([34 x i8]* @.str591000, i32 0, i32 0), i8* %117)
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %land.lhs.true163, %if.end161
  %118 = load i32* %exitval, align 4
  call void @exit(i32 %118) #3
  unreachable

return:                                           ; preds = %cont101, %cont99, %cont95, %cont83, %cont
  %119 = load i32* %retval
  ret i32 %119
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_request_stdio_fwd(i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  %sid = alloca i32, align 4
  %devnull = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([13 x i8]* @.str30971, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0))
  %0 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_request_alive(i32 %0)
  store i32 %call, i32* @muxserver_pid, align 4
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str35976, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0))
  %1 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %2 = extractvalue { i32, i1 } %1, 0
  %3 = extractvalue { i32, i1 } %1, 1
  %4 = xor i1 %3, true
  br i1 %4, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %call1 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*))
  %5 = load i32* @stdin_null_flag, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then2, label %if.end23

if.then2:                                         ; preds = %if.end
  %call3 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str36977, i32 0, i32 0), i32 0)
  store i32 %call3, i32* %devnull, align 4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont5, label %trap4

trap4:                                            ; preds = %if.then2
  call void @llvm.trap() #3
  unreachable

cont5:                                            ; preds = %if.then2
  %cmp6 = icmp eq i32 %call3, %7
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %cont5
  %call8 = call i32* @__errno_location() #2
  %10 = load i32* %call8, align 4
  %call9 = call i8* @strerror(i32 %10) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str37978, i32 0, i32 0), i8* %call9) #11
  unreachable

if.end10:                                         ; preds = %cont5
  %11 = load i32* %devnull, align 4
  %call11 = call i32 @dup2(i32 %11, i32 0) #9
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %13 = extractvalue { i32, i1 } %12, 0
  %14 = extractvalue { i32, i1 } %12, 1
  %15 = xor i1 %14, true
  br i1 %15, label %cont13, label %trap12

trap12:                                           ; preds = %if.end10
  call void @llvm.trap() #3
  unreachable

cont13:                                           ; preds = %if.end10
  %cmp14 = icmp eq i32 %call11, %13
  br i1 %cmp14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %cont13
  %call16 = call i32* @__errno_location() #2
  %16 = load i32* %call16, align 4
  %call17 = call i8* @strerror(i32 %16) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([9 x i8]* @.str38979, i32 0, i32 0), i8* %call17) #11
  unreachable

if.end18:                                         ; preds = %cont13
  %17 = load i32* %devnull, align 4
  %cmp19 = icmp sgt i32 %17, 2
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end18
  %18 = load i32* %devnull, align 4
  %call21 = call i32 @close(i32 %18)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end18
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 268435464)
  %19 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %19)
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* getelementptr inbounds ([1 x i8]* @.str39980, i32 0, i32 0))
  %20 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 66), align 8
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %20)
  %21 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 67), align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %21)
  %22 = load i32* %fd.addr, align 4
  %call24 = call i32 @mux_client_write_packet(i32 %22, %struct.sshbuf* %m)
  %cmp25 = icmp ne i32 %call24, 0
  br i1 %cmp25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.end23
  %call27 = call i32* @__errno_location() #2
  %23 = load i32* %call27, align 4
  %call28 = call i8* @strerror(i32 %23) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i8* %call28) #11
  unreachable

if.end29:                                         ; preds = %if.end23
  %24 = load i32* %fd.addr, align 4
  %call30 = call i32 @mm_send_fd(i32 %24, i32 0)
  %25 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %26 = extractvalue { i32, i1 } %25, 0
  %27 = extractvalue { i32, i1 } %25, 1
  %28 = xor i1 %27, true
  br i1 %28, label %cont32, label %trap31

trap31:                                           ; preds = %if.end29
  call void @llvm.trap() #3
  unreachable

cont32:                                           ; preds = %if.end29
  %cmp33 = icmp eq i32 %call30, %26
  br i1 %cmp33, label %if.then38, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cont32
  %29 = load i32* %fd.addr, align 4
  %call34 = call i32 @mm_send_fd(i32 %29, i32 1)
  %30 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %31 = extractvalue { i32, i1 } %30, 0
  %32 = extractvalue { i32, i1 } %30, 1
  %33 = xor i1 %32, true
  br i1 %33, label %cont36, label %trap35

trap35:                                           ; preds = %lor.lhs.false
  call void @llvm.trap() #3
  unreachable

cont36:                                           ; preds = %lor.lhs.false
  %cmp37 = icmp eq i32 %call34, %31
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %cont36, %cont32
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([20 x i8]* @.str40981, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0)) #11
  unreachable

if.end39:                                         ; preds = %cont36
  %call40 = call i32 @pledge(i8* getelementptr inbounds ([15 x i8]* @.str41982, i32 0, i32 0), i8** null)
  %34 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %35 = extractvalue { i32, i1 } %34, 0
  %36 = extractvalue { i32, i1 } %34, 1
  %37 = xor i1 %36, true
  br i1 %37, label %cont42, label %trap41

trap41:                                           ; preds = %if.end39
  call void @llvm.trap() #3
  unreachable

cont42:                                           ; preds = %if.end39
  %cmp43 = icmp eq i32 %call40, %35
  br i1 %cmp43, label %if.then44, label %if.end47

if.then44:                                        ; preds = %cont42
  %call45 = call i32* @__errno_location() #2
  %38 = load i32* %call45, align 4
  %call46 = call i8* @strerror(i32 %38) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([16 x i8]* @.str42983, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i8* %call46) #11
  unreachable

if.end47:                                         ; preds = %cont42
  call void @platform_pledge_mux()
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([31 x i8]* @.str43984, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0))
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %39 = load i32* %fd.addr, align 4
  %call48 = call i32 @mux_client_read_packet(i32 %39, %struct.sshbuf* %m)
  %cmp49 = icmp ne i32 %call48, 0
  br i1 %cmp49, label %if.then50, label %if.end55

if.then50:                                        ; preds = %if.end47
  %call51 = call i32* @__errno_location() #2
  %40 = load i32* %call51, align 4
  %call52 = call i8* @strerror(i32 %40) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([32 x i8]* @.str31972, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i8* %call52)
  call void @sshbuf_free(%struct.sshbuf* %m)
  %41 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %42 = extractvalue { i32, i1 } %41, 0
  %43 = extractvalue { i32, i1 } %41, 1
  %44 = xor i1 %43, true
  br i1 %44, label %cont54, label %trap53

trap53:                                           ; preds = %if.then50
  call void @llvm.trap() #3
  unreachable

cont54:                                           ; preds = %if.then50
  store i32 %42, i32* %retval
  br label %return

if.end55:                                         ; preds = %if.end47
  %call56 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call56, i32* %type, align 4
  %call57 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call57, i32* %rid, align 4
  %45 = load i32* @muxclient_request_id, align 4
  %cmp58 = icmp ne i32 %call57, %45
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end55
  %46 = load i32* @muxclient_request_id, align 4
  %47 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i32 %46, i32 %47) #11
  unreachable

if.end60:                                         ; preds = %if.end55
  %48 = load i32* %type, align 4
  switch i32 %48, label %sw.default [
    i32 -2147483642, label %sw.bb
    i32 -2147483646, label %sw.bb62
    i32 -2147483645, label %sw.bb64
  ]

sw.bb:                                            ; preds = %if.end60
  %call61 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call61, i32* %sid, align 4
  %49 = load i32* %sid, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([26 x i8]* @.str44985, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i32 %49)
  br label %sw.epilog

sw.bb62:                                          ; preds = %if.end60
  %call63 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call63, i8** %e, align 8
  call void @sshbuf_free(%struct.sshbuf* %m)
  %50 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([44 x i8]* @.str45986, i32 0, i32 0), i8* %50) #11
  unreachable

sw.bb64:                                          ; preds = %if.end60
  %call65 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call65, i8** %e, align 8
  call void @sshbuf_free(%struct.sshbuf* %m)
  %51 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([36 x i8]* @.str46987, i32 0, i32 0), i8* %51) #11
  unreachable

sw.default:                                       ; preds = %if.end60
  call void @sshbuf_free(%struct.sshbuf* %m)
  %52 = load i32* %type, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([43 x i8]* @.str34975, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i32 %52)
  %53 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %54 = extractvalue { i32, i1 } %53, 0
  %55 = extractvalue { i32, i1 } %53, 1
  %56 = xor i1 %55, true
  br i1 %56, label %cont67, label %trap66

trap66:                                           ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont67:                                           ; preds = %sw.default
  store i32 %54, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %sw.bb
  %57 = load i32* @muxclient_request_id, align 4
  %inc = add i32 %57, 1
  store i32 %inc, i32* @muxclient_request_id, align 4
  %call68 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 1, void (i32)* @control_client_sighandler)
  %call69 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 2, void (i32)* @control_client_sighandler)
  %call70 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 15, void (i32)* @control_client_sighandler)
  %call71 = call void (i32)* (i32, void (i32)*)* @mysignal(i32 28, void (i32)* @control_client_sigrelay)
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %58 = load i32* %fd.addr, align 4
  %call72 = call i32 @mux_client_read_packet(i32 %58, %struct.sshbuf* %m)
  %cmp73 = icmp ne i32 %call72, 0
  br i1 %cmp73, label %if.then74, label %if.end85

if.then74:                                        ; preds = %sw.epilog
  %call75 = call i32* @__errno_location() #2
  %59 = load i32* %call75, align 4
  %cmp76 = icmp eq i32 %59, 32
  br i1 %cmp76, label %if.then81, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %if.then74
  %call78 = call i32* @__errno_location() #2
  %60 = load i32* %call78, align 4
  %cmp79 = icmp eq i32 %60, 4
  br i1 %cmp79, label %land.lhs.true, label %if.end82

land.lhs.true:                                    ; preds = %lor.lhs.false77
  %61 = load volatile i32* @muxclient_terminate, align 4
  %cmp80 = icmp ne i32 %61, 0
  br i1 %cmp80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %land.lhs.true, %if.then74
  store i32 0, i32* %retval
  br label %return

if.end82:                                         ; preds = %land.lhs.true, %lor.lhs.false77
  %call83 = call i32* @__errno_location() #2
  %62 = load i32* %call83, align 4
  %call84 = call i8* @strerror(i32 %62) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([31 x i8]* @.str47988, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i8* %call84) #11
  unreachable

if.end85:                                         ; preds = %sw.epilog
  %63 = load i32* %type, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str48989, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @__func__.mux_client_request_stdio_fwd, i32 0, i32 0), i32 %63) #11
  unreachable

return:                                           ; preds = %if.then81, %cont67, %cont54, %cont
  %64 = load i32* %retval
  ret i32 %64
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_client_request_stop_listening(i32 %fd) #0 {
entry:
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([13 x i8]* @.str30971, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.mux_client_request_stop_listening, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 268435465)
  %0 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %0)
  %1 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_write_packet(i32 %1, %struct.sshbuf* %m)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %2 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %2) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.mux_client_request_stop_listening, i32 0, i32 0), i8* %call2) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %3 = load i32* %fd.addr, align 4
  %call3 = call i32 @mux_client_read_packet(i32 %3, %struct.sshbuf* %m)
  %cmp4 = icmp ne i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %call6 = call i32* @__errno_location() #2
  %4 = load i32* %call6, align 4
  %call7 = call i8* @strerror(i32 %4) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([32 x i8]* @.str31972, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.mux_client_request_stop_listening, i32 0, i32 0), i8* %call7) #11
  unreachable

if.end8:                                          ; preds = %if.end
  %call9 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call9, i32* %type, align 4
  %call10 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call10, i32* %rid, align 4
  %5 = load i32* @muxclient_request_id, align 4
  %cmp11 = icmp ne i32 %call10, %5
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.end8
  %6 = load i32* @muxclient_request_id, align 4
  %7 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.mux_client_request_stop_listening, i32 0, i32 0), i32 %6, i32 %7) #11
  unreachable

if.end13:                                         ; preds = %if.end8
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default [
    i32 -2147483647, label %sw.bb
    i32 -2147483646, label %sw.bb14
    i32 -2147483645, label %sw.bb16
  ]

sw.bb:                                            ; preds = %if.end13
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end13
  %call15 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call15, i8** %e, align 8
  %9 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str32973, i32 0, i32 0), i8* %9) #11
  unreachable

sw.bb16:                                          ; preds = %if.end13
  %call17 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call17, i8** %e, align 8
  %10 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([38 x i8]* @.str33974, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.mux_client_request_stop_listening, i32 0, i32 0), i8* %10) #11
  unreachable

sw.default:                                       ; preds = %if.end13
  %11 = load i32* %type, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str34975, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8]* @__func__.mux_client_request_stop_listening, i32 0, i32 0), i32 %11) #11
  unreachable

sw.epilog:                                        ; preds = %sw.bb
  call void @sshbuf_free(%struct.sshbuf* %m)
  %12 = load i32* @muxclient_request_id, align 4
  %inc = add i32 %12, 1
  store i32 %inc, i32* @muxclient_request_id, align 4
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_proxy(i32 %fd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @sshbuf_init(%struct.sshbuf* %m)
  call void @buffer_put_int(%struct.sshbuf* %m, i32 268435471)
  %0 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %0)
  %1 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_write_packet(i32 %1, %struct.sshbuf* %m)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %2 = load i32* %call1, align 4
  %call2 = call i8* @strerror(i32 %2) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.mux_client_proxy, i32 0, i32 0), i8* %call2) #11
  unreachable

if.end:                                           ; preds = %entry
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %3 = load i32* %fd.addr, align 4
  %call3 = call i32 @mux_client_read_packet(i32 %3, %struct.sshbuf* %m)
  %cmp4 = icmp ne i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @sshbuf_free(%struct.sshbuf* %m)
  store i32 0, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %call7 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call7, i32* %type, align 4
  %4 = load i32* %type, align 4
  %cmp8 = icmp ne i32 %4, -2147483633
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end6
  %call10 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call10, i8** %e, align 8
  %5 = load i8** %e, align 8
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str25966, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.mux_client_proxy, i32 0, i32 0), i8* %5) #11
  unreachable

if.end11:                                         ; preds = %if.end6
  %call12 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call12, i32* %rid, align 4
  %6 = load i32* @muxclient_request_id, align 4
  %cmp13 = icmp ne i32 %call12, %6
  br i1 %cmp13, label %if.then14, label %if.end15

if.then14:                                        ; preds = %if.end11
  %7 = load i32* @muxclient_request_id, align 4
  %8 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.mux_client_proxy, i32 0, i32 0), i32 %7, i32 %8) #11
  unreachable

if.end15:                                         ; preds = %if.end11
  call void @sshbuf_free(%struct.sshbuf* %m)
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([9 x i8]* @.str27968, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @__func__.mux_client_proxy, i32 0, i32 0))
  %9 = load i32* @muxclient_request_id, align 4
  %inc = add i32 %9, 1
  store i32 %inc, i32* @muxclient_request_id, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end15, %if.then5
  %10 = load i32* %retval
  ret i32 %10
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_master_hello(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  %ver = alloca i32, align 4
  %state = alloca %struct.mux_master_state*, align 8
  %name = alloca i8*, align 8
  %value = alloca i8*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %mux_ctx = getelementptr inbounds %struct.Channel* %0, i32 0, i32 45
  %1 = load i8** %mux_ctx, align 8
  %2 = bitcast i8* %1 to %struct.mux_master_state*
  store %struct.mux_master_state* %2, %struct.mux_master_state** %state, align 8
  %3 = load %struct.mux_master_state** %state, align 8
  %cmp = icmp eq %struct.mux_master_state* %3, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %4, i32 0, i32 1
  %5 = load i32* %self, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([35 x i8]* @.str1601101, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.process_mux_master_hello, i32 0, i32 0), i32 %5) #11
  unreachable

if.end:                                           ; preds = %entry
  %6 = load %struct.mux_master_state** %state, align 8
  %hello_rcvd = getelementptr inbounds %struct.mux_master_state* %6, i32 0, i32 0
  %7 = load i32* %hello_rcvd, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.then1, label %if.end2

if.then1:                                         ; preds = %if.end
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([25 x i8]* @.str1611102, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.process_mux_master_hello, i32 0, i32 0))
  %8 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %9 = extractvalue { i32, i1 } %8, 0
  %10 = extractvalue { i32, i1 } %8, 1
  %11 = xor i1 %10, true
  br i1 %11, label %cont, label %trap

trap:                                             ; preds = %if.then1
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then1
  store i32 %9, i32* %retval
  br label %return

if.end2:                                          ; preds = %if.end
  %12 = load %struct.sshbuf** %m.addr, align 8
  %call = call i32 @buffer_get_int_ret(i32* %ver, %struct.sshbuf* %12)
  %cmp3 = icmp ne i32 %call, 0
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end2
  br label %malf

malf:                                             ; preds = %if.then23, %if.then4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str871028, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.process_mux_master_hello, i32 0, i32 0))
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont6, label %trap5

trap5:                                            ; preds = %malf
  call void @llvm.trap() #3
  unreachable

cont6:                                            ; preds = %malf
  store i32 %14, i32* %retval
  br label %return

if.end7:                                          ; preds = %if.end2
  %17 = load i32* %ver, align 4
  %cmp8 = icmp ne i32 %17, 4
  br i1 %cmp8, label %if.then9, label %if.end12

if.then9:                                         ; preds = %if.end7
  %18 = load i32* %ver, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([59 x i8]* @.str831024, i32 0, i32 0), i32 %18, i32 4)
  %19 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %20 = extractvalue { i32, i1 } %19, 0
  %21 = extractvalue { i32, i1 } %19, 1
  %22 = xor i1 %21, true
  br i1 %22, label %cont11, label %trap10

trap10:                                           ; preds = %if.then9
  call void @llvm.trap() #3
  unreachable

cont11:                                           ; preds = %if.then9
  store i32 %20, i32* %retval
  br label %return

if.end12:                                         ; preds = %if.end7
  %23 = load %struct.Channel** %c.addr, align 8
  %self13 = getelementptr inbounds %struct.Channel* %23, i32 0, i32 1
  %24 = load i32* %self13, align 4
  %25 = load i32* %ver, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([32 x i8]* @.str1621103, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @__func__.process_mux_master_hello, i32 0, i32 0), i32 %24, i32 %25)
  br label %while.cond

while.cond:                                       ; preds = %if.end24, %if.end12
  %26 = load %struct.sshbuf** %m.addr, align 8
  %call14 = call i64 @sshbuf_len(%struct.sshbuf* %26)
  %conv = trunc i64 %call14 to i32
  %cmp15 = icmp ugt i32 %conv, 0
  br i1 %cmp15, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %27 = load %struct.sshbuf** %m.addr, align 8
  %call17 = call i8* @buffer_get_string_ret(%struct.sshbuf* %27, i32* null)
  store i8* %call17, i8** %name, align 8
  %28 = load %struct.sshbuf** %m.addr, align 8
  %call18 = call i8* @buffer_get_string_ret(%struct.sshbuf* %28, i32* null)
  store i8* %call18, i8** %value, align 8
  %29 = load i8** %name, align 8
  %cmp19 = icmp eq i8* %29, null
  br i1 %cmp19, label %if.then23, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %30 = load i8** %value, align 8
  %cmp21 = icmp eq i8* %30, null
  br i1 %cmp21, label %if.then23, label %if.end24

if.then23:                                        ; preds = %lor.lhs.false, %while.body
  %31 = load i8** %name, align 8
  call void @free(i8* %31) #9
  %32 = load i8** %value, align 8
  call void @free(i8* %32) #9
  br label %malf

if.end24:                                         ; preds = %lor.lhs.false
  %33 = load i8** %name, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([34 x i8]* @.str1631104, i32 0, i32 0), i8* %33)
  %34 = load i8** %name, align 8
  call void @free(i8* %34) #9
  %35 = load i8** %value, align 8
  call void @free(i8* %35) #9
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %36 = load %struct.mux_master_state** %state, align 8
  %hello_rcvd25 = getelementptr inbounds %struct.mux_master_state* %36, i32 0, i32 0
  store i32 1, i32* %hello_rcvd25, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %cont11, %cont6, %cont
  %37 = load i32* %retval
  ret i32 %37
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_new_session(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  %nc = alloca %struct.Channel*, align 8
  %cctx = alloca %struct.mux_session_confirm_ctx*, align 8
  %reserved = alloca i8*, align 8
  %cmd = alloca i8*, align 8
  %cp = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %len = alloca i32, align 4
  %env_len = alloca i32, align 4
  %escape_char = alloca i32, align 4
  %window = alloca i32, align 4
  %packetmax = alloca i32, align 4
  %new_fd = alloca [3 x i32], align 4
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  %call = call i8* @xcalloc(i64 1, i64 176)
  %0 = bitcast i8* %call to %struct.mux_session_confirm_ctx*
  store %struct.mux_session_confirm_ctx* %0, %struct.mux_session_confirm_ctx** %cctx, align 8
  %1 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term = getelementptr inbounds %struct.mux_session_confirm_ctx* %1, i32 0, i32 5
  store i8* null, i8** %term, align 8
  %2 = load i32* %rid.addr, align 4
  %3 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %rid1 = getelementptr inbounds %struct.mux_session_confirm_ctx* %3, i32 0, i32 8
  store i32 %2, i32* %rid1, align 4
  store i8* null, i8** %reserved, align 8
  store i8* null, i8** %cmd, align 8
  %4 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env = getelementptr inbounds %struct.mux_session_confirm_ctx* %4, i32 0, i32 7
  store i8** null, i8*** %env, align 8
  store i32 0, i32* %env_len, align 4
  %5 = load %struct.sshbuf** %m.addr, align 8
  %call2 = call i8* @buffer_get_string_ret(%struct.sshbuf* %5, i32* null)
  store i8* %call2, i8** %reserved, align 8
  %cmp = icmp eq i8* %call2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_tty = getelementptr inbounds %struct.mux_session_confirm_ctx* %6, i32 0, i32 0
  %7 = load %struct.sshbuf** %m.addr, align 8
  %call3 = call i32 @buffer_get_int_ret(i32* %want_tty, %struct.sshbuf* %7)
  %cmp4 = icmp ne i32 %call3, 0
  br i1 %cmp4, label %if.then, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %8 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_x_fwd = getelementptr inbounds %struct.mux_session_confirm_ctx* %8, i32 0, i32 2
  %9 = load %struct.sshbuf** %m.addr, align 8
  %call6 = call i32 @buffer_get_int_ret(i32* %want_x_fwd, %struct.sshbuf* %9)
  %cmp7 = icmp ne i32 %call6, 0
  br i1 %cmp7, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %10 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_agent_fwd = getelementptr inbounds %struct.mux_session_confirm_ctx* %10, i32 0, i32 3
  %11 = load %struct.sshbuf** %m.addr, align 8
  %call9 = call i32 @buffer_get_int_ret(i32* %want_agent_fwd, %struct.sshbuf* %11)
  %cmp10 = icmp ne i32 %call9, 0
  br i1 %cmp10, label %if.then, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false8
  %12 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_subsys = getelementptr inbounds %struct.mux_session_confirm_ctx* %12, i32 0, i32 1
  %13 = load %struct.sshbuf** %m.addr, align 8
  %call12 = call i32 @buffer_get_int_ret(i32* %want_subsys, %struct.sshbuf* %13)
  %cmp13 = icmp ne i32 %call12, 0
  br i1 %cmp13, label %if.then, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %lor.lhs.false11
  %14 = load %struct.sshbuf** %m.addr, align 8
  %call15 = call i32 @buffer_get_int_ret(i32* %escape_char, %struct.sshbuf* %14)
  %cmp16 = icmp ne i32 %call15, 0
  br i1 %cmp16, label %if.then, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %lor.lhs.false14
  %15 = load %struct.sshbuf** %m.addr, align 8
  %call18 = call i8* @buffer_get_string_ret(%struct.sshbuf* %15, i32* %len)
  %16 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term19 = getelementptr inbounds %struct.mux_session_confirm_ctx* %16, i32 0, i32 5
  store i8* %call18, i8** %term19, align 8
  %cmp20 = icmp eq i8* %call18, null
  br i1 %cmp20, label %if.then, label %lor.lhs.false21

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %17 = load %struct.sshbuf** %m.addr, align 8
  %call22 = call i8* @buffer_get_string_ret(%struct.sshbuf* %17, i32* %len)
  store i8* %call22, i8** %cmd, align 8
  %cmp23 = icmp eq i8* %call22, null
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false14, %lor.lhs.false11, %lor.lhs.false8, %lor.lhs.false5, %lor.lhs.false, %entry
  br label %malf

malf:                                             ; preds = %if.then34, %if.then
  %18 = load i8** %cmd, align 8
  call void @free(i8* %18) #9
  %19 = load i8** %reserved, align 8
  call void @free(i8* %19) #9
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %malf
  %20 = load i32* %j, align 4
  %21 = load i32* %env_len, align 4
  %cmp24 = icmp ult i32 %20, %21
  br i1 %cmp24, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32* %j, align 4
  %idxprom = zext i32 %22 to i64
  %23 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env25 = getelementptr inbounds %struct.mux_session_confirm_ctx* %23, i32 0, i32 7
  %24 = load i8*** %env25, align 8
  %arrayidx = getelementptr inbounds i8** %24, i64 %idxprom
  %25 = load i8** %arrayidx, align 8
  call void @free(i8* %25) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32* %j, align 4
  %inc = add i32 %26, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %27 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env26 = getelementptr inbounds %struct.mux_session_confirm_ctx* %27, i32 0, i32 7
  %28 = load i8*** %env26, align 8
  %29 = bitcast i8** %28 to i8*
  call void @free(i8* %29) #9
  %30 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term27 = getelementptr inbounds %struct.mux_session_confirm_ctx* %30, i32 0, i32 5
  %31 = load i8** %term27, align 8
  call void @free(i8* %31) #9
  %32 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %33 = bitcast %struct.mux_session_confirm_ctx* %32 to i8*
  call void @free(i8* %33) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str871028, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0))
  %34 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %35 = extractvalue { i32, i1 } %34, 0
  %36 = extractvalue { i32, i1 } %34, 1
  %37 = xor i1 %36, true
  br i1 %37, label %cont, label %trap

trap:                                             ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.end
  store i32 %35, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false21
  %38 = load i8** %reserved, align 8
  call void @free(i8* %38) #9
  store i8* null, i8** %reserved, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end53, %if.then37, %if.end
  %39 = load %struct.sshbuf** %m.addr, align 8
  %call28 = call i64 @sshbuf_len(%struct.sshbuf* %39)
  %conv = trunc i64 %call28 to i32
  %cmp29 = icmp ugt i32 %conv, 0
  br i1 %cmp29, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %40 = load %struct.sshbuf** %m.addr, align 8
  %call31 = call i8* @buffer_get_string_ret(%struct.sshbuf* %40, i32* %len)
  store i8* %call31, i8** %cp, align 8
  %cmp32 = icmp eq i8* %call31, null
  br i1 %cmp32, label %if.then34, label %if.end35

if.then34:                                        ; preds = %while.body
  br label %malf

if.end35:                                         ; preds = %while.body
  %41 = load i8** %cp, align 8
  %call36 = call i32 @env_permitted(i8* %41)
  %tobool = icmp ne i32 %call36, 0
  br i1 %tobool, label %if.end38, label %if.then37

if.then37:                                        ; preds = %if.end35
  %42 = load i8** %cp, align 8
  call void @free(i8* %42) #9
  br label %while.cond

if.end38:                                         ; preds = %if.end35
  %43 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env39 = getelementptr inbounds %struct.mux_session_confirm_ctx* %43, i32 0, i32 7
  %44 = load i8*** %env39, align 8
  %45 = bitcast i8** %44 to i8*
  %46 = load i32* %env_len, align 4
  %add = add i32 %46, 2
  %conv40 = zext i32 %add to i64
  %call41 = call i8* @xreallocarray(i8* %45, i64 %conv40, i64 8)
  %47 = bitcast i8* %call41 to i8**
  %48 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env42 = getelementptr inbounds %struct.mux_session_confirm_ctx* %48, i32 0, i32 7
  store i8** %47, i8*** %env42, align 8
  %49 = load i8** %cp, align 8
  %50 = load i32* %env_len, align 4
  %inc43 = add i32 %50, 1
  store i32 %inc43, i32* %env_len, align 4
  %idxprom44 = zext i32 %50 to i64
  %51 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env45 = getelementptr inbounds %struct.mux_session_confirm_ctx* %51, i32 0, i32 7
  %52 = load i8*** %env45, align 8
  %arrayidx46 = getelementptr inbounds i8** %52, i64 %idxprom44
  store i8* %49, i8** %arrayidx46, align 8
  %53 = load i32* %env_len, align 4
  %idxprom47 = zext i32 %53 to i64
  %54 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env48 = getelementptr inbounds %struct.mux_session_confirm_ctx* %54, i32 0, i32 7
  %55 = load i8*** %env48, align 8
  %arrayidx49 = getelementptr inbounds i8** %55, i64 %idxprom47
  store i8* null, i8** %arrayidx49, align 8
  %56 = load i32* %env_len, align 4
  %cmp50 = icmp ugt i32 %56, 4096
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.end38
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([56 x i8]* @.str1471088, i32 0, i32 0), i32 4096)
  br label %while.end

if.end53:                                         ; preds = %if.end38
  br label %while.cond

while.end:                                        ; preds = %if.then52, %while.cond
  %57 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %57, i32 0, i32 1
  %58 = load i32* %self, align 4
  %59 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_tty54 = getelementptr inbounds %struct.mux_session_confirm_ctx* %59, i32 0, i32 0
  %60 = load i32* %want_tty54, align 4
  %61 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_x_fwd55 = getelementptr inbounds %struct.mux_session_confirm_ctx* %61, i32 0, i32 2
  %62 = load i32* %want_x_fwd55, align 4
  %63 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_agent_fwd56 = getelementptr inbounds %struct.mux_session_confirm_ctx* %63, i32 0, i32 3
  %64 = load i32* %want_agent_fwd56, align 4
  %65 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_subsys57 = getelementptr inbounds %struct.mux_session_confirm_ctx* %65, i32 0, i32 1
  %66 = load i32* %want_subsys57, align 4
  %67 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term58 = getelementptr inbounds %struct.mux_session_confirm_ctx* %67, i32 0, i32 5
  %68 = load i8** %term58, align 8
  %69 = load i8** %cmd, align 8
  %70 = load i32* %env_len, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([87 x i8]* @.str1481089, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0), i32 %58, i32 %60, i32 %62, i32 %64, i32 %66, i8* %68, i8* %69, i32 %70)
  %71 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmd59 = getelementptr inbounds %struct.mux_session_confirm_ctx* %71, i32 0, i32 4
  call void @sshbuf_init(%struct.sshbuf* %cmd59)
  %72 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmd60 = getelementptr inbounds %struct.mux_session_confirm_ctx* %72, i32 0, i32 4
  %73 = load i8** %cmd, align 8
  %74 = load i8** %cmd, align 8
  %call61 = call i64 @strlen(i8* %74) #12
  %conv62 = trunc i64 %call61 to i32
  call void @buffer_append(%struct.sshbuf* %cmd60, i8* %73, i32 %conv62)
  %75 = load i8** %cmd, align 8
  call void @free(i8* %75) #9
  store i8* null, i8** %cmd, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond63

for.cond63:                                       ; preds = %for.inc101, %while.end
  %76 = load i32* %i, align 4
  %cmp64 = icmp ult i32 %76, 3
  br i1 %cmp64, label %for.body66, label %for.end103

for.body66:                                       ; preds = %for.cond63
  %77 = load %struct.Channel** %c.addr, align 8
  %sock = getelementptr inbounds %struct.Channel* %77, i32 0, i32 9
  %78 = load i32* %sock, align 4
  %call67 = call i32 @mm_receive_fd(i32 %78)
  %79 = load i32* %i, align 4
  %idxprom68 = zext i32 %79 to i64
  %arrayidx69 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 %idxprom68
  store i32 %call67, i32* %arrayidx69, align 4
  %80 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %81 = extractvalue { i32, i1 } %80, 0
  %82 = extractvalue { i32, i1 } %80, 1
  %83 = xor i1 %82, true
  br i1 %83, label %cont71, label %trap70

trap70:                                           ; preds = %for.body66
  call void @llvm.trap() #3
  unreachable

cont71:                                           ; preds = %for.body66
  %cmp72 = icmp eq i32 %call67, %81
  br i1 %cmp72, label %if.then74, label %if.end100

if.then74:                                        ; preds = %cont71
  %84 = load i32* %i, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str981039, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0), i32 %84)
  store i32 0, i32* %j, align 4
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc82, %if.then74
  %85 = load i32* %j, align 4
  %86 = load i32* %i, align 4
  %cmp76 = icmp ult i32 %85, %86
  br i1 %cmp76, label %for.body78, label %for.end84

for.body78:                                       ; preds = %for.cond75
  %87 = load i32* %j, align 4
  %idxprom79 = zext i32 %87 to i64
  %arrayidx80 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 %idxprom79
  %88 = load i32* %arrayidx80, align 4
  %call81 = call i32 @close(i32 %88)
  br label %for.inc82

for.inc82:                                        ; preds = %for.body78
  %89 = load i32* %j, align 4
  %inc83 = add i32 %89, 1
  store i32 %inc83, i32* %j, align 4
  br label %for.cond75

for.end84:                                        ; preds = %for.cond75
  store i32 0, i32* %j, align 4
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc92, %for.end84
  %90 = load i32* %j, align 4
  %91 = load i32* %env_len, align 4
  %cmp86 = icmp ult i32 %90, %91
  br i1 %cmp86, label %for.body88, label %for.end94

for.body88:                                       ; preds = %for.cond85
  %92 = load i32* %j, align 4
  %idxprom89 = zext i32 %92 to i64
  %93 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env90 = getelementptr inbounds %struct.mux_session_confirm_ctx* %93, i32 0, i32 7
  %94 = load i8*** %env90, align 8
  %arrayidx91 = getelementptr inbounds i8** %94, i64 %idxprom89
  %95 = load i8** %arrayidx91, align 8
  call void @free(i8* %95) #9
  br label %for.inc92

for.inc92:                                        ; preds = %for.body88
  %96 = load i32* %j, align 4
  %inc93 = add i32 %96, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond85

for.end94:                                        ; preds = %for.cond85
  %97 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env95 = getelementptr inbounds %struct.mux_session_confirm_ctx* %97, i32 0, i32 7
  %98 = load i8*** %env95, align 8
  %99 = bitcast i8** %98 to i8*
  call void @free(i8* %99) #9
  %100 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term96 = getelementptr inbounds %struct.mux_session_confirm_ctx* %100, i32 0, i32 5
  %101 = load i8** %term96, align 8
  call void @free(i8* %101) #9
  %102 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmd97 = getelementptr inbounds %struct.mux_session_confirm_ctx* %102, i32 0, i32 4
  call void @sshbuf_free(%struct.sshbuf* %cmd97)
  %103 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %104 = bitcast %struct.mux_session_confirm_ctx* %103 to i8*
  call void @free(i8* %104) #9
  %105 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %105, i32 -2147483645)
  %106 = load %struct.sshbuf** %r.addr, align 8
  %107 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %106, i32 %107)
  %108 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %108, i8* getelementptr inbounds ([33 x i8]* @.str991040, i32 0, i32 0))
  %109 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %110 = extractvalue { i32, i1 } %109, 0
  %111 = extractvalue { i32, i1 } %109, 1
  %112 = xor i1 %111, true
  br i1 %112, label %cont99, label %trap98

trap98:                                           ; preds = %for.end94
  call void @llvm.trap() #3
  unreachable

cont99:                                           ; preds = %for.end94
  store i32 %110, i32* %retval
  br label %return

if.end100:                                        ; preds = %cont71
  br label %for.inc101

for.inc101:                                       ; preds = %if.end100
  %113 = load i32* %i, align 4
  %inc102 = add i32 %113, 1
  store i32 %inc102, i32* %i, align 4
  br label %for.cond63

for.end103:                                       ; preds = %for.cond63
  %arrayidx104 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 0
  %114 = load i32* %arrayidx104, align 4
  %arrayidx105 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 1
  %115 = load i32* %arrayidx105, align 4
  %arrayidx106 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 2
  %116 = load i32* %arrayidx106, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([43 x i8]* @.str1491090, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0), i32 %114, i32 %115, i32 %116)
  %117 = load %struct.Channel** %c.addr, align 8
  %remote_id = getelementptr inbounds %struct.Channel* %117, i32 0, i32 2
  %118 = load i32* %remote_id, align 4
  %119 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %120 = extractvalue { i32, i1 } %119, 0
  %121 = extractvalue { i32, i1 } %119, 1
  %122 = xor i1 %121, true
  br i1 %122, label %cont108, label %trap107

trap107:                                          ; preds = %for.end103
  call void @llvm.trap() #3
  unreachable

cont108:                                          ; preds = %for.end103
  %cmp109 = icmp ne i32 %118, %120
  br i1 %cmp109, label %if.then111, label %if.end135

if.then111:                                       ; preds = %cont108
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([25 x i8]* @.str1011042, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0))
  %123 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %123, i32 -2147483645)
  %124 = load %struct.sshbuf** %r.addr, align 8
  %125 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %124, i32 %125)
  %126 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %126, i8* getelementptr inbounds ([32 x i8]* @.str1021043, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then144, %if.then111
  %arrayidx112 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 0
  %127 = load i32* %arrayidx112, align 4
  %call113 = call i32 @close(i32 %127)
  %arrayidx114 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 1
  %128 = load i32* %arrayidx114, align 4
  %call115 = call i32 @close(i32 %128)
  %arrayidx116 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 2
  %129 = load i32* %arrayidx116, align 4
  %call117 = call i32 @close(i32 %129)
  %130 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term118 = getelementptr inbounds %struct.mux_session_confirm_ctx* %130, i32 0, i32 5
  %131 = load i8** %term118, align 8
  call void @free(i8* %131) #9
  %132 = load i32* %env_len, align 4
  %cmp119 = icmp ne i32 %132, 0
  br i1 %cmp119, label %if.then121, label %if.end133

if.then121:                                       ; preds = %cleanup
  store i32 0, i32* %i, align 4
  br label %for.cond122

for.cond122:                                      ; preds = %for.inc129, %if.then121
  %133 = load i32* %i, align 4
  %134 = load i32* %env_len, align 4
  %cmp123 = icmp ult i32 %133, %134
  br i1 %cmp123, label %for.body125, label %for.end131

for.body125:                                      ; preds = %for.cond122
  %135 = load i32* %i, align 4
  %idxprom126 = zext i32 %135 to i64
  %136 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env127 = getelementptr inbounds %struct.mux_session_confirm_ctx* %136, i32 0, i32 7
  %137 = load i8*** %env127, align 8
  %arrayidx128 = getelementptr inbounds i8** %137, i64 %idxprom126
  %138 = load i8** %arrayidx128, align 8
  call void @free(i8* %138) #9
  br label %for.inc129

for.inc129:                                       ; preds = %for.body125
  %139 = load i32* %i, align 4
  %inc130 = add i32 %139, 1
  store i32 %inc130, i32* %i, align 4
  br label %for.cond122

for.end131:                                       ; preds = %for.cond122
  %140 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env132 = getelementptr inbounds %struct.mux_session_confirm_ctx* %140, i32 0, i32 7
  %141 = load i8*** %env132, align 8
  %142 = bitcast i8** %141 to i8*
  call void @free(i8* %142) #9
  br label %if.end133

if.end133:                                        ; preds = %for.end131, %cleanup
  %143 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmd134 = getelementptr inbounds %struct.mux_session_confirm_ctx* %143, i32 0, i32 4
  call void @sshbuf_free(%struct.sshbuf* %cmd134)
  %144 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %145 = bitcast %struct.mux_session_confirm_ctx* %144 to i8*
  call void @free(i8* %145) #9
  store i32 0, i32* %retval
  br label %return

if.end135:                                        ; preds = %cont108
  %146 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp136 = icmp eq i32 %146, 3
  br i1 %cmp136, label %if.then141, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %if.end135
  %147 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp139 = icmp eq i32 %147, 4
  br i1 %cmp139, label %if.then141, label %if.end146

if.then141:                                       ; preds = %lor.lhs.false138, %if.end135
  %148 = load i8** @host, align 8
  %call142 = call i32 (i8*, ...)* @ask_permission(i8* getelementptr inbounds ([32 x i8]* @.str1501091, i32 0, i32 0), i8* %148)
  %tobool143 = icmp ne i32 %call142, 0
  br i1 %tobool143, label %if.end145, label %if.then144

if.then144:                                       ; preds = %if.then141
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([28 x i8]* @.str1511092, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0))
  %149 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %149, i32 -2147483646)
  %150 = load %struct.sshbuf** %r.addr, align 8
  %151 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %150, i32 %151)
  %152 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %152, i8* getelementptr inbounds ([18 x i8]* @.str961037, i32 0, i32 0))
  br label %cleanup

if.end145:                                        ; preds = %if.then141
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %lor.lhs.false138
  %153 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_tty147 = getelementptr inbounds %struct.mux_session_confirm_ctx* %153, i32 0, i32 0
  %154 = load i32* %want_tty147, align 4
  %tobool148 = icmp ne i32 %154, 0
  br i1 %tobool148, label %land.lhs.true, label %if.end158

land.lhs.true:                                    ; preds = %if.end146
  %arrayidx149 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 0
  %155 = load i32* %arrayidx149, align 4
  %156 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %tio = getelementptr inbounds %struct.mux_session_confirm_ctx* %156, i32 0, i32 6
  %call150 = call i32 @tcgetattr(i32 %155, %struct.termios* %tio) #9
  %157 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %158 = extractvalue { i32, i1 } %157, 0
  %159 = extractvalue { i32, i1 } %157, 1
  %160 = xor i1 %159, true
  br i1 %160, label %cont152, label %trap151

trap151:                                          ; preds = %land.lhs.true
  call void @llvm.trap() #3
  unreachable

cont152:                                          ; preds = %land.lhs.true
  %cmp153 = icmp eq i32 %call150, %158
  br i1 %cmp153, label %if.then155, label %if.end158

if.then155:                                       ; preds = %cont152
  %call156 = call i32* @__errno_location() #2
  %161 = load i32* %call156, align 4
  %call157 = call i8* @strerror(i32 %161) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([18 x i8]* @.str1521093, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0), i8* %call157)
  br label %if.end158

if.end158:                                        ; preds = %if.then155, %cont152, %if.end146
  %arrayidx159 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 0
  %162 = load i32* %arrayidx159, align 4
  %call160 = call i32 @isatty(i32 %162) #9
  %tobool161 = icmp ne i32 %call160, 0
  br i1 %tobool161, label %if.end165, label %if.then162

if.then162:                                       ; preds = %if.end158
  %arrayidx163 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 0
  %163 = load i32* %arrayidx163, align 4
  %call164 = call i32 @set_nonblock(i32 %163)
  br label %if.end165

if.end165:                                        ; preds = %if.then162, %if.end158
  %arrayidx166 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 1
  %164 = load i32* %arrayidx166, align 4
  %call167 = call i32 @isatty(i32 %164) #9
  %tobool168 = icmp ne i32 %call167, 0
  br i1 %tobool168, label %if.end172, label %if.then169

if.then169:                                       ; preds = %if.end165
  %arrayidx170 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 1
  %165 = load i32* %arrayidx170, align 4
  %call171 = call i32 @set_nonblock(i32 %165)
  br label %if.end172

if.end172:                                        ; preds = %if.then169, %if.end165
  %arrayidx173 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 2
  %166 = load i32* %arrayidx173, align 4
  %call174 = call i32 @isatty(i32 %166) #9
  %tobool175 = icmp ne i32 %call174, 0
  br i1 %tobool175, label %if.end179, label %if.then176

if.then176:                                       ; preds = %if.end172
  %arrayidx177 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 2
  %167 = load i32* %arrayidx177, align 4
  %call178 = call i32 @set_nonblock(i32 %167)
  br label %if.end179

if.end179:                                        ; preds = %if.then176, %if.end172
  %168 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %169 = extractvalue { i32, i1 } %168, 0
  %170 = extractvalue { i32, i1 } %168, 1
  %171 = xor i1 %170, true
  br i1 %171, label %cont181, label %trap180

trap180:                                          ; preds = %if.end179
  call void @llvm.trap() #3
  unreachable

cont181:                                          ; preds = %if.end179
  %172 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 64, i32 %169)
  %173 = extractvalue { i32, i1 } %172, 0
  %174 = extractvalue { i32, i1 } %172, 1
  %175 = xor i1 %174, true
  br i1 %175, label %cont183, label %trap182

trap182:                                          ; preds = %cont181
  call void @llvm.trap() #3
  unreachable

cont183:                                          ; preds = %cont181
  store i32 %173, i32* %window, align 4
  %176 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 32, i32 1024)
  %177 = extractvalue { i32, i1 } %176, 0
  %178 = extractvalue { i32, i1 } %176, 1
  %179 = xor i1 %178, true
  br i1 %179, label %cont185, label %trap184

trap184:                                          ; preds = %cont183
  call void @llvm.trap() #3
  unreachable

cont185:                                          ; preds = %cont183
  store i32 %177, i32* %packetmax, align 4
  %180 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_tty186 = getelementptr inbounds %struct.mux_session_confirm_ctx* %180, i32 0, i32 0
  %181 = load i32* %want_tty186, align 4
  %tobool187 = icmp ne i32 %181, 0
  br i1 %tobool187, label %if.then188, label %if.end190

if.then188:                                       ; preds = %cont185
  %182 = load i32* %window, align 4
  %shr = lshr i32 %182, 1
  store i32 %shr, i32* %window, align 4
  %183 = load i32* %packetmax, align 4
  %shr189 = lshr i32 %183, 1
  store i32 %shr189, i32* %packetmax, align 4
  br label %if.end190

if.end190:                                        ; preds = %if.then188, %cont185
  %arrayidx191 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 0
  %184 = load i32* %arrayidx191, align 4
  %arrayidx192 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 1
  %185 = load i32* %arrayidx192, align 4
  %arrayidx193 = getelementptr inbounds [3 x i32]* %new_fd, i32 0, i64 2
  %186 = load i32* %arrayidx193, align 4
  %187 = load i32* %window, align 4
  %188 = load i32* %packetmax, align 4
  %call194 = call %struct.Channel* @channel_new(i8* getelementptr inbounds ([8 x i8]* @.str1531094, i32 0, i32 0), i32 3, i32 %184, i32 %185, i32 %186, i32 %187, i32 %188, i32 2, i8* getelementptr inbounds ([15 x i8]* @.str1541095, i32 0, i32 0), i32 0)
  store %struct.Channel* %call194, %struct.Channel** %nc, align 8
  %189 = load %struct.Channel** %c.addr, align 8
  %self195 = getelementptr inbounds %struct.Channel* %189, i32 0, i32 1
  %190 = load i32* %self195, align 4
  %191 = load %struct.Channel** %nc, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %191, i32 0, i32 10
  store i32 %190, i32* %ctl_chan, align 4
  %192 = load %struct.Channel** %nc, align 8
  %self196 = getelementptr inbounds %struct.Channel* %192, i32 0, i32 1
  %193 = load i32* %self196, align 4
  %194 = load %struct.Channel** %c.addr, align 8
  %remote_id197 = getelementptr inbounds %struct.Channel* %194, i32 0, i32 2
  store i32 %193, i32* %remote_id197, align 4
  %195 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_tty198 = getelementptr inbounds %struct.mux_session_confirm_ctx* %195, i32 0, i32 0
  %196 = load i32* %want_tty198, align 4
  %tobool199 = icmp ne i32 %196, 0
  br i1 %tobool199, label %land.lhs.true200, label %if.end206

land.lhs.true200:                                 ; preds = %if.end190
  %197 = load i32* %escape_char, align 4
  %cmp201 = icmp ne i32 %197, -1
  br i1 %cmp201, label %if.then203, label %if.end206

if.then203:                                       ; preds = %land.lhs.true200
  %198 = load %struct.Channel** %nc, align 8
  %self204 = getelementptr inbounds %struct.Channel* %198, i32 0, i32 1
  %199 = load i32* %self204, align 4
  %200 = load i32* %escape_char, align 4
  %call205 = call i8* @client_new_escape_filter_ctx(i32 %200)
  call void bitcast (void (i32, i32 (%struct.Channel.80*, i8*, i32)*, i8* (%struct.Channel.80*, i8**, i32*)*, void (i32, i8*)*, i8*)* @channel_register_filter to void (i32, i32 (%struct.Channel*, i8*, i32)*, i8* (%struct.Channel*, i8**, i32*)*, void (i32, i8*)*, i8*)*)(i32 %199, i32 (%struct.Channel*, i8*, i32)* bitcast (i32 (%struct.Channel.80*, i8*, i32)* @client_simple_escape_filter to i32 (%struct.Channel*, i8*, i32)*), i8* (%struct.Channel*, i8**, i32*)* null, void (i32, i8*)* @client_filter_cleanup, i8* %call205)
  br label %if.end206

if.end206:                                        ; preds = %if.then203, %land.lhs.true200, %if.end190
  %201 = load %struct.Channel** %nc, align 8
  %self207 = getelementptr inbounds %struct.Channel* %201, i32 0, i32 1
  %202 = load i32* %self207, align 4
  %203 = load %struct.Channel** %nc, align 8
  %ctl_chan208 = getelementptr inbounds %struct.Channel* %203, i32 0, i32 10
  %204 = load i32* %ctl_chan208, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([49 x i8]* @.str1051046, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_new_session, i32 0, i32 0), i32 %202, i32 %204)
  %205 = load %struct.Channel** %nc, align 8
  %self209 = getelementptr inbounds %struct.Channel* %205, i32 0, i32 1
  %206 = load i32* %self209, align 4
  call void @channel_send_open(i32 %206)
  %207 = load %struct.Channel** %nc, align 8
  %self210 = getelementptr inbounds %struct.Channel* %207, i32 0, i32 1
  %208 = load i32* %self210, align 4
  %209 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %210 = bitcast %struct.mux_session_confirm_ctx* %209 to i8*
  call void @channel_register_open_confirm(i32 %208, void (i32, i32, i8*)* @mux_session_confirm, i8* %210)
  %211 = load %struct.Channel** %c.addr, align 8
  %mux_pause = getelementptr inbounds %struct.Channel* %211, i32 0, i32 46
  store i32 1, i32* %mux_pause, align 4
  %212 = load %struct.Channel** %nc, align 8
  %self211 = getelementptr inbounds %struct.Channel* %212, i32 0, i32 1
  %213 = load i32* %self211, align 4
  call void @channel_register_cleanup(i32 %213, void (i32, i8*)* @mux_master_session_cleanup_cb, i32 1)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end206, %if.end133, %cont99, %cont
  %214 = load i32* %retval
  ret i32 %214
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_alive_check(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %0, i32 0, i32 1
  %1 = load i32* %self, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([28 x i8]* @.str1461087, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @__func__.process_mux_alive_check, i32 0, i32 0), i32 %1)
  %2 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %2, i32 -2147483643)
  %3 = load %struct.sshbuf** %r.addr, align 8
  %4 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %3, i32 %4)
  %5 = load %struct.sshbuf** %r.addr, align 8
  %call = call i32 @getpid() #9
  call void @buffer_put_int(%struct.sshbuf* %5, i32 %call)
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_terminate(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %0, i32 0, i32 1
  %1 = load i32* %self, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([34 x i8]* @.str1431084, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_terminate, i32 0, i32 0), i32 %1)
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp = icmp eq i32 %2, 3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp1 = icmp eq i32 %3, 4
  br i1 %cmp1, label %if.then, label %if.end3

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8** @host, align 8
  %call = call i32 (i8*, ...)* @ask_permission(i8* getelementptr inbounds ([36 x i8]* @.str1441085, i32 0, i32 0), i8* %4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([32 x i8]* @.str1451086, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_terminate, i32 0, i32 0))
  %5 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %5, i32 -2147483646)
  %6 = load %struct.sshbuf** %r.addr, align 8
  %7 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %6, i32 %7)
  %8 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %8, i8* getelementptr inbounds ([18 x i8]* @.str961037, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end3

if.end3:                                          ; preds = %if.end, %lor.lhs.false
  store volatile i32 1, i32* @quit_pending, align 4
  %9 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %9, i32 -2147483647)
  %10 = load %struct.sshbuf** %r.addr, align 8
  %11 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %10, i32 %11)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i32* %retval
  ret i32 %12
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_open_fwd(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  %fwd = alloca %struct.Forward, align 8
  %fwd_desc = alloca i8*, align 8
  %listen_addr = alloca i8*, align 8
  %connect_addr = alloca i8*, align 8
  %ftype = alloca i32, align 4
  %lport = alloca i32, align 4
  %cport = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %freefwd = alloca i32, align 4
  %fctx = alloca %struct.mux_channel_confirm_ctx*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  store i8* null, i8** %fwd_desc, align 8
  store i32 0, i32* %ret, align 4
  store i32 1, i32* %freefwd, align 4
  %0 = bitcast %struct.Forward* %fwd to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false)
  %1 = load %struct.sshbuf** %m.addr, align 8
  %call = call i32 @buffer_get_int_ret(i32* %ftype, %struct.sshbuf* %1)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sshbuf** %m.addr, align 8
  %call1 = call i8* @buffer_get_string_ret(%struct.sshbuf* %2, i32* null)
  store i8* %call1, i8** %listen_addr, align 8
  %cmp2 = icmp eq i8* %call1, null
  br i1 %cmp2, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load %struct.sshbuf** %m.addr, align 8
  %call4 = call i32 @buffer_get_int_ret(i32* %lport, %struct.sshbuf* %3)
  %cmp5 = icmp ne i32 %call4, 0
  br i1 %cmp5, label %if.then, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %4 = load %struct.sshbuf** %m.addr, align 8
  %call7 = call i8* @buffer_get_string_ret(%struct.sshbuf* %4, i32* null)
  store i8* %call7, i8** %connect_addr, align 8
  %cmp8 = icmp eq i8* %call7, null
  br i1 %cmp8, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %5 = load %struct.sshbuf** %m.addr, align 8
  %call10 = call i32 @buffer_get_int_ret(i32* %cport, %struct.sshbuf* %5)
  %cmp11 = icmp ne i32 %call10, 0
  br i1 %cmp11, label %if.then, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %6 = load i32* %lport, align 4
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %8 = extractvalue { i32, i1 } %7, 0
  %9 = extractvalue { i32, i1 } %7, 1
  %10 = xor i1 %9, true
  br i1 %10, label %cont, label %trap

trap:                                             ; preds = %lor.lhs.false12
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %lor.lhs.false12
  %cmp13 = icmp ne i32 %6, %8
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false15

land.lhs.true:                                    ; preds = %cont
  %11 = load i32* %lport, align 4
  %cmp14 = icmp ugt i32 %11, 65535
  br i1 %cmp14, label %if.then, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %land.lhs.true, %cont
  %12 = load i32* %cport, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont17, label %trap16

trap16:                                           ; preds = %lor.lhs.false15
  call void @llvm.trap() #3
  unreachable

cont17:                                           ; preds = %lor.lhs.false15
  %cmp18 = icmp ne i32 %12, %14
  br i1 %cmp18, label %land.lhs.true19, label %if.end

land.lhs.true19:                                  ; preds = %cont17
  %17 = load i32* %cport, align 4
  %cmp20 = icmp ugt i32 %17, 65535
  br i1 %cmp20, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true19, %land.lhs.true, %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str871028, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0))
  %18 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont22, label %trap21

trap21:                                           ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %if.then
  store i32 %19, i32* %ret, align 4
  br label %out

if.end:                                           ; preds = %land.lhs.true19, %cont17
  %22 = load i8** %listen_addr, align 8
  %23 = load i8* %22, align 1
  %conv = sext i8 %23 to i32
  %cmp23 = icmp eq i32 %conv, 0
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end
  %24 = load i8** %listen_addr, align 8
  call void @free(i8* %24) #9
  store i8* null, i8** %listen_addr, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end
  %25 = load i8** %connect_addr, align 8
  %26 = load i8* %25, align 1
  %conv27 = sext i8 %26 to i32
  %cmp28 = icmp eq i32 %conv27, 0
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end26
  %27 = load i8** %connect_addr, align 8
  call void @free(i8* %27) #9
  store i8* null, i8** %connect_addr, align 8
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.end26
  %28 = bitcast %struct.Forward* %fwd to i8*
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 56, i32 8, i1 false)
  %29 = load i32* %lport, align 4
  %listen_port = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  store i32 %29, i32* %listen_port, align 4
  %listen_port32 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %30 = load i32* %listen_port32, align 4
  %31 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %32 = extractvalue { i32, i1 } %31, 0
  %33 = extractvalue { i32, i1 } %31, 1
  %34 = xor i1 %33, true
  br i1 %34, label %cont34, label %trap33

trap33:                                           ; preds = %if.end31
  call void @llvm.trap() #3
  unreachable

cont34:                                           ; preds = %if.end31
  %cmp35 = icmp eq i32 %30, %32
  br i1 %cmp35, label %if.then37, label %if.else

if.then37:                                        ; preds = %cont34
  %35 = load i8** %listen_addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 2
  store i8* %35, i8** %listen_path, align 8
  br label %if.end38

if.else:                                          ; preds = %cont34
  %36 = load i8** %listen_addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 0
  store i8* %36, i8** %listen_host, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then37
  %37 = load i32* %cport, align 4
  %connect_port = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  store i32 %37, i32* %connect_port, align 4
  %connect_port39 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %38 = load i32* %connect_port39, align 4
  %39 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont41, label %trap40

trap40:                                           ; preds = %if.end38
  call void @llvm.trap() #3
  unreachable

cont41:                                           ; preds = %if.end38
  %cmp42 = icmp eq i32 %38, %40
  br i1 %cmp42, label %if.then44, label %if.else45

if.then44:                                        ; preds = %cont41
  %43 = load i8** %connect_addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 5
  store i8* %43, i8** %connect_path, align 8
  br label %if.end46

if.else45:                                        ; preds = %cont41
  %44 = load i8** %connect_addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 3
  store i8* %44, i8** %connect_host, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  %45 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %45, i32 0, i32 1
  %46 = load i32* %self, align 4
  %47 = load i32* %ftype, align 4
  %call47 = call i8* @format_forward(i32 %47, %struct.Forward* %fwd)
  store i8* %call47, i8** %fwd_desc, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([27 x i8]* @.str1201061, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0), i32 %46, i8* %call47)
  %48 = load i32* %ftype, align 4
  %cmp48 = icmp ne i32 %48, 1
  br i1 %cmp48, label %land.lhs.true50, label %if.end57

land.lhs.true50:                                  ; preds = %if.end46
  %49 = load i32* %ftype, align 4
  %cmp51 = icmp ne i32 %49, 2
  br i1 %cmp51, label %land.lhs.true53, label %if.end57

land.lhs.true53:                                  ; preds = %land.lhs.true50
  %50 = load i32* %ftype, align 4
  %cmp54 = icmp ne i32 %50, 3
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %land.lhs.true53
  %51 = load i32* %ftype, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([31 x i8]* @.str1211062, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0), i32 %51)
  br label %invalid

invalid:                                          ; preds = %if.then108, %if.then95, %if.then73, %if.then62, %if.then56
  %52 = load i8** %listen_addr, align 8
  call void @free(i8* %52) #9
  %53 = load i8** %connect_addr, align 8
  call void @free(i8* %53) #9
  %54 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %54, i32 -2147483645)
  %55 = load %struct.sshbuf** %r.addr, align 8
  %56 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %55, i32 %56)
  %57 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %57, i8* getelementptr inbounds ([27 x i8]* @.str1221063, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end57:                                         ; preds = %land.lhs.true53, %land.lhs.true50, %if.end46
  %58 = load i32* %ftype, align 4
  %cmp58 = icmp eq i32 %58, 3
  br i1 %cmp58, label %land.lhs.true60, label %if.end63

land.lhs.true60:                                  ; preds = %if.end57
  %listen_path61 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 2
  %59 = load i8** %listen_path61, align 8
  %tobool = icmp ne i8* %59, null
  br i1 %tobool, label %if.then62, label %if.end63

if.then62:                                        ; preds = %land.lhs.true60
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([60 x i8]* @.str1231064, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0))
  br label %invalid

if.end63:                                         ; preds = %land.lhs.true60, %if.end57
  %listen_port64 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %60 = load i32* %listen_port64, align 4
  %61 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %62 = extractvalue { i32, i1 } %61, 0
  %63 = extractvalue { i32, i1 } %61, 1
  %64 = xor i1 %63, true
  br i1 %64, label %cont66, label %trap65

trap65:                                           ; preds = %if.end63
  call void @llvm.trap() #3
  unreachable

cont66:                                           ; preds = %if.end63
  %cmp67 = icmp ne i32 %60, %62
  br i1 %cmp67, label %land.lhs.true69, label %if.end75

land.lhs.true69:                                  ; preds = %cont66
  %listen_port70 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %65 = load i32* %listen_port70, align 4
  %cmp71 = icmp sge i32 %65, 65536
  br i1 %cmp71, label %if.then73, label %if.end75

if.then73:                                        ; preds = %land.lhs.true69
  %listen_port74 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %66 = load i32* %listen_port74, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([27 x i8]* @.str1241065, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0), i32 %66)
  br label %invalid

if.end75:                                         ; preds = %land.lhs.true69, %cont66
  %connect_port76 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %67 = load i32* %connect_port76, align 4
  %68 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %69 = extractvalue { i32, i1 } %68, 0
  %70 = extractvalue { i32, i1 } %68, 1
  %71 = xor i1 %70, true
  br i1 %71, label %cont78, label %trap77

trap77:                                           ; preds = %if.end75
  call void @llvm.trap() #3
  unreachable

cont78:                                           ; preds = %if.end75
  %cmp79 = icmp ne i32 %67, %69
  br i1 %cmp79, label %land.lhs.true81, label %lor.lhs.false85

land.lhs.true81:                                  ; preds = %cont78
  %connect_port82 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %72 = load i32* %connect_port82, align 4
  %cmp83 = icmp sge i32 %72, 65536
  br i1 %cmp83, label %if.then95, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %land.lhs.true81, %cont78
  %73 = load i32* %ftype, align 4
  %cmp86 = icmp ne i32 %73, 3
  br i1 %cmp86, label %land.lhs.true88, label %if.end97

land.lhs.true88:                                  ; preds = %lor.lhs.false85
  %74 = load i32* %ftype, align 4
  %cmp89 = icmp ne i32 %74, 2
  br i1 %cmp89, label %land.lhs.true91, label %if.end97

land.lhs.true91:                                  ; preds = %land.lhs.true88
  %connect_port92 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %75 = load i32* %connect_port92, align 4
  %cmp93 = icmp eq i32 %75, 0
  br i1 %cmp93, label %if.then95, label %if.end97

if.then95:                                        ; preds = %land.lhs.true91, %land.lhs.true81
  %connect_port96 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %76 = load i32* %connect_port96, align 4
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([28 x i8]* @.str1251066, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0), i32 %76)
  br label %invalid

if.end97:                                         ; preds = %land.lhs.true91, %land.lhs.true88, %lor.lhs.false85
  %77 = load i32* %ftype, align 4
  %cmp98 = icmp ne i32 %77, 3
  br i1 %cmp98, label %land.lhs.true100, label %if.end109

land.lhs.true100:                                 ; preds = %if.end97
  %connect_host101 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 3
  %78 = load i8** %connect_host101, align 8
  %cmp102 = icmp eq i8* %78, null
  br i1 %cmp102, label %land.lhs.true104, label %if.end109

land.lhs.true104:                                 ; preds = %land.lhs.true100
  %connect_path105 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 5
  %79 = load i8** %connect_path105, align 8
  %cmp106 = icmp eq i8* %79, null
  br i1 %cmp106, label %if.then108, label %if.end109

if.then108:                                       ; preds = %land.lhs.true104
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([25 x i8]* @.str1261067, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0))
  br label %invalid

if.end109:                                        ; preds = %land.lhs.true104, %land.lhs.true100, %if.end97
  %80 = load i32* %ftype, align 4
  switch i32 %80, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb118
  ]

sw.bb:                                            ; preds = %if.end109, %if.end109
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont117, %sw.bb
  %81 = load i32* %i, align 4
  %82 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  %cmp110 = icmp slt i32 %81, %82
  br i1 %cmp110, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %83 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %84 = load i32* %i, align 4
  %idx.ext = sext i32 %84 to i64
  %add.ptr = getelementptr inbounds %struct.Forward* %83, i64 %idx.ext
  %call112 = call i32 @compare_forward(%struct.Forward* %fwd, %struct.Forward* %add.ptr)
  %tobool113 = icmp ne i32 %call112, 0
  br i1 %tobool113, label %if.then114, label %if.end115

if.then114:                                       ; preds = %for.body
  br label %exists

exists:                                           ; preds = %if.then131, %if.then114
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([30 x i8]* @.str1271068, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0))
  %85 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %85, i32 -2147483647)
  %86 = load %struct.sshbuf** %r.addr, align 8
  %87 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %86, i32 %87)
  br label %out

if.end115:                                        ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end115
  %88 = load i32* %i, align 4
  %89 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 1)
  %90 = extractvalue { i32, i1 } %89, 0
  %91 = extractvalue { i32, i1 } %89, 1
  %92 = xor i1 %91, true
  br i1 %92, label %cont117, label %trap116

trap116:                                          ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont117:                                          ; preds = %for.inc
  store i32 %90, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb118:                                         ; preds = %if.end109
  store i32 0, i32* %i, align 4
  br label %for.cond119

for.cond119:                                      ; preds = %cont136, %sw.bb118
  %93 = load i32* %i, align 4
  %94 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp120 = icmp slt i32 %93, %94
  br i1 %cmp120, label %for.body122, label %for.end137

for.body122:                                      ; preds = %for.cond119
  %95 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %96 = load i32* %i, align 4
  %idx.ext123 = sext i32 %96 to i64
  %add.ptr124 = getelementptr inbounds %struct.Forward* %95, i64 %idx.ext123
  %call125 = call i32 @compare_forward(%struct.Forward* %fwd, %struct.Forward* %add.ptr124)
  %tobool126 = icmp ne i32 %call125, 0
  br i1 %tobool126, label %if.then127, label %if.end133

if.then127:                                       ; preds = %for.body122
  %listen_port128 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %97 = load i32* %listen_port128, align 4
  %cmp129 = icmp ne i32 %97, 0
  br i1 %cmp129, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.then127
  br label %exists

if.end132:                                        ; preds = %if.then127
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([25 x i8]* @.str1281069, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0))
  %98 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %98, i32 -2147483641)
  %99 = load %struct.sshbuf** %r.addr, align 8
  %100 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %99, i32 %100)
  %101 = load %struct.sshbuf** %r.addr, align 8
  %102 = load i32* %i, align 4
  %idxprom = sext i32 %102 to i64
  %103 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %103, i64 %idxprom
  %allocated_port = getelementptr inbounds %struct.Forward* %arrayidx, i32 0, i32 6
  %104 = load i32* %allocated_port, align 4
  call void @buffer_put_int(%struct.sshbuf* %101, i32 %104)
  br label %out

if.end133:                                        ; preds = %for.body122
  br label %for.inc134

for.inc134:                                       ; preds = %if.end133
  %105 = load i32* %i, align 4
  %106 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 1)
  %107 = extractvalue { i32, i1 } %106, 0
  %108 = extractvalue { i32, i1 } %106, 1
  %109 = xor i1 %108, true
  br i1 %109, label %cont136, label %trap135

trap135:                                          ; preds = %for.inc134
  call void @llvm.trap() #3
  unreachable

cont136:                                          ; preds = %for.inc134
  store i32 %107, i32* %i, align 4
  br label %for.cond119

for.end137:                                       ; preds = %for.cond119
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end137, %for.end, %if.end109
  %110 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp138 = icmp eq i32 %110, 3
  br i1 %cmp138, label %if.then143, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %sw.epilog
  %111 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp141 = icmp eq i32 %111, 4
  br i1 %cmp141, label %if.then143, label %if.end148

if.then143:                                       ; preds = %lor.lhs.false140, %sw.epilog
  %112 = load i8** %fwd_desc, align 8
  %113 = load i8** @host, align 8
  %call144 = call i32 (i8*, ...)* @ask_permission(i8* getelementptr inbounds ([15 x i8]* @.str1291070, i32 0, i32 0), i8* %112, i8* %113)
  %tobool145 = icmp ne i32 %call144, 0
  br i1 %tobool145, label %if.end147, label %if.then146

if.then146:                                       ; preds = %if.then143
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([31 x i8]* @.str1301071, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8]* @__func__.process_mux_open_fwd, i32 0, i32 0))
  %114 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %114, i32 -2147483646)
  %115 = load %struct.sshbuf** %r.addr, align 8
  %116 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %115, i32 %116)
  %117 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %117, i8* getelementptr inbounds ([18 x i8]* @.str961037, i32 0, i32 0))
  br label %out

if.end147:                                        ; preds = %if.then143
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %lor.lhs.false140
  %118 = load i32* %ftype, align 4
  %cmp149 = icmp eq i32 %118, 1
  br i1 %cmp149, label %if.then154, label %lor.lhs.false151

lor.lhs.false151:                                 ; preds = %if.end148
  %119 = load i32* %ftype, align 4
  %cmp152 = icmp eq i32 %119, 3
  br i1 %cmp152, label %if.then154, label %if.else159

if.then154:                                       ; preds = %lor.lhs.false151, %if.end148
  %call155 = call i32 @channel_setup_local_fwd_listener(%struct.Forward* %fwd, %struct.ForwardOptions* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6))
  %tobool156 = icmp ne i32 %call155, 0
  br i1 %tobool156, label %if.end158, label %if.then157

if.then157:                                       ; preds = %if.then154
  br label %fail

fail:                                             ; preds = %if.then164, %if.then157
  %120 = load i8** %fwd_desc, align 8
  call void (i8*, ...)* @logit(i8* getelementptr inbounds ([26 x i8]* @.str1311072, i32 0, i32 0), i8* %120)
  %121 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %121, i32 -2147483645)
  %122 = load %struct.sshbuf** %r.addr, align 8
  %123 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %122, i32 %123)
  %124 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %124, i8* getelementptr inbounds ([23 x i8]* @.str1321073, i32 0, i32 0))
  br label %out

if.end158:                                        ; preds = %if.then154
  call void @add_local_forward(%struct.Options* @options, %struct.Forward* %fwd)
  store i32 0, i32* %freefwd, align 4
  br label %if.end171

if.else159:                                       ; preds = %lor.lhs.false151
  %call160 = call i32 @channel_request_remote_forwarding(%struct.Forward* %fwd)
  %handle = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 7
  store i32 %call160, i32* %handle, align 4
  %handle161 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 7
  %125 = load i32* %handle161, align 4
  %cmp162 = icmp slt i32 %125, 0
  br i1 %cmp162, label %if.then164, label %if.end165

if.then164:                                       ; preds = %if.else159
  br label %fail

if.end165:                                        ; preds = %if.else159
  call void @add_remote_forward(%struct.Options* @options, %struct.Forward* %fwd)
  %call166 = call i8* @xcalloc(i64 1, i64 12)
  %126 = bitcast i8* %call166 to %struct.mux_channel_confirm_ctx*
  store %struct.mux_channel_confirm_ctx* %126, %struct.mux_channel_confirm_ctx** %fctx, align 8
  %127 = load %struct.Channel** %c.addr, align 8
  %self167 = getelementptr inbounds %struct.Channel* %127, i32 0, i32 1
  %128 = load i32* %self167, align 4
  %129 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %cid = getelementptr inbounds %struct.mux_channel_confirm_ctx* %129, i32 0, i32 0
  store i32 %128, i32* %cid, align 4
  %130 = load i32* %rid.addr, align 4
  %131 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %rid168 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %131, i32 0, i32 1
  store i32 %130, i32* %rid168, align 4
  %132 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %133 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %132, i32 1)
  %134 = extractvalue { i32, i1 } %133, 0
  %135 = extractvalue { i32, i1 } %133, 1
  %136 = xor i1 %135, true
  br i1 %136, label %cont170, label %trap169

trap169:                                          ; preds = %if.end165
  call void @llvm.trap() #3
  unreachable

cont170:                                          ; preds = %if.end165
  %137 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %fid = getelementptr inbounds %struct.mux_channel_confirm_ctx* %137, i32 0, i32 2
  store i32 %134, i32* %fid, align 4
  %138 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %139 = bitcast %struct.mux_channel_confirm_ctx* %138 to i8*
  call void @client_register_global_confirm(void (i32, i32, i8*)* @mux_confirm_remote_forward, i8* %139)
  store i32 0, i32* %freefwd, align 4
  %140 = load %struct.Channel** %c.addr, align 8
  %mux_pause = getelementptr inbounds %struct.Channel* %140, i32 0, i32 46
  store i32 1, i32* %mux_pause, align 4
  br label %out

if.end171:                                        ; preds = %if.end158
  %141 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %141, i32 -2147483647)
  %142 = load %struct.sshbuf** %r.addr, align 8
  %143 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %142, i32 %143)
  br label %out

out:                                              ; preds = %if.end171, %cont170, %fail, %if.then146, %if.end132, %exists, %cont22
  %144 = load i8** %fwd_desc, align 8
  call void @free(i8* %144) #9
  %145 = load i32* %freefwd, align 4
  %tobool172 = icmp ne i32 %145, 0
  br i1 %tobool172, label %if.then173, label %if.end178

if.then173:                                       ; preds = %out
  %listen_host174 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 0
  %146 = load i8** %listen_host174, align 8
  call void @free(i8* %146) #9
  %listen_path175 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 2
  %147 = load i8** %listen_path175, align 8
  call void @free(i8* %147) #9
  %connect_host176 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 3
  %148 = load i8** %connect_host176, align 8
  call void @free(i8* %148) #9
  %connect_path177 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 5
  %149 = load i8** %connect_path177, align 8
  call void @free(i8* %149) #9
  br label %if.end178

if.end178:                                        ; preds = %if.then173, %out
  %150 = load i32* %ret, align 4
  store i32 %150, i32* %retval
  br label %return

return:                                           ; preds = %if.end178, %invalid
  %151 = load i32* %retval
  ret i32 %151
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_close_fwd(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  %fwd = alloca %struct.Forward, align 8
  %found_fwd = alloca %struct.Forward*, align 8
  %fwd_desc = alloca i8*, align 8
  %error_reason = alloca i8*, align 8
  %listen_addr = alloca i8*, align 8
  %connect_addr = alloca i8*, align 8
  %ftype = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %lport = alloca i32, align 4
  %cport = alloca i32, align 4
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  store i8* null, i8** %fwd_desc, align 8
  store i8* null, i8** %error_reason, align 8
  store i8* null, i8** %listen_addr, align 8
  store i8* null, i8** %connect_addr, align 8
  store i32 0, i32* %ret, align 4
  %0 = bitcast %struct.Forward* %fwd to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 56, i32 8, i1 false)
  %1 = load %struct.sshbuf** %m.addr, align 8
  %call = call i32 @buffer_get_int_ret(i32* %ftype, %struct.sshbuf* %1)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sshbuf** %m.addr, align 8
  %call1 = call i8* @buffer_get_string_ret(%struct.sshbuf* %2, i32* null)
  store i8* %call1, i8** %listen_addr, align 8
  %cmp2 = icmp eq i8* %call1, null
  br i1 %cmp2, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load %struct.sshbuf** %m.addr, align 8
  %call4 = call i32 @buffer_get_int_ret(i32* %lport, %struct.sshbuf* %3)
  %cmp5 = icmp ne i32 %call4, 0
  br i1 %cmp5, label %if.then, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %4 = load %struct.sshbuf** %m.addr, align 8
  %call7 = call i8* @buffer_get_string_ret(%struct.sshbuf* %4, i32* null)
  store i8* %call7, i8** %connect_addr, align 8
  %cmp8 = icmp eq i8* %call7, null
  br i1 %cmp8, label %if.then, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %5 = load %struct.sshbuf** %m.addr, align 8
  %call10 = call i32 @buffer_get_int_ret(i32* %cport, %struct.sshbuf* %5)
  %cmp11 = icmp ne i32 %call10, 0
  br i1 %cmp11, label %if.then, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %6 = load i32* %lport, align 4
  %7 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %8 = extractvalue { i32, i1 } %7, 0
  %9 = extractvalue { i32, i1 } %7, 1
  %10 = xor i1 %9, true
  br i1 %10, label %cont, label %trap

trap:                                             ; preds = %lor.lhs.false12
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %lor.lhs.false12
  %cmp13 = icmp ne i32 %6, %8
  br i1 %cmp13, label %land.lhs.true, label %lor.lhs.false15

land.lhs.true:                                    ; preds = %cont
  %11 = load i32* %lport, align 4
  %cmp14 = icmp ugt i32 %11, 65535
  br i1 %cmp14, label %if.then, label %lor.lhs.false15

lor.lhs.false15:                                  ; preds = %land.lhs.true, %cont
  %12 = load i32* %cport, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont17, label %trap16

trap16:                                           ; preds = %lor.lhs.false15
  call void @llvm.trap() #3
  unreachable

cont17:                                           ; preds = %lor.lhs.false15
  %cmp18 = icmp ne i32 %12, %14
  br i1 %cmp18, label %land.lhs.true19, label %if.end

land.lhs.true19:                                  ; preds = %cont17
  %17 = load i32* %cport, align 4
  %cmp20 = icmp ugt i32 %17, 65535
  br i1 %cmp20, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true19, %land.lhs.true, %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str871028, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_close_fwd, i32 0, i32 0))
  %18 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont22, label %trap21

trap21:                                           ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %if.then
  store i32 %19, i32* %ret, align 4
  br label %out

if.end:                                           ; preds = %land.lhs.true19, %cont17
  %22 = load i8** %listen_addr, align 8
  %23 = load i8* %22, align 1
  %conv = sext i8 %23 to i32
  %cmp23 = icmp eq i32 %conv, 0
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.end
  %24 = load i8** %listen_addr, align 8
  call void @free(i8* %24) #9
  store i8* null, i8** %listen_addr, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end
  %25 = load i8** %connect_addr, align 8
  %26 = load i8* %25, align 1
  %conv27 = sext i8 %26 to i32
  %cmp28 = icmp eq i32 %conv27, 0
  br i1 %cmp28, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.end26
  %27 = load i8** %connect_addr, align 8
  call void @free(i8* %27) #9
  store i8* null, i8** %connect_addr, align 8
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.end26
  %28 = bitcast %struct.Forward* %fwd to i8*
  call void @llvm.memset.p0i8.i64(i8* %28, i8 0, i64 56, i32 8, i1 false)
  %29 = load i32* %lport, align 4
  %listen_port = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  store i32 %29, i32* %listen_port, align 4
  %listen_port32 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 1
  %30 = load i32* %listen_port32, align 4
  %31 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %32 = extractvalue { i32, i1 } %31, 0
  %33 = extractvalue { i32, i1 } %31, 1
  %34 = xor i1 %33, true
  br i1 %34, label %cont34, label %trap33

trap33:                                           ; preds = %if.end31
  call void @llvm.trap() #3
  unreachable

cont34:                                           ; preds = %if.end31
  %cmp35 = icmp eq i32 %30, %32
  br i1 %cmp35, label %if.then37, label %if.else

if.then37:                                        ; preds = %cont34
  %35 = load i8** %listen_addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 2
  store i8* %35, i8** %listen_path, align 8
  br label %if.end38

if.else:                                          ; preds = %cont34
  %36 = load i8** %listen_addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 0
  store i8* %36, i8** %listen_host, align 8
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then37
  %37 = load i32* %cport, align 4
  %connect_port = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  store i32 %37, i32* %connect_port, align 4
  %connect_port39 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %38 = load i32* %connect_port39, align 4
  %39 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 2)
  %40 = extractvalue { i32, i1 } %39, 0
  %41 = extractvalue { i32, i1 } %39, 1
  %42 = xor i1 %41, true
  br i1 %42, label %cont41, label %trap40

trap40:                                           ; preds = %if.end38
  call void @llvm.trap() #3
  unreachable

cont41:                                           ; preds = %if.end38
  %cmp42 = icmp eq i32 %38, %40
  br i1 %cmp42, label %if.then44, label %if.else45

if.then44:                                        ; preds = %cont41
  %43 = load i8** %connect_addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 5
  store i8* %43, i8** %connect_path, align 8
  br label %if.end46

if.else45:                                        ; preds = %cont41
  %44 = load i8** %connect_addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 3
  store i8* %44, i8** %connect_host, align 8
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  %45 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %45, i32 0, i32 1
  %46 = load i32* %self, align 4
  %47 = load i32* %ftype, align 4
  %call47 = call i8* @format_forward(i32 %47, %struct.Forward* %fwd)
  store i8* %call47, i8** %fwd_desc, align 8
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([34 x i8]* @.str1161057, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_close_fwd, i32 0, i32 0), i32 %46, i8* %call47)
  store %struct.Forward* null, %struct.Forward** %found_fwd, align 8
  %48 = load i32* %ftype, align 4
  switch i32 %48, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb57
  ]

sw.bb:                                            ; preds = %if.end46, %if.end46
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont56, %sw.bb
  %49 = load i32* %i, align 4
  %50 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 61), align 4
  %cmp48 = icmp slt i32 %49, %50
  br i1 %cmp48, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %51 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %52 = load i32* %i, align 4
  %idx.ext = sext i32 %52 to i64
  %add.ptr = getelementptr inbounds %struct.Forward* %51, i64 %idx.ext
  %call50 = call i32 @compare_forward(%struct.Forward* %fwd, %struct.Forward* %add.ptr)
  %tobool = icmp ne i32 %call50, 0
  br i1 %tobool, label %if.then51, label %if.end54

if.then51:                                        ; preds = %for.body
  %53 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 62), align 8
  %54 = load i32* %i, align 4
  %idx.ext52 = sext i32 %54 to i64
  %add.ptr53 = getelementptr inbounds %struct.Forward* %53, i64 %idx.ext52
  store %struct.Forward* %add.ptr53, %struct.Forward** %found_fwd, align 8
  br label %for.end

if.end54:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end54
  %55 = load i32* %i, align 4
  %56 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 1)
  %57 = extractvalue { i32, i1 } %56, 0
  %58 = extractvalue { i32, i1 } %56, 1
  %59 = xor i1 %58, true
  br i1 %59, label %cont56, label %trap55

trap55:                                           ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont56:                                           ; preds = %for.inc
  store i32 %57, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then51, %for.cond
  br label %sw.epilog

sw.bb57:                                          ; preds = %if.end46
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %cont72, %sw.bb57
  %60 = load i32* %i, align 4
  %61 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp59 = icmp slt i32 %60, %61
  br i1 %cmp59, label %for.body61, label %for.end73

for.body61:                                       ; preds = %for.cond58
  %62 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %63 = load i32* %i, align 4
  %idx.ext62 = sext i32 %63 to i64
  %add.ptr63 = getelementptr inbounds %struct.Forward* %62, i64 %idx.ext62
  %call64 = call i32 @compare_forward(%struct.Forward* %fwd, %struct.Forward* %add.ptr63)
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %if.then66, label %if.end69

if.then66:                                        ; preds = %for.body61
  %64 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %65 = load i32* %i, align 4
  %idx.ext67 = sext i32 %65 to i64
  %add.ptr68 = getelementptr inbounds %struct.Forward* %64, i64 %idx.ext67
  store %struct.Forward* %add.ptr68, %struct.Forward** %found_fwd, align 8
  br label %for.end73

if.end69:                                         ; preds = %for.body61
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %66 = load i32* %i, align 4
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 1)
  %68 = extractvalue { i32, i1 } %67, 0
  %69 = extractvalue { i32, i1 } %67, 1
  %70 = xor i1 %69, true
  br i1 %70, label %cont72, label %trap71

trap71:                                           ; preds = %for.inc70
  call void @llvm.trap() #3
  unreachable

cont72:                                           ; preds = %for.inc70
  store i32 %68, i32* %i, align 4
  br label %for.cond58

for.end73:                                        ; preds = %if.then66, %for.cond58
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end73, %for.end, %if.end46
  %71 = load %struct.Forward** %found_fwd, align 8
  %cmp74 = icmp eq %struct.Forward* %71, null
  br i1 %cmp74, label %if.then76, label %if.else77

if.then76:                                        ; preds = %sw.epilog
  store i8* getelementptr inbounds ([19 x i8]* @.str1171058, i32 0, i32 0), i8** %error_reason, align 8
  br label %if.end98

if.else77:                                        ; preds = %sw.epilog
  %72 = load i32* %ftype, align 4
  %cmp78 = icmp eq i32 %72, 2
  br i1 %cmp78, label %if.then80, label %if.else88

if.then80:                                        ; preds = %if.else77
  %73 = load %struct.Forward** %found_fwd, align 8
  %call81 = call i32 @channel_request_rforward_cancel(%struct.Forward* %73)
  %74 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %75 = extractvalue { i32, i1 } %74, 0
  %76 = extractvalue { i32, i1 } %74, 1
  %77 = xor i1 %76, true
  br i1 %77, label %cont83, label %trap82

trap82:                                           ; preds = %if.then80
  call void @llvm.trap() #3
  unreachable

cont83:                                           ; preds = %if.then80
  %cmp84 = icmp eq i32 %call81, %75
  br i1 %cmp84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %cont83
  store i8* getelementptr inbounds ([28 x i8]* @.str1181059, i32 0, i32 0), i8** %error_reason, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.then86, %cont83
  br label %if.end97

if.else88:                                        ; preds = %if.else77
  %connect_port89 = getelementptr inbounds %struct.Forward* %fwd, i32 0, i32 4
  %78 = load i32* %connect_port89, align 4
  %call90 = call i32 @channel_cancel_lport_listener(%struct.Forward* %fwd, i32 %78, %struct.ForwardOptions* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6))
  %79 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %80 = extractvalue { i32, i1 } %79, 0
  %81 = extractvalue { i32, i1 } %79, 1
  %82 = xor i1 %81, true
  br i1 %82, label %cont92, label %trap91

trap91:                                           ; preds = %if.else88
  call void @llvm.trap() #3
  unreachable

cont92:                                           ; preds = %if.else88
  %cmp93 = icmp eq i32 %call90, %80
  br i1 %cmp93, label %if.then95, label %if.end96

if.then95:                                        ; preds = %cont92
  store i8* getelementptr inbounds ([15 x i8]* @.str1191060, i32 0, i32 0), i8** %error_reason, align 8
  br label %if.end96

if.end96:                                         ; preds = %if.then95, %cont92
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end87
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then76
  %83 = load i8** %error_reason, align 8
  %cmp99 = icmp eq i8* %83, null
  br i1 %cmp99, label %if.then101, label %if.else112

if.then101:                                       ; preds = %if.end98
  %84 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %84, i32 -2147483647)
  %85 = load %struct.sshbuf** %r.addr, align 8
  %86 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %85, i32 %86)
  %87 = load %struct.Forward** %found_fwd, align 8
  %listen_host102 = getelementptr inbounds %struct.Forward* %87, i32 0, i32 0
  %88 = load i8** %listen_host102, align 8
  call void @free(i8* %88) #9
  %89 = load %struct.Forward** %found_fwd, align 8
  %listen_path103 = getelementptr inbounds %struct.Forward* %89, i32 0, i32 2
  %90 = load i8** %listen_path103, align 8
  call void @free(i8* %90) #9
  %91 = load %struct.Forward** %found_fwd, align 8
  %connect_host104 = getelementptr inbounds %struct.Forward* %91, i32 0, i32 3
  %92 = load i8** %connect_host104, align 8
  call void @free(i8* %92) #9
  %93 = load %struct.Forward** %found_fwd, align 8
  %connect_path105 = getelementptr inbounds %struct.Forward* %93, i32 0, i32 5
  %94 = load i8** %connect_path105, align 8
  call void @free(i8* %94) #9
  %95 = load %struct.Forward** %found_fwd, align 8
  %connect_host106 = getelementptr inbounds %struct.Forward* %95, i32 0, i32 3
  store i8* null, i8** %connect_host106, align 8
  %96 = load %struct.Forward** %found_fwd, align 8
  %listen_host107 = getelementptr inbounds %struct.Forward* %96, i32 0, i32 0
  store i8* null, i8** %listen_host107, align 8
  %97 = load %struct.Forward** %found_fwd, align 8
  %connect_path108 = getelementptr inbounds %struct.Forward* %97, i32 0, i32 5
  store i8* null, i8** %connect_path108, align 8
  %98 = load %struct.Forward** %found_fwd, align 8
  %listen_path109 = getelementptr inbounds %struct.Forward* %98, i32 0, i32 2
  store i8* null, i8** %listen_path109, align 8
  %99 = load %struct.Forward** %found_fwd, align 8
  %connect_port110 = getelementptr inbounds %struct.Forward* %99, i32 0, i32 4
  store i32 0, i32* %connect_port110, align 4
  %100 = load %struct.Forward** %found_fwd, align 8
  %listen_port111 = getelementptr inbounds %struct.Forward* %100, i32 0, i32 1
  store i32 0, i32* %listen_port111, align 4
  br label %if.end113

if.else112:                                       ; preds = %if.end98
  %101 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %101, i32 -2147483645)
  %102 = load %struct.sshbuf** %r.addr, align 8
  %103 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %102, i32 %103)
  %104 = load %struct.sshbuf** %r.addr, align 8
  %105 = load i8** %error_reason, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %104, i8* %105)
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.then101
  br label %out

out:                                              ; preds = %if.end113, %cont22
  %106 = load i8** %fwd_desc, align 8
  call void @free(i8* %106) #9
  %107 = load i8** %listen_addr, align 8
  call void @free(i8* %107) #9
  %108 = load i8** %connect_addr, align 8
  call void @free(i8* %108) #9
  %109 = load i32* %ret, align 4
  ret i32 %109
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_stdio_fwd(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  %nc = alloca %struct.Channel*, align 8
  %reserved = alloca i8*, align 8
  %chost = alloca i8*, align 8
  %cport = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %new_fd = alloca [2 x i32], align 4
  %cctx = alloca %struct.mux_stdio_confirm_ctx*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  store i8* null, i8** %reserved, align 8
  store i8* null, i8** %chost, align 8
  %0 = load %struct.sshbuf** %m.addr, align 8
  %call = call i8* @buffer_get_string_ret(%struct.sshbuf* %0, i32* null)
  store i8* %call, i8** %reserved, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.sshbuf** %m.addr, align 8
  %call1 = call i8* @buffer_get_string_ret(%struct.sshbuf* %1, i32* null)
  store i8* %call1, i8** %chost, align 8
  %cmp2 = icmp eq i8* %call1, null
  br i1 %cmp2, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load %struct.sshbuf** %m.addr, align 8
  %call4 = call i32 @buffer_get_int_ret(i32* %cport, %struct.sshbuf* %2)
  %cmp5 = icmp ne i32 %call4, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %3 = load i8** %reserved, align 8
  call void @free(i8* %3) #9
  %4 = load i8** %chost, align 8
  call void @free(i8* %4) #9
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([22 x i8]* @.str871028, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0))
  %5 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %6 = extractvalue { i32, i1 } %5, 0
  %7 = extractvalue { i32, i1 } %5, 1
  %8 = xor i1 %7, true
  br i1 %8, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %6, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false3
  %9 = load i8** %reserved, align 8
  call void @free(i8* %9) #9
  %10 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %10, i32 0, i32 1
  %11 = load i32* %self, align 4
  %12 = load i8** %chost, align 8
  %13 = load i32* %cport, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([43 x i8]* @.str971038, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0), i32 %11, i8* %12, i32 %13)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc21, %if.end
  %14 = load i32* %i, align 4
  %cmp6 = icmp ult i32 %14, 2
  br i1 %cmp6, label %for.body, label %for.end23

for.body:                                         ; preds = %for.cond
  %15 = load %struct.Channel** %c.addr, align 8
  %sock = getelementptr inbounds %struct.Channel* %15, i32 0, i32 9
  %16 = load i32* %sock, align 4
  %call7 = call i32 @mm_receive_fd(i32 %16)
  %17 = load i32* %i, align 4
  %idxprom = zext i32 %17 to i64
  %arrayidx = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 %idxprom
  store i32 %call7, i32* %arrayidx, align 4
  %18 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %19 = extractvalue { i32, i1 } %18, 0
  %20 = extractvalue { i32, i1 } %18, 1
  %21 = xor i1 %20, true
  br i1 %21, label %cont9, label %trap8

trap8:                                            ; preds = %for.body
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %for.body
  %cmp10 = icmp eq i32 %call7, %19
  br i1 %cmp10, label %if.then11, label %if.end20

if.then11:                                        ; preds = %cont9
  %22 = load i32* %i, align 4
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([39 x i8]* @.str981039, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0), i32 %22)
  store i32 0, i32* %j, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc, %if.then11
  %23 = load i32* %j, align 4
  %24 = load i32* %i, align 4
  %cmp13 = icmp ult i32 %23, %24
  br i1 %cmp13, label %for.body14, label %for.end

for.body14:                                       ; preds = %for.cond12
  %25 = load i32* %j, align 4
  %idxprom15 = zext i32 %25 to i64
  %arrayidx16 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 %idxprom15
  %26 = load i32* %arrayidx16, align 4
  %call17 = call i32 @close(i32 %26)
  br label %for.inc

for.inc:                                          ; preds = %for.body14
  %27 = load i32* %j, align 4
  %inc = add i32 %27, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond12

for.end:                                          ; preds = %for.cond12
  %28 = load i8** %chost, align 8
  call void @free(i8* %28) #9
  %29 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %29, i32 -2147483645)
  %30 = load %struct.sshbuf** %r.addr, align 8
  %31 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %30, i32 %31)
  %32 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %32, i8* getelementptr inbounds ([33 x i8]* @.str991040, i32 0, i32 0))
  %33 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %34 = extractvalue { i32, i1 } %33, 0
  %35 = extractvalue { i32, i1 } %33, 1
  %36 = xor i1 %35, true
  br i1 %36, label %cont19, label %trap18

trap18:                                           ; preds = %for.end
  call void @llvm.trap() #3
  unreachable

cont19:                                           ; preds = %for.end
  store i32 %34, i32* %retval
  br label %return

if.end20:                                         ; preds = %cont9
  br label %for.inc21

for.inc21:                                        ; preds = %if.end20
  %37 = load i32* %i, align 4
  %inc22 = add i32 %37, 1
  store i32 %inc22, i32* %i, align 4
  br label %for.cond

for.end23:                                        ; preds = %for.cond
  %arrayidx24 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 0
  %38 = load i32* %arrayidx24, align 4
  %arrayidx25 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 1
  %39 = load i32* %arrayidx25, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([32 x i8]* @.str1001041, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0), i32 %38, i32 %39)
  %40 = load %struct.Channel** %c.addr, align 8
  %remote_id = getelementptr inbounds %struct.Channel* %40, i32 0, i32 2
  %41 = load i32* %remote_id, align 4
  %42 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %43 = extractvalue { i32, i1 } %42, 0
  %44 = extractvalue { i32, i1 } %42, 1
  %45 = xor i1 %44, true
  br i1 %45, label %cont27, label %trap26

trap26:                                           ; preds = %for.end23
  call void @llvm.trap() #3
  unreachable

cont27:                                           ; preds = %for.end23
  %cmp28 = icmp ne i32 %41, %43
  br i1 %cmp28, label %if.then29, label %if.end34

if.then29:                                        ; preds = %cont27
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([25 x i8]* @.str1011042, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0))
  %46 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %46, i32 -2147483645)
  %47 = load %struct.sshbuf** %r.addr, align 8
  %48 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %47, i32 %48)
  %49 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %49, i8* getelementptr inbounds ([32 x i8]* @.str1021043, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then40, %if.then29
  %arrayidx30 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 0
  %50 = load i32* %arrayidx30, align 4
  %call31 = call i32 @close(i32 %50)
  %arrayidx32 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 1
  %51 = load i32* %arrayidx32, align 4
  %call33 = call i32 @close(i32 %51)
  %52 = load i8** %chost, align 8
  call void @free(i8* %52) #9
  store i32 0, i32* %retval
  br label %return

if.end34:                                         ; preds = %cont27
  %53 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp35 = icmp eq i32 %53, 3
  br i1 %cmp35, label %if.then38, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.end34
  %54 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp37 = icmp eq i32 %54, 4
  br i1 %cmp37, label %if.then38, label %if.end42

if.then38:                                        ; preds = %lor.lhs.false36, %if.end34
  %55 = load i8** %chost, align 8
  %56 = load i32* %cport, align 4
  %call39 = call i32 (i8*, ...)* @ask_permission(i8* getelementptr inbounds ([25 x i8]* @.str1031044, i32 0, i32 0), i8* %55, i32 %56)
  %tobool = icmp ne i32 %call39, 0
  br i1 %tobool, label %if.end41, label %if.then40

if.then40:                                        ; preds = %if.then38
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([30 x i8]* @.str1041045, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0))
  %57 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %57, i32 -2147483646)
  %58 = load %struct.sshbuf** %r.addr, align 8
  %59 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %58, i32 %59)
  %60 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %60, i8* getelementptr inbounds ([18 x i8]* @.str961037, i32 0, i32 0))
  br label %cleanup

if.end41:                                         ; preds = %if.then38
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %lor.lhs.false36
  %arrayidx43 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 0
  %61 = load i32* %arrayidx43, align 4
  %call44 = call i32 @isatty(i32 %61) #9
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.end49, label %if.then46

if.then46:                                        ; preds = %if.end42
  %arrayidx47 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 0
  %62 = load i32* %arrayidx47, align 4
  %call48 = call i32 @set_nonblock(i32 %62)
  br label %if.end49

if.end49:                                         ; preds = %if.then46, %if.end42
  %arrayidx50 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 1
  %63 = load i32* %arrayidx50, align 4
  %call51 = call i32 @isatty(i32 %63) #9
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.end56, label %if.then53

if.then53:                                        ; preds = %if.end49
  %arrayidx54 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 1
  %64 = load i32* %arrayidx54, align 4
  %call55 = call i32 @set_nonblock(i32 %64)
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end49
  %65 = load i8** %chost, align 8
  %66 = load i32* %cport, align 4
  %conv = trunc i32 %66 to i16
  %arrayidx57 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 0
  %67 = load i32* %arrayidx57, align 4
  %arrayidx58 = getelementptr inbounds [2 x i32]* %new_fd, i32 0, i64 1
  %68 = load i32* %arrayidx58, align 4
  %call59 = call %struct.Channel* @channel_connect_stdio_fwd(i8* %65, i16 zeroext %conv, i32 %67, i32 %68)
  store %struct.Channel* %call59, %struct.Channel** %nc, align 8
  %69 = load %struct.Channel** %c.addr, align 8
  %self60 = getelementptr inbounds %struct.Channel* %69, i32 0, i32 1
  %70 = load i32* %self60, align 4
  %71 = load %struct.Channel** %nc, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %71, i32 0, i32 10
  store i32 %70, i32* %ctl_chan, align 4
  %72 = load %struct.Channel** %nc, align 8
  %self61 = getelementptr inbounds %struct.Channel* %72, i32 0, i32 1
  %73 = load i32* %self61, align 4
  %74 = load %struct.Channel** %c.addr, align 8
  %remote_id62 = getelementptr inbounds %struct.Channel* %74, i32 0, i32 2
  store i32 %73, i32* %remote_id62, align 4
  %75 = load %struct.Channel** %nc, align 8
  %self63 = getelementptr inbounds %struct.Channel* %75, i32 0, i32 1
  %76 = load i32* %self63, align 4
  %77 = load %struct.Channel** %nc, align 8
  %ctl_chan64 = getelementptr inbounds %struct.Channel* %77, i32 0, i32 10
  %78 = load i32* %ctl_chan64, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([49 x i8]* @.str1051046, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @__func__.process_mux_stdio_fwd, i32 0, i32 0), i32 %76, i32 %78)
  %79 = load %struct.Channel** %nc, align 8
  %self65 = getelementptr inbounds %struct.Channel* %79, i32 0, i32 1
  %80 = load i32* %self65, align 4
  call void @channel_register_cleanup(i32 %80, void (i32, i8*)* @mux_master_session_cleanup_cb, i32 1)
  %call66 = call i8* @xcalloc(i64 1, i64 4)
  %81 = bitcast i8* %call66 to %struct.mux_stdio_confirm_ctx*
  store %struct.mux_stdio_confirm_ctx* %81, %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %82 = load i32* %rid.addr, align 4
  %83 = load %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %rid67 = getelementptr inbounds %struct.mux_stdio_confirm_ctx* %83, i32 0, i32 0
  store i32 %82, i32* %rid67, align 4
  %84 = load %struct.Channel** %nc, align 8
  %self68 = getelementptr inbounds %struct.Channel* %84, i32 0, i32 1
  %85 = load i32* %self68, align 4
  %86 = load %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %87 = bitcast %struct.mux_stdio_confirm_ctx* %86 to i8*
  call void @channel_register_open_confirm(i32 %85, void (i32, i32, i8*)* @mux_stdio_confirm, i8* %87)
  %88 = load %struct.Channel** %c.addr, align 8
  %mux_pause = getelementptr inbounds %struct.Channel* %88, i32 0, i32 46
  store i32 1, i32* %mux_pause, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end56, %cleanup, %cont19, %cont
  %89 = load i32* %retval
  ret i32 %89
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_stop_listening(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %retval = alloca i32, align 4
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %0, i32 0, i32 1
  %1 = load i32* %self, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([31 x i8]* @.str931034, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.process_mux_stop_listening, i32 0, i32 0), i32 %1)
  %2 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp = icmp eq i32 %2, 3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 78), align 4
  %cmp1 = icmp eq i32 %3, 4
  br i1 %cmp1, label %if.then, label %if.end3

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8** @host, align 8
  %call = call i32 (i8*, ...)* @ask_permission(i8* getelementptr inbounds ([58 x i8]* @.str941035, i32 0, i32 0), i8* %4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([32 x i8]* @.str951036, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.process_mux_stop_listening, i32 0, i32 0))
  %5 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %5, i32 -2147483646)
  %6 = load %struct.sshbuf** %r.addr, align 8
  %7 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %6, i32 %7)
  %8 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %8, i8* getelementptr inbounds ([18 x i8]* @.str961037, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  br label %if.end3

if.end3:                                          ; preds = %if.end, %lor.lhs.false
  %9 = load %struct.Channel** @mux_listener_channel, align 8
  %cmp4 = icmp ne %struct.Channel* %9, null
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.Channel** @mux_listener_channel, align 8
  call void @channel_free(%struct.Channel* %10)
  call void @client_stop_mux()
  %11 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  call void @free(i8* %11) #9
  store i8* null, i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 77), align 8
  store %struct.Channel* null, %struct.Channel** @mux_listener_channel, align 8
  %12 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %13 = extractvalue { i32, i1 } %12, 0
  %14 = extractvalue { i32, i1 } %12, 1
  %15 = xor i1 %14, true
  br i1 %15, label %cont, label %trap

trap:                                             ; preds = %if.then5
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then5
  store i32 %13, i32* @muxserver_sock, align 4
  br label %if.end6

if.end6:                                          ; preds = %cont, %if.end3
  %16 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %16, i32 -2147483647)
  %17 = load %struct.sshbuf** %r.addr, align 8
  %18 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %17, i32 %18)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end6, %if.then2
  %19 = load i32* %retval
  ret i32 %19
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @process_mux_proxy(i32 %rid, %struct.Channel* %c, %struct.sshbuf* %m, %struct.sshbuf* %r) #0 {
entry:
  %rid.addr = alloca i32, align 4
  %c.addr = alloca %struct.Channel*, align 8
  %m.addr = alloca %struct.sshbuf*, align 8
  %r.addr = alloca %struct.sshbuf*, align 8
  store i32 %rid, i32* %rid.addr, align 4
  store %struct.Channel* %c, %struct.Channel** %c.addr, align 8
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  store %struct.sshbuf* %r, %struct.sshbuf** %r.addr, align 8
  %0 = load %struct.Channel** %c.addr, align 8
  %self = getelementptr inbounds %struct.Channel* %0, i32 0, i32 1
  %1 = load i32* %self, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([30 x i8]* @.str921033, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.process_mux_proxy, i32 0, i32 0), i32 %1)
  %2 = load %struct.Channel** %c.addr, align 8
  %mux_rcb = getelementptr inbounds %struct.Channel* %2, i32 0, i32 44
  store i32 (%struct.Channel*)* @channel_proxy_downstream, i32 (%struct.Channel*)** %mux_rcb, align 8
  %3 = load %struct.sshbuf** %r.addr, align 8
  call void @buffer_put_int(%struct.sshbuf* %3, i32 -2147483633)
  %4 = load %struct.sshbuf** %r.addr, align 8
  %5 = load i32* %rid.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %4, i32 %5)
  ret i32 0
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_master_control_cleanup_cb(i32 %cid, i8* %unused) #0 {
entry:
  %cid.addr = alloca i32, align 4
  %unused.addr = alloca i8*, align 8
  %sc = alloca %struct.Channel*, align 8
  %c = alloca %struct.Channel*, align 8
  store i32 %cid, i32* %cid.addr, align 4
  store i8* %unused, i8** %unused.addr, align 8
  %0 = load i32* %cid.addr, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %0)
  store %struct.Channel* %call, %struct.Channel** %c, align 8
  %1 = load i32* %cid.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([28 x i8]* @.str1131054, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_control_cleanup_cb, i32 0, i32 0), i32 %1)
  %2 = load %struct.Channel** %c, align 8
  %cmp = icmp eq %struct.Channel* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32* %cid.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str1141055, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_control_cleanup_cb, i32 0, i32 0), i32 %3) #11
  unreachable

if.end:                                           ; preds = %entry
  %4 = load %struct.Channel** %c, align 8
  %remote_id = getelementptr inbounds %struct.Channel* %4, i32 0, i32 2
  %5 = load i32* %remote_id, align 4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp1 = icmp ne i32 %5, %7
  br i1 %cmp1, label %if.then2, label %if.end26

if.then2:                                         ; preds = %cont
  %10 = load %struct.Channel** %c, align 8
  %remote_id3 = getelementptr inbounds %struct.Channel* %10, i32 0, i32 2
  %11 = load i32* %remote_id3, align 4
  %call4 = call %struct.Channel* @channel_by_id(i32 %11)
  store %struct.Channel* %call4, %struct.Channel** %sc, align 8
  %cmp5 = icmp eq %struct.Channel* %call4, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.then2
  %12 = load %struct.Channel** %c, align 8
  %self = getelementptr inbounds %struct.Channel* %12, i32 0, i32 1
  %13 = load i32* %self, align 4
  %14 = load %struct.Channel** %c, align 8
  %remote_id7 = getelementptr inbounds %struct.Channel* %14, i32 0, i32 2
  %15 = load i32* %remote_id7, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str1641105, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_control_cleanup_cb, i32 0, i32 0), i32 %13, i32 %15) #11
  unreachable

if.end8:                                          ; preds = %if.then2
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont10, label %trap9

trap9:                                            ; preds = %if.end8
  call void @llvm.trap() #3
  unreachable

cont10:                                           ; preds = %if.end8
  %20 = load %struct.Channel** %c, align 8
  %remote_id11 = getelementptr inbounds %struct.Channel* %20, i32 0, i32 2
  store i32 %17, i32* %remote_id11, align 4
  %21 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %22 = extractvalue { i32, i1 } %21, 0
  %23 = extractvalue { i32, i1 } %21, 1
  %24 = xor i1 %23, true
  br i1 %24, label %cont13, label %trap12

trap12:                                           ; preds = %cont10
  call void @llvm.trap() #3
  unreachable

cont13:                                           ; preds = %cont10
  %25 = load %struct.Channel** %sc, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %25, i32 0, i32 10
  store i32 %22, i32* %ctl_chan, align 4
  %26 = load %struct.Channel** %sc, align 8
  %type = getelementptr inbounds %struct.Channel* %26, i32 0, i32 0
  %27 = load i32* %type, align 4
  %cmp14 = icmp ne i32 %27, 4
  br i1 %cmp14, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %cont13
  %28 = load %struct.Channel** %sc, align 8
  %type15 = getelementptr inbounds %struct.Channel* %28, i32 0, i32 0
  %29 = load i32* %type15, align 4
  %cmp16 = icmp ne i32 %29, 3
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; preds = %land.lhs.true
  %30 = load %struct.Channel** %sc, align 8
  %self18 = getelementptr inbounds %struct.Channel* %30, i32 0, i32 1
  %31 = load i32* %self18, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([25 x i8]* @.str1651106, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_control_cleanup_cb, i32 0, i32 0), i32 %31)
  %32 = load %struct.Channel** %sc, align 8
  call void @chan_mark_dead(%struct.Channel* %32)
  br label %if.end25

if.else:                                          ; preds = %land.lhs.true, %cont13
  %33 = load %struct.Channel** %sc, align 8
  %istate = getelementptr inbounds %struct.Channel* %33, i32 0, i32 3
  %34 = load i32* %istate, align 4
  %cmp19 = icmp eq i32 %34, 0
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.else
  %35 = load %struct.Channel** %sc, align 8
  call void bitcast (void (%struct.Channel.80*)* @chan_read_failed to void (%struct.Channel*)*)(%struct.Channel* %35)
  br label %if.end21

if.end21:                                         ; preds = %if.then20, %if.else
  %36 = load %struct.Channel** %sc, align 8
  %ostate = getelementptr inbounds %struct.Channel* %36, i32 0, i32 4
  %37 = load i32* %ostate, align 4
  %cmp22 = icmp eq i32 %37, 0
  br i1 %cmp22, label %if.then23, label %if.end24

if.then23:                                        ; preds = %if.end21
  %38 = load %struct.Channel** %sc, align 8
  call void bitcast (void (%struct.Channel.80*)* @chan_write_failed to void (%struct.Channel*)*)(%struct.Channel* %38)
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end21
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then17
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %cont
  %39 = load %struct.Channel** %c, align 8
  %self27 = getelementptr inbounds %struct.Channel* %39, i32 0, i32 1
  %40 = load i32* %self27, align 4
  call void @channel_cancel_cleanup(i32 %40)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_write_packet(i32 %fd, %struct.sshbuf* %m) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m.addr = alloca %struct.sshbuf*, align 8
  %queue = alloca %struct.sshbuf, align 8
  %have = alloca i32, align 4
  %need = alloca i32, align 4
  %oerrno = alloca i32, align 4
  %len = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %pfd = alloca %struct.pollfd, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  %0 = load i32* %fd.addr, align 4
  %fd1 = getelementptr inbounds %struct.pollfd* %pfd, i32 0, i32 0
  store i32 %0, i32* %fd1, align 4
  %events = getelementptr inbounds %struct.pollfd* %pfd, i32 0, i32 1
  store i16 4, i16* %events, align 2
  call void @sshbuf_init(%struct.sshbuf* %queue)
  %1 = load %struct.sshbuf** %m.addr, align 8
  %call = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %1)
  %2 = load %struct.sshbuf** %m.addr, align 8
  %call2 = call i64 @sshbuf_len(%struct.sshbuf* %2)
  %conv = trunc i64 %call2 to i32
  call void @buffer_put_string(%struct.sshbuf* %queue, i8* %call, i32 %conv)
  %call3 = call i64 @sshbuf_len(%struct.sshbuf* %queue)
  %conv4 = trunc i64 %call3 to i32
  store i32 %conv4, i32* %need, align 4
  %call5 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %queue)
  store i8* %call5, i8** %ptr, align 8
  store i32 0, i32* %have, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end30, %sw.bb18, %entry
  %3 = load i32* %have, align 4
  %4 = load i32* %need, align 4
  %cmp = icmp ult i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load volatile i32* @muxclient_terminate, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  call void @sshbuf_free(%struct.sshbuf* %queue)
  %call7 = call i32* @__errno_location() #2
  store i32 4, i32* %call7, align 4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  %10 = load i32* %fd.addr, align 4
  %11 = load i8** %ptr, align 8
  %12 = load i32* %have, align 4
  %idx.ext = zext i32 %12 to i64
  %add.ptr = getelementptr inbounds i8* %11, i64 %idx.ext
  %13 = load i32* %need, align 4
  %14 = load i32* %have, align 4
  %sub = sub i32 %13, %14
  %conv8 = zext i32 %sub to i64
  %call9 = call i64 @write(i32 %10, i8* %add.ptr, i64 %conv8)
  %conv10 = trunc i64 %call9 to i32
  store i32 %conv10, i32* %len, align 4
  %15 = load i32* %len, align 4
  %cmp11 = icmp slt i32 %15, 0
  br i1 %cmp11, label %if.then13, label %if.end23

if.then13:                                        ; preds = %if.end
  %call14 = call i32* @__errno_location() #2
  %16 = load i32* %call14, align 4
  switch i32 %16, label %sw.default [
    i32 11, label %sw.bb
    i32 4, label %sw.bb18
  ]

sw.bb:                                            ; preds = %if.then13
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont16, label %trap15

trap15:                                           ; preds = %sw.bb
  call void @llvm.trap() #3
  unreachable

cont16:                                           ; preds = %sw.bb
  %call17 = call i32 @poll(%struct.pollfd* %pfd, i64 1, i32 %18)
  br label %sw.bb18

sw.bb18:                                          ; preds = %cont16, %if.then13
  br label %for.cond

sw.default:                                       ; preds = %if.then13
  %call19 = call i32* @__errno_location() #2
  %21 = load i32* %call19, align 4
  store i32 %21, i32* %oerrno, align 4
  call void @sshbuf_free(%struct.sshbuf* %queue)
  %22 = load i32* %oerrno, align 4
  %call20 = call i32* @__errno_location() #2
  store i32 %22, i32* %call20, align 4
  %23 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %24 = extractvalue { i32, i1 } %23, 0
  %25 = extractvalue { i32, i1 } %23, 1
  %26 = xor i1 %25, true
  br i1 %26, label %cont22, label %trap21

trap21:                                           ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont22:                                           ; preds = %sw.default
  store i32 %24, i32* %retval
  br label %return

if.end23:                                         ; preds = %if.end
  %27 = load i32* %len, align 4
  %cmp24 = icmp eq i32 %27, 0
  br i1 %cmp24, label %if.then26, label %if.end30

if.then26:                                        ; preds = %if.end23
  call void @sshbuf_free(%struct.sshbuf* %queue)
  %call27 = call i32* @__errno_location() #2
  store i32 32, i32* %call27, align 4
  %28 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %29 = extractvalue { i32, i1 } %28, 0
  %30 = extractvalue { i32, i1 } %28, 1
  %31 = xor i1 %30, true
  br i1 %31, label %cont29, label %trap28

trap28:                                           ; preds = %if.then26
  call void @llvm.trap() #3
  unreachable

cont29:                                           ; preds = %if.then26
  store i32 %29, i32* %retval
  br label %return

if.end30:                                         ; preds = %if.end23
  %32 = load i32* %len, align 4
  %33 = load i32* %have, align 4
  %add = add i32 %33, %32
  store i32 %add, i32* %have, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @sshbuf_free(%struct.sshbuf* %queue)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %cont29, %cont22, %cont
  %34 = load i32* %retval
  ret i32 %34
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_read_packet(i32 %fd, %struct.sshbuf* %m) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %m.addr = alloca %struct.sshbuf*, align 8
  %queue = alloca %struct.sshbuf, align 8
  %need = alloca i32, align 4
  %have = alloca i32, align 4
  %ptr = alloca i8*, align 8
  %oerrno = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store %struct.sshbuf* %m, %struct.sshbuf** %m.addr, align 8
  call void @sshbuf_init(%struct.sshbuf* %queue)
  %0 = load i32* %fd.addr, align 4
  %call = call i32 @mux_client_read(i32 %0, %struct.sshbuf* %queue, i32 4)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #2
  %1 = load i32* %call1, align 4
  store i32 %1, i32* %oerrno, align 4
  %cmp2 = icmp eq i32 %1, 32
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %call4 = call i32* @__errno_location() #2
  %2 = load i32* %call4, align 4
  %call5 = call i8* @strerror(i32 %2) #9
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([27 x i8]* @.str28969, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.mux_client_read_packet, i32 0, i32 0), i8* %call5)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  call void @sshbuf_free(%struct.sshbuf* %queue)
  %3 = load i32* %oerrno, align 4
  %call6 = call i32* @__errno_location() #2
  store i32 %3, i32* %call6, align 4
  %4 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %5 = extractvalue { i32, i1 } %4, 0
  %6 = extractvalue { i32, i1 } %4, 1
  %7 = xor i1 %6, true
  br i1 %7, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  store i32 %5, i32* %retval
  br label %return

if.end7:                                          ; preds = %entry
  %call8 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %queue)
  %call9 = call i32 @get_u32(i8* %call8)
  store i32 %call9, i32* %need, align 4
  %8 = load i32* %fd.addr, align 4
  %9 = load i32* %need, align 4
  %call10 = call i32 @mux_client_read(i32 %8, %struct.sshbuf* %queue, i32 %9)
  %cmp11 = icmp ne i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %if.end19

if.then12:                                        ; preds = %if.end7
  %call13 = call i32* @__errno_location() #2
  %10 = load i32* %call13, align 4
  store i32 %10, i32* %oerrno, align 4
  %call14 = call i32* @__errno_location() #2
  %11 = load i32* %call14, align 4
  %call15 = call i8* @strerror(i32 %11) #9
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([25 x i8]* @.str29970, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @__func__.mux_client_read_packet, i32 0, i32 0), i8* %call15)
  call void @sshbuf_free(%struct.sshbuf* %queue)
  %12 = load i32* %oerrno, align 4
  %call16 = call i32* @__errno_location() #2
  store i32 %12, i32* %call16, align 4
  %13 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %14 = extractvalue { i32, i1 } %13, 0
  %15 = extractvalue { i32, i1 } %13, 1
  %16 = xor i1 %15, true
  br i1 %16, label %cont18, label %trap17

trap17:                                           ; preds = %if.then12
  call void @llvm.trap() #3
  unreachable

cont18:                                           ; preds = %if.then12
  store i32 %14, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end7
  %call20 = call i8* @buffer_get_string_ptr(%struct.sshbuf* %queue, i32* %have)
  store i8* %call20, i8** %ptr, align 8
  %17 = load %struct.sshbuf** %m.addr, align 8
  %18 = load i8** %ptr, align 8
  %19 = load i32* %have, align 4
  call void @buffer_append(%struct.sshbuf* %17, i8* %18, i32 %19)
  call void @sshbuf_free(%struct.sshbuf* %queue)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end19, %cont18, %cont
  %20 = load i32* %retval
  ret i32 %20
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_forward(i32 %fd, i32 %cancel_flag, i32 %ftype, %struct.Forward* %fwd) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %cancel_flag.addr = alloca i32, align 4
  %ftype.addr = alloca i32, align 4
  %fwd.addr = alloca %struct.Forward*, align 8
  %m = alloca %struct.sshbuf, align 8
  %e = alloca i8*, align 8
  %fwd_desc = alloca i8*, align 8
  %type = alloca i32, align 4
  %rid = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store i32 %cancel_flag, i32* %cancel_flag.addr, align 4
  store i32 %ftype, i32* %ftype.addr, align 4
  store %struct.Forward* %fwd, %struct.Forward** %fwd.addr, align 8
  %0 = load i32* %ftype.addr, align 4
  %1 = load %struct.Forward** %fwd.addr, align 8
  %call = call i8* @format_forward(i32 %0, %struct.Forward* %1)
  store i8* %call, i8** %fwd_desc, align 8
  %2 = load i32* %cancel_flag.addr, align 4
  %tobool = icmp ne i32 %2, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([16 x i8]* @.str661007, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str671008, i32 0, i32 0)
  %3 = load i8** %fwd_desc, align 8
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([17 x i8]* @.str651006, i32 0, i32 0), i8* %cond, i8* %3)
  %4 = load i8** %fwd_desc, align 8
  call void @free(i8* %4) #9
  call void @sshbuf_init(%struct.sshbuf* %m)
  %5 = load i32* %cancel_flag.addr, align 4
  %tobool1 = icmp ne i32 %5, 0
  %cond2 = select i1 %tobool1, i32 268435463, i32 268435462
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %cond2)
  %6 = load i32* @muxclient_request_id, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %6)
  %7 = load i32* %ftype.addr, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %7)
  %8 = load %struct.Forward** %fwd.addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %8, i32 0, i32 2
  %9 = load i8** %listen_path, align 8
  %cmp = icmp ne i8* %9, null
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %10 = load %struct.Forward** %fwd.addr, align 8
  %listen_path3 = getelementptr inbounds %struct.Forward* %10, i32 0, i32 2
  %11 = load i8** %listen_path3, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %11)
  br label %if.end

if.else:                                          ; preds = %entry
  %12 = load %struct.Forward** %fwd.addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %12, i32 0, i32 0
  %13 = load i8** %listen_host, align 8
  %cmp4 = icmp eq i8* %13, null
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else
  br label %cond.end12

cond.false:                                       ; preds = %if.else
  %14 = load %struct.Forward** %fwd.addr, align 8
  %listen_host5 = getelementptr inbounds %struct.Forward* %14, i32 0, i32 0
  %15 = load i8** %listen_host5, align 8
  %16 = load i8* %15, align 1
  %conv = sext i8 %16 to i32
  %cmp6 = icmp eq i32 %conv, 0
  br i1 %cmp6, label %cond.true8, label %cond.false9

cond.true8:                                       ; preds = %cond.false
  br label %cond.end

cond.false9:                                      ; preds = %cond.false
  %17 = load %struct.Forward** %fwd.addr, align 8
  %listen_host10 = getelementptr inbounds %struct.Forward* %17, i32 0, i32 0
  %18 = load i8** %listen_host10, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false9, %cond.true8
  %cond11 = phi i8* [ getelementptr inbounds ([2 x i8]* @.str681009, i32 0, i32 0), %cond.true8 ], [ %18, %cond.false9 ]
  br label %cond.end12

cond.end12:                                       ; preds = %cond.end, %cond.true
  %cond13 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str39980, i32 0, i32 0), %cond.true ], [ %cond11, %cond.end ]
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %cond13)
  br label %if.end

if.end:                                           ; preds = %cond.end12, %if.then
  %19 = load %struct.Forward** %fwd.addr, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %19, i32 0, i32 1
  %20 = load i32* %listen_port, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %20)
  %21 = load %struct.Forward** %fwd.addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %21, i32 0, i32 5
  %22 = load i8** %connect_path, align 8
  %cmp14 = icmp ne i8* %22, null
  br i1 %cmp14, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.end
  %23 = load %struct.Forward** %fwd.addr, align 8
  %connect_path17 = getelementptr inbounds %struct.Forward* %23, i32 0, i32 5
  %24 = load i8** %connect_path17, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %24)
  br label %if.end26

if.else18:                                        ; preds = %if.end
  %25 = load %struct.Forward** %fwd.addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %25, i32 0, i32 3
  %26 = load i8** %connect_host, align 8
  %cmp19 = icmp eq i8* %26, null
  br i1 %cmp19, label %cond.true21, label %cond.false22

cond.true21:                                      ; preds = %if.else18
  br label %cond.end24

cond.false22:                                     ; preds = %if.else18
  %27 = load %struct.Forward** %fwd.addr, align 8
  %connect_host23 = getelementptr inbounds %struct.Forward* %27, i32 0, i32 3
  %28 = load i8** %connect_host23, align 8
  br label %cond.end24

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str39980, i32 0, i32 0), %cond.true21 ], [ %28, %cond.false22 ]
  call void @buffer_put_cstring(%struct.sshbuf* %m, i8* %cond25)
  br label %if.end26

if.end26:                                         ; preds = %cond.end24, %if.then16
  %29 = load %struct.Forward** %fwd.addr, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %29, i32 0, i32 4
  %30 = load i32* %connect_port, align 4
  call void @buffer_put_int(%struct.sshbuf* %m, i32 %30)
  %31 = load i32* %fd.addr, align 4
  %call27 = call i32 @mux_client_write_packet(i32 %31, %struct.sshbuf* %m)
  %cmp28 = icmp ne i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.end26
  %call31 = call i32* @__errno_location() #2
  %32 = load i32* %call31, align 4
  %call32 = call i8* @strerror(i32 %32) #9
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([21 x i8]* @.str24965, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_client_forward, i32 0, i32 0), i8* %call32) #11
  unreachable

if.end33:                                         ; preds = %if.end26
  call void @sshbuf_reset(%struct.sshbuf* %m)
  %33 = load i32* %fd.addr, align 4
  %call34 = call i32 @mux_client_read_packet(i32 %33, %struct.sshbuf* %m)
  %cmp35 = icmp ne i32 %call34, 0
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end33
  call void @sshbuf_free(%struct.sshbuf* %m)
  %34 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %35 = extractvalue { i32, i1 } %34, 0
  %36 = extractvalue { i32, i1 } %34, 1
  %37 = xor i1 %36, true
  br i1 %37, label %cont, label %trap

trap:                                             ; preds = %if.then37
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then37
  store i32 %35, i32* %retval
  br label %return

if.end38:                                         ; preds = %if.end33
  %call39 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call39, i32* %type, align 4
  %call40 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  store i32 %call40, i32* %rid, align 4
  %38 = load i32* @muxclient_request_id, align 4
  %cmp41 = icmp ne i32 %call40, %38
  br i1 %cmp41, label %if.then43, label %if.end44

if.then43:                                        ; preds = %if.end38
  %39 = load i32* @muxclient_request_id, align 4
  %40 = load i32* %rid, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([46 x i8]* @.str26967, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_client_forward, i32 0, i32 0), i32 %39, i32 %40) #11
  unreachable

if.end44:                                         ; preds = %if.end38
  %41 = load i32* %type, align 4
  switch i32 %41, label %sw.default [
    i32 -2147483647, label %sw.bb
    i32 -2147483641, label %sw.bb45
    i32 -2147483646, label %sw.bb65
    i32 -2147483645, label %sw.bb69
  ]

sw.bb:                                            ; preds = %if.end44
  br label %sw.epilog

sw.bb45:                                          ; preds = %if.end44
  %42 = load i32* %cancel_flag.addr, align 4
  %tobool46 = icmp ne i32 %42, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %sw.bb45
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([37 x i8]* @.str691010, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_client_forward, i32 0, i32 0)) #11
  unreachable

if.end48:                                         ; preds = %sw.bb45
  %call49 = call i32 @buffer_get_int(%struct.sshbuf* %m)
  %43 = load %struct.Forward** %fwd.addr, align 8
  %allocated_port = getelementptr inbounds %struct.Forward* %43, i32 0, i32 6
  store i32 %call49, i32* %allocated_port, align 4
  %44 = load %struct.Forward** %fwd.addr, align 8
  %allocated_port50 = getelementptr inbounds %struct.Forward* %44, i32 0, i32 6
  %45 = load i32* %allocated_port50, align 4
  %46 = load %struct.Forward** %fwd.addr, align 8
  %connect_host51 = getelementptr inbounds %struct.Forward* %46, i32 0, i32 3
  %47 = load i8** %connect_host51, align 8
  %tobool52 = icmp ne i8* %47, null
  br i1 %tobool52, label %cond.true53, label %cond.false55

cond.true53:                                      ; preds = %if.end48
  %48 = load %struct.Forward** %fwd.addr, align 8
  %connect_host54 = getelementptr inbounds %struct.Forward* %48, i32 0, i32 3
  %49 = load i8** %connect_host54, align 8
  br label %cond.end56

cond.false55:                                     ; preds = %if.end48
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true53
  %cond57 = phi i8* [ %49, %cond.true53 ], [ getelementptr inbounds ([1 x i8]* @.str39980, i32 0, i32 0), %cond.false55 ]
  %50 = load %struct.Forward** %fwd.addr, align 8
  %connect_port58 = getelementptr inbounds %struct.Forward* %50, i32 0, i32 4
  %51 = load i32* %connect_port58, align 4
  call void (i8*, ...)* @verbose(i8* getelementptr inbounds ([46 x i8]* @.str701011, i32 0, i32 0), i32 %45, i8* %cond57, i32 %51)
  %52 = load i32* @muxclient_command, align 4
  %cmp59 = icmp eq i32 %52, 5
  br i1 %cmp59, label %if.then61, label %if.end64

if.then61:                                        ; preds = %cond.end56
  %53 = load %struct._IO_FILE** @stdout, align 8
  %54 = load %struct.Forward** %fwd.addr, align 8
  %allocated_port62 = getelementptr inbounds %struct.Forward* %54, i32 0, i32 6
  %55 = load i32* %allocated_port62, align 4
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([4 x i8]* @.str711012, i32 0, i32 0), i32 %55)
  br label %if.end64

if.end64:                                         ; preds = %if.then61, %cond.end56
  br label %sw.epilog

sw.bb65:                                          ; preds = %if.end44
  %call66 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call66, i8** %e, align 8
  call void @sshbuf_free(%struct.sshbuf* %m)
  %56 = load i8** %e, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([38 x i8]* @.str721013, i32 0, i32 0), i8* %56)
  %57 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %58 = extractvalue { i32, i1 } %57, 0
  %59 = extractvalue { i32, i1 } %57, 1
  %60 = xor i1 %59, true
  br i1 %60, label %cont68, label %trap67

trap67:                                           ; preds = %sw.bb65
  call void @llvm.trap() #3
  unreachable

cont68:                                           ; preds = %sw.bb65
  store i32 %58, i32* %retval
  br label %return

sw.bb69:                                          ; preds = %if.end44
  %call70 = call i8* @buffer_get_string(%struct.sshbuf* %m, i32* null)
  store i8* %call70, i8** %e, align 8
  call void @sshbuf_free(%struct.sshbuf* %m)
  %61 = load i8** %e, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([34 x i8]* @.str731014, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_client_forward, i32 0, i32 0), i8* %61)
  %62 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %63 = extractvalue { i32, i1 } %62, 0
  %64 = extractvalue { i32, i1 } %62, 1
  %65 = xor i1 %64, true
  br i1 %65, label %cont72, label %trap71

trap71:                                           ; preds = %sw.bb69
  call void @llvm.trap() #3
  unreachable

cont72:                                           ; preds = %sw.bb69
  store i32 %63, i32* %retval
  br label %return

sw.default:                                       ; preds = %if.end44
  %66 = load i32* %type, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([43 x i8]* @.str34975, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @__func__.mux_client_forward, i32 0, i32 0), i32 %66) #11
  unreachable

sw.epilog:                                        ; preds = %if.end64, %sw.bb
  call void @sshbuf_free(%struct.sshbuf* %m)
  %67 = load i32* @muxclient_request_id, align 4
  %inc = add i32 %67, 1
  store i32 %inc, i32* @muxclient_request_id, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %cont72, %cont68, %cont
  %68 = load i32* %retval
  ret i32 %68
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @env_permitted(i8* %env) #0 {
entry:
  %retval = alloca i32, align 4
  %env.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %name = alloca [1024 x i8], align 16
  %cp = alloca i8*, align 8
  store i8* %env, i8** %env.addr, align 8
  %0 = load i8** %env.addr, align 8
  %call = call i8* @strchr(i8* %0, i32 61) #12
  store i8* %call, i8** %cp, align 8
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8** %cp, align 8
  %2 = load i8** %env.addr, align 8
  %cmp1 = icmp eq i8* %1, %2
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [1024 x i8]* %name, i32 0, i32 0
  %3 = load i8** %cp, align 8
  %4 = load i8** %env.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %5 = load i8** %env.addr, align 8
  %call2 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* %arraydecay, i64 1024, i8* getelementptr inbounds ([5 x i8]* @.str601001, i32 0, i32 0), i32 %conv, i8* %5) #9
  store i32 %call2, i32* %ret, align 4
  %6 = load i32* %ret, align 4
  %cmp3 = icmp sle i32 %6, 0
  br i1 %cmp3, label %if.then9, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %if.end
  %7 = load i32* %ret, align 4
  %conv6 = sext i32 %7 to i64
  %cmp7 = icmp uge i64 %conv6, 1024
  br i1 %cmp7, label %if.then9, label %if.end10

if.then9:                                         ; preds = %lor.lhs.false5, %if.end
  %8 = load i8** %env.addr, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([41 x i8]* @.str611002, i32 0, i32 0), i8* %8)
  store i32 0, i32* %retval
  br label %return

if.end10:                                         ; preds = %lor.lhs.false5
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.end10
  %9 = load i32* %i, align 4
  %10 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 75), align 4
  %cmp11 = icmp slt i32 %9, %10
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arraydecay13 = getelementptr inbounds [1024 x i8]* %name, i32 0, i32 0
  %11 = load i32* %i, align 4
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds [256 x i8*]* getelementptr inbounds (%struct.Options* @options, i32 0, i32 76), i32 0, i64 %idxprom
  %12 = load i8** %arrayidx, align 8
  %call14 = call i32 @match_pattern(i8* %arraydecay13, i8* %12)
  %tobool = icmp ne i32 %call14, 0
  br i1 %tobool, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end16:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end16
  %13 = load i32* %i, align 4
  %14 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 1)
  %15 = extractvalue { i32, i1 } %14, 0
  %16 = extractvalue { i32, i1 } %14, 1
  %17 = xor i1 %16, true
  br i1 %17, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %15, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then15, %if.then9, %if.then
  %18 = load i32* %retval
  ret i32 %18
}

; Function Attrs: nounwind sspreq uwtable
define internal void @control_client_sighandler(i32 %signo) #0 {
entry:
  %signo.addr = alloca i32, align 4
  store i32 %signo, i32* %signo.addr, align 4
  %0 = load i32* %signo.addr, align 4
  store volatile i32 %0, i32* @muxclient_terminate, align 4
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @control_client_sigrelay(i32 %signo) #0 {
entry:
  %signo.addr = alloca i32, align 4
  %save_errno = alloca i32, align 4
  store i32 %signo, i32* %signo.addr, align 4
  %call = call i32* @__errno_location() #2
  %0 = load i32* %call, align 4
  store i32 %0, i32* %save_errno, align 4
  %1 = load i32* @muxserver_pid, align 4
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i32* @muxserver_pid, align 4
  %3 = load i32* %signo.addr, align 4
  %call1 = call i32 @kill(i32 %2, i32 %3) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32* %save_errno, align 4
  %call2 = call i32* @__errno_location() #2
  store i32 %4, i32* %call2, align 4
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_session_confirm(i32 %id, i32 %success, i8* %arg) #0 {
entry:
  %id.addr = alloca i32, align 4
  %success.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %cctx = alloca %struct.mux_session_confirm_ctx*, align 8
  %display = alloca i8*, align 8
  %c = alloca %struct.Channel*, align 8
  %cc = alloca %struct.Channel*, align 8
  %i = alloca i32, align 4
  %reply = alloca %struct.sshbuf, align 8
  %proto = alloca i8*, align 8
  %data = alloca i8*, align 8
  store i32 %id, i32* %id.addr, align 4
  store i32 %success, i32* %success.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8** %arg.addr, align 8
  %1 = bitcast i8* %0 to %struct.mux_session_confirm_ctx*
  store %struct.mux_session_confirm_ctx* %1, %struct.mux_session_confirm_ctx** %cctx, align 8
  %2 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmp = icmp eq %struct.mux_session_confirm_ctx* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str1061047, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_session_confirm, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  %3 = load i32* %id.addr, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %3)
  store %struct.Channel* %call, %struct.Channel** %c, align 8
  %cmp1 = icmp eq %struct.Channel* %call, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %4 = load i32* %id.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([25 x i8]* @.str1071048, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_session_confirm, i32 0, i32 0), i32 %4) #11
  unreachable

if.end3:                                          ; preds = %if.end
  %5 = load %struct.Channel** %c, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %5, i32 0, i32 10
  %6 = load i32* %ctl_chan, align 4
  %call4 = call %struct.Channel* @channel_by_id(i32 %6)
  store %struct.Channel* %call4, %struct.Channel** %cc, align 8
  %cmp5 = icmp eq %struct.Channel* %call4, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end3
  %7 = load i32* %id.addr, align 4
  %8 = load %struct.Channel** %c, align 8
  %ctl_chan7 = getelementptr inbounds %struct.Channel* %8, i32 0, i32 10
  %9 = load i32* %ctl_chan7, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str1081049, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_session_confirm, i32 0, i32 0), i32 %7, i32 %9) #11
  unreachable

if.end8:                                          ; preds = %if.end3
  %10 = load i32* %success.addr, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str1091050, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_session_confirm, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %reply)
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 -2147483645)
  %11 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %rid = getelementptr inbounds %struct.mux_session_confirm_ctx* %11, i32 0, i32 8
  %12 = load i32* %rid, align 4
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 %12)
  call void @buffer_put_cstring(%struct.sshbuf* %reply, i8* getelementptr inbounds ([29 x i8]* @.str1101051, i32 0, i32 0))
  br label %done

if.end10:                                         ; preds = %if.end8
  %call11 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8]* @.str1551096, i32 0, i32 0)) #9
  store i8* %call11, i8** %display, align 8
  %13 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_x_fwd = getelementptr inbounds %struct.mux_session_confirm_ctx* %13, i32 0, i32 2
  %14 = load i32* %want_x_fwd, align 4
  %tobool12 = icmp ne i32 %14, 0
  br i1 %tobool12, label %land.lhs.true, label %if.end21

land.lhs.true:                                    ; preds = %if.end10
  %15 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 1), align 4
  %tobool13 = icmp ne i32 %15, 0
  br i1 %tobool13, label %land.lhs.true14, label %if.end21

land.lhs.true14:                                  ; preds = %land.lhs.true
  %16 = load i8** %display, align 8
  %cmp15 = icmp ne i8* %16, null
  br i1 %cmp15, label %if.then16, label %if.end21

if.then16:                                        ; preds = %land.lhs.true14
  %17 = load i8** %display, align 8
  %18 = load i8** getelementptr inbounds (%struct.Options* @options, i32 0, i32 5), align 8
  %19 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 3), align 4
  %20 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 2), align 4
  %call17 = call i32 @client_x11_get_proto(i8* %17, i8* %18, i32 %19, i32 %20, i8** %proto, i8** %data)
  %cmp18 = icmp eq i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.then16
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([56 x i8]* @.str1561097, i32 0, i32 0))
  %21 = load i32* %id.addr, align 4
  %22 = load i8** %display, align 8
  %23 = load i8** %proto, align 8
  %24 = load i8** %data, align 8
  call void @x11_request_forwarding_with_spoofing(i32 %21, i8* %22, i8* %23, i8* %24, i32 1)
  %25 = load i32* %id.addr, align 4
  call void @client_expect_confirm(i32 %25, i8* getelementptr inbounds ([15 x i8]* @.str1571098, i32 0, i32 0), i32 0)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.then16
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %land.lhs.true14, %land.lhs.true, %if.end10
  %26 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_agent_fwd = getelementptr inbounds %struct.mux_session_confirm_ctx* %26, i32 0, i32 3
  %27 = load i32* %want_agent_fwd, align 4
  %tobool22 = icmp ne i32 %27, 0
  br i1 %tobool22, label %land.lhs.true23, label %if.end26

land.lhs.true23:                                  ; preds = %if.end21
  %28 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 0), align 4
  %tobool24 = icmp ne i32 %28, 0
  br i1 %tobool24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %land.lhs.true23
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([44 x i8]* @.str1581099, i32 0, i32 0))
  %29 = load i32* %id.addr, align 4
  call void @channel_request_start(i32 %29, i8* getelementptr inbounds ([27 x i8]* @.str1591100, i32 0, i32 0), i32 0)
  %30 = load %struct.ssh** @active_state, align 8
  call void @ssh_packet_send(%struct.ssh* %30)
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %land.lhs.true23, %if.end21
  %31 = load i32* %id.addr, align 4
  %32 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_tty = getelementptr inbounds %struct.mux_session_confirm_ctx* %32, i32 0, i32 0
  %33 = load i32* %want_tty, align 4
  %34 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %want_subsys = getelementptr inbounds %struct.mux_session_confirm_ctx* %34, i32 0, i32 1
  %35 = load i32* %want_subsys, align 4
  %36 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term = getelementptr inbounds %struct.mux_session_confirm_ctx* %36, i32 0, i32 5
  %37 = load i8** %term, align 8
  %38 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %tio = getelementptr inbounds %struct.mux_session_confirm_ctx* %38, i32 0, i32 6
  %39 = load %struct.Channel** %c, align 8
  %rfd = getelementptr inbounds %struct.Channel* %39, i32 0, i32 6
  %40 = load i32* %rfd, align 4
  %41 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmd = getelementptr inbounds %struct.mux_session_confirm_ctx* %41, i32 0, i32 4
  %42 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env = getelementptr inbounds %struct.mux_session_confirm_ctx* %42, i32 0, i32 7
  %43 = load i8*** %env, align 8
  call void @client_session2_setup(i32 %31, i32 %33, i32 %35, i8* %37, %struct.termios* %tio, i32 %40, %struct.sshbuf* %cmd, i8** %43)
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str1111052, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_session_confirm, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %reply)
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 -2147483642)
  %44 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %rid27 = getelementptr inbounds %struct.mux_session_confirm_ctx* %44, i32 0, i32 8
  %45 = load i32* %rid27, align 4
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 %45)
  %46 = load %struct.Channel** %c, align 8
  %self = getelementptr inbounds %struct.Channel* %46, i32 0, i32 1
  %47 = load i32* %self, align 4
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 %47)
  br label %done

done:                                             ; preds = %if.end26, %if.then9
  %48 = load %struct.Channel** %cc, align 8
  %output = getelementptr inbounds %struct.Channel* %48, i32 0, i32 17
  %call28 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %reply)
  %call29 = call i64 @sshbuf_len(%struct.sshbuf* %reply)
  %conv = trunc i64 %call29 to i32
  call void @buffer_put_string(%struct.sshbuf* %output, i8* %call28, i32 %conv)
  call void @sshbuf_free(%struct.sshbuf* %reply)
  %49 = load %struct.Channel** %cc, align 8
  %mux_pause = getelementptr inbounds %struct.Channel* %49, i32 0, i32 46
  %50 = load i32* %mux_pause, align 4
  %cmp30 = icmp sle i32 %50, 0
  br i1 %cmp30, label %if.then32, label %if.end34

if.then32:                                        ; preds = %done
  %51 = load %struct.Channel** %cc, align 8
  %mux_pause33 = getelementptr inbounds %struct.Channel* %51, i32 0, i32 46
  %52 = load i32* %mux_pause33, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str1121053, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @__func__.mux_session_confirm, i32 0, i32 0), i32 %52) #11
  unreachable

if.end34:                                         ; preds = %done
  %53 = load %struct.Channel** %cc, align 8
  %mux_pause35 = getelementptr inbounds %struct.Channel* %53, i32 0, i32 46
  store i32 0, i32* %mux_pause35, align 4
  %54 = load %struct.Channel** %c, align 8
  %open_confirm_ctx = getelementptr inbounds %struct.Channel* %54, i32 0, i32 34
  store i8* null, i8** %open_confirm_ctx, align 8
  %55 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %cmd36 = getelementptr inbounds %struct.mux_session_confirm_ctx* %55, i32 0, i32 4
  call void @sshbuf_free(%struct.sshbuf* %cmd36)
  %56 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %term37 = getelementptr inbounds %struct.mux_session_confirm_ctx* %56, i32 0, i32 5
  %57 = load i8** %term37, align 8
  call void @free(i8* %57) #9
  %58 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env38 = getelementptr inbounds %struct.mux_session_confirm_ctx* %58, i32 0, i32 7
  %59 = load i8*** %env38, align 8
  %cmp39 = icmp ne i8** %59, null
  br i1 %cmp39, label %if.then41, label %if.end49

if.then41:                                        ; preds = %if.end34
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %cont, %if.then41
  %60 = load i32* %i, align 4
  %idxprom = sext i32 %60 to i64
  %61 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env42 = getelementptr inbounds %struct.mux_session_confirm_ctx* %61, i32 0, i32 7
  %62 = load i8*** %env42, align 8
  %arrayidx = getelementptr inbounds i8** %62, i64 %idxprom
  %63 = load i8** %arrayidx, align 8
  %cmp43 = icmp ne i8* %63, null
  br i1 %cmp43, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %64 = load i32* %i, align 4
  %idxprom45 = sext i32 %64 to i64
  %65 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env46 = getelementptr inbounds %struct.mux_session_confirm_ctx* %65, i32 0, i32 7
  %66 = load i8*** %env46, align 8
  %arrayidx47 = getelementptr inbounds i8** %66, i64 %idxprom45
  %67 = load i8** %arrayidx47, align 8
  call void @free(i8* %67) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %68 = load i32* %i, align 4
  %69 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 1)
  %70 = extractvalue { i32, i1 } %69, 0
  %71 = extractvalue { i32, i1 } %69, 1
  %72 = xor i1 %71, true
  br i1 %72, label %cont, label %trap

trap:                                             ; preds = %for.inc
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %for.inc
  store i32 %70, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %73 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %env48 = getelementptr inbounds %struct.mux_session_confirm_ctx* %73, i32 0, i32 7
  %74 = load i8*** %env48, align 8
  %75 = bitcast i8** %74 to i8*
  call void @free(i8* %75) #9
  br label %if.end49

if.end49:                                         ; preds = %for.end, %if.end34
  %76 = load %struct.mux_session_confirm_ctx** %cctx, align 8
  %77 = bitcast %struct.mux_session_confirm_ctx* %76 to i8*
  call void @free(i8* %77) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_master_session_cleanup_cb(i32 %cid, i8* %unused) #0 {
entry:
  %cid.addr = alloca i32, align 4
  %unused.addr = alloca i8*, align 8
  %cc = alloca %struct.Channel*, align 8
  %c = alloca %struct.Channel*, align 8
  store i32 %cid, i32* %cid.addr, align 4
  store i8* %unused, i8** %unused.addr, align 8
  %0 = load i32* %cid.addr, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %0)
  store %struct.Channel* %call, %struct.Channel** %c, align 8
  %1 = load i32* %cid.addr, align 4
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([28 x i8]* @.str1131054, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_session_cleanup_cb, i32 0, i32 0), i32 %1)
  %2 = load %struct.Channel** %c, align 8
  %cmp = icmp eq %struct.Channel* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32* %cid.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([30 x i8]* @.str1141055, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_session_cleanup_cb, i32 0, i32 0), i32 %3) #11
  unreachable

if.end:                                           ; preds = %entry
  %4 = load %struct.Channel** %c, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %4, i32 0, i32 10
  %5 = load i32* %ctl_chan, align 4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont, label %trap

trap:                                             ; preds = %if.end
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.end
  %cmp1 = icmp ne i32 %5, %7
  br i1 %cmp1, label %if.then2, label %if.end14

if.then2:                                         ; preds = %cont
  %10 = load %struct.Channel** %c, align 8
  %ctl_chan3 = getelementptr inbounds %struct.Channel* %10, i32 0, i32 10
  %11 = load i32* %ctl_chan3, align 4
  %call4 = call %struct.Channel* @channel_by_id(i32 %11)
  store %struct.Channel* %call4, %struct.Channel** %cc, align 8
  %cmp5 = icmp eq %struct.Channel* %call4, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.then2
  %12 = load %struct.Channel** %c, align 8
  %self = getelementptr inbounds %struct.Channel* %12, i32 0, i32 1
  %13 = load i32* %self, align 4
  %14 = load %struct.Channel** %c, align 8
  %ctl_chan7 = getelementptr inbounds %struct.Channel* %14, i32 0, i32 10
  %15 = load i32* %ctl_chan7, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([42 x i8]* @.str1151056, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @__func__.mux_master_session_cleanup_cb, i32 0, i32 0), i32 %13, i32 %15) #11
  unreachable

if.end8:                                          ; preds = %if.then2
  %16 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %17 = extractvalue { i32, i1 } %16, 0
  %18 = extractvalue { i32, i1 } %16, 1
  %19 = xor i1 %18, true
  br i1 %19, label %cont10, label %trap9

trap9:                                            ; preds = %if.end8
  call void @llvm.trap() #3
  unreachable

cont10:                                           ; preds = %if.end8
  %20 = load %struct.Channel** %c, align 8
  %ctl_chan11 = getelementptr inbounds %struct.Channel* %20, i32 0, i32 10
  store i32 %17, i32* %ctl_chan11, align 4
  %21 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %22 = extractvalue { i32, i1 } %21, 0
  %23 = extractvalue { i32, i1 } %21, 1
  %24 = xor i1 %23, true
  br i1 %24, label %cont13, label %trap12

trap12:                                           ; preds = %cont10
  call void @llvm.trap() #3
  unreachable

cont13:                                           ; preds = %cont10
  %25 = load %struct.Channel** %cc, align 8
  %remote_id = getelementptr inbounds %struct.Channel* %25, i32 0, i32 2
  store i32 %22, i32* %remote_id, align 4
  %26 = load %struct.Channel** %cc, align 8
  call void @chan_rcvd_oclose(%struct.Channel* %26)
  br label %if.end14

if.end14:                                         ; preds = %cont13, %cont
  %27 = load %struct.Channel** %c, align 8
  %self15 = getelementptr inbounds %struct.Channel* %27, i32 0, i32 1
  %28 = load i32* %self15, align 4
  call void @channel_cancel_cleanup(i32 %28)
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i8* @format_forward(i32 %ftype, %struct.Forward* %fwd) #0 {
entry:
  %ftype.addr = alloca i32, align 4
  %fwd.addr = alloca %struct.Forward*, align 8
  %ret = alloca i8*, align 8
  store i32 %ftype, i32* %ftype.addr, align 4
  store %struct.Forward* %fwd, %struct.Forward** %fwd.addr, align 8
  %0 = load i32* %ftype.addr, align 4
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb15
    i32 2, label %sw.bb27
  ]

sw.bb:                                            ; preds = %entry
  %1 = load %struct.Forward** %fwd.addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %1, i32 0, i32 2
  %2 = load i8** %listen_path, align 8
  %cmp = icmp ne i8* %2, null
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %sw.bb
  %3 = load %struct.Forward** %fwd.addr, align 8
  %listen_path1 = getelementptr inbounds %struct.Forward* %3, i32 0, i32 2
  %4 = load i8** %listen_path1, align 8
  br label %cond.end7

cond.false:                                       ; preds = %sw.bb
  %5 = load %struct.Forward** %fwd.addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %5, i32 0, i32 0
  %6 = load i8** %listen_host, align 8
  %cmp2 = icmp eq i8* %6, null
  br i1 %cmp2, label %cond.true3, label %cond.false4

cond.true3:                                       ; preds = %cond.false
  %7 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6, i32 0), align 4
  %tobool = icmp ne i32 %7, 0
  %cond = select i1 %tobool, i8* getelementptr inbounds ([2 x i8]* @.str681009, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str751016, i32 0, i32 0)
  br label %cond.end

cond.false4:                                      ; preds = %cond.false
  %8 = load %struct.Forward** %fwd.addr, align 8
  %listen_host5 = getelementptr inbounds %struct.Forward* %8, i32 0, i32 0
  %9 = load i8** %listen_host5, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond6 = phi i8* [ %cond, %cond.true3 ], [ %9, %cond.false4 ]
  br label %cond.end7

cond.end7:                                        ; preds = %cond.end, %cond.true
  %cond8 = phi i8* [ %4, %cond.true ], [ %cond6, %cond.end ]
  %10 = load %struct.Forward** %fwd.addr, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %10, i32 0, i32 1
  %11 = load i32* %listen_port, align 4
  %12 = load %struct.Forward** %fwd.addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %12, i32 0, i32 5
  %13 = load i8** %connect_path, align 8
  %cmp9 = icmp ne i8* %13, null
  br i1 %cmp9, label %cond.true10, label %cond.false12

cond.true10:                                      ; preds = %cond.end7
  %14 = load %struct.Forward** %fwd.addr, align 8
  %connect_path11 = getelementptr inbounds %struct.Forward* %14, i32 0, i32 5
  %15 = load i8** %connect_path11, align 8
  br label %cond.end13

cond.false12:                                     ; preds = %cond.end7
  %16 = load %struct.Forward** %fwd.addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %16, i32 0, i32 3
  %17 = load i8** %connect_host, align 8
  br label %cond.end13

cond.end13:                                       ; preds = %cond.false12, %cond.true10
  %cond14 = phi i8* [ %15, %cond.true10 ], [ %17, %cond.false12 ]
  %18 = load %struct.Forward** %fwd.addr, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %18, i32 0, i32 4
  %19 = load i32* %connect_port, align 4
  %call = call i32 (i8**, i8*, ...)* @xasprintf(i8** %ret, i8* getelementptr inbounds ([37 x i8]* @.str741015, i32 0, i32 0), i8* %cond8, i32 %11, i8* %cond14, i32 %19)
  br label %sw.epilog

sw.bb15:                                          ; preds = %entry
  %20 = load %struct.Forward** %fwd.addr, align 8
  %listen_host16 = getelementptr inbounds %struct.Forward* %20, i32 0, i32 0
  %21 = load i8** %listen_host16, align 8
  %cmp17 = icmp eq i8* %21, null
  br i1 %cmp17, label %cond.true18, label %cond.false21

cond.true18:                                      ; preds = %sw.bb15
  %22 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 6, i32 0), align 4
  %tobool19 = icmp ne i32 %22, 0
  %cond20 = select i1 %tobool19, i8* getelementptr inbounds ([2 x i8]* @.str681009, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str751016, i32 0, i32 0)
  br label %cond.end23

cond.false21:                                     ; preds = %sw.bb15
  %23 = load %struct.Forward** %fwd.addr, align 8
  %listen_host22 = getelementptr inbounds %struct.Forward* %23, i32 0, i32 0
  %24 = load i8** %listen_host22, align 8
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false21, %cond.true18
  %cond24 = phi i8* [ %cond20, %cond.true18 ], [ %24, %cond.false21 ]
  %25 = load %struct.Forward** %fwd.addr, align 8
  %listen_port25 = getelementptr inbounds %struct.Forward* %25, i32 0, i32 1
  %26 = load i32* %listen_port25, align 4
  %call26 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %ret, i8* getelementptr inbounds ([31 x i8]* @.str761017, i32 0, i32 0), i8* %cond24, i32 %26)
  br label %sw.epilog

sw.bb27:                                          ; preds = %entry
  %27 = load %struct.Forward** %fwd.addr, align 8
  %listen_path28 = getelementptr inbounds %struct.Forward* %27, i32 0, i32 2
  %28 = load i8** %listen_path28, align 8
  %cmp29 = icmp ne i8* %28, null
  br i1 %cmp29, label %cond.true30, label %cond.false32

cond.true30:                                      ; preds = %sw.bb27
  %29 = load %struct.Forward** %fwd.addr, align 8
  %listen_path31 = getelementptr inbounds %struct.Forward* %29, i32 0, i32 2
  %30 = load i8** %listen_path31, align 8
  br label %cond.end40

cond.false32:                                     ; preds = %sw.bb27
  %31 = load %struct.Forward** %fwd.addr, align 8
  %listen_host33 = getelementptr inbounds %struct.Forward* %31, i32 0, i32 0
  %32 = load i8** %listen_host33, align 8
  %cmp34 = icmp eq i8* %32, null
  br i1 %cmp34, label %cond.true35, label %cond.false36

cond.true35:                                      ; preds = %cond.false32
  br label %cond.end38

cond.false36:                                     ; preds = %cond.false32
  %33 = load %struct.Forward** %fwd.addr, align 8
  %listen_host37 = getelementptr inbounds %struct.Forward* %33, i32 0, i32 0
  %34 = load i8** %listen_host37, align 8
  br label %cond.end38

cond.end38:                                       ; preds = %cond.false36, %cond.true35
  %cond39 = phi i8* [ getelementptr inbounds ([10 x i8]* @.str751016, i32 0, i32 0), %cond.true35 ], [ %34, %cond.false36 ]
  br label %cond.end40

cond.end40:                                       ; preds = %cond.end38, %cond.true30
  %cond41 = phi i8* [ %30, %cond.true30 ], [ %cond39, %cond.end38 ]
  %35 = load %struct.Forward** %fwd.addr, align 8
  %listen_port42 = getelementptr inbounds %struct.Forward* %35, i32 0, i32 1
  %36 = load i32* %listen_port42, align 4
  %37 = load %struct.Forward** %fwd.addr, align 8
  %connect_path43 = getelementptr inbounds %struct.Forward* %37, i32 0, i32 5
  %38 = load i8** %connect_path43, align 8
  %cmp44 = icmp ne i8* %38, null
  br i1 %cmp44, label %cond.true45, label %cond.false47

cond.true45:                                      ; preds = %cond.end40
  %39 = load %struct.Forward** %fwd.addr, align 8
  %connect_path46 = getelementptr inbounds %struct.Forward* %39, i32 0, i32 5
  %40 = load i8** %connect_path46, align 8
  br label %cond.end49

cond.false47:                                     ; preds = %cond.end40
  %41 = load %struct.Forward** %fwd.addr, align 8
  %connect_host48 = getelementptr inbounds %struct.Forward* %41, i32 0, i32 3
  %42 = load i8** %connect_host48, align 8
  br label %cond.end49

cond.end49:                                       ; preds = %cond.false47, %cond.true45
  %cond50 = phi i8* [ %40, %cond.true45 ], [ %42, %cond.false47 ]
  %43 = load %struct.Forward** %fwd.addr, align 8
  %connect_port51 = getelementptr inbounds %struct.Forward* %43, i32 0, i32 4
  %44 = load i32* %connect_port51, align 4
  %call52 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %ret, i8* getelementptr inbounds ([38 x i8]* @.str771018, i32 0, i32 0), i8* %cond41, i32 %36, i8* %cond50, i32 %44)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %45 = load i32* %ftype.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([28 x i8]* @.str781019, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @__func__.format_forward, i32 0, i32 0), i32 %45) #11
  unreachable

sw.epilog:                                        ; preds = %cond.end49, %cond.end23, %cond.end13
  %46 = load i8** %ret, align 8
  ret i8* %46
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @compare_forward(%struct.Forward* %a, %struct.Forward* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca %struct.Forward*, align 8
  %b.addr = alloca %struct.Forward*, align 8
  store %struct.Forward* %a, %struct.Forward** %a.addr, align 8
  store %struct.Forward* %b, %struct.Forward** %b.addr, align 8
  %0 = load %struct.Forward** %a.addr, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %0, i32 0, i32 0
  %1 = load i8** %listen_host, align 8
  %2 = load %struct.Forward** %b.addr, align 8
  %listen_host1 = getelementptr inbounds %struct.Forward* %2, i32 0, i32 0
  %3 = load i8** %listen_host1, align 8
  %call = call i32 @compare_host(i8* %1, i8* %3)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct.Forward** %a.addr, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %4, i32 0, i32 2
  %5 = load i8** %listen_path, align 8
  %6 = load %struct.Forward** %b.addr, align 8
  %listen_path2 = getelementptr inbounds %struct.Forward* %6, i32 0, i32 2
  %7 = load i8** %listen_path2, align 8
  %call3 = call i32 @compare_host(i8* %5, i8* %7)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.end6, label %if.then5

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

if.end6:                                          ; preds = %if.end
  %8 = load %struct.Forward** %a.addr, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %8, i32 0, i32 1
  %9 = load i32* %listen_port, align 4
  %10 = load %struct.Forward** %b.addr, align 8
  %listen_port7 = getelementptr inbounds %struct.Forward* %10, i32 0, i32 1
  %11 = load i32* %listen_port7, align 4
  %cmp = icmp ne i32 %9, %11
  br i1 %cmp, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end6
  store i32 0, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end6
  %12 = load %struct.Forward** %a.addr, align 8
  %connect_host = getelementptr inbounds %struct.Forward* %12, i32 0, i32 3
  %13 = load i8** %connect_host, align 8
  %14 = load %struct.Forward** %b.addr, align 8
  %connect_host10 = getelementptr inbounds %struct.Forward* %14, i32 0, i32 3
  %15 = load i8** %connect_host10, align 8
  %call11 = call i32 @compare_host(i8* %13, i8* %15)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end14, label %if.then13

if.then13:                                        ; preds = %if.end9
  store i32 0, i32* %retval
  br label %return

if.end14:                                         ; preds = %if.end9
  %16 = load %struct.Forward** %a.addr, align 8
  %connect_path = getelementptr inbounds %struct.Forward* %16, i32 0, i32 5
  %17 = load i8** %connect_path, align 8
  %18 = load %struct.Forward** %b.addr, align 8
  %connect_path15 = getelementptr inbounds %struct.Forward* %18, i32 0, i32 5
  %19 = load i8** %connect_path15, align 8
  %call16 = call i32 @compare_host(i8* %17, i8* %19)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.end14
  store i32 0, i32* %retval
  br label %return

if.end19:                                         ; preds = %if.end14
  %20 = load %struct.Forward** %a.addr, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %20, i32 0, i32 4
  %21 = load i32* %connect_port, align 4
  %22 = load %struct.Forward** %b.addr, align 8
  %connect_port20 = getelementptr inbounds %struct.Forward* %22, i32 0, i32 4
  %23 = load i32* %connect_port20, align 4
  %cmp21 = icmp ne i32 %21, %23
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end19
  store i32 0, i32* %retval
  br label %return

if.end23:                                         ; preds = %if.end19
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.end23, %if.then22, %if.then18, %if.then13, %if.then8, %if.then5, %if.then
  %24 = load i32* %retval
  ret i32 %24
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_confirm_remote_forward(i32 %type, i32 %seq, i8* %ctxt) #0 {
entry:
  %type.addr = alloca i32, align 4
  %seq.addr = alloca i32, align 4
  %ctxt.addr = alloca i8*, align 8
  %fctx = alloca %struct.mux_channel_confirm_ctx*, align 8
  %failmsg = alloca i8*, align 8
  %rfwd = alloca %struct.Forward*, align 8
  %c = alloca %struct.Channel*, align 8
  %out = alloca %struct.sshbuf, align 8
  store i32 %type, i32* %type.addr, align 4
  store i32 %seq, i32* %seq.addr, align 4
  store i8* %ctxt, i8** %ctxt.addr, align 8
  %0 = load i8** %ctxt.addr, align 8
  %1 = bitcast i8* %0 to %struct.mux_channel_confirm_ctx*
  store %struct.mux_channel_confirm_ctx* %1, %struct.mux_channel_confirm_ctx** %fctx, align 8
  store i8* null, i8** %failmsg, align 8
  %2 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %cid = getelementptr inbounds %struct.mux_channel_confirm_ctx* %2, i32 0, i32 0
  %3 = load i32* %cid, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %3)
  store %struct.Channel* %call, %struct.Channel** %c, align 8
  %cmp = icmp eq %struct.Channel* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([20 x i8]* @.str1331074, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_confirm_remote_forward, i32 0, i32 0))
  br label %return

if.end:                                           ; preds = %entry
  call void @sshbuf_init(%struct.sshbuf* %out)
  %4 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %fid = getelementptr inbounds %struct.mux_channel_confirm_ctx* %4, i32 0, i32 2
  %5 = load i32* %fid, align 4
  %6 = load i32* getelementptr inbounds (%struct.Options* @options, i32 0, i32 63), align 4
  %cmp1 = icmp sge i32 %5, %6
  br i1 %cmp1, label %if.then8, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %fid2 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %7, i32 0, i32 2
  %8 = load i32* %fid2, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx = getelementptr inbounds %struct.Forward* %9, i64 %idxprom
  %connect_path = getelementptr inbounds %struct.Forward* %arrayidx, i32 0, i32 5
  %10 = load i8** %connect_path, align 8
  %cmp3 = icmp eq i8* %10, null
  br i1 %cmp3, label %land.lhs.true, label %if.end11

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %fid4 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %11, i32 0, i32 2
  %12 = load i32* %fid4, align 4
  %idxprom5 = sext i32 %12 to i64
  %13 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx6 = getelementptr inbounds %struct.Forward* %13, i64 %idxprom5
  %connect_host = getelementptr inbounds %struct.Forward* %arrayidx6, i32 0, i32 3
  %14 = load i8** %connect_host, align 8
  %cmp7 = icmp eq i8* %14, null
  br i1 %cmp7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %land.lhs.true, %if.end
  %15 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %fid9 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %15, i32 0, i32 2
  %16 = load i32* %fid9, align 4
  %call10 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %failmsg, i8* getelementptr inbounds ([25 x i8]* @.str1341075, i32 0, i32 0), i32 %16)
  br label %fail

if.end11:                                         ; preds = %land.lhs.true, %lor.lhs.false
  %17 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %fid12 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %17, i32 0, i32 2
  %18 = load i32* %fid12, align 4
  %idxprom13 = sext i32 %18 to i64
  %19 = load %struct.Forward** getelementptr inbounds (%struct.Options* @options, i32 0, i32 64), align 8
  %arrayidx14 = getelementptr inbounds %struct.Forward* %19, i64 %idxprom13
  store %struct.Forward* %arrayidx14, %struct.Forward** %rfwd, align 8
  %20 = load i32* %type.addr, align 4
  %cmp15 = icmp eq i32 %20, 81
  %cond = select i1 %cmp15, i8* getelementptr inbounds ([8 x i8]* @.str1361077, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str1371078, i32 0, i32 0)
  %21 = load %struct.Forward** %rfwd, align 8
  %listen_port = getelementptr inbounds %struct.Forward* %21, i32 0, i32 1
  %22 = load i32* %listen_port, align 4
  %23 = load %struct.Forward** %rfwd, align 8
  %connect_path16 = getelementptr inbounds %struct.Forward* %23, i32 0, i32 5
  %24 = load i8** %connect_path16, align 8
  %tobool = icmp ne i8* %24, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end11
  %25 = load %struct.Forward** %rfwd, align 8
  %connect_path17 = getelementptr inbounds %struct.Forward* %25, i32 0, i32 5
  %26 = load i8** %connect_path17, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.end11
  %27 = load %struct.Forward** %rfwd, align 8
  %connect_host18 = getelementptr inbounds %struct.Forward* %27, i32 0, i32 3
  %28 = load i8** %connect_host18, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond19 = phi i8* [ %26, %cond.true ], [ %28, %cond.false ]
  %29 = load %struct.Forward** %rfwd, align 8
  %connect_port = getelementptr inbounds %struct.Forward* %29, i32 0, i32 4
  %30 = load i32* %connect_port, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([37 x i8]* @.str1351076, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_confirm_remote_forward, i32 0, i32 0), i8* %cond, i32 %22, i8* %cond19, i32 %30)
  %31 = load i32* %type.addr, align 4
  %cmp20 = icmp eq i32 %31, 81
  br i1 %cmp20, label %if.then21, label %if.else33

if.then21:                                        ; preds = %cond.end
  %32 = load %struct.Forward** %rfwd, align 8
  %listen_port22 = getelementptr inbounds %struct.Forward* %32, i32 0, i32 1
  %33 = load i32* %listen_port22, align 4
  %cmp23 = icmp eq i32 %33, 0
  br i1 %cmp23, label %if.then24, label %if.else

if.then24:                                        ; preds = %if.then21
  %call25 = call i32 @packet_get_int()
  %34 = load %struct.Forward** %rfwd, align 8
  %allocated_port = getelementptr inbounds %struct.Forward* %34, i32 0, i32 6
  store i32 %call25, i32* %allocated_port, align 4
  %35 = load %struct.Forward** %rfwd, align 8
  %allocated_port26 = getelementptr inbounds %struct.Forward* %35, i32 0, i32 6
  %36 = load i32* %allocated_port26, align 4
  %37 = load %struct.Forward** %rfwd, align 8
  %connect_host27 = getelementptr inbounds %struct.Forward* %37, i32 0, i32 3
  %38 = load i8** %connect_host27, align 8
  %39 = load %struct.Forward** %rfwd, align 8
  %connect_port28 = getelementptr inbounds %struct.Forward* %39, i32 0, i32 4
  %40 = load i32* %connect_port28, align 4
  call void (i8*, ...)* @debug(i8* getelementptr inbounds ([50 x i8]* @.str1381079, i32 0, i32 0), i32 %36, i8* %38, i32 %40)
  call void @buffer_put_int(%struct.sshbuf* %out, i32 -2147483641)
  %41 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %rid = getelementptr inbounds %struct.mux_channel_confirm_ctx* %41, i32 0, i32 1
  %42 = load i32* %rid, align 4
  call void @buffer_put_int(%struct.sshbuf* %out, i32 %42)
  %43 = load %struct.Forward** %rfwd, align 8
  %allocated_port29 = getelementptr inbounds %struct.Forward* %43, i32 0, i32 6
  %44 = load i32* %allocated_port29, align 4
  call void @buffer_put_int(%struct.sshbuf* %out, i32 %44)
  %45 = load %struct.Forward** %rfwd, align 8
  %handle = getelementptr inbounds %struct.Forward* %45, i32 0, i32 7
  %46 = load i32* %handle, align 4
  %47 = load %struct.Forward** %rfwd, align 8
  %allocated_port30 = getelementptr inbounds %struct.Forward* %47, i32 0, i32 6
  %48 = load i32* %allocated_port30, align 4
  call void @channel_update_permitted_opens(i32 %46, i32 %48)
  br label %if.end32

if.else:                                          ; preds = %if.then21
  call void @buffer_put_int(%struct.sshbuf* %out, i32 -2147483647)
  %49 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %rid31 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %49, i32 0, i32 1
  %50 = load i32* %rid31, align 4
  call void @buffer_put_int(%struct.sshbuf* %out, i32 %50)
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then24
  br label %out62

if.else33:                                        ; preds = %cond.end
  %51 = load %struct.Forward** %rfwd, align 8
  %listen_port34 = getelementptr inbounds %struct.Forward* %51, i32 0, i32 1
  %52 = load i32* %listen_port34, align 4
  %cmp35 = icmp eq i32 %52, 0
  br i1 %cmp35, label %if.then36, label %if.end38

if.then36:                                        ; preds = %if.else33
  %53 = load %struct.Forward** %rfwd, align 8
  %handle37 = getelementptr inbounds %struct.Forward* %53, i32 0, i32 7
  %54 = load i32* %handle37, align 4
  %55 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %56 = extractvalue { i32, i1 } %55, 0
  %57 = extractvalue { i32, i1 } %55, 1
  %58 = xor i1 %57, true
  br i1 %58, label %cont, label %trap

trap:                                             ; preds = %if.then36
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then36
  call void @channel_update_permitted_opens(i32 %54, i32 %56)
  br label %if.end38

if.end38:                                         ; preds = %cont, %if.else33
  %59 = load %struct.Forward** %rfwd, align 8
  %listen_path = getelementptr inbounds %struct.Forward* %59, i32 0, i32 2
  %60 = load i8** %listen_path, align 8
  %cmp39 = icmp ne i8* %60, null
  br i1 %cmp39, label %if.then40, label %if.else43

if.then40:                                        ; preds = %if.end38
  %61 = load %struct.Forward** %rfwd, align 8
  %listen_path41 = getelementptr inbounds %struct.Forward* %61, i32 0, i32 2
  %62 = load i8** %listen_path41, align 8
  %call42 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %failmsg, i8* getelementptr inbounds ([49 x i8]* @.str1391080, i32 0, i32 0), i8* %62)
  br label %if.end46

if.else43:                                        ; preds = %if.end38
  %63 = load %struct.Forward** %rfwd, align 8
  %listen_port44 = getelementptr inbounds %struct.Forward* %63, i32 0, i32 1
  %64 = load i32* %listen_port44, align 4
  %call45 = call i32 (i8**, i8*, ...)* @xasprintf(i8** %failmsg, i8* getelementptr inbounds ([49 x i8]* @.str1401081, i32 0, i32 0), i32 %64)
  br label %if.end46

if.end46:                                         ; preds = %if.else43, %if.then40
  %65 = load %struct.Forward** %rfwd, align 8
  %listen_port47 = getelementptr inbounds %struct.Forward* %65, i32 0, i32 1
  %66 = load i32* %listen_port47, align 4
  %67 = load %struct.Forward** %rfwd, align 8
  %connect_path48 = getelementptr inbounds %struct.Forward* %67, i32 0, i32 5
  %68 = load i8** %connect_path48, align 8
  %tobool49 = icmp ne i8* %68, null
  br i1 %tobool49, label %cond.true50, label %cond.false52

cond.true50:                                      ; preds = %if.end46
  %69 = load %struct.Forward** %rfwd, align 8
  %connect_path51 = getelementptr inbounds %struct.Forward* %69, i32 0, i32 5
  %70 = load i8** %connect_path51, align 8
  br label %cond.end54

cond.false52:                                     ; preds = %if.end46
  %71 = load %struct.Forward** %rfwd, align 8
  %connect_host53 = getelementptr inbounds %struct.Forward* %71, i32 0, i32 3
  %72 = load i8** %connect_host53, align 8
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false52, %cond.true50
  %cond55 = phi i8* [ %70, %cond.true50 ], [ %72, %cond.false52 ]
  %73 = load %struct.Forward** %rfwd, align 8
  %connect_port56 = getelementptr inbounds %struct.Forward* %73, i32 0, i32 4
  %74 = load i32* %connect_port56, align 4
  call void (i8*, ...)* @debug2(i8* getelementptr inbounds ([64 x i8]* @.str1411082, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_confirm_remote_forward, i32 0, i32 0), i32 %66, i8* %cond55, i32 %74)
  %75 = load %struct.Forward** %rfwd, align 8
  %listen_host = getelementptr inbounds %struct.Forward* %75, i32 0, i32 0
  %76 = load i8** %listen_host, align 8
  call void @free(i8* %76) #9
  %77 = load %struct.Forward** %rfwd, align 8
  %listen_path57 = getelementptr inbounds %struct.Forward* %77, i32 0, i32 2
  %78 = load i8** %listen_path57, align 8
  call void @free(i8* %78) #9
  %79 = load %struct.Forward** %rfwd, align 8
  %connect_host58 = getelementptr inbounds %struct.Forward* %79, i32 0, i32 3
  %80 = load i8** %connect_host58, align 8
  call void @free(i8* %80) #9
  %81 = load %struct.Forward** %rfwd, align 8
  %connect_path59 = getelementptr inbounds %struct.Forward* %81, i32 0, i32 5
  %82 = load i8** %connect_path59, align 8
  call void @free(i8* %82) #9
  %83 = load %struct.Forward** %rfwd, align 8
  %84 = bitcast %struct.Forward* %83 to i8*
  call void @llvm.memset.p0i8.i64(i8* %84, i8 0, i64 56, i32 8, i1 false)
  br label %if.end60

if.end60:                                         ; preds = %cond.end54
  br label %fail

fail:                                             ; preds = %if.end60, %if.then8
  %85 = load i8** %failmsg, align 8
  call void (i8*, ...)* @error(i8* getelementptr inbounds ([7 x i8]* @.str1421083, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_confirm_remote_forward, i32 0, i32 0), i8* %85)
  call void @buffer_put_int(%struct.sshbuf* %out, i32 -2147483645)
  %86 = load %struct.mux_channel_confirm_ctx** %fctx, align 8
  %rid61 = getelementptr inbounds %struct.mux_channel_confirm_ctx* %86, i32 0, i32 1
  %87 = load i32* %rid61, align 4
  call void @buffer_put_int(%struct.sshbuf* %out, i32 %87)
  %88 = load i8** %failmsg, align 8
  call void @buffer_put_cstring(%struct.sshbuf* %out, i8* %88)
  %89 = load i8** %failmsg, align 8
  call void @free(i8* %89) #9
  br label %out62

out62:                                            ; preds = %fail, %if.end32
  %90 = load %struct.Channel** %c, align 8
  %output = getelementptr inbounds %struct.Channel* %90, i32 0, i32 17
  %call63 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %out)
  %call64 = call i64 @sshbuf_len(%struct.sshbuf* %out)
  %conv = trunc i64 %call64 to i32
  call void @buffer_put_string(%struct.sshbuf* %output, i8* %call63, i32 %conv)
  call void @sshbuf_free(%struct.sshbuf* %out)
  %91 = load %struct.Channel** %c, align 8
  %mux_pause = getelementptr inbounds %struct.Channel* %91, i32 0, i32 46
  %92 = load i32* %mux_pause, align 4
  %cmp65 = icmp sle i32 %92, 0
  br i1 %cmp65, label %if.then67, label %if.end69

if.then67:                                        ; preds = %out62
  %93 = load %struct.Channel** %c, align 8
  %mux_pause68 = getelementptr inbounds %struct.Channel* %93, i32 0, i32 46
  %94 = load i32* %mux_pause68, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str1121053, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8]* @__func__.mux_confirm_remote_forward, i32 0, i32 0), i32 %94) #11
  unreachable

if.end69:                                         ; preds = %out62
  %95 = load %struct.Channel** %c, align 8
  %mux_pause70 = getelementptr inbounds %struct.Channel* %95, i32 0, i32 46
  store i32 0, i32* %mux_pause70, align 4
  br label %return

return:                                           ; preds = %if.end69, %if.then
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal void @mux_stdio_confirm(i32 %id, i32 %success, i8* %arg) #0 {
entry:
  %id.addr = alloca i32, align 4
  %success.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %cctx = alloca %struct.mux_stdio_confirm_ctx*, align 8
  %c = alloca %struct.Channel*, align 8
  %cc = alloca %struct.Channel*, align 8
  %reply = alloca %struct.sshbuf, align 8
  store i32 %id, i32* %id.addr, align 4
  store i32 %success, i32* %success.addr, align 4
  store i8* %arg, i8** %arg.addr, align 8
  %0 = load i8** %arg.addr, align 8
  %1 = bitcast i8* %0 to %struct.mux_stdio_confirm_ctx*
  store %struct.mux_stdio_confirm_ctx* %1, %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %2 = load %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %cmp = icmp eq %struct.mux_stdio_confirm_ctx* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str1061047, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.mux_stdio_confirm, i32 0, i32 0)) #11
  unreachable

if.end:                                           ; preds = %entry
  %3 = load i32* %id.addr, align 4
  %call = call %struct.Channel* @channel_by_id(i32 %3)
  store %struct.Channel* %call, %struct.Channel** %c, align 8
  %cmp1 = icmp eq %struct.Channel* %call, null
  br i1 %cmp1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %if.end
  %4 = load i32* %id.addr, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([25 x i8]* @.str1071048, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.mux_stdio_confirm, i32 0, i32 0), i32 %4) #11
  unreachable

if.end3:                                          ; preds = %if.end
  %5 = load %struct.Channel** %c, align 8
  %ctl_chan = getelementptr inbounds %struct.Channel* %5, i32 0, i32 10
  %6 = load i32* %ctl_chan, align 4
  %call4 = call %struct.Channel* @channel_by_id(i32 %6)
  store %struct.Channel* %call4, %struct.Channel** %cc, align 8
  %cmp5 = icmp eq %struct.Channel* %call4, null
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end3
  %7 = load i32* %id.addr, align 4
  %8 = load %struct.Channel** %c, align 8
  %ctl_chan7 = getelementptr inbounds %struct.Channel* %8, i32 0, i32 10
  %9 = load i32* %ctl_chan7, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([40 x i8]* @.str1081049, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.mux_stdio_confirm, i32 0, i32 0), i32 %7, i32 %9) #11
  unreachable

if.end8:                                          ; preds = %if.end3
  %10 = load i32* %success.addr, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.end10, label %if.then9

if.then9:                                         ; preds = %if.end8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str1091050, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.mux_stdio_confirm, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %reply)
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 -2147483645)
  %11 = load %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %rid = getelementptr inbounds %struct.mux_stdio_confirm_ctx* %11, i32 0, i32 0
  %12 = load i32* %rid, align 4
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 %12)
  call void @buffer_put_cstring(%struct.sshbuf* %reply, i8* getelementptr inbounds ([29 x i8]* @.str1101051, i32 0, i32 0))
  br label %done

if.end10:                                         ; preds = %if.end8
  call void (i8*, ...)* @debug3(i8* getelementptr inbounds ([26 x i8]* @.str1111052, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.mux_stdio_confirm, i32 0, i32 0))
  call void @sshbuf_init(%struct.sshbuf* %reply)
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 -2147483642)
  %13 = load %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %rid11 = getelementptr inbounds %struct.mux_stdio_confirm_ctx* %13, i32 0, i32 0
  %14 = load i32* %rid11, align 4
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 %14)
  %15 = load %struct.Channel** %c, align 8
  %self = getelementptr inbounds %struct.Channel* %15, i32 0, i32 1
  %16 = load i32* %self, align 4
  call void @buffer_put_int(%struct.sshbuf* %reply, i32 %16)
  br label %done

done:                                             ; preds = %if.end10, %if.then9
  %17 = load %struct.Channel** %cc, align 8
  %output = getelementptr inbounds %struct.Channel* %17, i32 0, i32 17
  %call12 = call i8* @sshbuf_mutable_ptr(%struct.sshbuf* %reply)
  %call13 = call i64 @sshbuf_len(%struct.sshbuf* %reply)
  %conv = trunc i64 %call13 to i32
  call void @buffer_put_string(%struct.sshbuf* %output, i8* %call12, i32 %conv)
  call void @sshbuf_free(%struct.sshbuf* %reply)
  %18 = load %struct.Channel** %cc, align 8
  %mux_pause = getelementptr inbounds %struct.Channel* %18, i32 0, i32 46
  %19 = load i32* %mux_pause, align 4
  %cmp14 = icmp sle i32 %19, 0
  br i1 %cmp14, label %if.then16, label %if.end18

if.then16:                                        ; preds = %done
  %20 = load %struct.Channel** %cc, align 8
  %mux_pause17 = getelementptr inbounds %struct.Channel* %20, i32 0, i32 46
  %21 = load i32* %mux_pause17, align 4
  call void (i8*, ...)* @fatal(i8* getelementptr inbounds ([17 x i8]* @.str1121053, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @__func__.mux_stdio_confirm, i32 0, i32 0), i32 %21) #11
  unreachable

if.end18:                                         ; preds = %done
  %22 = load %struct.Channel** %cc, align 8
  %mux_pause19 = getelementptr inbounds %struct.Channel* %22, i32 0, i32 46
  store i32 0, i32* %mux_pause19, align 4
  %23 = load %struct.Channel** %c, align 8
  %open_confirm_ctx = getelementptr inbounds %struct.Channel* %23, i32 0, i32 34
  store i8* null, i8** %open_confirm_ctx, align 8
  %24 = load %struct.mux_stdio_confirm_ctx** %cctx, align 8
  %25 = bitcast %struct.mux_stdio_confirm_ctx* %24 to i8*
  call void @free(i8* %25) #9
  ret void
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @mux_client_read(i32 %fd, %struct.sshbuf* %b, i32 %need) #0 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %b.addr = alloca %struct.sshbuf*, align 8
  %need.addr = alloca i32, align 4
  %have = alloca i32, align 4
  %len = alloca i64, align 8
  %p = alloca i8*, align 8
  %pfd = alloca %struct.pollfd, align 4
  store i32 %fd, i32* %fd.addr, align 4
  store %struct.sshbuf* %b, %struct.sshbuf** %b.addr, align 8
  store i32 %need, i32* %need.addr, align 4
  %0 = load i32* %fd.addr, align 4
  %fd1 = getelementptr inbounds %struct.pollfd* %pfd, i32 0, i32 0
  store i32 %0, i32* %fd1, align 4
  %events = getelementptr inbounds %struct.pollfd* %pfd, i32 0, i32 1
  store i16 1, i16* %events, align 2
  %1 = load %struct.sshbuf** %b.addr, align 8
  %2 = load i32* %need.addr, align 4
  %call = call i8* @buffer_append_space(%struct.sshbuf* %1, i32 %2)
  store i8* %call, i8** %p, align 8
  store i32 0, i32* %have, align 4
  br label %for.cond

for.cond:                                         ; preds = %if.end21, %sw.bb11, %entry
  %3 = load i32* %have, align 4
  %4 = load i32* %need.addr, align 4
  %cmp = icmp ult i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load volatile i32* @muxclient_terminate, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %call2 = call i32* @__errno_location() #2
  store i32 4, i32* %call2, align 4
  %6 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %7 = extractvalue { i32, i1 } %6, 0
  %8 = extractvalue { i32, i1 } %6, 1
  %9 = xor i1 %8, true
  br i1 %9, label %cont, label %trap

trap:                                             ; preds = %if.then
  call void @llvm.trap() #3
  unreachable

cont:                                             ; preds = %if.then
  store i32 %7, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  %10 = load i32* %fd.addr, align 4
  %11 = load i8** %p, align 8
  %12 = load i32* %have, align 4
  %idx.ext = zext i32 %12 to i64
  %add.ptr = getelementptr inbounds i8* %11, i64 %idx.ext
  %13 = load i32* %need.addr, align 4
  %14 = load i32* %have, align 4
  %sub = sub i32 %13, %14
  %conv = zext i32 %sub to i64
  %call3 = call i64 @read(i32 %10, i8* %add.ptr, i64 %conv)
  store i64 %call3, i64* %len, align 8
  %15 = load i64* %len, align 8
  %cmp4 = icmp slt i64 %15, 0
  br i1 %cmp4, label %if.then6, label %if.end14

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #2
  %16 = load i32* %call7, align 4
  switch i32 %16, label %sw.default [
    i32 11, label %sw.bb
    i32 4, label %sw.bb11
  ]

sw.bb:                                            ; preds = %if.then6
  %17 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = extractvalue { i32, i1 } %17, 1
  %20 = xor i1 %19, true
  br i1 %20, label %cont9, label %trap8

trap8:                                            ; preds = %sw.bb
  call void @llvm.trap() #3
  unreachable

cont9:                                            ; preds = %sw.bb
  %call10 = call i32 @poll(%struct.pollfd* %pfd, i64 1, i32 %18)
  br label %sw.bb11

sw.bb11:                                          ; preds = %cont9, %if.then6
  br label %for.cond

sw.default:                                       ; preds = %if.then6
  %21 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %22 = extractvalue { i32, i1 } %21, 0
  %23 = extractvalue { i32, i1 } %21, 1
  %24 = xor i1 %23, true
  br i1 %24, label %cont13, label %trap12

trap12:                                           ; preds = %sw.default
  call void @llvm.trap() #3
  unreachable

cont13:                                           ; preds = %sw.default
  store i32 %22, i32* %retval
  br label %return

if.end14:                                         ; preds = %if.end
  %25 = load i64* %len, align 8
  %cmp15 = icmp eq i64 %25, 0
  br i1 %cmp15, label %if.then17, label %if.end21

if.then17:                                        ; preds = %if.end14
  %call18 = call i32* @__errno_location() #2
  store i32 32, i32* %call18, align 4
  %26 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 1)
  %27 = extractvalue { i32, i1 } %26, 0
  %28 = extractvalue { i32, i1 } %26, 1
  %29 = xor i1 %28, true
  br i1 %29, label %cont20, label %trap19

trap19:                                           ; preds = %if.then17
  call void @llvm.trap() #3
  unreachable

cont20:                                           ; preds = %if.then17
  store i32 %27, i32* %retval
  br label %return

if.end21:                                         ; preds = %if.end14
  %30 = load i64* %len, align 8
  %conv22 = trunc i64 %30 to i32
  %31 = load i32* %have, align 4
  %add = add i32 %31, %conv22
  store i32 %add, i32* %have, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %cont20, %cont13, %cont
  %32 = load i32* %retval
  ret i32 %32
}

; Function Attrs: nounwind sspreq uwtable
define internal i32 @compare_host(i8* %a, i8* %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  store i8* %b, i8** %b.addr, align 8
  %0 = load i8** %a.addr, align 8
  %cmp = icmp eq i8* %0, null
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i8** %b.addr, align 8
  %cmp1 = icmp eq i8* %1, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load i8** %a.addr, align 8
  %cmp2 = icmp eq i8* %2, null
  br i1 %cmp2, label %if.then4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8** %b.addr, align 8
  %cmp3 = icmp eq i8* %3, null
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval
  br label %return

if.end5:                                          ; preds = %lor.lhs.false
  %4 = load i8** %a.addr, align 8
  %5 = load i8** %b.addr, align 8
  %call = call i32 @strcmp(i8* %4, i8* %5) #12
  %cmp6 = icmp eq i32 %call, 0
  %conv = zext i1 %cmp6 to i32
  store i32 %conv, i32* %retval
  br label %return

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i32* %retval
  ret i32 %6
}

attributes #0 = { nounwind sspreq uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { noreturn nounwind }
attributes #4 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind sspreq uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn }
attributes #12 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0}
!llvm.dbg.cu = !{!1}
!llvm.module.flags = !{!729, !730}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
!1 = metadata !{i32 786449, metadata !2, i32 12, metadata !"clang version 3.5.0 (tags/RELEASE_350/final)", i1 false, metadata !"", i32 0, metadata !3, metadata !67, metadata !68, metadata !707, metadata !67, metadata !"", i32 1} ; [ DW_TAG_compile_unit ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c] [DW_LANG_C99]
!2 = metadata !{metadata !"sshconnect2.c", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!3 = metadata !{metadata !4, metadata !18, metadata !30, metadata !35, metadata !47, metadata !60}
!4 = metadata !{i32 786436, metadata !5, null, metadata !"kex_init_proposals", i32 72, i64 32, i64 32, i32 0, i32 0, null, metadata !6, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [kex_init_proposals] [line 72, size 32, align 32, offset 0] [def] [from ]
!5 = metadata !{metadata !"./kex.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!6 = metadata !{metadata !7, metadata !8, metadata !9, metadata !10, metadata !11, metadata !12, metadata !13, metadata !14, metadata !15, metadata !16, metadata !17}
!7 = metadata !{i32 786472, metadata !"PROPOSAL_KEX_ALGS", i64 0} ; [ DW_TAG_enumerator ] [PROPOSAL_KEX_ALGS :: 0]
!8 = metadata !{i32 786472, metadata !"PROPOSAL_SERVER_HOST_KEY_ALGS", i64 1} ; [ DW_TAG_enumerator ] [PROPOSAL_SERVER_HOST_KEY_ALGS :: 1]
!9 = metadata !{i32 786472, metadata !"PROPOSAL_ENC_ALGS_CTOS", i64 2} ; [ DW_TAG_enumerator ] [PROPOSAL_ENC_ALGS_CTOS :: 2]
!10 = metadata !{i32 786472, metadata !"PROPOSAL_ENC_ALGS_STOC", i64 3} ; [ DW_TAG_enumerator ] [PROPOSAL_ENC_ALGS_STOC :: 3]
!11 = metadata !{i32 786472, metadata !"PROPOSAL_MAC_ALGS_CTOS", i64 4} ; [ DW_TAG_enumerator ] [PROPOSAL_MAC_ALGS_CTOS :: 4]
!12 = metadata !{i32 786472, metadata !"PROPOSAL_MAC_ALGS_STOC", i64 5} ; [ DW_TAG_enumerator ] [PROPOSAL_MAC_ALGS_STOC :: 5]
!13 = metadata !{i32 786472, metadata !"PROPOSAL_COMP_ALGS_CTOS", i64 6} ; [ DW_TAG_enumerator ] [PROPOSAL_COMP_ALGS_CTOS :: 6]
!14 = metadata !{i32 786472, metadata !"PROPOSAL_COMP_ALGS_STOC", i64 7} ; [ DW_TAG_enumerator ] [PROPOSAL_COMP_ALGS_STOC :: 7]
!15 = metadata !{i32 786472, metadata !"PROPOSAL_LANG_CTOS", i64 8} ; [ DW_TAG_enumerator ] [PROPOSAL_LANG_CTOS :: 8]
!16 = metadata !{i32 786472, metadata !"PROPOSAL_LANG_STOC", i64 9} ; [ DW_TAG_enumerator ] [PROPOSAL_LANG_STOC :: 9]
!17 = metadata !{i32 786472, metadata !"PROPOSAL_MAX", i64 10} ; [ DW_TAG_enumerator ] [PROPOSAL_MAX :: 10]
!18 = metadata !{i32 786436, metadata !5, null, metadata !"kex_exchange", i32 92, i64 32, i64 32, i32 0, i32 0, null, metadata !19, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [kex_exchange] [line 92, size 32, align 32, offset 0] [def] [from ]
!19 = metadata !{metadata !20, metadata !21, metadata !22, metadata !23, metadata !24, metadata !25, metadata !26, metadata !27, metadata !28, metadata !29}
!20 = metadata !{i32 786472, metadata !"KEX_DH_GRP1_SHA1", i64 0} ; [ DW_TAG_enumerator ] [KEX_DH_GRP1_SHA1 :: 0]
!21 = metadata !{i32 786472, metadata !"KEX_DH_GRP14_SHA1", i64 1} ; [ DW_TAG_enumerator ] [KEX_DH_GRP14_SHA1 :: 1]
!22 = metadata !{i32 786472, metadata !"KEX_DH_GRP14_SHA256", i64 2} ; [ DW_TAG_enumerator ] [KEX_DH_GRP14_SHA256 :: 2]
!23 = metadata !{i32 786472, metadata !"KEX_DH_GRP16_SHA512", i64 3} ; [ DW_TAG_enumerator ] [KEX_DH_GRP16_SHA512 :: 3]
!24 = metadata !{i32 786472, metadata !"KEX_DH_GRP18_SHA512", i64 4} ; [ DW_TAG_enumerator ] [KEX_DH_GRP18_SHA512 :: 4]
!25 = metadata !{i32 786472, metadata !"KEX_DH_GEX_SHA1", i64 5} ; [ DW_TAG_enumerator ] [KEX_DH_GEX_SHA1 :: 5]
!26 = metadata !{i32 786472, metadata !"KEX_DH_GEX_SHA256", i64 6} ; [ DW_TAG_enumerator ] [KEX_DH_GEX_SHA256 :: 6]
!27 = metadata !{i32 786472, metadata !"KEX_ECDH_SHA2", i64 7} ; [ DW_TAG_enumerator ] [KEX_ECDH_SHA2 :: 7]
!28 = metadata !{i32 786472, metadata !"KEX_C25519_SHA256", i64 8} ; [ DW_TAG_enumerator ] [KEX_C25519_SHA256 :: 8]
!29 = metadata !{i32 786472, metadata !"KEX_MAX", i64 9} ; [ DW_TAG_enumerator ] [KEX_MAX :: 9]
!30 = metadata !{i32 786436, metadata !31, null, metadata !"", i32 32, i64 32, i64 32, i32 0, i32 0, null, metadata !32, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 32, size 32, align 32, offset 0] [def] [from ]
!31 = metadata !{metadata !"./dispatch.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!32 = metadata !{metadata !33, metadata !34}
!33 = metadata !{i32 786472, metadata !"DISPATCH_BLOCK", i64 0} ; [ DW_TAG_enumerator ] [DISPATCH_BLOCK :: 0]
!34 = metadata !{i32 786472, metadata !"DISPATCH_NONBLOCK", i64 1} ; [ DW_TAG_enumerator ] [DISPATCH_NONBLOCK :: 1]
!35 = metadata !{i32 786436, metadata !36, null, metadata !"", i32 43, i64 32, i64 32, i32 0, i32 0, null, metadata !37, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [line 43, size 32, align 32, offset 0] [def] [from ]
!36 = metadata !{metadata !"./log.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!37 = metadata !{metadata !38, metadata !39, metadata !40, metadata !41, metadata !42, metadata !43, metadata !44, metadata !45, metadata !46}
!38 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_QUIET", i64 0} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_QUIET :: 0]
!39 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_FATAL", i64 1} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_FATAL :: 1]
!40 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_ERROR", i64 2} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_ERROR :: 2]
!41 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_INFO", i64 3} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_INFO :: 3]
!42 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_VERBOSE", i64 4} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_VERBOSE :: 4]
!43 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_DEBUG1", i64 5} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_DEBUG1 :: 5]
!44 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_DEBUG2", i64 6} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_DEBUG2 :: 6]
!45 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_DEBUG3", i64 7} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_DEBUG3 :: 7]
!46 = metadata !{i32 786472, metadata !"SYSLOG_LEVEL_NOT_SET", i64 -1} ; [ DW_TAG_enumerator ] [SYSLOG_LEVEL_NOT_SET :: -1]
!47 = metadata !{i32 786436, metadata !48, null, metadata !"sshkey_types", i32 55, i64 32, i64 32, i32 0, i32 0, null, metadata !49, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [sshkey_types] [line 55, size 32, align 32, offset 0] [def] [from ]
!48 = metadata !{metadata !"./sshkey.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!49 = metadata !{metadata !50, metadata !51, metadata !52, metadata !53, metadata !54, metadata !55, metadata !56, metadata !57, metadata !58, metadata !59}
!50 = metadata !{i32 786472, metadata !"KEY_RSA1", i64 0} ; [ DW_TAG_enumerator ] [KEY_RSA1 :: 0]
!51 = metadata !{i32 786472, metadata !"KEY_RSA", i64 1} ; [ DW_TAG_enumerator ] [KEY_RSA :: 1]
!52 = metadata !{i32 786472, metadata !"KEY_DSA", i64 2} ; [ DW_TAG_enumerator ] [KEY_DSA :: 2]
!53 = metadata !{i32 786472, metadata !"KEY_ECDSA", i64 3} ; [ DW_TAG_enumerator ] [KEY_ECDSA :: 3]
!54 = metadata !{i32 786472, metadata !"KEY_ED25519", i64 4} ; [ DW_TAG_enumerator ] [KEY_ED25519 :: 4]
!55 = metadata !{i32 786472, metadata !"KEY_RSA_CERT", i64 5} ; [ DW_TAG_enumerator ] [KEY_RSA_CERT :: 5]
!56 = metadata !{i32 786472, metadata !"KEY_DSA_CERT", i64 6} ; [ DW_TAG_enumerator ] [KEY_DSA_CERT :: 6]
!57 = metadata !{i32 786472, metadata !"KEY_ECDSA_CERT", i64 7} ; [ DW_TAG_enumerator ] [KEY_ECDSA_CERT :: 7]
!58 = metadata !{i32 786472, metadata !"KEY_ED25519_CERT", i64 8} ; [ DW_TAG_enumerator ] [KEY_ED25519_CERT :: 8]
!59 = metadata !{i32 786472, metadata !"KEY_UNSPEC", i64 9} ; [ DW_TAG_enumerator ] [KEY_UNSPEC :: 9]
!60 = metadata !{i32 786436, metadata !48, null, metadata !"sshkey_fp_rep", i32 72, i64 32, i64 32, i32 0, i32 0, null, metadata !61, i32 0, null, null, null} ; [ DW_TAG_enumeration_type ] [sshkey_fp_rep] [line 72, size 32, align 32, offset 0] [def] [from ]
!61 = metadata !{metadata !62, metadata !63, metadata !64, metadata !65, metadata !66}
!62 = metadata !{i32 786472, metadata !"SSH_FP_DEFAULT", i64 0} ; [ DW_TAG_enumerator ] [SSH_FP_DEFAULT :: 0]
!63 = metadata !{i32 786472, metadata !"SSH_FP_HEX", i64 1} ; [ DW_TAG_enumerator ] [SSH_FP_HEX :: 1]
!64 = metadata !{i32 786472, metadata !"SSH_FP_BASE64", i64 2} ; [ DW_TAG_enumerator ] [SSH_FP_BASE64 :: 2]
!65 = metadata !{i32 786472, metadata !"SSH_FP_BUBBLEBABBLE", i64 3} ; [ DW_TAG_enumerator ] [SSH_FP_BUBBLEBABBLE :: 3]
!66 = metadata !{i32 786472, metadata !"SSH_FP_RANDOMART", i64 4} ; [ DW_TAG_enumerator ] [SSH_FP_RANDOMART :: 4]
!67 = metadata !{}
!68 = metadata !{metadata !69, metadata !91, metadata !385, metadata !389, metadata !390, metadata !450, metadata !451, metadata !452, metadata !453, metadata !454, metadata !455, metadata !456, metadata !457, metadata !458, metadata !459, metadata !460, metadata !461, metadata !462, metadata !463, metadata !466, metadata !471, metadata !474, metadata !477, metadata !482, metadata !487, metadata !490, metadata !493, metadata !496, metadata !497, metadata !498, metadata !499, metadata !500, metadata !503, metadata !704}
!69 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"ssh_kex2", metadata !"ssh_kex2", metadata !"", i32 158, metadata !71, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, %struct.sockaddr*, i16)* @ssh_kex2, null, null, metadata !67, i32 159} ; [ DW_TAG_subprogram ] [line 158] [def] [scope 159] [ssh_kex2]
!70 = metadata !{i32 786473, metadata !2}         ; [ DW_TAG_file_type ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!71 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !72, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!72 = metadata !{null, metadata !73, metadata !75, metadata !87}
!73 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !74} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from char]
!74 = metadata !{i32 786468, null, null, metadata !"char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!75 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !76} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from sockaddr]
!76 = metadata !{i32 786451, metadata !77, null, metadata !"sockaddr", i32 149, i64 128, i64 16, i32 0, i32 0, null, metadata !78, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sockaddr] [line 149, size 128, align 16, offset 0] [def] [from ]
!77 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/socket.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!78 = metadata !{metadata !79, metadata !83}
!79 = metadata !{i32 786445, metadata !77, metadata !76, metadata !"sa_family", i32 151, i64 16, i64 16, i64 0, i32 0, metadata !80} ; [ DW_TAG_member ] [sa_family] [line 151, size 16, align 16, offset 0] [from sa_family_t]
!80 = metadata !{i32 786454, metadata !81, null, metadata !"sa_family_t", i32 28, i64 0, i64 0, i64 0, i32 0, metadata !82} ; [ DW_TAG_typedef ] [sa_family_t] [line 28, size 0, align 0, offset 0] [from unsigned short]
!81 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/sockaddr.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!82 = metadata !{i32 786468, null, null, metadata !"unsigned short", i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [unsigned short] [line 0, size 16, align 16, offset 0, enc DW_ATE_unsigned]
!83 = metadata !{i32 786445, metadata !77, metadata !76, metadata !"sa_data", i32 152, i64 112, i64 8, i64 16, i32 0, metadata !84} ; [ DW_TAG_member ] [sa_data] [line 152, size 112, align 8, offset 16] [from ]
!84 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 112, i64 8, i32 0, i32 0, metadata !74, metadata !85, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 112, align 8, offset 0] [from char]
!85 = metadata !{metadata !86}
!86 = metadata !{i32 786465, i64 0, i64 14}       ; [ DW_TAG_subrange_type ] [0, 13]
!87 = metadata !{i32 786454, metadata !88, null, metadata !"u_short", i32 34, i64 0, i64 0, i64 0, i32 0, metadata !89} ; [ DW_TAG_typedef ] [u_short] [line 34, size 0, align 0, offset 0] [from __u_short]
!88 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/sys/types.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!89 = metadata !{i32 786454, metadata !90, null, metadata !"__u_short", i32 31, i64 0, i64 0, i64 0, i32 0, metadata !82} ; [ DW_TAG_typedef ] [__u_short] [line 31, size 0, align 0, offset 0] [from unsigned short]
!90 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/types.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!91 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"ssh_userauth2", metadata !"ssh_userauth2", metadata !"", i32 365, metadata !92, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i8*, i8*, %struct.Sensitive*)* @ssh_userauth2, null, null, metadata !67, i32 367} ; [ DW_TAG_subprogram ] [line 365] [def] [scope 367] [ssh_userauth2]
!92 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !93, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!93 = metadata !{null, metadata !94, metadata !94, metadata !73, metadata !96}
!94 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !95} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!95 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !74} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from char]
!96 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !97} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Sensitive]
!97 = metadata !{i32 786454, metadata !98, null, metadata !"Sensitive", i32 27, i64 0, i64 0, i64 0, i32 0, metadata !99} ; [ DW_TAG_typedef ] [Sensitive] [line 27, size 0, align 0, offset 0] [from Sensitive]
!98 = metadata !{metadata !"./sshconnect.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!99 = metadata !{i32 786451, metadata !98, null, metadata !"Sensitive", i32 28, i64 128, i64 64, i32 0, i32 0, null, metadata !100, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [Sensitive] [line 28, size 128, align 64, offset 0] [def] [from ]
!100 = metadata !{metadata !101, metadata !383, metadata !384}
!101 = metadata !{i32 786445, metadata !98, metadata !99, metadata !"keys", i32 29, i64 64, i64 64, i64 0, i32 0, metadata !102} ; [ DW_TAG_member ] [keys] [line 29, size 64, align 64, offset 0] [from ]
!102 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !103} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!103 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !104} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Key]
!104 = metadata !{i32 786454, metadata !105, null, metadata !"Key", i32 31, i64 0, i64 0, i64 0, i32 0, metadata !106} ; [ DW_TAG_typedef ] [Key] [line 31, size 0, align 0, offset 0] [from sshkey]
!105 = metadata !{metadata !"./key.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!106 = metadata !{i32 786451, metadata !48, null, metadata !"sshkey", i32 99, i64 512, i64 64, i32 0, i32 0, null, metadata !107, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshkey] [line 99, size 512, align 64, offset 0] [def] [from ]
!107 = metadata !{metadata !108, metadata !110, metadata !111, metadata !267, metadata !335, metadata !336, metadata !341, metadata !345, metadata !346}
!108 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"type", i32 100, i64 32, i64 32, i64 0, i32 0, metadata !109} ; [ DW_TAG_member ] [type] [line 100, size 32, align 32, offset 0] [from int]
!109 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!110 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"flags", i32 101, i64 32, i64 32, i64 32, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 101, size 32, align 32, offset 32] [from int]
!111 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"rsa", i32 102, i64 64, i64 64, i64 64, i32 0, metadata !112} ; [ DW_TAG_member ] [rsa] [line 102, size 64, align 64, offset 64] [from ]
!112 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !113} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from RSA]
!113 = metadata !{i32 786454, metadata !114, null, metadata !"RSA", i32 140, i64 0, i64 0, i64 0, i32 0, metadata !115} ; [ DW_TAG_typedef ] [RSA] [line 140, size 0, align 0, offset 0] [from rsa_st]
!114 = metadata !{metadata !"/usr/include/openssl/ossl_typ.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!115 = metadata !{i32 786451, metadata !116, null, metadata !"rsa_st", i32 129, i64 1344, i64 64, i32 0, i32 0, null, metadata !117, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [rsa_st] [line 129, size 1344, align 64, offset 0] [def] [from ]
!116 = metadata !{metadata !"/usr/include/openssl/rsa.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!117 = metadata !{metadata !118, metadata !119, metadata !121, metadata !218, metadata !222, metadata !223, metadata !224, metadata !225, metadata !226, metadata !227, metadata !228, metadata !229, metadata !230, metadata !256, metadata !257, metadata !258, metadata !259, metadata !260, metadata !261, metadata !262, metadata !266}
!118 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"pad", i32 133, i64 32, i64 32, i64 0, i32 0, metadata !109} ; [ DW_TAG_member ] [pad] [line 133, size 32, align 32, offset 0] [from int]
!119 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"version", i32 134, i64 64, i64 64, i64 64, i32 0, metadata !120} ; [ DW_TAG_member ] [version] [line 134, size 64, align 64, offset 64] [from long int]
!120 = metadata !{i32 786468, null, null, metadata !"long int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!121 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"meth", i32 135, i64 64, i64 64, i64 128, i32 0, metadata !122} ; [ DW_TAG_member ] [meth] [line 135, size 64, align 64, offset 128] [from ]
!122 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !123} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!123 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !124} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from RSA_METHOD]
!124 = metadata !{i32 786454, metadata !114, null, metadata !"RSA_METHOD", i32 141, i64 0, i64 0, i64 0, i32 0, metadata !125} ; [ DW_TAG_typedef ] [RSA_METHOD] [line 141, size 0, align 0, offset 0] [from rsa_meth_st]
!125 = metadata !{i32 786451, metadata !116, null, metadata !"rsa_meth_st", i32 85, i64 896, i64 64, i32 0, i32 0, null, metadata !126, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [rsa_meth_st] [line 85, size 896, align 64, offset 0] [def] [from ]
!126 = metadata !{metadata !127, metadata !128, metadata !136, metadata !137, metadata !138, metadata !139, metadata !160, metadata !177, metadata !181, metadata !182, metadata !183, metadata !184, metadata !192, metadata !196}
!127 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"name", i32 87, i64 64, i64 64, i64 0, i32 0, metadata !94} ; [ DW_TAG_member ] [name] [line 87, size 64, align 64, offset 0] [from ]
!128 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_pub_enc", i32 88, i64 64, i64 64, i64 64, i32 0, metadata !129} ; [ DW_TAG_member ] [rsa_pub_enc] [line 88, size 64, align 64, offset 64] [from ]
!129 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !130} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!130 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !131, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!131 = metadata !{metadata !109, metadata !109, metadata !132, metadata !135, metadata !112, metadata !109}
!132 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !133} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!133 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !134} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from unsigned char]
!134 = metadata !{i32 786468, null, null, metadata !"unsigned char", i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ] [unsigned char] [line 0, size 8, align 8, offset 0, enc DW_ATE_unsigned_char]
!135 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !134} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from unsigned char]
!136 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_pub_dec", i32 91, i64 64, i64 64, i64 128, i32 0, metadata !129} ; [ DW_TAG_member ] [rsa_pub_dec] [line 91, size 64, align 64, offset 128] [from ]
!137 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_priv_enc", i32 94, i64 64, i64 64, i64 192, i32 0, metadata !129} ; [ DW_TAG_member ] [rsa_priv_enc] [line 94, size 64, align 64, offset 192] [from ]
!138 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_priv_dec", i32 97, i64 64, i64 64, i64 256, i32 0, metadata !129} ; [ DW_TAG_member ] [rsa_priv_dec] [line 97, size 64, align 64, offset 256] [from ]
!139 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_mod_exp", i32 100, i64 64, i64 64, i64 320, i32 0, metadata !140} ; [ DW_TAG_member ] [rsa_mod_exp] [line 100, size 64, align 64, offset 320] [from ]
!140 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !141} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!141 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !142, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!142 = metadata !{metadata !109, metadata !143, metadata !155, metadata !112, metadata !157}
!143 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !144} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from BIGNUM]
!144 = metadata !{i32 786454, metadata !114, null, metadata !"BIGNUM", i32 114, i64 0, i64 0, i64 0, i32 0, metadata !145} ; [ DW_TAG_typedef ] [BIGNUM] [line 114, size 0, align 0, offset 0] [from bignum_st]
!145 = metadata !{i32 786451, metadata !146, null, metadata !"bignum_st", i32 319, i64 192, i64 64, i32 0, i32 0, null, metadata !147, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [bignum_st] [line 319, size 192, align 64, offset 0] [def] [from ]
!146 = metadata !{metadata !"/usr/include/openssl/bn.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!147 = metadata !{metadata !148, metadata !151, metadata !152, metadata !153, metadata !154}
!148 = metadata !{i32 786445, metadata !146, metadata !145, metadata !"d", i32 321, i64 64, i64 64, i64 0, i32 0, metadata !149} ; [ DW_TAG_member ] [d] [line 321, size 64, align 64, offset 0] [from ]
!149 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !150} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from long unsigned int]
!150 = metadata !{i32 786468, null, null, metadata !"long unsigned int", i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!151 = metadata !{i32 786445, metadata !146, metadata !145, metadata !"top", i32 322, i64 32, i64 32, i64 64, i32 0, metadata !109} ; [ DW_TAG_member ] [top] [line 322, size 32, align 32, offset 64] [from int]
!152 = metadata !{i32 786445, metadata !146, metadata !145, metadata !"dmax", i32 324, i64 32, i64 32, i64 96, i32 0, metadata !109} ; [ DW_TAG_member ] [dmax] [line 324, size 32, align 32, offset 96] [from int]
!153 = metadata !{i32 786445, metadata !146, metadata !145, metadata !"neg", i32 325, i64 32, i64 32, i64 128, i32 0, metadata !109} ; [ DW_TAG_member ] [neg] [line 325, size 32, align 32, offset 128] [from int]
!154 = metadata !{i32 786445, metadata !146, metadata !145, metadata !"flags", i32 326, i64 32, i64 32, i64 160, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 326, size 32, align 32, offset 160] [from int]
!155 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !156} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!156 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !144} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from BIGNUM]
!157 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !158} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from BN_CTX]
!158 = metadata !{i32 786454, metadata !114, null, metadata !"BN_CTX", i32 115, i64 0, i64 0, i64 0, i32 0, metadata !159} ; [ DW_TAG_typedef ] [BN_CTX] [line 115, size 0, align 0, offset 0] [from bignum_ctx]
!159 = metadata !{i32 786451, metadata !114, null, metadata !"bignum_ctx", i32 115, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [bignum_ctx] [line 115, size 0, align 0, offset 0] [decl] [from ]
!160 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"bn_mod_exp", i32 101, i64 64, i64 64, i64 384, i32 0, metadata !161} ; [ DW_TAG_member ] [bn_mod_exp] [line 101, size 64, align 64, offset 384] [from ]
!161 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !162} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!162 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !163, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!163 = metadata !{metadata !109, metadata !143, metadata !155, metadata !155, metadata !155, metadata !157, metadata !164}
!164 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !165} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from BN_MONT_CTX]
!165 = metadata !{i32 786454, metadata !114, null, metadata !"BN_MONT_CTX", i32 117, i64 0, i64 0, i64 0, i32 0, metadata !166} ; [ DW_TAG_typedef ] [BN_MONT_CTX] [line 117, size 0, align 0, offset 0] [from bn_mont_ctx_st]
!166 = metadata !{i32 786451, metadata !146, null, metadata !"bn_mont_ctx_st", i32 330, i64 832, i64 64, i32 0, i32 0, null, metadata !167, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [bn_mont_ctx_st] [line 330, size 832, align 64, offset 0] [def] [from ]
!167 = metadata !{metadata !168, metadata !169, metadata !170, metadata !171, metadata !172, metadata !176}
!168 = metadata !{i32 786445, metadata !146, metadata !166, metadata !"ri", i32 332, i64 32, i64 32, i64 0, i32 0, metadata !109} ; [ DW_TAG_member ] [ri] [line 332, size 32, align 32, offset 0] [from int]
!169 = metadata !{i32 786445, metadata !146, metadata !166, metadata !"RR", i32 333, i64 192, i64 64, i64 64, i32 0, metadata !144} ; [ DW_TAG_member ] [RR] [line 333, size 192, align 64, offset 64] [from BIGNUM]
!170 = metadata !{i32 786445, metadata !146, metadata !166, metadata !"N", i32 334, i64 192, i64 64, i64 256, i32 0, metadata !144} ; [ DW_TAG_member ] [N] [line 334, size 192, align 64, offset 256] [from BIGNUM]
!171 = metadata !{i32 786445, metadata !146, metadata !166, metadata !"Ni", i32 335, i64 192, i64 64, i64 448, i32 0, metadata !144} ; [ DW_TAG_member ] [Ni] [line 335, size 192, align 64, offset 448] [from BIGNUM]
!172 = metadata !{i32 786445, metadata !146, metadata !166, metadata !"n0", i32 337, i64 128, i64 64, i64 640, i32 0, metadata !173} ; [ DW_TAG_member ] [n0] [line 337, size 128, align 64, offset 640] [from ]
!173 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 128, i64 64, i32 0, i32 0, metadata !150, metadata !174, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 128, align 64, offset 0] [from long unsigned int]
!174 = metadata !{metadata !175}
!175 = metadata !{i32 786465, i64 0, i64 2}       ; [ DW_TAG_subrange_type ] [0, 1]
!176 = metadata !{i32 786445, metadata !146, metadata !166, metadata !"flags", i32 339, i64 32, i64 32, i64 768, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 339, size 32, align 32, offset 768] [from int]
!177 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"init", i32 104, i64 64, i64 64, i64 448, i32 0, metadata !178} ; [ DW_TAG_member ] [init] [line 104, size 64, align 64, offset 448] [from ]
!178 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !179} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!179 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !180, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!180 = metadata !{metadata !109, metadata !112}
!181 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"finish", i32 105, i64 64, i64 64, i64 512, i32 0, metadata !178} ; [ DW_TAG_member ] [finish] [line 105, size 64, align 64, offset 512] [from ]
!182 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"flags", i32 106, i64 32, i64 32, i64 576, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 106, size 32, align 32, offset 576] [from int]
!183 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"app_data", i32 107, i64 64, i64 64, i64 640, i32 0, metadata !73} ; [ DW_TAG_member ] [app_data] [line 107, size 64, align 64, offset 640] [from ]
!184 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_sign", i32 115, i64 64, i64 64, i64 704, i32 0, metadata !185} ; [ DW_TAG_member ] [rsa_sign] [line 115, size 64, align 64, offset 704] [from ]
!185 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !186} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!186 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !187, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!187 = metadata !{metadata !109, metadata !109, metadata !132, metadata !188, metadata !135, metadata !189, metadata !190}
!188 = metadata !{i32 786468, null, null, metadata !"unsigned int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ] [unsigned int] [line 0, size 32, align 32, offset 0, enc DW_ATE_unsigned]
!189 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !188} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from unsigned int]
!190 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !191} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!191 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !113} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from RSA]
!192 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_verify", i32 118, i64 64, i64 64, i64 768, i32 0, metadata !193} ; [ DW_TAG_member ] [rsa_verify] [line 118, size 64, align 64, offset 768] [from ]
!193 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !194} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!194 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !195, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!195 = metadata !{metadata !109, metadata !109, metadata !132, metadata !188, metadata !132, metadata !188, metadata !190}
!196 = metadata !{i32 786445, metadata !116, metadata !125, metadata !"rsa_keygen", i32 126, i64 64, i64 64, i64 832, i32 0, metadata !197} ; [ DW_TAG_member ] [rsa_keygen] [line 126, size 64, align 64, offset 832] [from ]
!197 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !198} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!198 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !199, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!199 = metadata !{metadata !109, metadata !112, metadata !109, metadata !143, metadata !200}
!200 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !201} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from BN_GENCB]
!201 = metadata !{i32 786454, metadata !114, null, metadata !"BN_GENCB", i32 119, i64 0, i64 0, i64 0, i32 0, metadata !202} ; [ DW_TAG_typedef ] [BN_GENCB] [line 119, size 0, align 0, offset 0] [from bn_gencb_st]
!202 = metadata !{i32 786451, metadata !146, null, metadata !"bn_gencb_st", i32 355, i64 192, i64 64, i32 0, i32 0, null, metadata !203, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [bn_gencb_st] [line 355, size 192, align 64, offset 0] [def] [from ]
!203 = metadata !{metadata !204, metadata !205, metadata !207}
!204 = metadata !{i32 786445, metadata !146, metadata !202, metadata !"ver", i32 357, i64 32, i64 32, i64 0, i32 0, metadata !188} ; [ DW_TAG_member ] [ver] [line 357, size 32, align 32, offset 0] [from unsigned int]
!205 = metadata !{i32 786445, metadata !146, metadata !202, metadata !"arg", i32 358, i64 64, i64 64, i64 64, i32 0, metadata !206} ; [ DW_TAG_member ] [arg] [line 358, size 64, align 64, offset 64] [from ]
!206 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!207 = metadata !{i32 786445, metadata !146, metadata !202, metadata !"cb", i32 365, i64 64, i64 64, i64 128, i32 0, metadata !208} ; [ DW_TAG_member ] [cb] [line 365, size 64, align 64, offset 128] [from ]
!208 = metadata !{i32 786455, metadata !146, metadata !202, metadata !"", i32 359, i64 64, i64 64, i64 0, i32 0, null, metadata !209, i32 0, null, null, null} ; [ DW_TAG_union_type ] [line 359, size 64, align 64, offset 0] [def] [from ]
!209 = metadata !{metadata !210, metadata !214}
!210 = metadata !{i32 786445, metadata !146, metadata !208, metadata !"cb_1", i32 362, i64 64, i64 64, i64 0, i32 0, metadata !211} ; [ DW_TAG_member ] [cb_1] [line 362, size 64, align 64, offset 0] [from ]
!211 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !212} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!212 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !213, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!213 = metadata !{null, metadata !109, metadata !109, metadata !206}
!214 = metadata !{i32 786445, metadata !146, metadata !208, metadata !"cb_2", i32 364, i64 64, i64 64, i64 0, i32 0, metadata !215} ; [ DW_TAG_member ] [cb_2] [line 364, size 64, align 64, offset 0] [from ]
!215 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !216} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!216 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !217, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!217 = metadata !{metadata !109, metadata !109, metadata !109, metadata !200}
!218 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"engine", i32 137, i64 64, i64 64, i64 192, i32 0, metadata !219} ; [ DW_TAG_member ] [engine] [line 137, size 64, align 64, offset 192] [from ]
!219 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !220} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ENGINE]
!220 = metadata !{i32 786454, metadata !114, null, metadata !"ENGINE", i32 171, i64 0, i64 0, i64 0, i32 0, metadata !221} ; [ DW_TAG_typedef ] [ENGINE] [line 171, size 0, align 0, offset 0] [from engine_st]
!221 = metadata !{i32 786451, metadata !114, null, metadata !"engine_st", i32 171, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [engine_st] [line 171, size 0, align 0, offset 0] [decl] [from ]
!222 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"n", i32 138, i64 64, i64 64, i64 256, i32 0, metadata !143} ; [ DW_TAG_member ] [n] [line 138, size 64, align 64, offset 256] [from ]
!223 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"e", i32 139, i64 64, i64 64, i64 320, i32 0, metadata !143} ; [ DW_TAG_member ] [e] [line 139, size 64, align 64, offset 320] [from ]
!224 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"d", i32 140, i64 64, i64 64, i64 384, i32 0, metadata !143} ; [ DW_TAG_member ] [d] [line 140, size 64, align 64, offset 384] [from ]
!225 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"p", i32 141, i64 64, i64 64, i64 448, i32 0, metadata !143} ; [ DW_TAG_member ] [p] [line 141, size 64, align 64, offset 448] [from ]
!226 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"q", i32 142, i64 64, i64 64, i64 512, i32 0, metadata !143} ; [ DW_TAG_member ] [q] [line 142, size 64, align 64, offset 512] [from ]
!227 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"dmp1", i32 143, i64 64, i64 64, i64 576, i32 0, metadata !143} ; [ DW_TAG_member ] [dmp1] [line 143, size 64, align 64, offset 576] [from ]
!228 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"dmq1", i32 144, i64 64, i64 64, i64 640, i32 0, metadata !143} ; [ DW_TAG_member ] [dmq1] [line 144, size 64, align 64, offset 640] [from ]
!229 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"iqmp", i32 145, i64 64, i64 64, i64 704, i32 0, metadata !143} ; [ DW_TAG_member ] [iqmp] [line 145, size 64, align 64, offset 704] [from ]
!230 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"ex_data", i32 147, i64 128, i64 64, i64 768, i32 0, metadata !231} ; [ DW_TAG_member ] [ex_data] [line 147, size 128, align 64, offset 768] [from CRYPTO_EX_DATA]
!231 = metadata !{i32 786454, metadata !114, null, metadata !"CRYPTO_EX_DATA", i32 189, i64 0, i64 0, i64 0, i32 0, metadata !232} ; [ DW_TAG_typedef ] [CRYPTO_EX_DATA] [line 189, size 0, align 0, offset 0] [from crypto_ex_data_st]
!232 = metadata !{i32 786451, metadata !233, null, metadata !"crypto_ex_data_st", i32 285, i64 128, i64 64, i32 0, i32 0, null, metadata !234, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [crypto_ex_data_st] [line 285, size 128, align 64, offset 0] [def] [from ]
!233 = metadata !{metadata !"/usr/include/openssl/crypto.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!234 = metadata !{metadata !235, metadata !255}
!235 = metadata !{i32 786445, metadata !233, metadata !232, metadata !"sk", i32 287, i64 64, i64 64, i64 0, i32 0, metadata !236} ; [ DW_TAG_member ] [sk] [line 287, size 64, align 64, offset 0] [from ]
!236 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !237} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from stack_st_void]
!237 = metadata !{i32 786451, metadata !233, null, metadata !"stack_st_void", i32 290, i64 256, i64 64, i32 0, i32 0, null, metadata !238, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stack_st_void] [line 290, size 256, align 64, offset 0] [def] [from ]
!238 = metadata !{metadata !239}
!239 = metadata !{i32 786445, metadata !233, metadata !237, metadata !"stack", i32 290, i64 256, i64 64, i64 0, i32 0, metadata !240} ; [ DW_TAG_member ] [stack] [line 290, size 256, align 64, offset 0] [from _STACK]
!240 = metadata !{i32 786454, metadata !241, null, metadata !"_STACK", i32 74, i64 0, i64 0, i64 0, i32 0, metadata !242} ; [ DW_TAG_typedef ] [_STACK] [line 74, size 0, align 0, offset 0] [from stack_st]
!241 = metadata !{metadata !"/usr/include/openssl/stack.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!242 = metadata !{i32 786451, metadata !241, null, metadata !"stack_st", i32 66, i64 256, i64 64, i32 0, i32 0, null, metadata !243, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stack_st] [line 66, size 256, align 64, offset 0] [def] [from ]
!243 = metadata !{metadata !244, metadata !245, metadata !247, metadata !248, metadata !249}
!244 = metadata !{i32 786445, metadata !241, metadata !242, metadata !"num", i32 68, i64 32, i64 32, i64 0, i32 0, metadata !109} ; [ DW_TAG_member ] [num] [line 68, size 32, align 32, offset 0] [from int]
!245 = metadata !{i32 786445, metadata !241, metadata !242, metadata !"data", i32 69, i64 64, i64 64, i64 64, i32 0, metadata !246} ; [ DW_TAG_member ] [data] [line 69, size 64, align 64, offset 64] [from ]
!246 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !73} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!247 = metadata !{i32 786445, metadata !241, metadata !242, metadata !"sorted", i32 70, i64 32, i64 32, i64 128, i32 0, metadata !109} ; [ DW_TAG_member ] [sorted] [line 70, size 32, align 32, offset 128] [from int]
!248 = metadata !{i32 786445, metadata !241, metadata !242, metadata !"num_alloc", i32 72, i64 32, i64 32, i64 160, i32 0, metadata !109} ; [ DW_TAG_member ] [num_alloc] [line 72, size 32, align 32, offset 160] [from int]
!249 = metadata !{i32 786445, metadata !241, metadata !242, metadata !"comp", i32 73, i64 64, i64 64, i64 192, i32 0, metadata !250} ; [ DW_TAG_member ] [comp] [line 73, size 64, align 64, offset 192] [from ]
!250 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !251} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!251 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !252, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!252 = metadata !{metadata !109, metadata !253, metadata !253}
!253 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !254} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!254 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from ]
!255 = metadata !{i32 786445, metadata !233, metadata !232, metadata !"dummy", i32 288, i64 32, i64 32, i64 64, i32 0, metadata !109} ; [ DW_TAG_member ] [dummy] [line 288, size 32, align 32, offset 64] [from int]
!256 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"references", i32 148, i64 32, i64 32, i64 896, i32 0, metadata !109} ; [ DW_TAG_member ] [references] [line 148, size 32, align 32, offset 896] [from int]
!257 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"flags", i32 149, i64 32, i64 32, i64 928, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 149, size 32, align 32, offset 928] [from int]
!258 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"_method_mod_n", i32 152, i64 64, i64 64, i64 960, i32 0, metadata !164} ; [ DW_TAG_member ] [_method_mod_n] [line 152, size 64, align 64, offset 960] [from ]
!259 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"_method_mod_p", i32 153, i64 64, i64 64, i64 1024, i32 0, metadata !164} ; [ DW_TAG_member ] [_method_mod_p] [line 153, size 64, align 64, offset 1024] [from ]
!260 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"_method_mod_q", i32 154, i64 64, i64 64, i64 1088, i32 0, metadata !164} ; [ DW_TAG_member ] [_method_mod_q] [line 154, size 64, align 64, offset 1088] [from ]
!261 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"bignum_data", i32 158, i64 64, i64 64, i64 1152, i32 0, metadata !73} ; [ DW_TAG_member ] [bignum_data] [line 158, size 64, align 64, offset 1152] [from ]
!262 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"blinding", i32 159, i64 64, i64 64, i64 1216, i32 0, metadata !263} ; [ DW_TAG_member ] [blinding] [line 159, size 64, align 64, offset 1216] [from ]
!263 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !264} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from BN_BLINDING]
!264 = metadata !{i32 786454, metadata !114, null, metadata !"BN_BLINDING", i32 116, i64 0, i64 0, i64 0, i32 0, metadata !265} ; [ DW_TAG_typedef ] [BN_BLINDING] [line 116, size 0, align 0, offset 0] [from bn_blinding_st]
!265 = metadata !{i32 786451, metadata !114, null, metadata !"bn_blinding_st", i32 116, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [bn_blinding_st] [line 116, size 0, align 0, offset 0] [decl] [from ]
!266 = metadata !{i32 786445, metadata !116, metadata !115, metadata !"mt_blinding", i32 160, i64 64, i64 64, i64 1280, i32 0, metadata !263} ; [ DW_TAG_member ] [mt_blinding] [line 160, size 64, align 64, offset 1280] [from ]
!267 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"dsa", i32 103, i64 64, i64 64, i64 128, i32 0, metadata !268} ; [ DW_TAG_member ] [dsa] [line 103, size 64, align 64, offset 128] [from ]
!268 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !269} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DSA]
!269 = metadata !{i32 786454, metadata !114, null, metadata !"DSA", i32 137, i64 0, i64 0, i64 0, i32 0, metadata !270} ; [ DW_TAG_typedef ] [DSA] [line 137, size 0, align 0, offset 0] [from dsa_st]
!270 = metadata !{i32 786451, metadata !271, null, metadata !"dsa_st", i32 156, i64 1088, i64 64, i32 0, i32 0, null, metadata !272, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dsa_st] [line 156, size 1088, align 64, offset 0] [def] [from ]
!271 = metadata !{metadata !"/usr/include/openssl/dsa.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!272 = metadata !{metadata !273, metadata !274, metadata !275, metadata !276, metadata !277, metadata !278, metadata !279, metadata !280, metadata !281, metadata !282, metadata !283, metadata !284, metadata !285, metadata !286, metadata !287, metadata !334}
!273 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"pad", i32 160, i64 32, i64 32, i64 0, i32 0, metadata !109} ; [ DW_TAG_member ] [pad] [line 160, size 32, align 32, offset 0] [from int]
!274 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"version", i32 161, i64 64, i64 64, i64 64, i32 0, metadata !120} ; [ DW_TAG_member ] [version] [line 161, size 64, align 64, offset 64] [from long int]
!275 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"write_params", i32 162, i64 32, i64 32, i64 128, i32 0, metadata !109} ; [ DW_TAG_member ] [write_params] [line 162, size 32, align 32, offset 128] [from int]
!276 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"p", i32 163, i64 64, i64 64, i64 192, i32 0, metadata !143} ; [ DW_TAG_member ] [p] [line 163, size 64, align 64, offset 192] [from ]
!277 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"q", i32 164, i64 64, i64 64, i64 256, i32 0, metadata !143} ; [ DW_TAG_member ] [q] [line 164, size 64, align 64, offset 256] [from ]
!278 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"g", i32 165, i64 64, i64 64, i64 320, i32 0, metadata !143} ; [ DW_TAG_member ] [g] [line 165, size 64, align 64, offset 320] [from ]
!279 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"pub_key", i32 167, i64 64, i64 64, i64 384, i32 0, metadata !143} ; [ DW_TAG_member ] [pub_key] [line 167, size 64, align 64, offset 384] [from ]
!280 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"priv_key", i32 168, i64 64, i64 64, i64 448, i32 0, metadata !143} ; [ DW_TAG_member ] [priv_key] [line 168, size 64, align 64, offset 448] [from ]
!281 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"kinv", i32 170, i64 64, i64 64, i64 512, i32 0, metadata !143} ; [ DW_TAG_member ] [kinv] [line 170, size 64, align 64, offset 512] [from ]
!282 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"r", i32 171, i64 64, i64 64, i64 576, i32 0, metadata !143} ; [ DW_TAG_member ] [r] [line 171, size 64, align 64, offset 576] [from ]
!283 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"flags", i32 173, i64 32, i64 32, i64 640, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 173, size 32, align 32, offset 640] [from int]
!284 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"method_mont_p", i32 175, i64 64, i64 64, i64 704, i32 0, metadata !164} ; [ DW_TAG_member ] [method_mont_p] [line 175, size 64, align 64, offset 704] [from ]
!285 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"references", i32 176, i64 32, i64 32, i64 768, i32 0, metadata !109} ; [ DW_TAG_member ] [references] [line 176, size 32, align 32, offset 768] [from int]
!286 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"ex_data", i32 177, i64 128, i64 64, i64 832, i32 0, metadata !231} ; [ DW_TAG_member ] [ex_data] [line 177, size 128, align 64, offset 832] [from CRYPTO_EX_DATA]
!287 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"meth", i32 178, i64 64, i64 64, i64 960, i32 0, metadata !288} ; [ DW_TAG_member ] [meth] [line 178, size 64, align 64, offset 960] [from ]
!288 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !289} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!289 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !290} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from DSA_METHOD]
!290 = metadata !{i32 786454, metadata !114, null, metadata !"DSA_METHOD", i32 138, i64 0, i64 0, i64 0, i32 0, metadata !291} ; [ DW_TAG_typedef ] [DSA_METHOD] [line 138, size 0, align 0, offset 0] [from dsa_method]
!291 = metadata !{i32 786451, metadata !271, null, metadata !"dsa_method", i32 129, i64 768, i64 64, i32 0, i32 0, null, metadata !292, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dsa_method] [line 129, size 768, align 64, offset 0] [def] [from ]
!292 = metadata !{metadata !293, metadata !294, metadata !304, metadata !309, metadata !313, metadata !317, metadata !321, metadata !325, metadata !326, metadata !327, metadata !328, metadata !333}
!293 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"name", i32 131, i64 64, i64 64, i64 0, i32 0, metadata !94} ; [ DW_TAG_member ] [name] [line 131, size 64, align 64, offset 0] [from ]
!294 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"dsa_do_sign", i32 132, i64 64, i64 64, i64 64, i32 0, metadata !295} ; [ DW_TAG_member ] [dsa_do_sign] [line 132, size 64, align 64, offset 64] [from ]
!295 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !296} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!296 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !297, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!297 = metadata !{metadata !298, metadata !132, metadata !109, metadata !268}
!298 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !299} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DSA_SIG]
!299 = metadata !{i32 786454, metadata !271, null, metadata !"DSA_SIG", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !300} ; [ DW_TAG_typedef ] [DSA_SIG] [line 127, size 0, align 0, offset 0] [from DSA_SIG_st]
!300 = metadata !{i32 786451, metadata !271, null, metadata !"DSA_SIG_st", i32 123, i64 128, i64 64, i32 0, i32 0, null, metadata !301, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [DSA_SIG_st] [line 123, size 128, align 64, offset 0] [def] [from ]
!301 = metadata !{metadata !302, metadata !303}
!302 = metadata !{i32 786445, metadata !271, metadata !300, metadata !"r", i32 125, i64 64, i64 64, i64 0, i32 0, metadata !143} ; [ DW_TAG_member ] [r] [line 125, size 64, align 64, offset 0] [from ]
!303 = metadata !{i32 786445, metadata !271, metadata !300, metadata !"s", i32 126, i64 64, i64 64, i64 64, i32 0, metadata !143} ; [ DW_TAG_member ] [s] [line 126, size 64, align 64, offset 64] [from ]
!304 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"dsa_sign_setup", i32 133, i64 64, i64 64, i64 128, i32 0, metadata !305} ; [ DW_TAG_member ] [dsa_sign_setup] [line 133, size 64, align 64, offset 128] [from ]
!305 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !306} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!306 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !307, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!307 = metadata !{metadata !109, metadata !268, metadata !157, metadata !308, metadata !308}
!308 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !143} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!309 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"dsa_do_verify", i32 135, i64 64, i64 64, i64 192, i32 0, metadata !310} ; [ DW_TAG_member ] [dsa_do_verify] [line 135, size 64, align 64, offset 192] [from ]
!310 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !311} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!311 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !312, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!312 = metadata !{metadata !109, metadata !132, metadata !109, metadata !298, metadata !268}
!313 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"dsa_mod_exp", i32 137, i64 64, i64 64, i64 256, i32 0, metadata !314} ; [ DW_TAG_member ] [dsa_mod_exp] [line 137, size 64, align 64, offset 256] [from ]
!314 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !315} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!315 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !316, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!316 = metadata !{metadata !109, metadata !268, metadata !143, metadata !143, metadata !143, metadata !143, metadata !143, metadata !143, metadata !157, metadata !164}
!317 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"bn_mod_exp", i32 140, i64 64, i64 64, i64 320, i32 0, metadata !318} ; [ DW_TAG_member ] [bn_mod_exp] [line 140, size 64, align 64, offset 320] [from ]
!318 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !319} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!319 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !320, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!320 = metadata !{metadata !109, metadata !268, metadata !143, metadata !143, metadata !155, metadata !155, metadata !157, metadata !164}
!321 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"init", i32 143, i64 64, i64 64, i64 384, i32 0, metadata !322} ; [ DW_TAG_member ] [init] [line 143, size 64, align 64, offset 384] [from ]
!322 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !323} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!323 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !324, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!324 = metadata !{metadata !109, metadata !268}
!325 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"finish", i32 144, i64 64, i64 64, i64 448, i32 0, metadata !322} ; [ DW_TAG_member ] [finish] [line 144, size 64, align 64, offset 448] [from ]
!326 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"flags", i32 145, i64 32, i64 32, i64 512, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 145, size 32, align 32, offset 512] [from int]
!327 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"app_data", i32 146, i64 64, i64 64, i64 576, i32 0, metadata !73} ; [ DW_TAG_member ] [app_data] [line 146, size 64, align 64, offset 576] [from ]
!328 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"dsa_paramgen", i32 148, i64 64, i64 64, i64 640, i32 0, metadata !329} ; [ DW_TAG_member ] [dsa_paramgen] [line 148, size 64, align 64, offset 640] [from ]
!329 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !330} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!330 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !331, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!331 = metadata !{metadata !109, metadata !268, metadata !109, metadata !132, metadata !109, metadata !332, metadata !149, metadata !200}
!332 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !109} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from int]
!333 = metadata !{i32 786445, metadata !271, metadata !291, metadata !"dsa_keygen", i32 153, i64 64, i64 64, i64 704, i32 0, metadata !322} ; [ DW_TAG_member ] [dsa_keygen] [line 153, size 64, align 64, offset 704] [from ]
!334 = metadata !{i32 786445, metadata !271, metadata !270, metadata !"engine", i32 180, i64 64, i64 64, i64 1024, i32 0, metadata !219} ; [ DW_TAG_member ] [engine] [line 180, size 64, align 64, offset 1024] [from ]
!335 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"ecdsa_nid", i32 104, i64 32, i64 32, i64 192, i32 0, metadata !109} ; [ DW_TAG_member ] [ecdsa_nid] [line 104, size 32, align 32, offset 192] [from int]
!336 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"ecdsa", i32 105, i64 64, i64 64, i64 256, i32 0, metadata !337} ; [ DW_TAG_member ] [ecdsa] [line 105, size 64, align 64, offset 256] [from ]
!337 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !338} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from EC_KEY]
!338 = metadata !{i32 786454, metadata !339, null, metadata !"EC_KEY", i32 714, i64 0, i64 0, i64 0, i32 0, metadata !340} ; [ DW_TAG_typedef ] [EC_KEY] [line 714, size 0, align 0, offset 0] [from ec_key_st]
!339 = metadata !{metadata !"/usr/include/openssl/ec.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!340 = metadata !{i32 786451, metadata !339, null, metadata !"ec_key_st", i32 714, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [ec_key_st] [line 714, size 0, align 0, offset 0] [decl] [from ]
!341 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"ed25519_sk", i32 106, i64 64, i64 64, i64 320, i32 0, metadata !342} ; [ DW_TAG_member ] [ed25519_sk] [line 106, size 64, align 64, offset 320] [from ]
!342 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !343} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from u_char]
!343 = metadata !{i32 786454, metadata !88, null, metadata !"u_char", i32 33, i64 0, i64 0, i64 0, i32 0, metadata !344} ; [ DW_TAG_typedef ] [u_char] [line 33, size 0, align 0, offset 0] [from __u_char]
!344 = metadata !{i32 786454, metadata !90, null, metadata !"__u_char", i32 30, i64 0, i64 0, i64 0, i32 0, metadata !134} ; [ DW_TAG_typedef ] [__u_char] [line 30, size 0, align 0, offset 0] [from unsigned char]
!345 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"ed25519_pk", i32 107, i64 64, i64 64, i64 384, i32 0, metadata !342} ; [ DW_TAG_member ] [ed25519_pk] [line 107, size 64, align 64, offset 384] [from ]
!346 = metadata !{i32 786445, metadata !48, metadata !106, metadata !"cert", i32 108, i64 64, i64 64, i64 448, i32 0, metadata !347} ; [ DW_TAG_member ] [cert] [line 108, size 64, align 64, offset 448] [from ]
!347 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !348} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from sshkey_cert]
!348 = metadata !{i32 786451, metadata !48, null, metadata !"sshkey_cert", i32 85, i64 704, i64 64, i32 0, i32 0, null, metadata !349, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshkey_cert] [line 85, size 704, align 64, offset 0] [def] [from ]
!349 = metadata !{metadata !350, metadata !371, metadata !372, metadata !374, metadata !375, metadata !376, metadata !377, metadata !378, metadata !379, metadata !380, metadata !381}
!350 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"certblob", i32 86, i64 64, i64 64, i64 0, i32 0, metadata !351} ; [ DW_TAG_member ] [certblob] [line 86, size 64, align 64, offset 0] [from ]
!351 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !352} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from sshbuf]
!352 = metadata !{i32 786451, metadata !353, null, metadata !"sshbuf", i32 40, i64 576, i64 64, i32 0, i32 0, null, metadata !354, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshbuf] [line 40, size 576, align 64, offset 0] [def] [from ]
!353 = metadata !{metadata !"./sshbuf.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!354 = metadata !{metadata !355, metadata !356, metadata !359, metadata !362, metadata !363, metadata !364, metadata !365, metadata !366, metadata !367, metadata !370}
!355 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"d", i32 41, i64 64, i64 64, i64 0, i32 0, metadata !342} ; [ DW_TAG_member ] [d] [line 41, size 64, align 64, offset 0] [from ]
!356 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"cd", i32 42, i64 64, i64 64, i64 64, i32 0, metadata !357} ; [ DW_TAG_member ] [cd] [line 42, size 64, align 64, offset 64] [from ]
!357 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !358} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!358 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !343} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from u_char]
!359 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"off", i32 43, i64 64, i64 64, i64 128, i32 0, metadata !360} ; [ DW_TAG_member ] [off] [line 43, size 64, align 64, offset 128] [from size_t]
!360 = metadata !{i32 786454, metadata !361, null, metadata !"size_t", i32 58, i64 0, i64 0, i64 0, i32 0, metadata !150} ; [ DW_TAG_typedef ] [size_t] [line 58, size 0, align 0, offset 0] [from long unsigned int]
!361 = metadata !{metadata !"/usr/local/bin/../lib/clang/3.5.0/include/stddef.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!362 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"size", i32 44, i64 64, i64 64, i64 192, i32 0, metadata !360} ; [ DW_TAG_member ] [size] [line 44, size 64, align 64, offset 192] [from size_t]
!363 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"max_size", i32 45, i64 64, i64 64, i64 256, i32 0, metadata !360} ; [ DW_TAG_member ] [max_size] [line 45, size 64, align 64, offset 256] [from size_t]
!364 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"alloc", i32 46, i64 64, i64 64, i64 320, i32 0, metadata !360} ; [ DW_TAG_member ] [alloc] [line 46, size 64, align 64, offset 320] [from size_t]
!365 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"readonly", i32 47, i64 32, i64 32, i64 384, i32 0, metadata !109} ; [ DW_TAG_member ] [readonly] [line 47, size 32, align 32, offset 384] [from int]
!366 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"dont_free", i32 48, i64 32, i64 32, i64 416, i32 0, metadata !109} ; [ DW_TAG_member ] [dont_free] [line 48, size 32, align 32, offset 416] [from int]
!367 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"refcount", i32 49, i64 32, i64 32, i64 448, i32 0, metadata !368} ; [ DW_TAG_member ] [refcount] [line 49, size 32, align 32, offset 448] [from u_int]
!368 = metadata !{i32 786454, metadata !88, null, metadata !"u_int", i32 35, i64 0, i64 0, i64 0, i32 0, metadata !369} ; [ DW_TAG_typedef ] [u_int] [line 35, size 0, align 0, offset 0] [from __u_int]
!369 = metadata !{i32 786454, metadata !90, null, metadata !"__u_int", i32 32, i64 0, i64 0, i64 0, i32 0, metadata !188} ; [ DW_TAG_typedef ] [__u_int] [line 32, size 0, align 0, offset 0] [from unsigned int]
!370 = metadata !{i32 786445, metadata !353, metadata !352, metadata !"parent", i32 50, i64 64, i64 64, i64 512, i32 0, metadata !351} ; [ DW_TAG_member ] [parent] [line 50, size 64, align 64, offset 512] [from ]
!371 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"type", i32 87, i64 32, i64 32, i64 64, i32 0, metadata !368} ; [ DW_TAG_member ] [type] [line 87, size 32, align 32, offset 64] [from u_int]
!372 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"serial", i32 88, i64 64, i64 64, i64 128, i32 0, metadata !373} ; [ DW_TAG_member ] [serial] [line 88, size 64, align 64, offset 128] [from u_int64_t]
!373 = metadata !{i32 786454, metadata !88, null, metadata !"u_int64_t", i32 203, i64 0, i64 0, i64 0, i32 0, metadata !150} ; [ DW_TAG_typedef ] [u_int64_t] [line 203, size 0, align 0, offset 0] [from long unsigned int]
!374 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"key_id", i32 89, i64 64, i64 64, i64 192, i32 0, metadata !73} ; [ DW_TAG_member ] [key_id] [line 89, size 64, align 64, offset 192] [from ]
!375 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"nprincipals", i32 90, i64 32, i64 32, i64 256, i32 0, metadata !368} ; [ DW_TAG_member ] [nprincipals] [line 90, size 32, align 32, offset 256] [from u_int]
!376 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"principals", i32 91, i64 64, i64 64, i64 320, i32 0, metadata !246} ; [ DW_TAG_member ] [principals] [line 91, size 64, align 64, offset 320] [from ]
!377 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"valid_after", i32 92, i64 64, i64 64, i64 384, i32 0, metadata !373} ; [ DW_TAG_member ] [valid_after] [line 92, size 64, align 64, offset 384] [from u_int64_t]
!378 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"valid_before", i32 92, i64 64, i64 64, i64 448, i32 0, metadata !373} ; [ DW_TAG_member ] [valid_before] [line 92, size 64, align 64, offset 448] [from u_int64_t]
!379 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"critical", i32 93, i64 64, i64 64, i64 512, i32 0, metadata !351} ; [ DW_TAG_member ] [critical] [line 93, size 64, align 64, offset 512] [from ]
!380 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"extensions", i32 94, i64 64, i64 64, i64 576, i32 0, metadata !351} ; [ DW_TAG_member ] [extensions] [line 94, size 64, align 64, offset 576] [from ]
!381 = metadata !{i32 786445, metadata !48, metadata !348, metadata !"signature_key", i32 95, i64 64, i64 64, i64 640, i32 0, metadata !382} ; [ DW_TAG_member ] [signature_key] [line 95, size 64, align 64, offset 640] [from ]
!382 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !106} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from sshkey]
!383 = metadata !{i32 786445, metadata !98, metadata !99, metadata !"nkeys", i32 30, i64 32, i64 32, i64 64, i32 0, metadata !109} ; [ DW_TAG_member ] [nkeys] [line 30, size 32, align 32, offset 64] [from int]
!384 = metadata !{i32 786445, metadata !98, metadata !99, metadata !"external_keysign", i32 31, i64 32, i64 32, i64 96, i32 0, metadata !109} ; [ DW_TAG_member ] [external_keysign] [line 31, size 32, align 32, offset 96] [from int]
!385 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_service_accept", metadata !"input_userauth_service_accept", metadata !"", i32 415, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_service_accept, null, null, metadata !67, i32 416} ; [ DW_TAG_subprogram ] [line 415] [def] [scope 416] [input_userauth_service_accept]
!386 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !387, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!387 = metadata !{metadata !109, metadata !109, metadata !388, metadata !206}
!388 = metadata !{i32 786454, metadata !88, null, metadata !"u_int32_t", i32 202, i64 0, i64 0, i64 0, i32 0, metadata !188} ; [ DW_TAG_typedef ] [u_int32_t] [line 202, size 0, align 0, offset 0] [from unsigned int]
!389 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_ext_info", metadata !"input_userauth_ext_info", metadata !"", i32 449, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_ext_info, null, null, metadata !67, i32 450} ; [ DW_TAG_subprogram ] [line 449] [def] [scope 450] [input_userauth_ext_info]
!390 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"userauth", metadata !"userauth", metadata !"", i32 455, metadata !391, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cauthctxt*, i8*)* @userauth, null, null, metadata !67, i32 456} ; [ DW_TAG_subprogram ] [line 455] [def] [scope 456] [userauth]
!391 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !392, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!392 = metadata !{null, metadata !393, metadata !73}
!393 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !394} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Authctxt]
!394 = metadata !{i32 786454, metadata !2, null, metadata !"Authctxt", i32 244, i64 0, i64 0, i64 0, i32 0, metadata !395} ; [ DW_TAG_typedef ] [Authctxt] [line 244, size 0, align 0, offset 0] [from cauthctxt]
!395 = metadata !{i32 786451, metadata !2, null, metadata !"cauthctxt", i32 260, i64 1088, i64 64, i32 0, i32 0, null, metadata !396, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cauthctxt] [line 260, size 1088, align 64, offset 0] [def] [from ]
!396 = metadata !{metadata !397, metadata !398, metadata !399, metadata !400, metadata !401, metadata !416, metadata !421, metadata !422, metadata !423, metadata !443, metadata !444, metadata !445, metadata !446, metadata !447, metadata !448, metadata !449}
!397 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"server_user", i32 261, i64 64, i64 64, i64 0, i32 0, metadata !94} ; [ DW_TAG_member ] [server_user] [line 261, size 64, align 64, offset 0] [from ]
!398 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"local_user", i32 262, i64 64, i64 64, i64 64, i32 0, metadata !94} ; [ DW_TAG_member ] [local_user] [line 262, size 64, align 64, offset 64] [from ]
!399 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"host", i32 263, i64 64, i64 64, i64 128, i32 0, metadata !94} ; [ DW_TAG_member ] [host] [line 263, size 64, align 64, offset 128] [from ]
!400 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"service", i32 264, i64 64, i64 64, i64 192, i32 0, metadata !94} ; [ DW_TAG_member ] [service] [line 264, size 64, align 64, offset 192] [from ]
!401 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"method", i32 265, i64 64, i64 64, i64 256, i32 0, metadata !402} ; [ DW_TAG_member ] [method] [line 265, size 64, align 64, offset 256] [from ]
!402 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !403} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from cauthmethod]
!403 = metadata !{i32 786451, metadata !2, null, metadata !"cauthmethod", i32 282, i64 320, i64 64, i32 0, i32 0, null, metadata !404, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [cauthmethod] [line 282, size 320, align 64, offset 0] [def] [from ]
!404 = metadata !{metadata !405, metadata !406, metadata !410, metadata !414, metadata !415}
!405 = metadata !{i32 786445, metadata !2, metadata !403, metadata !"name", i32 283, i64 64, i64 64, i64 0, i32 0, metadata !73} ; [ DW_TAG_member ] [name] [line 283, size 64, align 64, offset 0] [from ]
!406 = metadata !{i32 786445, metadata !2, metadata !403, metadata !"userauth", i32 284, i64 64, i64 64, i64 64, i32 0, metadata !407} ; [ DW_TAG_member ] [userauth] [line 284, size 64, align 64, offset 64] [from ]
!407 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !408} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!408 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !409, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!409 = metadata !{metadata !109, metadata !393}
!410 = metadata !{i32 786445, metadata !2, metadata !403, metadata !"cleanup", i32 285, i64 64, i64 64, i64 128, i32 0, metadata !411} ; [ DW_TAG_member ] [cleanup] [line 285, size 64, align 64, offset 128] [from ]
!411 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !412} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!412 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !413, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!413 = metadata !{null, metadata !393}
!414 = metadata !{i32 786445, metadata !2, metadata !403, metadata !"enabled", i32 286, i64 64, i64 64, i64 192, i32 0, metadata !332} ; [ DW_TAG_member ] [enabled] [line 286, size 64, align 64, offset 192] [from ]
!415 = metadata !{i32 786445, metadata !2, metadata !403, metadata !"batch_flag", i32 287, i64 64, i64 64, i64 256, i32 0, metadata !332} ; [ DW_TAG_member ] [batch_flag] [line 287, size 64, align 64, offset 256] [from ]
!416 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"success", i32 266, i64 32, i64 32, i64 320, i32 0, metadata !417} ; [ DW_TAG_member ] [success] [line 266, size 32, align 32, offset 320] [from sig_atomic_t]
!417 = metadata !{i32 786454, metadata !418, null, metadata !"sig_atomic_t", i32 40, i64 0, i64 0, i64 0, i32 0, metadata !419} ; [ DW_TAG_typedef ] [sig_atomic_t] [line 40, size 0, align 0, offset 0] [from __sig_atomic_t]
!418 = metadata !{metadata !"/usr/include/signal.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!419 = metadata !{i32 786454, metadata !420, null, metadata !"__sig_atomic_t", i32 22, i64 0, i64 0, i64 0, i32 0, metadata !109} ; [ DW_TAG_typedef ] [__sig_atomic_t] [line 22, size 0, align 0, offset 0] [from int]
!420 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/sigset.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!421 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"authlist", i32 267, i64 64, i64 64, i64 384, i32 0, metadata !73} ; [ DW_TAG_member ] [authlist] [line 267, size 64, align 64, offset 384] [from ]
!422 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"attempt", i32 268, i64 32, i64 32, i64 448, i32 0, metadata !109} ; [ DW_TAG_member ] [attempt] [line 268, size 32, align 32, offset 448] [from int]
!423 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"keys", i32 270, i64 128, i64 64, i64 512, i32 0, metadata !424} ; [ DW_TAG_member ] [keys] [line 270, size 128, align 64, offset 512] [from idlist]
!424 = metadata !{i32 786451, metadata !2, null, metadata !"idlist", i32 258, i64 128, i64 64, i32 0, i32 0, null, metadata !425, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [idlist] [line 258, size 128, align 64, offset 0] [def] [from ]
!425 = metadata !{metadata !426, metadata !442}
!426 = metadata !{i32 786445, metadata !2, metadata !424, metadata !"tqh_first", i32 258, i64 64, i64 64, i64 0, i32 0, metadata !427} ; [ DW_TAG_member ] [tqh_first] [line 258, size 64, align 64, offset 0] [from ]
!427 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !428} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from identity]
!428 = metadata !{i32 786451, metadata !2, null, metadata !"identity", i32 249, i64 448, i64 64, i32 0, i32 0, null, metadata !429, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [identity] [line 249, size 448, align 64, offset 0] [def] [from ]
!429 = metadata !{metadata !430, metadata !436, metadata !437, metadata !438, metadata !439, metadata !440, metadata !441}
!430 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"next", i32 250, i64 128, i64 64, i64 0, i32 0, metadata !431} ; [ DW_TAG_member ] [next] [line 250, size 128, align 64, offset 0] [from ]
!431 = metadata !{i32 786451, metadata !2, metadata !428, metadata !"", i32 250, i64 128, i64 64, i32 0, i32 0, null, metadata !432, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [line 250, size 128, align 64, offset 0] [def] [from ]
!432 = metadata !{metadata !433, metadata !434}
!433 = metadata !{i32 786445, metadata !2, metadata !431, metadata !"tqe_next", i32 250, i64 64, i64 64, i64 0, i32 0, metadata !427} ; [ DW_TAG_member ] [tqe_next] [line 250, size 64, align 64, offset 0] [from ]
!434 = metadata !{i32 786445, metadata !2, metadata !431, metadata !"tqe_prev", i32 250, i64 64, i64 64, i64 64, i32 0, metadata !435} ; [ DW_TAG_member ] [tqe_prev] [line 250, size 64, align 64, offset 64] [from ]
!435 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !427} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!436 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"agent_fd", i32 251, i64 32, i64 32, i64 128, i32 0, metadata !109} ; [ DW_TAG_member ] [agent_fd] [line 251, size 32, align 32, offset 128] [from int]
!437 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"key", i32 252, i64 64, i64 64, i64 192, i32 0, metadata !382} ; [ DW_TAG_member ] [key] [line 252, size 64, align 64, offset 192] [from ]
!438 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"filename", i32 253, i64 64, i64 64, i64 256, i32 0, metadata !73} ; [ DW_TAG_member ] [filename] [line 253, size 64, align 64, offset 256] [from ]
!439 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"tried", i32 254, i64 32, i64 32, i64 320, i32 0, metadata !109} ; [ DW_TAG_member ] [tried] [line 254, size 32, align 32, offset 320] [from int]
!440 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"isprivate", i32 255, i64 32, i64 32, i64 352, i32 0, metadata !109} ; [ DW_TAG_member ] [isprivate] [line 255, size 32, align 32, offset 352] [from int]
!441 = metadata !{i32 786445, metadata !2, metadata !428, metadata !"userprovided", i32 256, i64 32, i64 32, i64 384, i32 0, metadata !109} ; [ DW_TAG_member ] [userprovided] [line 256, size 32, align 32, offset 384] [from int]
!442 = metadata !{i32 786445, metadata !2, metadata !424, metadata !"tqh_last", i32 258, i64 64, i64 64, i64 64, i32 0, metadata !435} ; [ DW_TAG_member ] [tqh_last] [line 258, size 64, align 64, offset 64] [from ]
!443 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"agent_fd", i32 271, i64 32, i64 32, i64 640, i32 0, metadata !109} ; [ DW_TAG_member ] [agent_fd] [line 271, size 32, align 32, offset 640] [from int]
!444 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"sensitive", i32 273, i64 64, i64 64, i64 704, i32 0, metadata !96} ; [ DW_TAG_member ] [sensitive] [line 273, size 64, align 64, offset 704] [from ]
!445 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"oktypes", i32 274, i64 64, i64 64, i64 768, i32 0, metadata !73} ; [ DW_TAG_member ] [oktypes] [line 274, size 64, align 64, offset 768] [from ]
!446 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"ktypes", i32 274, i64 64, i64 64, i64 832, i32 0, metadata !73} ; [ DW_TAG_member ] [ktypes] [line 274, size 64, align 64, offset 832] [from ]
!447 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"active_ktype", i32 275, i64 64, i64 64, i64 896, i32 0, metadata !94} ; [ DW_TAG_member ] [active_ktype] [line 275, size 64, align 64, offset 896] [from ]
!448 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"info_req_seen", i32 277, i64 32, i64 32, i64 960, i32 0, metadata !109} ; [ DW_TAG_member ] [info_req_seen] [line 277, size 32, align 32, offset 960] [from int]
!449 = metadata !{i32 786445, metadata !2, metadata !395, metadata !"methoddata", i32 279, i64 64, i64 64, i64 1024, i32 0, metadata !206} ; [ DW_TAG_member ] [methoddata] [line 279, size 64, align 64, offset 1024] [from ]
!450 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_error", metadata !"input_userauth_error", metadata !"", i32 491, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_error, null, null, metadata !67, i32 492} ; [ DW_TAG_subprogram ] [line 491] [def] [scope 492] [input_userauth_error]
!451 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_banner", metadata !"input_userauth_banner", metadata !"", i32 500, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_banner, null, null, metadata !67, i32 501} ; [ DW_TAG_subprogram ] [line 500] [def] [scope 501] [input_userauth_banner]
!452 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_success", metadata !"input_userauth_success", metadata !"", i32 517, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_success, null, null, metadata !67, i32 518} ; [ DW_TAG_subprogram ] [line 517] [def] [scope 518] [input_userauth_success]
!453 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_success_unexpected", metadata !"input_userauth_success_unexpected", metadata !"", i32 534, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_success_unexpected, null, null, metadata !67, i32 535} ; [ DW_TAG_subprogram ] [line 534] [def] [scope 535] [input_userauth_success_unexpected]
!454 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_failure", metadata !"input_userauth_failure", metadata !"", i32 548, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_failure, null, null, metadata !67, i32 549} ; [ DW_TAG_subprogram ] [line 548] [def] [scope 549] [input_userauth_failure]
!455 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_pk_ok", metadata !"input_userauth_pk_ok", metadata !"", i32 574, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_pk_ok, null, null, metadata !67, i32 575} ; [ DW_TAG_subprogram ] [line 574] [def] [scope 575] [input_userauth_pk_ok]
!456 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"userauth_none", metadata !"userauth_none", metadata !"", i32 881, metadata !408, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*)* @userauth_none, null, null, metadata !67, i32 882} ; [ DW_TAG_subprogram ] [line 881] [def] [scope 882] [userauth_none]
!457 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"userauth_passwd", metadata !"userauth_passwd", metadata !"", i32 893, metadata !408, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*)* @userauth_passwd, null, null, metadata !67, i32 894} ; [ DW_TAG_subprogram ] [line 893] [def] [scope 894] [userauth_passwd]
!458 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_passwd_changereq", metadata !"input_userauth_passwd_changereq", metadata !"", i32 932, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_passwd_changereq, null, null, metadata !67, i32 933} ; [ DW_TAG_subprogram ] [line 932] [def] [scope 933] [input_userauth_passwd_changereq]
!459 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"userauth_pubkey", metadata !"userauth_pubkey", metadata !"", i32 1442, metadata !408, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*)* @userauth_pubkey, null, null, metadata !67, i32 1443} ; [ DW_TAG_subprogram ] [line 1442] [def] [scope 1443] [userauth_pubkey]
!460 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"userauth_kbdint", metadata !"userauth_kbdint", metadata !"", i32 1488, metadata !408, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*)* @userauth_kbdint, null, null, metadata !67, i32 1489} ; [ DW_TAG_subprogram ] [line 1488] [def] [scope 1489] [userauth_kbdint]
!461 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"input_userauth_info_req", metadata !"input_userauth_info_req", metadata !"", i32 1519, metadata !386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32, i8*)* @input_userauth_info_req, null, null, metadata !67, i32 1520} ; [ DW_TAG_subprogram ] [line 1519] [def] [scope 1520] [input_userauth_info_req]
!462 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"userauth_hostbased", metadata !"userauth_hostbased", metadata !"", i32 1689, metadata !408, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*)* @userauth_hostbased, null, null, metadata !67, i32 1690} ; [ DW_TAG_subprogram ] [line 1689] [def] [scope 1690] [userauth_hostbased]
!463 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"authmethods_get", metadata !"authmethods_get", metadata !"", i32 1918, metadata !464, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* ()* @authmethods_get, null, null, metadata !67, i32 1919} ; [ DW_TAG_subprogram ] [line 1918] [local] [def] [scope 1919] [authmethods_get]
!464 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !465, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!465 = metadata !{metadata !73}
!466 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"authmethod_is_enabled", metadata !"authmethod_is_enabled", metadata !"", i32 1842, metadata !467, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthmethod*)* @authmethod_is_enabled, null, null, metadata !67, i32 1843} ; [ DW_TAG_subprogram ] [line 1842] [local] [def] [scope 1843] [authmethod_is_enabled]
!467 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !468, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!468 = metadata !{metadata !109, metadata !469}
!469 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !470} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Authmethod]
!470 = metadata !{i32 786454, metadata !2, null, metadata !"Authmethod", i32 245, i64 0, i64 0, i64 0, i32 0, metadata !403} ; [ DW_TAG_typedef ] [Authmethod] [line 245, size 0, align 0, offset 0] [from cauthmethod]
!471 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"authmethod_get", metadata !"authmethod_get", metadata !"", i32 1878, metadata !472, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.cauthmethod* (i8*)* @authmethod_get, null, null, metadata !67, i32 1879} ; [ DW_TAG_subprogram ] [line 1878] [local] [def] [scope 1879] [authmethod_get]
!472 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !473, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!473 = metadata !{metadata !469, metadata !73}
!474 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"authmethod_lookup", metadata !"authmethod_lookup", metadata !"", i32 1856, metadata !475, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.cauthmethod* (i8*)* @authmethod_lookup, null, null, metadata !67, i32 1857} ; [ DW_TAG_subprogram ] [line 1856] [local] [def] [scope 1857] [authmethod_lookup]
!475 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !476, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!476 = metadata !{metadata !469, metadata !94}
!477 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"ssh_keysign", metadata !"ssh_keysign", metadata !"", i32 1574, metadata !478, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sshkey*, i8**, i64*, i8*, i64)* @ssh_keysign, null, null, metadata !67, i32 1576} ; [ DW_TAG_subprogram ] [line 1574] [local] [def] [scope 1576] [ssh_keysign]
!478 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !479, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!479 = metadata !{metadata !109, metadata !382, metadata !480, metadata !481, metadata !357, metadata !360}
!480 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !342} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!481 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !360} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from size_t]
!482 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"load_identity_file", metadata !"load_identity_file", metadata !"", i32 1192, metadata !483, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.sshkey* (%struct.identity*)* @load_identity_file, null, null, metadata !67, i32 1193} ; [ DW_TAG_subprogram ] [line 1192] [local] [def] [scope 1193] [load_identity_file]
!483 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !484, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!484 = metadata !{metadata !103, metadata !485}
!485 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !486} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from Identity]
!486 = metadata !{i32 786454, metadata !2, null, metadata !"Identity", i32 246, i64 0, i64 0, i64 0, i32 0, metadata !428} ; [ DW_TAG_typedef ] [Identity] [line 246, size 0, align 0, offset 0] [from identity]
!487 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"send_pubkey_test", metadata !"send_pubkey_test", metadata !"", i32 1163, metadata !488, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*, %struct.identity*)* @send_pubkey_test, null, null, metadata !67, i32 1164} ; [ DW_TAG_subprogram ] [line 1163] [local] [def] [scope 1164] [send_pubkey_test]
!488 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !489, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!489 = metadata !{metadata !109, metadata !393, metadata !485}
!490 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"identity_sign_encode", metadata !"identity_sign_encode", metadata !"", i32 999, metadata !491, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.identity*)* @identity_sign_encode, null, null, metadata !67, i32 1000} ; [ DW_TAG_subprogram ] [line 999] [local] [def] [scope 1000] [identity_sign_encode]
!491 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !492, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!492 = metadata !{metadata !94, metadata !427}
!493 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"try_identity", metadata !"try_identity", metadata !"", i32 1428, metadata !494, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.identity*)* @try_identity, null, null, metadata !67, i32 1429} ; [ DW_TAG_subprogram ] [line 1428] [local] [def] [scope 1429] [try_identity]
!494 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !495, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!495 = metadata !{metadata !109, metadata !485}
!496 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"pubkey_reset", metadata !"pubkey_reset", metadata !"", i32 1419, metadata !412, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cauthctxt*)* @pubkey_reset, null, null, metadata !67, i32 1420} ; [ DW_TAG_subprogram ] [line 1419] [local] [def] [scope 1420] [pubkey_reset]
!497 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"pubkey_cleanup", metadata !"pubkey_cleanup", metadata !"", i32 1403, metadata !412, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cauthctxt*)* @pubkey_cleanup, null, null, metadata !67, i32 1404} ; [ DW_TAG_subprogram ] [line 1403] [local] [def] [scope 1404] [pubkey_cleanup]
!498 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"pubkey_prepare", metadata !"pubkey_prepare", metadata !"", i32 1267, metadata !412, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.cauthctxt*)* @pubkey_prepare, null, null, metadata !67, i32 1268} ; [ DW_TAG_subprogram ] [line 1267] [local] [def] [scope 1268] [pubkey_prepare]
!499 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"sign_and_send_pubkey", metadata !"sign_and_send_pubkey", metadata !"", i32 1045, metadata !488, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.cauthctxt*, %struct.identity*)* @sign_and_send_pubkey, null, null, metadata !67, i32 1046} ; [ DW_TAG_subprogram ] [line 1045] [local] [def] [scope 1046] [sign_and_send_pubkey]
!500 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"identity_sign", metadata !"identity_sign", metadata !"", i32 1015, metadata !501, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.identity*, i8**, i64*, i8*, i64, i32)* @identity_sign, null, null, metadata !67, i32 1017} ; [ DW_TAG_subprogram ] [line 1015] [local] [def] [scope 1017] [identity_sign]
!501 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !502, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!502 = metadata !{metadata !109, metadata !427, metadata !480, metadata !481, metadata !357, metadata !360, metadata !368}
!503 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"verify_host_key_callback", metadata !"verify_host_key_callback", metadata !"", i32 96, metadata !504, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.sshkey*, %struct.ssh*)* @verify_host_key_callback, null, null, metadata !67, i32 97} ; [ DW_TAG_subprogram ] [line 96] [local] [def] [scope 97] [verify_host_key_callback]
!504 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !505, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!505 = metadata !{metadata !109, metadata !103, metadata !506}
!506 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !507} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ssh]
!507 = metadata !{i32 786451, metadata !508, null, metadata !"ssh", i32 52, i64 17088, i64 64, i32 0, i32 0, null, metadata !509, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [ssh] [line 52, size 17088, align 64, offset 0] [def] [from ]
!508 = metadata !{metadata !"./packet.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!509 = metadata !{metadata !510, metadata !513, metadata !671, metadata !672, metadata !673, metadata !674, metadata !675, metadata !681, metadata !682, metadata !683, metadata !698, metadata !703}
!510 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"state", i32 54, i64 64, i64 64, i64 0, i32 0, metadata !511} ; [ DW_TAG_member ] [state] [line 54, size 64, align 64, offset 0] [from ]
!511 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !512} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from session_state]
!512 = metadata !{i32 786451, metadata !508, null, metadata !"session_state", i32 43, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [session_state] [line 43, size 0, align 0, offset 0] [decl] [from ]
!513 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"kex", i32 57, i64 64, i64 64, i64 64, i32 0, metadata !514} ; [ DW_TAG_member ] [kex] [line 57, size 64, align 64, offset 64] [from ]
!514 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !515} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from kex]
!515 = metadata !{i32 786451, metadata !5, null, metadata !"kex", i32 130, i64 2880, i64 64, i32 0, i32 0, null, metadata !516, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [kex] [line 130, size 2880, align 64, offset 0] [def] [from ]
!516 = metadata !{metadata !517, metadata !518, metadata !519, metadata !562, metadata !563, metadata !564, metadata !565, metadata !566, metadata !567, metadata !568, metadata !569, metadata !570, metadata !571, metadata !572, metadata !573, metadata !574, metadata !575, metadata !576, metadata !577, metadata !578, metadata !579, metadata !580, metadata !581, metadata !585, metadata !589, metadata !590, metadata !594, metadata !598, metadata !605, metadata !657, metadata !658, metadata !659, metadata !660, metadata !661, metadata !666, metadata !670}
!517 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"session_id", i32 131, i64 64, i64 64, i64 0, i32 0, metadata !342} ; [ DW_TAG_member ] [session_id] [line 131, size 64, align 64, offset 0] [from ]
!518 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"session_id_len", i32 132, i64 64, i64 64, i64 64, i32 0, metadata !360} ; [ DW_TAG_member ] [session_id_len] [line 132, size 64, align 64, offset 64] [from size_t]
!519 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"newkeys", i32 133, i64 128, i64 64, i64 128, i32 0, metadata !520} ; [ DW_TAG_member ] [newkeys] [line 133, size 128, align 64, offset 128] [from ]
!520 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 128, i64 64, i32 0, i32 0, metadata !521, metadata !174, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 128, align 64, offset 0] [from ]
!521 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !522} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from newkeys]
!522 = metadata !{i32 786451, metadata !5, null, metadata !"newkeys", i32 122, i64 960, i64 64, i32 0, i32 0, null, metadata !523, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [newkeys] [line 122, size 960, align 64, offset 0] [def] [from ]
!523 = metadata !{metadata !524, metadata !539, metadata !556}
!524 = metadata !{i32 786445, metadata !5, metadata !522, metadata !"enc", i32 123, i64 384, i64 64, i64 0, i32 0, metadata !525} ; [ DW_TAG_member ] [enc] [line 123, size 384, align 64, offset 0] [from sshenc]
!525 = metadata !{i32 786451, metadata !5, null, metadata !"sshenc", i32 107, i64 384, i64 64, i32 0, i32 0, null, metadata !526, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshenc] [line 107, size 384, align 64, offset 0] [def] [from ]
!526 = metadata !{metadata !527, metadata !528, metadata !533, metadata !534, metadata !535, metadata !536, metadata !537, metadata !538}
!527 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"name", i32 108, i64 64, i64 64, i64 0, i32 0, metadata !73} ; [ DW_TAG_member ] [name] [line 108, size 64, align 64, offset 0] [from ]
!528 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"cipher", i32 109, i64 64, i64 64, i64 64, i32 0, metadata !529} ; [ DW_TAG_member ] [cipher] [line 109, size 64, align 64, offset 64] [from ]
!529 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !530} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!530 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !531} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from sshcipher]
!531 = metadata !{i32 786451, metadata !532, null, metadata !"sshcipher", i32 65, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshcipher] [line 65, size 0, align 0, offset 0] [decl] [from ]
!532 = metadata !{metadata !"./cipher.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!533 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"enabled", i32 110, i64 32, i64 32, i64 128, i32 0, metadata !109} ; [ DW_TAG_member ] [enabled] [line 110, size 32, align 32, offset 128] [from int]
!534 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"key_len", i32 111, i64 32, i64 32, i64 160, i32 0, metadata !368} ; [ DW_TAG_member ] [key_len] [line 111, size 32, align 32, offset 160] [from u_int]
!535 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"iv_len", i32 112, i64 32, i64 32, i64 192, i32 0, metadata !368} ; [ DW_TAG_member ] [iv_len] [line 112, size 32, align 32, offset 192] [from u_int]
!536 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"block_size", i32 113, i64 32, i64 32, i64 224, i32 0, metadata !368} ; [ DW_TAG_member ] [block_size] [line 113, size 32, align 32, offset 224] [from u_int]
!537 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"key", i32 114, i64 64, i64 64, i64 256, i32 0, metadata !342} ; [ DW_TAG_member ] [key] [line 114, size 64, align 64, offset 256] [from ]
!538 = metadata !{i32 786445, metadata !5, metadata !525, metadata !"iv", i32 115, i64 64, i64 64, i64 320, i32 0, metadata !342} ; [ DW_TAG_member ] [iv] [line 115, size 64, align 64, offset 320] [from ]
!539 = metadata !{i32 786445, metadata !5, metadata !522, metadata !"mac", i32 124, i64 448, i64 64, i64 384, i32 0, metadata !540} ; [ DW_TAG_member ] [mac] [line 124, size 448, align 64, offset 384] [from sshmac]
!540 = metadata !{i32 786451, metadata !541, null, metadata !"sshmac", i32 31, i64 448, i64 64, i32 0, i32 0, null, metadata !542, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshmac] [line 31, size 448, align 64, offset 0] [def] [from ]
!541 = metadata !{metadata !"./mac.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!542 = metadata !{metadata !543, metadata !544, metadata !545, metadata !546, metadata !547, metadata !548, metadata !549, metadata !550, metadata !553}
!543 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"name", i32 32, i64 64, i64 64, i64 0, i32 0, metadata !73} ; [ DW_TAG_member ] [name] [line 32, size 64, align 64, offset 0] [from ]
!544 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"enabled", i32 33, i64 32, i64 32, i64 64, i32 0, metadata !109} ; [ DW_TAG_member ] [enabled] [line 33, size 32, align 32, offset 64] [from int]
!545 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"mac_len", i32 34, i64 32, i64 32, i64 96, i32 0, metadata !368} ; [ DW_TAG_member ] [mac_len] [line 34, size 32, align 32, offset 96] [from u_int]
!546 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"key", i32 35, i64 64, i64 64, i64 128, i32 0, metadata !342} ; [ DW_TAG_member ] [key] [line 35, size 64, align 64, offset 128] [from ]
!547 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"key_len", i32 36, i64 32, i64 32, i64 192, i32 0, metadata !368} ; [ DW_TAG_member ] [key_len] [line 36, size 32, align 32, offset 192] [from u_int]
!548 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"type", i32 37, i64 32, i64 32, i64 224, i32 0, metadata !109} ; [ DW_TAG_member ] [type] [line 37, size 32, align 32, offset 224] [from int]
!549 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"etm", i32 38, i64 32, i64 32, i64 256, i32 0, metadata !109} ; [ DW_TAG_member ] [etm] [line 38, size 32, align 32, offset 256] [from int]
!550 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"hmac_ctx", i32 39, i64 64, i64 64, i64 320, i32 0, metadata !551} ; [ DW_TAG_member ] [hmac_ctx] [line 39, size 64, align 64, offset 320] [from ]
!551 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !552} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ssh_hmac_ctx]
!552 = metadata !{i32 786451, metadata !541, null, metadata !"ssh_hmac_ctx", i32 39, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [ssh_hmac_ctx] [line 39, size 0, align 0, offset 0] [decl] [from ]
!553 = metadata !{i32 786445, metadata !541, metadata !540, metadata !"umac_ctx", i32 40, i64 64, i64 64, i64 384, i32 0, metadata !554} ; [ DW_TAG_member ] [umac_ctx] [line 40, size 64, align 64, offset 384] [from ]
!554 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !555} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from umac_ctx]
!555 = metadata !{i32 786451, metadata !541, null, metadata !"umac_ctx", i32 40, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [umac_ctx] [line 40, size 0, align 0, offset 0] [decl] [from ]
!556 = metadata !{i32 786445, metadata !5, metadata !522, metadata !"comp", i32 125, i64 128, i64 64, i64 832, i32 0, metadata !557} ; [ DW_TAG_member ] [comp] [line 125, size 128, align 64, offset 832] [from sshcomp]
!557 = metadata !{i32 786451, metadata !5, null, metadata !"sshcomp", i32 117, i64 128, i64 64, i32 0, i32 0, null, metadata !558, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [sshcomp] [line 117, size 128, align 64, offset 0] [def] [from ]
!558 = metadata !{metadata !559, metadata !560, metadata !561}
!559 = metadata !{i32 786445, metadata !5, metadata !557, metadata !"type", i32 118, i64 32, i64 32, i64 0, i32 0, metadata !368} ; [ DW_TAG_member ] [type] [line 118, size 32, align 32, offset 0] [from u_int]
!560 = metadata !{i32 786445, metadata !5, metadata !557, metadata !"enabled", i32 119, i64 32, i64 32, i64 32, i32 0, metadata !109} ; [ DW_TAG_member ] [enabled] [line 119, size 32, align 32, offset 32] [from int]
!561 = metadata !{i32 786445, metadata !5, metadata !557, metadata !"name", i32 120, i64 64, i64 64, i64 64, i32 0, metadata !73} ; [ DW_TAG_member ] [name] [line 120, size 64, align 64, offset 64] [from ]
!562 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"we_need", i32 134, i64 32, i64 32, i64 256, i32 0, metadata !368} ; [ DW_TAG_member ] [we_need] [line 134, size 32, align 32, offset 256] [from u_int]
!563 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"dh_need", i32 135, i64 32, i64 32, i64 288, i32 0, metadata !368} ; [ DW_TAG_member ] [dh_need] [line 135, size 32, align 32, offset 288] [from u_int]
!564 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"server", i32 136, i64 32, i64 32, i64 320, i32 0, metadata !109} ; [ DW_TAG_member ] [server] [line 136, size 32, align 32, offset 320] [from int]
!565 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"name", i32 137, i64 64, i64 64, i64 384, i32 0, metadata !73} ; [ DW_TAG_member ] [name] [line 137, size 64, align 64, offset 384] [from ]
!566 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"hostkey_alg", i32 138, i64 64, i64 64, i64 448, i32 0, metadata !73} ; [ DW_TAG_member ] [hostkey_alg] [line 138, size 64, align 64, offset 448] [from ]
!567 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"hostkey_type", i32 139, i64 32, i64 32, i64 512, i32 0, metadata !109} ; [ DW_TAG_member ] [hostkey_type] [line 139, size 32, align 32, offset 512] [from int]
!568 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"hostkey_nid", i32 140, i64 32, i64 32, i64 544, i32 0, metadata !109} ; [ DW_TAG_member ] [hostkey_nid] [line 140, size 32, align 32, offset 544] [from int]
!569 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"kex_type", i32 141, i64 32, i64 32, i64 576, i32 0, metadata !368} ; [ DW_TAG_member ] [kex_type] [line 141, size 32, align 32, offset 576] [from u_int]
!570 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"rsa_sha2", i32 142, i64 32, i64 32, i64 608, i32 0, metadata !109} ; [ DW_TAG_member ] [rsa_sha2] [line 142, size 32, align 32, offset 608] [from int]
!571 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"ext_info_c", i32 143, i64 32, i64 32, i64 640, i32 0, metadata !109} ; [ DW_TAG_member ] [ext_info_c] [line 143, size 32, align 32, offset 640] [from int]
!572 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"my", i32 144, i64 64, i64 64, i64 704, i32 0, metadata !351} ; [ DW_TAG_member ] [my] [line 144, size 64, align 64, offset 704] [from ]
!573 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"peer", i32 145, i64 64, i64 64, i64 768, i32 0, metadata !351} ; [ DW_TAG_member ] [peer] [line 145, size 64, align 64, offset 768] [from ]
!574 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"done", i32 146, i64 32, i64 32, i64 832, i32 0, metadata !417} ; [ DW_TAG_member ] [done] [line 146, size 32, align 32, offset 832] [from sig_atomic_t]
!575 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"flags", i32 147, i64 32, i64 32, i64 864, i32 0, metadata !368} ; [ DW_TAG_member ] [flags] [line 147, size 32, align 32, offset 864] [from u_int]
!576 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"hash_alg", i32 148, i64 32, i64 32, i64 896, i32 0, metadata !109} ; [ DW_TAG_member ] [hash_alg] [line 148, size 32, align 32, offset 896] [from int]
!577 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"ec_nid", i32 149, i64 32, i64 32, i64 928, i32 0, metadata !109} ; [ DW_TAG_member ] [ec_nid] [line 149, size 32, align 32, offset 928] [from int]
!578 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"client_version_string", i32 150, i64 64, i64 64, i64 960, i32 0, metadata !73} ; [ DW_TAG_member ] [client_version_string] [line 150, size 64, align 64, offset 960] [from ]
!579 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"server_version_string", i32 151, i64 64, i64 64, i64 1024, i32 0, metadata !73} ; [ DW_TAG_member ] [server_version_string] [line 151, size 64, align 64, offset 1024] [from ]
!580 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"failed_choice", i32 152, i64 64, i64 64, i64 1088, i32 0, metadata !73} ; [ DW_TAG_member ] [failed_choice] [line 152, size 64, align 64, offset 1088] [from ]
!581 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"verify_host_key", i32 153, i64 64, i64 64, i64 1152, i32 0, metadata !582} ; [ DW_TAG_member ] [verify_host_key] [line 153, size 64, align 64, offset 1152] [from ]
!582 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !583} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!583 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !584, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!584 = metadata !{metadata !109, metadata !382, metadata !506}
!585 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"load_host_public_key", i32 154, i64 64, i64 64, i64 1216, i32 0, metadata !586} ; [ DW_TAG_member ] [load_host_public_key] [line 154, size 64, align 64, offset 1216] [from ]
!586 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !587} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!587 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !588, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!588 = metadata !{metadata !382, metadata !109, metadata !109, metadata !506}
!589 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"load_host_private_key", i32 155, i64 64, i64 64, i64 1280, i32 0, metadata !586} ; [ DW_TAG_member ] [load_host_private_key] [line 155, size 64, align 64, offset 1280] [from ]
!590 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"host_key_index", i32 156, i64 64, i64 64, i64 1344, i32 0, metadata !591} ; [ DW_TAG_member ] [host_key_index] [line 156, size 64, align 64, offset 1344] [from ]
!591 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !592} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!592 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !593, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!593 = metadata !{metadata !109, metadata !382, metadata !109, metadata !506}
!594 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"sign", i32 157, i64 64, i64 64, i64 1408, i32 0, metadata !595} ; [ DW_TAG_member ] [sign] [line 157, size 64, align 64, offset 1408] [from ]
!595 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !596} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!596 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !597, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!597 = metadata !{metadata !109, metadata !382, metadata !382, metadata !480, metadata !481, metadata !357, metadata !360, metadata !94, metadata !368}
!598 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"kex", i32 159, i64 576, i64 64, i64 1472, i32 0, metadata !599} ; [ DW_TAG_member ] [kex] [line 159, size 576, align 64, offset 1472] [from ]
!599 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 576, i64 64, i32 0, i32 0, metadata !600, metadata !603, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 576, align 64, offset 0] [from ]
!600 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !601} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!601 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !602, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!602 = metadata !{metadata !109, metadata !506}
!603 = metadata !{metadata !604}
!604 = metadata !{i32 786465, i64 0, i64 9}       ; [ DW_TAG_subrange_type ] [0, 8]
!605 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"dh", i32 161, i64 64, i64 64, i64 2048, i32 0, metadata !606} ; [ DW_TAG_member ] [dh] [line 161, size 64, align 64, offset 2048] [from ]
!606 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !607} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DH]
!607 = metadata !{i32 786454, metadata !114, null, metadata !"DH", i32 134, i64 0, i64 0, i64 0, i32 0, metadata !608} ; [ DW_TAG_typedef ] [DH] [line 134, size 0, align 0, offset 0] [from dh_st]
!608 = metadata !{i32 786451, metadata !609, null, metadata !"dh_st", i32 130, i64 1152, i64 64, i32 0, i32 0, null, metadata !610, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dh_st] [line 130, size 1152, align 64, offset 0] [def] [from ]
!609 = metadata !{metadata !"/usr/include/openssl/dh.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!610 = metadata !{metadata !611, metadata !612, metadata !613, metadata !614, metadata !615, metadata !616, metadata !617, metadata !618, metadata !619, metadata !620, metadata !621, metadata !622, metadata !623, metadata !624, metadata !625, metadata !626, metadata !627, metadata !656}
!611 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"pad", i32 134, i64 32, i64 32, i64 0, i32 0, metadata !109} ; [ DW_TAG_member ] [pad] [line 134, size 32, align 32, offset 0] [from int]
!612 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"version", i32 135, i64 32, i64 32, i64 32, i32 0, metadata !109} ; [ DW_TAG_member ] [version] [line 135, size 32, align 32, offset 32] [from int]
!613 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"p", i32 136, i64 64, i64 64, i64 64, i32 0, metadata !143} ; [ DW_TAG_member ] [p] [line 136, size 64, align 64, offset 64] [from ]
!614 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"g", i32 137, i64 64, i64 64, i64 128, i32 0, metadata !143} ; [ DW_TAG_member ] [g] [line 137, size 64, align 64, offset 128] [from ]
!615 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"length", i32 138, i64 64, i64 64, i64 192, i32 0, metadata !120} ; [ DW_TAG_member ] [length] [line 138, size 64, align 64, offset 192] [from long int]
!616 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"pub_key", i32 139, i64 64, i64 64, i64 256, i32 0, metadata !143} ; [ DW_TAG_member ] [pub_key] [line 139, size 64, align 64, offset 256] [from ]
!617 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"priv_key", i32 140, i64 64, i64 64, i64 320, i32 0, metadata !143} ; [ DW_TAG_member ] [priv_key] [line 140, size 64, align 64, offset 320] [from ]
!618 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"flags", i32 142, i64 32, i64 32, i64 384, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 142, size 32, align 32, offset 384] [from int]
!619 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"method_mont_p", i32 143, i64 64, i64 64, i64 448, i32 0, metadata !164} ; [ DW_TAG_member ] [method_mont_p] [line 143, size 64, align 64, offset 448] [from ]
!620 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"q", i32 145, i64 64, i64 64, i64 512, i32 0, metadata !143} ; [ DW_TAG_member ] [q] [line 145, size 64, align 64, offset 512] [from ]
!621 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"j", i32 146, i64 64, i64 64, i64 576, i32 0, metadata !143} ; [ DW_TAG_member ] [j] [line 146, size 64, align 64, offset 576] [from ]
!622 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"seed", i32 147, i64 64, i64 64, i64 640, i32 0, metadata !135} ; [ DW_TAG_member ] [seed] [line 147, size 64, align 64, offset 640] [from ]
!623 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"seedlen", i32 148, i64 32, i64 32, i64 704, i32 0, metadata !109} ; [ DW_TAG_member ] [seedlen] [line 148, size 32, align 32, offset 704] [from int]
!624 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"counter", i32 149, i64 64, i64 64, i64 768, i32 0, metadata !143} ; [ DW_TAG_member ] [counter] [line 149, size 64, align 64, offset 768] [from ]
!625 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"references", i32 151, i64 32, i64 32, i64 832, i32 0, metadata !109} ; [ DW_TAG_member ] [references] [line 151, size 32, align 32, offset 832] [from int]
!626 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"ex_data", i32 152, i64 128, i64 64, i64 896, i32 0, metadata !231} ; [ DW_TAG_member ] [ex_data] [line 152, size 128, align 64, offset 896] [from CRYPTO_EX_DATA]
!627 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"meth", i32 153, i64 64, i64 64, i64 1024, i32 0, metadata !628} ; [ DW_TAG_member ] [meth] [line 153, size 64, align 64, offset 1024] [from ]
!628 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !629} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!629 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !630} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from DH_METHOD]
!630 = metadata !{i32 786454, metadata !114, null, metadata !"DH_METHOD", i32 135, i64 0, i64 0, i64 0, i32 0, metadata !631} ; [ DW_TAG_typedef ] [DH_METHOD] [line 135, size 0, align 0, offset 0] [from dh_method]
!631 = metadata !{i32 786451, metadata !609, null, metadata !"dh_method", i32 112, i64 576, i64 64, i32 0, i32 0, null, metadata !632, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [dh_method] [line 112, size 576, align 64, offset 0] [def] [from ]
!632 = metadata !{metadata !633, metadata !634, metadata !638, metadata !642, metadata !648, metadata !649, metadata !650, metadata !651, metadata !652}
!633 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"name", i32 114, i64 64, i64 64, i64 0, i32 0, metadata !94} ; [ DW_TAG_member ] [name] [line 114, size 64, align 64, offset 0] [from ]
!634 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"generate_key", i32 116, i64 64, i64 64, i64 64, i32 0, metadata !635} ; [ DW_TAG_member ] [generate_key] [line 116, size 64, align 64, offset 64] [from ]
!635 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !636} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!636 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !637, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!637 = metadata !{metadata !109, metadata !606}
!638 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"compute_key", i32 117, i64 64, i64 64, i64 128, i32 0, metadata !639} ; [ DW_TAG_member ] [compute_key] [line 117, size 64, align 64, offset 128] [from ]
!639 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !640} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!640 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !641, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!641 = metadata !{metadata !109, metadata !135, metadata !155, metadata !606}
!642 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"bn_mod_exp", i32 118, i64 64, i64 64, i64 192, i32 0, metadata !643} ; [ DW_TAG_member ] [bn_mod_exp] [line 118, size 64, align 64, offset 192] [from ]
!643 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !644} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!644 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !645, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!645 = metadata !{metadata !109, metadata !646, metadata !143, metadata !155, metadata !155, metadata !155, metadata !157, metadata !164}
!646 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !647} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!647 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !607} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from DH]
!648 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"init", i32 122, i64 64, i64 64, i64 256, i32 0, metadata !635} ; [ DW_TAG_member ] [init] [line 122, size 64, align 64, offset 256] [from ]
!649 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"finish", i32 123, i64 64, i64 64, i64 320, i32 0, metadata !635} ; [ DW_TAG_member ] [finish] [line 123, size 64, align 64, offset 320] [from ]
!650 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"flags", i32 124, i64 32, i64 32, i64 384, i32 0, metadata !109} ; [ DW_TAG_member ] [flags] [line 124, size 32, align 32, offset 384] [from int]
!651 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"app_data", i32 125, i64 64, i64 64, i64 448, i32 0, metadata !73} ; [ DW_TAG_member ] [app_data] [line 125, size 64, align 64, offset 448] [from ]
!652 = metadata !{i32 786445, metadata !609, metadata !631, metadata !"generate_params", i32 127, i64 64, i64 64, i64 512, i32 0, metadata !653} ; [ DW_TAG_member ] [generate_params] [line 127, size 64, align 64, offset 512] [from ]
!653 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !654} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!654 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !655, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!655 = metadata !{metadata !109, metadata !606, metadata !109, metadata !109, metadata !200}
!656 = metadata !{i32 786445, metadata !609, metadata !608, metadata !"engine", i32 154, i64 64, i64 64, i64 1088, i32 0, metadata !219} ; [ DW_TAG_member ] [engine] [line 154, size 64, align 64, offset 1088] [from ]
!657 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"min", i32 162, i64 32, i64 32, i64 2112, i32 0, metadata !368} ; [ DW_TAG_member ] [min] [line 162, size 32, align 32, offset 2112] [from u_int]
!658 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"max", i32 162, i64 32, i64 32, i64 2144, i32 0, metadata !368} ; [ DW_TAG_member ] [max] [line 162, size 32, align 32, offset 2144] [from u_int]
!659 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"nbits", i32 162, i64 32, i64 32, i64 2176, i32 0, metadata !368} ; [ DW_TAG_member ] [nbits] [line 162, size 32, align 32, offset 2176] [from u_int]
!660 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"ec_client_key", i32 163, i64 64, i64 64, i64 2240, i32 0, metadata !337} ; [ DW_TAG_member ] [ec_client_key] [line 163, size 64, align 64, offset 2240] [from ]
!661 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"ec_group", i32 164, i64 64, i64 64, i64 2304, i32 0, metadata !662} ; [ DW_TAG_member ] [ec_group] [line 164, size 64, align 64, offset 2304] [from ]
!662 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !663} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!663 = metadata !{i32 786470, null, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, metadata !664} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from EC_GROUP]
!664 = metadata !{i32 786454, metadata !339, null, metadata !"EC_GROUP", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !665} ; [ DW_TAG_typedef ] [EC_GROUP] [line 129, size 0, align 0, offset 0] [from ec_group_st]
!665 = metadata !{i32 786451, metadata !339, null, metadata !"ec_group_st", i32 120, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [ec_group_st] [line 120, size 0, align 0, offset 0] [decl] [from ]
!666 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"c25519_client_key", i32 165, i64 256, i64 8, i64 2368, i32 0, metadata !667} ; [ DW_TAG_member ] [c25519_client_key] [line 165, size 256, align 8, offset 2368] [from ]
!667 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 256, i64 8, i32 0, i32 0, metadata !343, metadata !668, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 8, offset 0] [from u_char]
!668 = metadata !{metadata !669}
!669 = metadata !{i32 786465, i64 0, i64 32}      ; [ DW_TAG_subrange_type ] [0, 31]
!670 = metadata !{i32 786445, metadata !5, metadata !515, metadata !"c25519_client_pubkey", i32 166, i64 256, i64 8, i64 2624, i32 0, metadata !667} ; [ DW_TAG_member ] [c25519_client_pubkey] [line 166, size 256, align 8, offset 2624] [from ]
!671 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"remote_ipaddr", i32 60, i64 64, i64 64, i64 128, i32 0, metadata !73} ; [ DW_TAG_member ] [remote_ipaddr] [line 60, size 64, align 64, offset 128] [from ]
!672 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"remote_port", i32 61, i64 32, i64 32, i64 192, i32 0, metadata !109} ; [ DW_TAG_member ] [remote_port] [line 61, size 32, align 32, offset 192] [from int]
!673 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"local_ipaddr", i32 62, i64 64, i64 64, i64 256, i32 0, metadata !73} ; [ DW_TAG_member ] [local_ipaddr] [line 62, size 64, align 64, offset 256] [from ]
!674 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"local_port", i32 63, i64 32, i64 32, i64 320, i32 0, metadata !109} ; [ DW_TAG_member ] [local_port] [line 63, size 32, align 32, offset 320] [from int]
!675 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"dispatch", i32 66, i64 16320, i64 64, i64 384, i32 0, metadata !676} ; [ DW_TAG_member ] [dispatch] [line 66, size 16320, align 64, offset 384] [from ]
!676 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 16320, i64 64, i32 0, i32 0, metadata !677, metadata !679, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 16320, align 64, offset 0] [from ]
!677 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !678} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from dispatch_fn]
!678 = metadata !{i32 786454, metadata !31, null, metadata !"dispatch_fn", i32 39, i64 0, i64 0, i64 0, i32 0, metadata !386} ; [ DW_TAG_typedef ] [dispatch_fn] [line 39, size 0, align 0, offset 0] [from ]
!679 = metadata !{metadata !680}
!680 = metadata !{i32 786465, i64 0, i64 255}     ; [ DW_TAG_subrange_type ] [0, 254]
!681 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"dispatch_skip_packets", i32 68, i64 32, i64 32, i64 16704, i32 0, metadata !109} ; [ DW_TAG_member ] [dispatch_skip_packets] [line 68, size 32, align 32, offset 16704] [from int]
!682 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"compat", i32 71, i64 32, i64 32, i64 16736, i32 0, metadata !109} ; [ DW_TAG_member ] [compat] [line 71, size 32, align 32, offset 16736] [from int]
!683 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"private_keys", i32 74, i64 128, i64 64, i64 16768, i32 0, metadata !684} ; [ DW_TAG_member ] [private_keys] [line 74, size 128, align 64, offset 16768] [from ]
!684 = metadata !{i32 786451, metadata !508, metadata !507, metadata !"", i32 74, i64 128, i64 64, i32 0, i32 0, null, metadata !685, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [line 74, size 128, align 64, offset 0] [def] [from ]
!685 = metadata !{metadata !686, metadata !697}
!686 = metadata !{i32 786445, metadata !508, metadata !684, metadata !"tqh_first", i32 74, i64 64, i64 64, i64 0, i32 0, metadata !687} ; [ DW_TAG_member ] [tqh_first] [line 74, size 64, align 64, offset 0] [from ]
!687 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !688} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from key_entry]
!688 = metadata !{i32 786451, metadata !508, null, metadata !"key_entry", i32 47, i64 192, i64 64, i32 0, i32 0, null, metadata !689, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [key_entry] [line 47, size 192, align 64, offset 0] [def] [from ]
!689 = metadata !{metadata !690, metadata !696}
!690 = metadata !{i32 786445, metadata !508, metadata !688, metadata !"next", i32 48, i64 128, i64 64, i64 0, i32 0, metadata !691} ; [ DW_TAG_member ] [next] [line 48, size 128, align 64, offset 0] [from ]
!691 = metadata !{i32 786451, metadata !508, metadata !688, metadata !"", i32 48, i64 128, i64 64, i32 0, i32 0, null, metadata !692, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [line 48, size 128, align 64, offset 0] [def] [from ]
!692 = metadata !{metadata !693, metadata !694}
!693 = metadata !{i32 786445, metadata !508, metadata !691, metadata !"tqe_next", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !687} ; [ DW_TAG_member ] [tqe_next] [line 48, size 64, align 64, offset 0] [from ]
!694 = metadata !{i32 786445, metadata !508, metadata !691, metadata !"tqe_prev", i32 48, i64 64, i64 64, i64 64, i32 0, metadata !695} ; [ DW_TAG_member ] [tqe_prev] [line 48, size 64, align 64, offset 64] [from ]
!695 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !687} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!696 = metadata !{i32 786445, metadata !508, metadata !688, metadata !"key", i32 49, i64 64, i64 64, i64 128, i32 0, metadata !382} ; [ DW_TAG_member ] [key] [line 49, size 64, align 64, offset 128] [from ]
!697 = metadata !{i32 786445, metadata !508, metadata !684, metadata !"tqh_last", i32 74, i64 64, i64 64, i64 64, i32 0, metadata !695} ; [ DW_TAG_member ] [tqh_last] [line 74, size 64, align 64, offset 64] [from ]
!698 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"public_keys", i32 75, i64 128, i64 64, i64 16896, i32 0, metadata !699} ; [ DW_TAG_member ] [public_keys] [line 75, size 128, align 64, offset 16896] [from ]
!699 = metadata !{i32 786451, metadata !508, metadata !507, metadata !"", i32 75, i64 128, i64 64, i32 0, i32 0, null, metadata !700, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [line 75, size 128, align 64, offset 0] [def] [from ]
!700 = metadata !{metadata !701, metadata !702}
!701 = metadata !{i32 786445, metadata !508, metadata !699, metadata !"tqh_first", i32 75, i64 64, i64 64, i64 0, i32 0, metadata !687} ; [ DW_TAG_member ] [tqh_first] [line 75, size 64, align 64, offset 0] [from ]
!702 = metadata !{i32 786445, metadata !508, metadata !699, metadata !"tqh_last", i32 75, i64 64, i64 64, i64 64, i32 0, metadata !695} ; [ DW_TAG_member ] [tqh_last] [line 75, size 64, align 64, offset 64] [from ]
!703 = metadata !{i32 786445, metadata !508, metadata !507, metadata !"app_data", i32 78, i64 64, i64 64, i64 17024, i32 0, metadata !206} ; [ DW_TAG_member ] [app_data] [line 78, size 64, align 64, offset 17024] [from ]
!704 = metadata !{i32 786478, metadata !2, metadata !70, metadata !"order_hostkeyalgs", metadata !"order_hostkeyalgs", metadata !"", i32 104, metadata !705, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, %struct.sockaddr*, i16)* @order_hostkeyalgs, null, null, metadata !67, i32 105} ; [ DW_TAG_subprogram ] [line 104] [local] [def] [scope 105] [order_hostkeyalgs]
!705 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !706, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!706 = metadata !{metadata !73, metadata !73, metadata !75, metadata !87}
!707 = metadata !{metadata !708, metadata !709, metadata !710, metadata !714, metadata !715, metadata !716, metadata !721, metadata !722, metadata !724, metadata !725, metadata !726, metadata !727, metadata !728}
!708 = metadata !{i32 786484, i32 0, null, metadata !"session_id2", metadata !"session_id2", metadata !"", metadata !70, i32 89, metadata !342, i32 0, i32 1, i8** @session_id2, null} ; [ DW_TAG_variable ] [session_id2] [line 89] [def]
!709 = metadata !{i32 786484, i32 0, null, metadata !"session_id2_len", metadata !"session_id2_len", metadata !"", metadata !70, i32 90, metadata !368, i32 0, i32 1, i32* @session_id2_len, null} ; [ DW_TAG_variable ] [session_id2_len] [line 90] [def]
!710 = metadata !{i32 786484, i32 0, null, metadata !"authmethods", metadata !"authmethods", metadata !"", metadata !70, i32 328, metadata !711, i32 0, i32 1, [6 x %struct.cauthmethod]* @authmethods, null} ; [ DW_TAG_variable ] [authmethods] [line 328] [def]
!711 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1920, i64 64, i32 0, i32 0, metadata !470, metadata !712, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1920, align 64, offset 0] [from Authmethod]
!712 = metadata !{metadata !713}
!713 = metadata !{i32 786465, i64 0, i64 6}       ; [ DW_TAG_subrange_type ] [0, 5]
!714 = metadata !{i32 786484, i32 0, metadata !457, metadata !"attempt", metadata !"attempt", metadata !"", metadata !70, i32 895, metadata !109, i32 1, i32 1, i32* @userauth_passwd.attempt, null} ; [ DW_TAG_variable ] [attempt] [line 895] [local] [def]
!715 = metadata !{i32 786484, i32 0, metadata !460, metadata !"attempt", metadata !"attempt", metadata !"", metadata !70, i32 1490, metadata !109, i32 1, i32 1, i32* @userauth_kbdint.attempt, null} ; [ DW_TAG_variable ] [attempt] [line 1490] [local] [def]
!716 = metadata !{i32 786484, i32 0, null, metadata !"shen_start", metadata !"shen_start", metadata !"", metadata !717, i32 20, metadata !718, i32 0, i32 1, i64* @shen_start, null} ; [ DW_TAG_variable ] [shen_start] [line 20] [def]
!717 = metadata !{i32 786473, metadata !36}       ; [ DW_TAG_file_type ] [/home/sxl463/working/security-programs/openssh-new/./log.h]
!718 = metadata !{i32 786454, metadata !719, null, metadata !"clock_t", i32 59, i64 0, i64 0, i64 0, i32 0, metadata !720} ; [ DW_TAG_typedef ] [clock_t] [line 59, size 0, align 0, offset 0] [from __clock_t]
!719 = metadata !{metadata !"/usr/include/time.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!720 = metadata !{i32 786454, metadata !90, null, metadata !"__clock_t", i32 135, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__clock_t] [line 135, size 0, align 0, offset 0] [from long int]
!721 = metadata !{i32 786484, i32 0, null, metadata !"shen_end", metadata !"shen_end", metadata !"", metadata !717, i32 20, metadata !718, i32 0, i32 1, i64* @shen_end, null} ; [ DW_TAG_variable ] [shen_end] [line 20] [def]
!722 = metadata !{i32 786484, i32 0, null, metadata !"cpu_time_used", metadata !"cpu_time_used", metadata !"", metadata !717, i32 21, metadata !723, i32 0, i32 1, double* @cpu_time_used, null} ; [ DW_TAG_variable ] [cpu_time_used] [line 21] [def]
!723 = metadata !{i32 786468, null, null, metadata !"double", i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ] [double] [line 0, size 64, align 64, offset 0, enc DW_ATE_float]
!724 = metadata !{i32 786484, i32 0, null, metadata !"xxx_host", metadata !"xxx_host", metadata !"", metadata !70, i32 92, metadata !73, i32 0, i32 1, i8** @xxx_host, null} ; [ DW_TAG_variable ] [xxx_host] [line 92] [def]
!725 = metadata !{i32 786484, i32 0, null, metadata !"xxx_hostaddr", metadata !"xxx_hostaddr", metadata !"", metadata !70, i32 93, metadata !75, i32 0, i32 1, %struct.sockaddr** @xxx_hostaddr, null} ; [ DW_TAG_variable ] [xxx_hostaddr] [line 93] [def]
!726 = metadata !{i32 786484, i32 0, null, metadata !"current", metadata !"current", metadata !"", metadata !70, i32 1868, metadata !469, i32 1, i32 1, %struct.cauthmethod** @current, null} ; [ DW_TAG_variable ] [current] [line 1868] [local] [def]
!727 = metadata !{i32 786484, i32 0, null, metadata !"preferred", metadata !"preferred", metadata !"", metadata !70, i32 1870, metadata !73, i32 1, i32 1, i8** @preferred, null} ; [ DW_TAG_variable ] [preferred] [line 1870] [local] [def]
!728 = metadata !{i32 786484, i32 0, null, metadata !"supported", metadata !"supported", metadata !"", metadata !70, i32 1869, metadata !73, i32 1, i32 1, i8** @supported, null} ; [ DW_TAG_variable ] [supported] [line 1869] [local] [def]
!729 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!730 = metadata !{i32 2, metadata !"Debug Info Version", i32 1}
!731 = metadata !{i32 786689, metadata !69, metadata !"host", metadata !70, i32 16777374, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [host] [line 158]
!732 = metadata !{i32 158, i32 16, metadata !69, null}
!733 = metadata !{i32 786689, metadata !69, metadata !"hostaddr", metadata !70, i32 33554590, metadata !75, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [hostaddr] [line 158]
!734 = metadata !{i32 158, i32 39, metadata !69, null}
!735 = metadata !{i32 786689, metadata !69, metadata !"port", metadata !70, i32 50331806, metadata !87, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [port] [line 158]
!736 = metadata !{i32 158, i32 57, metadata !69, null}
!737 = metadata !{i32 786688, metadata !69, metadata !"myproposal", metadata !70, i32 160, metadata !738, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [myproposal] [line 160]
!738 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 640, i64 64, i32 0, i32 0, metadata !73, metadata !739, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 640, align 64, offset 0] [from ]
!739 = metadata !{metadata !740}
!740 = metadata !{i32 786465, i64 0, i64 10}      ; [ DW_TAG_subrange_type ] [0, 9]
!741 = metadata !{i32 160, i32 8, metadata !69, null}
!742 = metadata !{i32 160, i32 2, metadata !69, null}
!743 = metadata !{i32 786688, metadata !69, metadata !"s", metadata !70, i32 161, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [s] [line 161]
!744 = metadata !{i32 161, i32 8, metadata !69, null}
!745 = metadata !{i32 786688, metadata !69, metadata !"kex", metadata !70, i32 162, metadata !514, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [kex] [line 162]
!746 = metadata !{i32 162, i32 14, metadata !69, null}
!747 = metadata !{i32 786688, metadata !69, metadata !"r", metadata !70, i32 163, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 163]
!748 = metadata !{i32 163, i32 6, metadata !69, null}
!749 = metadata !{i32 165, i32 2, metadata !69, null}
!750 = metadata !{i32 166, i32 2, metadata !69, null}
!751 = metadata !{i32 168, i32 11, metadata !752, null}
!752 = metadata !{i32 786443, metadata !2, metadata !69, i32 168, i32 6, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!753 = metadata !{i32 169, i32 3, metadata !752, null}
!754 = metadata !{i32 170, i32 34, metadata !69, null}
!755 = metadata !{i32 172, i32 6, metadata !69, null}
!756 = metadata !{i32 174, i32 6, metadata !69, null}
!757 = metadata !{i32 175, i32 2, metadata !69, null}
!758 = metadata !{i32 178, i32 2, metadata !69, null}
!759 = metadata !{i32 180, i32 6, metadata !760, null}
!760 = metadata !{i32 786443, metadata !2, metadata !69, i32 180, i32 6, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!761 = metadata !{i32 181, i32 7, metadata !762, null}
!762 = metadata !{i32 786443, metadata !2, metadata !763, i32 181, i32 7, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!763 = metadata !{i32 786443, metadata !2, metadata !760, i32 180, i32 41, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!764 = metadata !{i32 183, i32 4, metadata !762, null}
!765 = metadata !{i32 185, i32 7, metadata !763, null}
!766 = metadata !{i32 186, i32 2, metadata !763, null}
!767 = metadata !{i32 188, i32 31, metadata !768, null}
!768 = metadata !{i32 786443, metadata !2, metadata !760, i32 186, i32 9, i32 0, i32 4} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!769 = metadata !{i32 192, i32 7, metadata !768, null}
!770 = metadata !{i32 191, i32 7, metadata !768, null}
!771 = metadata !{i32 195, i32 6, metadata !772, null}
!772 = metadata !{i32 786443, metadata !2, metadata !69, i32 195, i32 6, i32 0, i32 5} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!773 = metadata !{i32 195, i32 6, metadata !774, null}
!774 = metadata !{i32 786443, metadata !2, metadata !772, i32 195, i32 6, i32 1, i32 313} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!775 = metadata !{i32 196, i32 3, metadata !772, null}
!776 = metadata !{i32 200, i32 11, metadata !777, null}
!777 = metadata !{i32 786443, metadata !2, metadata !69, i32 200, i32 6, i32 0, i32 6} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!778 = metadata !{i32 201, i32 26, metadata !777, null}
!779 = metadata !{i32 201, i32 3, metadata !777, null}
!780 = metadata !{i32 202, i32 2, metadata !69, null}
!781 = metadata !{i32 204, i32 2, metadata !69, null}
!782 = metadata !{i32 205, i32 2, metadata !69, null}
!783 = metadata !{i32 206, i32 2, metadata !69, null}
!784 = metadata !{i32 207, i32 2, metadata !69, null}
!785 = metadata !{i32 208, i32 2, metadata !69, null}
!786 = metadata !{i32 209, i32 2, metadata !69, null}
!787 = metadata !{i32 210, i32 2, metadata !69, null}
!788 = metadata !{i32 212, i32 2, metadata !69, null}
!789 = metadata !{i32 215, i32 2, metadata !69, null}
!790 = metadata !{i32 216, i32 2, metadata !69, null}
!791 = metadata !{i32 217, i32 2, metadata !69, null}
!792 = metadata !{i32 218, i32 2, metadata !69, null}
!793 = metadata !{i32 220, i32 2, metadata !69, null}
!794 = metadata !{i32 224, i32 6, metadata !69, null}
!795 = metadata !{i32 225, i32 11, metadata !796, null}
!796 = metadata !{i32 786443, metadata !2, metadata !69, i32 225, i32 6, i32 0, i32 7} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!797 = metadata !{i32 226, i32 29, metadata !796, null}
!798 = metadata !{i32 226, i32 3, metadata !796, null}
!799 = metadata !{i32 228, i32 2, metadata !69, null}
!800 = metadata !{i32 229, i32 2, metadata !69, null}
!801 = metadata !{i32 238, i32 1, metadata !69, null}
!802 = metadata !{i32 786689, metadata !462, metadata !"authctxt", metadata !70, i32 16778905, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1689]
!803 = metadata !{i32 1689, i32 30, metadata !462, null}
!804 = metadata !{i32 786688, metadata !462, metadata !"ssh", metadata !70, i32 1691, metadata !506, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ssh] [line 1691]
!805 = metadata !{i32 1691, i32 14, metadata !462, null}
!806 = metadata !{i32 1691, i32 2, metadata !462, null}
!807 = metadata !{i32 786688, metadata !462, metadata !"private", metadata !70, i32 1692, metadata !382, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [private] [line 1692]
!808 = metadata !{i32 1692, i32 17, metadata !462, null}
!809 = metadata !{i32 1692, i32 2, metadata !462, null}
!810 = metadata !{i32 786688, metadata !462, metadata !"b", metadata !70, i32 1693, metadata !351, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 1693]
!811 = metadata !{i32 1693, i32 17, metadata !462, null}
!812 = metadata !{i32 1693, i32 2, metadata !462, null}
!813 = metadata !{i32 786688, metadata !462, metadata !"service", metadata !70, i32 1694, metadata !94, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [service] [line 1694]
!814 = metadata !{i32 1694, i32 14, metadata !462, null}
!815 = metadata !{i32 786688, metadata !462, metadata !"sig", metadata !70, i32 1695, metadata !342, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [sig] [line 1695]
!816 = metadata !{i32 1695, i32 10, metadata !462, null}
!817 = metadata !{i32 1695, i32 2, metadata !462, null}
!818 = metadata !{i32 786688, metadata !462, metadata !"keyblob", metadata !70, i32 1695, metadata !342, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [keyblob] [line 1695]
!819 = metadata !{i32 1695, i32 23, metadata !462, null}
!820 = metadata !{i32 786688, metadata !462, metadata !"fp", metadata !70, i32 1696, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [fp] [line 1696]
!821 = metadata !{i32 1696, i32 8, metadata !462, null}
!822 = metadata !{i32 1696, i32 2, metadata !462, null}
!823 = metadata !{i32 786688, metadata !462, metadata !"chost", metadata !70, i32 1696, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [chost] [line 1696]
!824 = metadata !{i32 1696, i32 20, metadata !462, null}
!825 = metadata !{i32 786688, metadata !462, metadata !"lname", metadata !70, i32 1696, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [lname] [line 1696]
!826 = metadata !{i32 1696, i32 35, metadata !462, null}
!827 = metadata !{i32 786688, metadata !462, metadata !"siglen", metadata !70, i32 1697, metadata !360, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [siglen] [line 1697]
!828 = metadata !{i32 1697, i32 9, metadata !462, null}
!829 = metadata !{i32 1697, i32 2, metadata !462, null}
!830 = metadata !{i32 786688, metadata !462, metadata !"keylen", metadata !70, i32 1697, metadata !360, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [keylen] [line 1697]
!831 = metadata !{i32 1697, i32 21, metadata !462, null}
!832 = metadata !{i32 786688, metadata !462, metadata !"i", metadata !70, i32 1698, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 1698]
!833 = metadata !{i32 1698, i32 6, metadata !462, null}
!834 = metadata !{i32 786688, metadata !462, metadata !"r", metadata !70, i32 1698, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 1698]
!835 = metadata !{i32 1698, i32 9, metadata !462, null}
!836 = metadata !{i32 786688, metadata !462, metadata !"success", metadata !70, i32 1698, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [success] [line 1698]
!837 = metadata !{i32 1698, i32 12, metadata !462, null}
!838 = metadata !{i32 1698, i32 2, metadata !462, null}
!839 = metadata !{i32 1700, i32 6, metadata !840, null}
!840 = metadata !{i32 786443, metadata !2, metadata !462, i32 1700, i32 6, i32 0, i32 93} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!841 = metadata !{i32 1701, i32 23, metadata !842, null}
!842 = metadata !{i32 786443, metadata !2, metadata !840, i32 1700, i32 32, i32 0, i32 94} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!843 = metadata !{i32 1702, i32 3, metadata !842, null}
!844 = metadata !{i32 1703, i32 2, metadata !842, null}
!845 = metadata !{i32 1709, i32 2, metadata !846, null}
!846 = metadata !{i32 786443, metadata !2, metadata !462, i32 1709, i32 2, i32 0, i32 95} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!847 = metadata !{i32 1710, i32 7, metadata !848, null}
!848 = metadata !{i32 786443, metadata !2, metadata !849, i32 1710, i32 7, i32 0, i32 97} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!849 = metadata !{i32 786443, metadata !2, metadata !846, i32 1709, i32 11, i32 0, i32 96} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!850 = metadata !{i32 1711, i32 29, metadata !848, null}
!851 = metadata !{i32 1712, i32 7, metadata !852, null}
!852 = metadata !{i32 786443, metadata !2, metadata !849, i32 1712, i32 7, i32 0, i32 98} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!853 = metadata !{i32 1712, i32 7, metadata !854, null}
!854 = metadata !{i32 786443, metadata !2, metadata !852, i32 1712, i32 7, i32 1, i32 335} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!855 = metadata !{i32 1714, i32 4, metadata !852, null}
!856 = metadata !{i32 1715, i32 3, metadata !849, null}
!857 = metadata !{i32 1719, i32 3, metadata !849, null}
!858 = metadata !{i32 1720, i32 8, metadata !859, null}
!859 = metadata !{i32 786443, metadata !2, metadata !849, i32 1720, i32 3, i32 0, i32 99} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!860 = metadata !{i32 1720, i32 8, metadata !861, null}
!861 = metadata !{i32 786443, metadata !2, metadata !862, i32 1720, i32 8, i32 4, i32 341} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!862 = metadata !{i32 786443, metadata !2, metadata !859, i32 1720, i32 8, i32 1, i32 336} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!863 = metadata !{i32 1721, i32 8, metadata !864, null}
!864 = metadata !{i32 786443, metadata !2, metadata !865, i32 1721, i32 8, i32 0, i32 101} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!865 = metadata !{i32 786443, metadata !2, metadata !859, i32 1720, i32 52, i32 0, i32 100} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!866 = metadata !{i32 1721, i32 8, metadata !867, null}
!867 = metadata !{i32 786443, metadata !2, metadata !864, i32 1721, i32 8, i32 1, i32 337} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!868 = metadata !{i32 1721, i32 8, metadata !869, null}
!869 = metadata !{i32 786443, metadata !2, metadata !864, i32 1721, i32 8, i32 2, i32 338} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!870 = metadata !{i32 1724, i32 5, metadata !864, null}
!871 = metadata !{i32 1726, i32 8, metadata !872, null}
!872 = metadata !{i32 786443, metadata !2, metadata !865, i32 1725, i32 8, i32 0, i32 102} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!873 = metadata !{i32 1725, i32 8, metadata !872, null}
!874 = metadata !{i32 1728, i32 5, metadata !872, null}
!875 = metadata !{i32 1730, i32 4, metadata !865, null}
!876 = metadata !{i32 1731, i32 4, metadata !865, null}
!877 = metadata !{i32 1732, i32 4, metadata !865, null}
!878 = metadata !{i32 1720, i32 47, metadata !859, null}
!879 = metadata !{i32 1720, i32 47, metadata !880, null}
!880 = metadata !{i32 786443, metadata !2, metadata !859, i32 1720, i32 47, i32 3, i32 340} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!881 = metadata !{i32 1720, i32 47, metadata !882, null}
!882 = metadata !{i32 786443, metadata !2, metadata !859, i32 1720, i32 47, i32 2, i32 339} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!883 = metadata !{i32 1735, i32 7, metadata !884, null}
!884 = metadata !{i32 786443, metadata !2, metadata !849, i32 1735, i32 7, i32 0, i32 103} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!885 = metadata !{i32 1736, i32 4, metadata !884, null}
!886 = metadata !{i32 1738, i32 3, metadata !849, null}
!887 = metadata !{i32 1739, i32 2, metadata !849, null}
!888 = metadata !{i32 1740, i32 6, metadata !889, null}
!889 = metadata !{i32 786443, metadata !2, metadata !462, i32 1740, i32 6, i32 0, i32 104} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!890 = metadata !{i32 1741, i32 3, metadata !891, null}
!891 = metadata !{i32 786443, metadata !2, metadata !889, i32 1740, i32 23, i32 0, i32 105} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!892 = metadata !{i32 1742, i32 3, metadata !891, null}
!893 = metadata !{i32 1743, i32 3, metadata !891, null}
!894 = metadata !{i32 1744, i32 3, metadata !891, null}
!895 = metadata !{i32 1745, i32 3, metadata !891, null}
!896 = metadata !{i32 1748, i32 12, metadata !897, null}
!897 = metadata !{i32 786443, metadata !2, metadata !462, i32 1748, i32 6, i32 0, i32 106} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!898 = metadata !{i32 1750, i32 3, metadata !899, null}
!899 = metadata !{i32 786443, metadata !2, metadata !897, i32 1749, i32 32, i32 0, i32 107} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!900 = metadata !{i32 1751, i32 3, metadata !899, null}
!901 = metadata !{i32 1754, i32 16, metadata !462, null}
!902 = metadata !{i32 1753, i32 2, metadata !462, null}
!903 = metadata !{i32 1757, i32 30, metadata !904, null}
!904 = metadata !{i32 786443, metadata !2, metadata !462, i32 1757, i32 6, i32 0, i32 108} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!905 = metadata !{i32 1757, i32 15, metadata !904, null}
!906 = metadata !{i32 1758, i32 3, metadata !907, null}
!907 = metadata !{i32 786443, metadata !2, metadata !904, i32 1757, i32 68, i32 0, i32 109} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!908 = metadata !{i32 1759, i32 3, metadata !907, null}
!909 = metadata !{i32 1763, i32 2, metadata !462, null}
!910 = metadata !{i32 1764, i32 2, metadata !462, null}
!911 = metadata !{i32 1766, i32 2, metadata !462, null}
!912 = metadata !{i32 1766, i32 2, metadata !913, null}
!913 = metadata !{i32 786443, metadata !2, metadata !462, i32 1766, i32 2, i32 1, i32 342} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!914 = metadata !{i32 1766, i32 2, metadata !915, null}
!915 = metadata !{i32 786443, metadata !2, metadata !462, i32 1766, i32 2, i32 2, i32 343} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!916 = metadata !{i32 1766, i32 2, metadata !917, null}
!917 = metadata !{i32 786443, metadata !2, metadata !918, i32 1766, i32 2, i32 4, i32 345} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!918 = metadata !{i32 786443, metadata !2, metadata !462, i32 1766, i32 2, i32 3, i32 344} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!919 = metadata !{i32 1770, i32 11, metadata !920, null}
!920 = metadata !{i32 786443, metadata !2, metadata !462, i32 1770, i32 6, i32 0, i32 110} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!921 = metadata !{i32 1771, i32 3, metadata !922, null}
!922 = metadata !{i32 786443, metadata !2, metadata !920, i32 1770, i32 34, i32 0, i32 111} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!923 = metadata !{i32 1772, i32 3, metadata !922, null}
!924 = metadata !{i32 1774, i32 11, metadata !925, null}
!925 = metadata !{i32 786443, metadata !2, metadata !462, i32 1774, i32 6, i32 0, i32 112} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!926 = metadata !{i32 1775, i32 45, metadata !927, null}
!927 = metadata !{i32 786443, metadata !2, metadata !925, i32 1774, i32 61, i32 0, i32 113} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!928 = metadata !{i32 1775, i32 3, metadata !927, null}
!929 = metadata !{i32 1776, i32 3, metadata !927, null}
!930 = metadata !{i32 1778, i32 11, metadata !931, null}
!931 = metadata !{i32 786443, metadata !2, metadata !462, i32 1778, i32 6, i32 0, i32 114} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!932 = metadata !{i32 1779, i32 11, metadata !931, null}
!933 = metadata !{i32 1780, i32 11, metadata !931, null}
!934 = metadata !{i32 1781, i32 11, metadata !931, null}
!935 = metadata !{i32 1782, i32 11, metadata !931, null}
!936 = metadata !{i32 1783, i32 11, metadata !931, null}
!937 = metadata !{i32 1783, i32 33, metadata !931, null}
!938 = metadata !{i32 1784, i32 11, metadata !931, null}
!939 = metadata !{i32 1785, i32 11, metadata !931, null}
!940 = metadata !{i32 1786, i32 11, metadata !931, null}
!941 = metadata !{i32 1787, i32 43, metadata !942, null}
!942 = metadata !{i32 786443, metadata !2, metadata !931, i32 1786, i32 62, i32 0, i32 115} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!943 = metadata !{i32 1787, i32 3, metadata !942, null}
!944 = metadata !{i32 1788, i32 3, metadata !942, null}
!945 = metadata !{i32 1794, i32 6, metadata !946, null}
!946 = metadata !{i32 786443, metadata !2, metadata !462, i32 1794, i32 6, i32 0, i32 116} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!947 = metadata !{i32 1795, i32 7, metadata !946, null}
!948 = metadata !{i32 1796, i32 7, metadata !946, null}
!949 = metadata !{i32 1796, i32 22, metadata !946, null}
!950 = metadata !{i32 1797, i32 16, metadata !951, null}
!951 = metadata !{i32 786443, metadata !2, metadata !946, i32 1797, i32 11, i32 0, i32 117} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!952 = metadata !{i32 1798, i32 6, metadata !951, null}
!953 = metadata !{i32 1798, i32 21, metadata !951, null}
!954 = metadata !{i32 1799, i32 42, metadata !951, null}
!955 = metadata !{i32 1799, i32 3, metadata !951, null}
!956 = metadata !{i32 1800, i32 6, metadata !957, null}
!957 = metadata !{i32 786443, metadata !2, metadata !462, i32 1800, i32 6, i32 0, i32 118} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!958 = metadata !{i32 1802, i32 7, metadata !959, null}
!959 = metadata !{i32 786443, metadata !2, metadata !957, i32 1800, i32 14, i32 0, i32 119} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!960 = metadata !{i32 1801, i32 3, metadata !959, null}
!961 = metadata !{i32 1803, i32 3, metadata !959, null}
!962 = metadata !{i32 1805, i32 11, metadata !963, null}
!963 = metadata !{i32 786443, metadata !2, metadata !462, i32 1805, i32 6, i32 0, i32 120} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!964 = metadata !{i32 1806, i32 11, metadata !963, null}
!965 = metadata !{i32 1807, i32 11, metadata !963, null}
!966 = metadata !{i32 1808, i32 11, metadata !963, null}
!967 = metadata !{i32 1809, i32 11, metadata !963, null}
!968 = metadata !{i32 1809, i32 35, metadata !963, null}
!969 = metadata !{i32 1810, i32 11, metadata !963, null}
!970 = metadata !{i32 1811, i32 11, metadata !963, null}
!971 = metadata !{i32 1812, i32 11, metadata !963, null}
!972 = metadata !{i32 1813, i32 11, metadata !963, null}
!973 = metadata !{i32 1814, i32 11, metadata !963, null}
!974 = metadata !{i32 1815, i32 43, metadata !975, null}
!975 = metadata !{i32 786443, metadata !2, metadata !963, i32 1814, i32 35, i32 0, i32 121} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!976 = metadata !{i32 1815, i32 3, metadata !975, null}
!977 = metadata !{i32 1816, i32 3, metadata !975, null}
!978 = metadata !{i32 1818, i32 2, metadata !462, null}
!979 = metadata !{i32 1821, i32 6, metadata !980, null}
!980 = metadata !{i32 786443, metadata !2, metadata !462, i32 1821, i32 6, i32 0, i32 122} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!981 = metadata !{i32 1822, i32 3, metadata !982, null}
!982 = metadata !{i32 786443, metadata !2, metadata !980, i32 1821, i32 19, i32 0, i32 123} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!983 = metadata !{i32 1823, i32 3, metadata !982, null}
!984 = metadata !{i32 1824, i32 2, metadata !982, null}
!985 = metadata !{i32 1825, i32 2, metadata !462, null}
!986 = metadata !{i32 1826, i32 2, metadata !462, null}
!987 = metadata !{i32 1827, i32 2, metadata !462, null}
!988 = metadata !{i32 1828, i32 2, metadata !462, null}
!989 = metadata !{i32 1829, i32 2, metadata !462, null}
!990 = metadata !{i32 1830, i32 2, metadata !462, null}
!991 = metadata !{i32 1832, i32 2, metadata !462, null}
!992 = metadata !{i32 786689, metadata !459, metadata !"authctxt", metadata !70, i32 16778658, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1442]
!993 = metadata !{i32 1442, i32 27, metadata !459, null}
!994 = metadata !{i32 786688, metadata !459, metadata !"id", metadata !70, i32 1444, metadata !485, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [id] [line 1444]
!995 = metadata !{i32 1444, i32 12, metadata !459, null}
!996 = metadata !{i32 786688, metadata !459, metadata !"sent", metadata !70, i32 1445, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [sent] [line 1445]
!997 = metadata !{i32 1445, i32 6, metadata !459, null}
!998 = metadata !{i32 1445, i32 2, metadata !459, null}
!999 = metadata !{i32 1447, i32 2, metadata !459, null}
!1000 = metadata !{i32 1447, i32 2, metadata !1001, null}
!1001 = metadata !{i32 786443, metadata !2, metadata !459, i32 1447, i32 2, i32 1, i32 346} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1002 = metadata !{i32 1448, i32 7, metadata !1003, null}
!1003 = metadata !{i32 786443, metadata !2, metadata !1004, i32 1448, i32 7, i32 0, i32 68} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1004 = metadata !{i32 786443, metadata !2, metadata !459, i32 1447, i32 46, i32 0, i32 67} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1005 = metadata !{i32 1448, i32 7, metadata !1006, null}
!1006 = metadata !{i32 786443, metadata !2, metadata !1003, i32 1448, i32 7, i32 2, i32 348} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1007 = metadata !{i32 1448, i32 7, metadata !1008, null}
!1008 = metadata !{i32 786443, metadata !2, metadata !1003, i32 1448, i32 7, i32 1, i32 347} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1009 = metadata !{i32 1449, i32 4, metadata !1003, null}
!1010 = metadata !{i32 1451, i32 3, metadata !1004, null}
!1011 = metadata !{i32 1451, i32 3, metadata !1012, null}
!1012 = metadata !{i32 786443, metadata !2, metadata !1013, i32 1451, i32 3, i32 1, i32 349} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1013 = metadata !{i32 786443, metadata !2, metadata !1014, i32 1451, i32 3, i32 0, i32 70} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1014 = metadata !{i32 786443, metadata !2, metadata !1004, i32 1451, i32 3, i32 0, i32 69} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1015 = metadata !{i32 1451, i32 3, metadata !1016, null}
!1016 = metadata !{i32 786443, metadata !2, metadata !1013, i32 1451, i32 3, i32 2, i32 350} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1017 = metadata !{i32 1451, i32 3, metadata !1018, null}
!1018 = metadata !{i32 786443, metadata !2, metadata !1013, i32 1451, i32 3, i32 3, i32 351} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1019 = metadata !{i32 1451, i32 3, metadata !1020, null}
!1020 = metadata !{i32 786443, metadata !2, metadata !1014, i32 1451, i32 3, i32 4, i32 352} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1021 = metadata !{i32 1452, i32 3, metadata !1004, null}
!1022 = metadata !{i32 1452, i32 3, metadata !1023, null}
!1023 = metadata !{i32 786443, metadata !2, metadata !1024, i32 1452, i32 3, i32 1, i32 353} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1024 = metadata !{i32 786443, metadata !2, metadata !1004, i32 1452, i32 3, i32 0, i32 71} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1025 = metadata !{i32 1458, i32 7, metadata !1026, null}
!1026 = metadata !{i32 786443, metadata !2, metadata !1004, i32 1458, i32 7, i32 0, i32 72} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1027 = metadata !{i32 1459, i32 8, metadata !1028, null}
!1028 = metadata !{i32 786443, metadata !2, metadata !1029, i32 1459, i32 8, i32 0, i32 74} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1029 = metadata !{i32 786443, metadata !2, metadata !1026, i32 1458, i32 24, i32 0, i32 73} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1030 = metadata !{i32 1461, i32 9, metadata !1031, null}
!1031 = metadata !{i32 786443, metadata !2, metadata !1028, i32 1459, i32 26, i32 0, i32 75} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1032 = metadata !{i32 1460, i32 5, metadata !1031, null}
!1033 = metadata !{i32 1462, i32 12, metadata !1031, null}
!1034 = metadata !{i32 1463, i32 4, metadata !1031, null}
!1035 = metadata !{i32 1464, i32 3, metadata !1029, null}
!1036 = metadata !{i32 1465, i32 4, metadata !1037, null}
!1037 = metadata !{i32 786443, metadata !2, metadata !1026, i32 1464, i32 10, i32 0, i32 76} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1038 = metadata !{i32 1466, i32 14, metadata !1037, null}
!1039 = metadata !{i32 1467, i32 8, metadata !1040, null}
!1040 = metadata !{i32 786443, metadata !2, metadata !1037, i32 1467, i32 8, i32 0, i32 77} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1041 = metadata !{i32 1468, i32 9, metadata !1042, null}
!1042 = metadata !{i32 786443, metadata !2, metadata !1043, i32 1468, i32 9, i32 0, i32 79} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1043 = metadata !{i32 786443, metadata !2, metadata !1040, i32 1467, i32 25, i32 0, i32 78} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1044 = metadata !{i32 1469, i32 6, metadata !1045, null}
!1045 = metadata !{i32 786443, metadata !2, metadata !1042, i32 1468, i32 27, i32 0, i32 80} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1046 = metadata !{i32 1470, i32 13, metadata !1045, null}
!1047 = metadata !{i32 1472, i32 5, metadata !1045, null}
!1048 = metadata !{i32 1473, i32 5, metadata !1043, null}
!1049 = metadata !{i32 1474, i32 5, metadata !1043, null}
!1050 = metadata !{i32 1475, i32 5, metadata !1043, null}
!1051 = metadata !{i32 1476, i32 4, metadata !1043, null}
!1052 = metadata !{i32 1478, i32 7, metadata !1053, null}
!1053 = metadata !{i32 786443, metadata !2, metadata !1004, i32 1478, i32 7, i32 0, i32 81} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1054 = metadata !{i32 1479, i32 4, metadata !1053, null}
!1055 = metadata !{i32 1480, i32 2, metadata !1004, null}
!1056 = metadata !{i32 1481, i32 2, metadata !459, null}
!1057 = metadata !{i32 1482, i32 1, metadata !459, null}
!1058 = metadata !{i32 786689, metadata !460, metadata !"authctxt", metadata !70, i32 16778704, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1488]
!1059 = metadata !{i32 1488, i32 27, metadata !460, null}
!1060 = metadata !{i32 1492, i32 6, metadata !1061, null}
!1061 = metadata !{i32 786443, metadata !2, metadata !460, i32 1492, i32 6, i32 0, i32 82} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1062 = metadata !{i32 1492, i32 6, metadata !1063, null}
!1063 = metadata !{i32 786443, metadata !2, metadata !1061, i32 1492, i32 6, i32 2, i32 355} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1064 = metadata !{i32 1492, i32 6, metadata !1065, null}
!1065 = metadata !{i32 786443, metadata !2, metadata !1061, i32 1492, i32 6, i32 1, i32 354} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1066 = metadata !{i32 1493, i32 3, metadata !1061, null}
!1067 = metadata !{i32 1495, i32 6, metadata !1068, null}
!1068 = metadata !{i32 786443, metadata !2, metadata !460, i32 1495, i32 6, i32 0, i32 83} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1069 = metadata !{i32 1495, i32 6, metadata !1070, null}
!1070 = metadata !{i32 786443, metadata !2, metadata !1068, i32 1495, i32 6, i32 1, i32 356} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1071 = metadata !{i32 1496, i32 3, metadata !1072, null}
!1072 = metadata !{i32 786443, metadata !2, metadata !1068, i32 1495, i32 47, i32 0, i32 84} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1073 = metadata !{i32 1497, i32 3, metadata !1072, null}
!1074 = metadata !{i32 1498, i32 3, metadata !1072, null}
!1075 = metadata !{i32 1501, i32 2, metadata !460, null}
!1076 = metadata !{i32 1502, i32 2, metadata !460, null}
!1077 = metadata !{i32 1503, i32 2, metadata !460, null}
!1078 = metadata !{i32 1504, i32 2, metadata !460, null}
!1079 = metadata !{i32 1505, i32 2, metadata !460, null}
!1080 = metadata !{i32 1506, i32 2, metadata !460, null}
!1081 = metadata !{i32 1507, i32 2, metadata !460, null}
!1082 = metadata !{i32 1507, i32 2, metadata !1083, null}
!1083 = metadata !{i32 786443, metadata !2, metadata !460, i32 1507, i32 2, i32 1, i32 357} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1084 = metadata !{i32 1507, i32 2, metadata !1085, null}
!1085 = metadata !{i32 786443, metadata !2, metadata !460, i32 1507, i32 2, i32 2, i32 358} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1086 = metadata !{i32 1507, i32 2, metadata !1087, null}
!1087 = metadata !{i32 786443, metadata !2, metadata !1088, i32 1507, i32 2, i32 4, i32 360} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1088 = metadata !{i32 786443, metadata !2, metadata !460, i32 1507, i32 2, i32 3, i32 359} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1089 = metadata !{i32 1509, i32 2, metadata !460, null}
!1090 = metadata !{i32 1511, i32 2, metadata !460, null}
!1091 = metadata !{i32 1512, i32 2, metadata !460, null}
!1092 = metadata !{i32 1513, i32 1, metadata !460, null}
!1093 = metadata !{i32 786689, metadata !457, metadata !"authctxt", metadata !70, i32 16778109, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 893]
!1094 = metadata !{i32 893, i32 27, metadata !457, null}
!1095 = metadata !{i32 786688, metadata !457, metadata !"prompt", metadata !70, i32 896, metadata !1096, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [prompt] [line 896]
!1096 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 1200, i64 8, i32 0, i32 0, metadata !74, metadata !1097, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 1200, align 8, offset 0] [from char]
!1097 = metadata !{metadata !1098}
!1098 = metadata !{i32 786465, i64 0, i64 150}    ; [ DW_TAG_subrange_type ] [0, 149]
!1099 = metadata !{i32 896, i32 7, metadata !457, null}
!1100 = metadata !{i32 786688, metadata !457, metadata !"password", metadata !70, i32 897, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [password] [line 897]
!1101 = metadata !{i32 897, i32 8, metadata !457, null}
!1102 = metadata !{i32 786688, metadata !457, metadata !"host", metadata !70, i32 898, metadata !94, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [host] [line 898]
!1103 = metadata !{i32 898, i32 14, metadata !457, null}
!1104 = metadata !{i32 898, i32 2, metadata !457, null}
!1105 = metadata !{i32 898, i32 2, metadata !1106, null}
!1106 = metadata !{i32 786443, metadata !2, metadata !457, i32 898, i32 2, i32 1, i32 361} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1107 = metadata !{i32 898, i32 2, metadata !1108, null}
!1108 = metadata !{i32 786443, metadata !2, metadata !457, i32 898, i32 2, i32 2, i32 362} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1109 = metadata !{i32 898, i32 2, metadata !1110, null}
!1110 = metadata !{i32 786443, metadata !2, metadata !1111, i32 898, i32 2, i32 4, i32 364} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1111 = metadata !{i32 786443, metadata !2, metadata !457, i32 898, i32 2, i32 3, i32 363} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1112 = metadata !{i32 901, i32 6, metadata !1113, null}
!1113 = metadata !{i32 786443, metadata !2, metadata !457, i32 901, i32 6, i32 0, i32 58} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1114 = metadata !{i32 901, i32 6, metadata !1115, null}
!1115 = metadata !{i32 786443, metadata !2, metadata !1113, i32 901, i32 6, i32 2, i32 366} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1116 = metadata !{i32 901, i32 6, metadata !1117, null}
!1117 = metadata !{i32 786443, metadata !2, metadata !1113, i32 901, i32 6, i32 1, i32 365} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1118 = metadata !{i32 902, i32 3, metadata !1113, null}
!1119 = metadata !{i32 904, i32 6, metadata !1120, null}
!1120 = metadata !{i32 786443, metadata !2, metadata !457, i32 904, i32 6, i32 0, i32 59} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1121 = metadata !{i32 905, i32 3, metadata !1120, null}
!1122 = metadata !{i32 907, i32 2, metadata !457, null}
!1123 = metadata !{i32 909, i32 13, metadata !457, null}
!1124 = metadata !{i32 910, i32 2, metadata !457, null}
!1125 = metadata !{i32 911, i32 2, metadata !457, null}
!1126 = metadata !{i32 912, i32 2, metadata !457, null}
!1127 = metadata !{i32 913, i32 2, metadata !457, null}
!1128 = metadata !{i32 914, i32 2, metadata !457, null}
!1129 = metadata !{i32 915, i32 2, metadata !457, null}
!1130 = metadata !{i32 916, i32 2, metadata !457, null}
!1131 = metadata !{i32 916, i32 27, metadata !457, null}
!1132 = metadata !{i32 917, i32 2, metadata !457, null}
!1133 = metadata !{i32 918, i32 2, metadata !457, null}
!1134 = metadata !{i32 919, i32 2, metadata !457, null}
!1135 = metadata !{i32 921, i32 2, metadata !457, null}
!1136 = metadata !{i32 924, i32 2, metadata !457, null}
!1137 = metadata !{i32 925, i32 1, metadata !457, null}
!1138 = metadata !{i32 786689, metadata !456, metadata !"authctxt", metadata !70, i32 16778097, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 881]
!1139 = metadata !{i32 881, i32 25, metadata !456, null}
!1140 = metadata !{i32 884, i32 2, metadata !456, null}
!1141 = metadata !{i32 885, i32 2, metadata !456, null}
!1142 = metadata !{i32 886, i32 2, metadata !456, null}
!1143 = metadata !{i32 887, i32 2, metadata !456, null}
!1144 = metadata !{i32 888, i32 2, metadata !456, null}
!1145 = metadata !{i32 889, i32 2, metadata !456, null}
!1146 = metadata !{i32 786689, metadata !91, metadata !"local_user", metadata !70, i32 16777581, metadata !94, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [local_user] [line 365]
!1147 = metadata !{i32 365, i32 27, metadata !91, null}
!1148 = metadata !{i32 786689, metadata !91, metadata !"server_user", metadata !70, i32 33554797, metadata !94, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [server_user] [line 365]
!1149 = metadata !{i32 365, i32 51, metadata !91, null}
!1150 = metadata !{i32 786689, metadata !91, metadata !"host", metadata !70, i32 50332013, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [host] [line 365]
!1151 = metadata !{i32 365, i32 70, metadata !91, null}
!1152 = metadata !{i32 786689, metadata !91, metadata !"sensitive", metadata !70, i32 67109230, metadata !96, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [sensitive] [line 366]
!1153 = metadata !{i32 366, i32 16, metadata !91, null}
!1154 = metadata !{i32 786688, metadata !91, metadata !"ssh", metadata !70, i32 368, metadata !506, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ssh] [line 368]
!1155 = metadata !{i32 368, i32 14, metadata !91, null}
!1156 = metadata !{i32 368, i32 2, metadata !91, null}
!1157 = metadata !{i32 786688, metadata !91, metadata !"authctxt", metadata !70, i32 369, metadata !394, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 369]
!1158 = metadata !{i32 369, i32 11, metadata !91, null}
!1159 = metadata !{i32 786688, metadata !91, metadata !"r", metadata !70, i32 370, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 370]
!1160 = metadata !{i32 370, i32 6, metadata !91, null}
!1161 = metadata !{i32 372, i32 6, metadata !1162, null}
!1162 = metadata !{i32 786443, metadata !2, metadata !91, i32 372, i32 6, i32 0, i32 8} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1163 = metadata !{i32 373, i32 3, metadata !1162, null}
!1164 = metadata !{i32 374, i32 6, metadata !1165, null}
!1165 = metadata !{i32 786443, metadata !2, metadata !91, i32 374, i32 6, i32 0, i32 9} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1166 = metadata !{i32 375, i32 39, metadata !1165, null}
!1167 = metadata !{i32 378, i32 2, metadata !91, null}
!1168 = metadata !{i32 379, i32 2, metadata !91, null}
!1169 = metadata !{i32 380, i32 2, metadata !91, null}
!1170 = metadata !{i32 381, i32 2, metadata !91, null}
!1171 = metadata !{i32 382, i32 2, metadata !91, null}
!1172 = metadata !{i32 383, i32 2, metadata !91, null}
!1173 = metadata !{i32 384, i32 2, metadata !91, null}
!1174 = metadata !{i32 385, i32 20, metadata !91, null}
!1175 = metadata !{i32 386, i32 2, metadata !91, null}
!1176 = metadata !{i32 387, i32 2, metadata !91, null}
!1177 = metadata !{i32 388, i32 2, metadata !91, null}
!1178 = metadata !{i32 389, i32 2, metadata !91, null}
!1179 = metadata !{i32 390, i32 2, metadata !91, null}
!1180 = metadata !{i32 391, i32 2, metadata !91, null}
!1181 = metadata !{i32 391, i32 2, metadata !1182, null}
!1182 = metadata !{i32 786443, metadata !2, metadata !91, i32 391, i32 2, i32 2, i32 368} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1183 = metadata !{i32 391, i32 2, metadata !1184, null}
!1184 = metadata !{i32 786443, metadata !2, metadata !91, i32 391, i32 2, i32 1, i32 367} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1185 = metadata !{i32 392, i32 6, metadata !1186, null}
!1186 = metadata !{i32 786443, metadata !2, metadata !91, i32 392, i32 6, i32 0, i32 10} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1187 = metadata !{i32 393, i32 3, metadata !1186, null}
!1188 = metadata !{i32 395, i32 11, metadata !1189, null}
!1189 = metadata !{i32 786443, metadata !2, metadata !91, i32 395, i32 6, i32 0, i32 11} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1190 = metadata !{i32 396, i32 11, metadata !1189, null}
!1191 = metadata !{i32 397, i32 11, metadata !1189, null}
!1192 = metadata !{i32 398, i32 29, metadata !1189, null}
!1193 = metadata !{i32 398, i32 3, metadata !1189, null}
!1194 = metadata !{i32 400, i32 2, metadata !91, null}
!1195 = metadata !{i32 401, i32 2, metadata !91, null}
!1196 = metadata !{i32 402, i32 2, metadata !91, null}
!1197 = metadata !{i32 403, i32 2, metadata !91, null}
!1198 = metadata !{i32 405, i32 2, metadata !91, null}
!1199 = metadata !{i32 406, i32 2, metadata !91, null}
!1200 = metadata !{i32 408, i32 6, metadata !1201, null}
!1201 = metadata !{i32 786443, metadata !2, metadata !91, i32 408, i32 6, i32 0, i32 12} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1202 = metadata !{i32 409, i32 3, metadata !1201, null}
!1203 = metadata !{i32 410, i32 2, metadata !91, null}
!1204 = metadata !{i32 411, i32 1, metadata !91, null}
!1205 = metadata !{i32 786689, metadata !450, metadata !"type", metadata !70, i32 16777707, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 491]
!1206 = metadata !{i32 491, i32 26, metadata !450, null}
!1207 = metadata !{i32 786689, metadata !450, metadata !"seq", metadata !70, i32 33554923, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 491]
!1208 = metadata !{i32 491, i32 42, metadata !450, null}
!1209 = metadata !{i32 786689, metadata !450, metadata !"ctxt", metadata !70, i32 50332139, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 491]
!1210 = metadata !{i32 491, i32 53, metadata !450, null}
!1211 = metadata !{i32 493, i32 2, metadata !450, null}
!1212 = metadata !{i32 496, i32 1, metadata !450, null}
!1213 = metadata !{i32 786689, metadata !389, metadata !"type", metadata !70, i32 16777665, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 449]
!1214 = metadata !{i32 449, i32 29, metadata !389, null}
!1215 = metadata !{i32 786689, metadata !389, metadata !"seqnr", metadata !70, i32 33554881, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seqnr] [line 449]
!1216 = metadata !{i32 449, i32 45, metadata !389, null}
!1217 = metadata !{i32 786689, metadata !389, metadata !"ctxt", metadata !70, i32 50332097, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 449]
!1218 = metadata !{i32 449, i32 58, metadata !389, null}
!1219 = metadata !{i32 451, i32 9, metadata !389, null}
!1220 = metadata !{i32 786689, metadata !385, metadata !"type", metadata !70, i32 16777631, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 415]
!1221 = metadata !{i32 415, i32 35, metadata !385, null}
!1222 = metadata !{i32 786689, metadata !385, metadata !"seqnr", metadata !70, i32 33554847, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seqnr] [line 415]
!1223 = metadata !{i32 415, i32 51, metadata !385, null}
!1224 = metadata !{i32 786689, metadata !385, metadata !"ctxt", metadata !70, i32 50332063, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 415]
!1225 = metadata !{i32 415, i32 64, metadata !385, null}
!1226 = metadata !{i32 786688, metadata !385, metadata !"authctxt", metadata !70, i32 417, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 417]
!1227 = metadata !{i32 417, i32 12, metadata !385, null}
!1228 = metadata !{i32 417, i32 2, metadata !385, null}
!1229 = metadata !{i32 786688, metadata !385, metadata !"ssh", metadata !70, i32 418, metadata !506, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ssh] [line 418]
!1230 = metadata !{i32 418, i32 14, metadata !385, null}
!1231 = metadata !{i32 418, i32 2, metadata !385, null}
!1232 = metadata !{i32 786688, metadata !385, metadata !"r", metadata !70, i32 419, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 419]
!1233 = metadata !{i32 419, i32 6, metadata !385, null}
!1234 = metadata !{i32 421, i32 6, metadata !1235, null}
!1235 = metadata !{i32 786443, metadata !2, metadata !385, i32 421, i32 6, i32 0, i32 13} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1236 = metadata !{i32 786688, metadata !1237, metadata !"reply", metadata !70, i32 422, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [reply] [line 422]
!1237 = metadata !{i32 786443, metadata !2, metadata !1235, i32 421, i32 37, i32 0, i32 14} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1238 = metadata !{i32 422, i32 9, metadata !1237, null}
!1239 = metadata !{i32 424, i32 12, metadata !1240, null}
!1240 = metadata !{i32 786443, metadata !2, metadata !1237, i32 424, i32 7, i32 0, i32 15} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1241 = metadata !{i32 425, i32 4, metadata !1240, null}
!1242 = metadata !{i32 426, i32 3, metadata !1237, null}
!1243 = metadata !{i32 427, i32 3, metadata !1237, null}
!1244 = metadata !{i32 428, i32 2, metadata !1237, null}
!1245 = metadata !{i32 429, i32 3, metadata !1246, null}
!1246 = metadata !{i32 786443, metadata !2, metadata !1235, i32 428, i32 9, i32 0, i32 16} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1247 = metadata !{i32 431, i32 11, metadata !1248, null}
!1248 = metadata !{i32 786443, metadata !2, metadata !385, i32 431, i32 6, i32 0, i32 17} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1249 = metadata !{i32 432, i32 3, metadata !1248, null}
!1250 = metadata !{i32 433, i32 2, metadata !385, null}
!1251 = metadata !{i32 436, i32 2, metadata !385, null}
!1252 = metadata !{i32 438, i32 2, metadata !385, null}
!1253 = metadata !{i32 439, i32 2, metadata !385, null}
!1254 = metadata !{i32 440, i32 2, metadata !385, null}
!1255 = metadata !{i32 441, i32 2, metadata !385, null}
!1256 = metadata !{i32 442, i32 2, metadata !385, null}
!1257 = metadata !{i32 444, i32 2, metadata !385, null}
!1258 = metadata !{i32 786689, metadata !452, metadata !"type", metadata !70, i32 16777733, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 517]
!1259 = metadata !{i32 517, i32 28, metadata !452, null}
!1260 = metadata !{i32 786689, metadata !452, metadata !"seq", metadata !70, i32 33554949, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 517]
!1261 = metadata !{i32 517, i32 44, metadata !452, null}
!1262 = metadata !{i32 786689, metadata !452, metadata !"ctxt", metadata !70, i32 50332165, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 517]
!1263 = metadata !{i32 517, i32 55, metadata !452, null}
!1264 = metadata !{i32 786688, metadata !452, metadata !"authctxt", metadata !70, i32 519, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 519]
!1265 = metadata !{i32 519, i32 12, metadata !452, null}
!1266 = metadata !{i32 519, i32 2, metadata !452, null}
!1267 = metadata !{i32 521, i32 6, metadata !1268, null}
!1268 = metadata !{i32 786443, metadata !2, metadata !452, i32 521, i32 6, i32 0, i32 29} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1269 = metadata !{i32 522, i32 3, metadata !1268, null}
!1270 = metadata !{i32 523, i32 2, metadata !452, null}
!1271 = metadata !{i32 524, i32 2, metadata !452, null}
!1272 = metadata !{i32 525, i32 6, metadata !1273, null}
!1273 = metadata !{i32 786443, metadata !2, metadata !452, i32 525, i32 6, i32 0, i32 30} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1274 = metadata !{i32 525, i32 6, metadata !1275, null}
!1275 = metadata !{i32 786443, metadata !2, metadata !1273, i32 525, i32 6, i32 1, i32 466} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1276 = metadata !{i32 526, i32 3, metadata !1273, null}
!1277 = metadata !{i32 527, i32 2, metadata !452, null}
!1278 = metadata !{i32 528, i32 2, metadata !452, null}
!1279 = metadata !{i32 529, i32 2, metadata !452, null}
!1280 = metadata !{i32 530, i32 2, metadata !452, null}
!1281 = metadata !{i32 786689, metadata !454, metadata !"type", metadata !70, i32 16777764, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 548]
!1282 = metadata !{i32 548, i32 28, metadata !454, null}
!1283 = metadata !{i32 786689, metadata !454, metadata !"seq", metadata !70, i32 33554980, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 548]
!1284 = metadata !{i32 548, i32 44, metadata !454, null}
!1285 = metadata !{i32 786689, metadata !454, metadata !"ctxt", metadata !70, i32 50332196, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 548]
!1286 = metadata !{i32 548, i32 55, metadata !454, null}
!1287 = metadata !{i32 786688, metadata !454, metadata !"authctxt", metadata !70, i32 550, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 550]
!1288 = metadata !{i32 550, i32 12, metadata !454, null}
!1289 = metadata !{i32 550, i32 2, metadata !454, null}
!1290 = metadata !{i32 786688, metadata !454, metadata !"authlist", metadata !70, i32 551, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authlist] [line 551]
!1291 = metadata !{i32 551, i32 8, metadata !454, null}
!1292 = metadata !{i32 551, i32 2, metadata !454, null}
!1293 = metadata !{i32 786688, metadata !454, metadata !"partial", metadata !70, i32 552, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [partial] [line 552]
!1294 = metadata !{i32 552, i32 6, metadata !454, null}
!1295 = metadata !{i32 554, i32 6, metadata !1296, null}
!1296 = metadata !{i32 786443, metadata !2, metadata !454, i32 554, i32 6, i32 0, i32 32} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1297 = metadata !{i32 555, i32 3, metadata !1296, null}
!1298 = metadata !{i32 557, i32 13, metadata !454, null}
!1299 = metadata !{i32 558, i32 12, metadata !454, null}
!1300 = metadata !{i32 559, i32 2, metadata !454, null}
!1301 = metadata !{i32 786688, metadata !1302, metadata !"_len", metadata !70, i32 559, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [_len] [line 559]
!1302 = metadata !{i32 786443, metadata !2, metadata !454, i32 559, i32 2, i32 0, i32 33} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1303 = metadata !{i32 559, i32 2, metadata !1302, null}
!1304 = metadata !{i32 559, i32 2, metadata !1305, null}
!1305 = metadata !{i32 786443, metadata !2, metadata !1302, i32 559, i32 2, i32 1, i32 467} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1306 = metadata !{i32 559, i32 2, metadata !1307, null}
!1307 = metadata !{i32 786443, metadata !2, metadata !1302, i32 559, i32 2, i32 0, i32 34} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1308 = metadata !{i32 559, i32 2, metadata !1309, null}
!1309 = metadata !{i32 786443, metadata !2, metadata !1310, i32 559, i32 2, i32 2, i32 468} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1310 = metadata !{i32 786443, metadata !2, metadata !1307, i32 559, i32 2, i32 0, i32 35} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1311 = metadata !{i32 559, i32 2, metadata !1312, null}
!1312 = metadata !{i32 786443, metadata !2, metadata !1302, i32 559, i32 2, i32 3, i32 469} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1313 = metadata !{i32 561, i32 6, metadata !1314, null}
!1314 = metadata !{i32 786443, metadata !2, metadata !454, i32 561, i32 6, i32 0, i32 36} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1315 = metadata !{i32 562, i32 3, metadata !1316, null}
!1316 = metadata !{i32 786443, metadata !2, metadata !1314, i32 561, i32 20, i32 0, i32 37} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1317 = metadata !{i32 564, i32 3, metadata !1316, null}
!1318 = metadata !{i32 565, i32 2, metadata !1316, null}
!1319 = metadata !{i32 566, i32 2, metadata !454, null}
!1320 = metadata !{i32 568, i32 2, metadata !454, null}
!1321 = metadata !{i32 569, i32 2, metadata !454, null}
!1322 = metadata !{i32 786689, metadata !451, metadata !"type", metadata !70, i32 16777716, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 500]
!1323 = metadata !{i32 500, i32 27, metadata !451, null}
!1324 = metadata !{i32 786689, metadata !451, metadata !"seq", metadata !70, i32 33554932, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 500]
!1325 = metadata !{i32 500, i32 43, metadata !451, null}
!1326 = metadata !{i32 786689, metadata !451, metadata !"ctxt", metadata !70, i32 50332148, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 500]
!1327 = metadata !{i32 500, i32 54, metadata !451, null}
!1328 = metadata !{i32 786688, metadata !451, metadata !"msg", metadata !70, i32 502, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [msg] [line 502]
!1329 = metadata !{i32 502, i32 8, metadata !451, null}
!1330 = metadata !{i32 786688, metadata !451, metadata !"lang", metadata !70, i32 502, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [lang] [line 502]
!1331 = metadata !{i32 502, i32 14, metadata !451, null}
!1332 = metadata !{i32 786688, metadata !451, metadata !"len", metadata !70, i32 503, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [len] [line 503]
!1333 = metadata !{i32 503, i32 8, metadata !451, null}
!1334 = metadata !{i32 505, i32 2, metadata !451, null}
!1335 = metadata !{i32 506, i32 8, metadata !451, null}
!1336 = metadata !{i32 507, i32 9, metadata !451, null}
!1337 = metadata !{i32 508, i32 6, metadata !1338, null}
!1338 = metadata !{i32 786443, metadata !2, metadata !451, i32 508, i32 6, i32 0, i32 28} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1339 = metadata !{i32 508, i32 6, metadata !1340, null}
!1340 = metadata !{i32 786443, metadata !2, metadata !1338, i32 508, i32 6, i32 1, i32 470} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1341 = metadata !{i32 509, i32 3, metadata !1338, null}
!1342 = metadata !{i32 510, i32 2, metadata !451, null}
!1343 = metadata !{i32 511, i32 2, metadata !451, null}
!1344 = metadata !{i32 512, i32 2, metadata !451, null}
!1345 = metadata !{i32 786689, metadata !390, metadata !"authctxt", metadata !70, i32 16777671, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 455]
!1346 = metadata !{i32 455, i32 20, metadata !390, null}
!1347 = metadata !{i32 786689, metadata !390, metadata !"authlist", metadata !70, i32 33554887, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authlist] [line 455]
!1348 = metadata !{i32 455, i32 36, metadata !390, null}
!1349 = metadata !{i32 457, i32 6, metadata !1350, null}
!1350 = metadata !{i32 786443, metadata !2, metadata !390, i32 457, i32 6, i32 0, i32 18} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1351 = metadata !{i32 457, i32 6, metadata !1352, null}
!1352 = metadata !{i32 786443, metadata !2, metadata !1350, i32 457, i32 6, i32 1, i32 471} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1353 = metadata !{i32 458, i32 3, metadata !1350, null}
!1354 = metadata !{i32 460, i32 2, metadata !390, null}
!1355 = metadata !{i32 461, i32 2, metadata !390, null}
!1356 = metadata !{i32 462, i32 6, metadata !1357, null}
!1357 = metadata !{i32 786443, metadata !2, metadata !390, i32 462, i32 6, i32 0, i32 19} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1358 = metadata !{i32 463, i32 3, metadata !1359, null}
!1359 = metadata !{i32 786443, metadata !2, metadata !1357, i32 462, i32 24, i32 0, i32 20} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1360 = metadata !{i32 464, i32 2, metadata !1359, null}
!1361 = metadata !{i32 465, i32 3, metadata !1362, null}
!1362 = metadata !{i32 786443, metadata !2, metadata !1357, i32 464, i32 9, i32 0, i32 21} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1363 = metadata !{i32 466, i32 3, metadata !1362, null}
!1364 = metadata !{i32 468, i32 2, metadata !1365, null}
!1365 = metadata !{i32 786443, metadata !2, metadata !390, i32 468, i32 2, i32 0, i32 22} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1366 = metadata !{i32 786688, metadata !1367, metadata !"method", metadata !70, i32 469, metadata !469, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [method] [line 469]
!1367 = metadata !{i32 786443, metadata !2, metadata !1365, i32 468, i32 11, i32 0, i32 23} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1368 = metadata !{i32 469, i32 15, metadata !1367, null}
!1369 = metadata !{i32 469, i32 24, metadata !1367, null}
!1370 = metadata !{i32 470, i32 7, metadata !1371, null}
!1371 = metadata !{i32 786443, metadata !2, metadata !1367, i32 470, i32 7, i32 0, i32 24} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1372 = metadata !{i32 471, i32 4, metadata !1371, null}
!1373 = metadata !{i32 472, i32 3, metadata !1367, null}
!1374 = metadata !{i32 475, i32 3, metadata !1367, null}
!1375 = metadata !{i32 479, i32 7, metadata !1376, null}
!1376 = metadata !{i32 786443, metadata !2, metadata !1367, i32 479, i32 7, i32 0, i32 25} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1377 = metadata !{i32 480, i32 4, metadata !1378, null}
!1378 = metadata !{i32 786443, metadata !2, metadata !1376, i32 479, i32 40, i32 0, i32 26} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1379 = metadata !{i32 481, i32 4, metadata !1378, null}
!1380 = metadata !{i32 483, i32 4, metadata !1381, null}
!1381 = metadata !{i32 786443, metadata !2, metadata !1376, i32 482, i32 10, i32 0, i32 27} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1382 = metadata !{i32 484, i32 4, metadata !1381, null}
!1383 = metadata !{i32 486, i32 2, metadata !1367, null}
!1384 = metadata !{i32 487, i32 1, metadata !390, null}
!1385 = metadata !{i32 786689, metadata !453, metadata !"type", metadata !70, i32 16777750, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 534]
!1386 = metadata !{i32 534, i32 39, metadata !453, null}
!1387 = metadata !{i32 786689, metadata !453, metadata !"seq", metadata !70, i32 33554966, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 534]
!1388 = metadata !{i32 534, i32 55, metadata !453, null}
!1389 = metadata !{i32 786689, metadata !453, metadata !"ctxt", metadata !70, i32 50332182, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 534]
!1390 = metadata !{i32 534, i32 66, metadata !453, null}
!1391 = metadata !{i32 786688, metadata !453, metadata !"authctxt", metadata !70, i32 536, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 536]
!1392 = metadata !{i32 536, i32 12, metadata !453, null}
!1393 = metadata !{i32 536, i32 2, metadata !453, null}
!1394 = metadata !{i32 538, i32 6, metadata !1395, null}
!1395 = metadata !{i32 786443, metadata !2, metadata !453, i32 538, i32 6, i32 0, i32 31} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1396 = metadata !{i32 539, i32 3, metadata !1395, null}
!1397 = metadata !{i32 541, i32 2, metadata !453, null}
!1398 = metadata !{i32 544, i32 1, metadata !453, null}
!1399 = metadata !{i32 786689, metadata !455, metadata !"type", metadata !70, i32 16777790, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 574]
!1400 = metadata !{i32 574, i32 26, metadata !455, null}
!1401 = metadata !{i32 786689, metadata !455, metadata !"seq", metadata !70, i32 33555006, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 574]
!1402 = metadata !{i32 574, i32 42, metadata !455, null}
!1403 = metadata !{i32 786689, metadata !455, metadata !"ctxt", metadata !70, i32 50332222, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 574]
!1404 = metadata !{i32 574, i32 53, metadata !455, null}
!1405 = metadata !{i32 786688, metadata !455, metadata !"authctxt", metadata !70, i32 576, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 576]
!1406 = metadata !{i32 576, i32 12, metadata !455, null}
!1407 = metadata !{i32 576, i32 2, metadata !455, null}
!1408 = metadata !{i32 786688, metadata !455, metadata !"key", metadata !70, i32 577, metadata !103, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [key] [line 577]
!1409 = metadata !{i32 577, i32 7, metadata !455, null}
!1410 = metadata !{i32 577, i32 2, metadata !455, null}
!1411 = metadata !{i32 786688, metadata !455, metadata !"id", metadata !70, i32 578, metadata !485, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [id] [line 578]
!1412 = metadata !{i32 578, i32 12, metadata !455, null}
!1413 = metadata !{i32 578, i32 2, metadata !455, null}
!1414 = metadata !{i32 786688, metadata !455, metadata !"b", metadata !70, i32 579, metadata !1415, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 579]
!1415 = metadata !{i32 786454, metadata !1416, null, metadata !"Buffer", i32 26, i64 0, i64 0, i64 0, i32 0, metadata !352} ; [ DW_TAG_typedef ] [Buffer] [line 26, size 0, align 0, offset 0] [from sshbuf]
!1416 = metadata !{metadata !"./buffer.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!1417 = metadata !{i32 579, i32 9, metadata !455, null}
!1418 = metadata !{i32 786688, metadata !455, metadata !"pktype", metadata !70, i32 580, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [pktype] [line 580]
!1419 = metadata !{i32 580, i32 6, metadata !455, null}
!1420 = metadata !{i32 786688, metadata !455, metadata !"sent", metadata !70, i32 580, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [sent] [line 580]
!1421 = metadata !{i32 580, i32 14, metadata !455, null}
!1422 = metadata !{i32 580, i32 2, metadata !455, null}
!1423 = metadata !{i32 786688, metadata !455, metadata !"alen", metadata !70, i32 581, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [alen] [line 581]
!1424 = metadata !{i32 581, i32 8, metadata !455, null}
!1425 = metadata !{i32 786688, metadata !455, metadata !"blen", metadata !70, i32 581, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [blen] [line 581]
!1426 = metadata !{i32 581, i32 14, metadata !455, null}
!1427 = metadata !{i32 786688, metadata !455, metadata !"pkalg", metadata !70, i32 582, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [pkalg] [line 582]
!1428 = metadata !{i32 582, i32 8, metadata !455, null}
!1429 = metadata !{i32 786688, metadata !455, metadata !"fp", metadata !70, i32 582, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [fp] [line 582]
!1430 = metadata !{i32 582, i32 16, metadata !455, null}
!1431 = metadata !{i32 786688, metadata !455, metadata !"pkblob", metadata !70, i32 583, metadata !342, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [pkblob] [line 583]
!1432 = metadata !{i32 583, i32 10, metadata !455, null}
!1433 = metadata !{i32 585, i32 6, metadata !1434, null}
!1434 = metadata !{i32 786443, metadata !2, metadata !455, i32 585, i32 6, i32 0, i32 38} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1435 = metadata !{i32 586, i32 3, metadata !1434, null}
!1436 = metadata !{i32 587, i32 6, metadata !1437, null}
!1437 = metadata !{i32 786443, metadata !2, metadata !455, i32 587, i32 6, i32 0, i32 39} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1438 = metadata !{i32 589, i32 3, metadata !1439, null}
!1439 = metadata !{i32 786443, metadata !2, metadata !1437, i32 587, i32 34, i32 0, i32 40} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1440 = metadata !{i32 590, i32 12, metadata !1439, null}
!1441 = metadata !{i32 591, i32 3, metadata !1439, null}
!1442 = metadata !{i32 592, i32 3, metadata !1439, null}
!1443 = metadata !{i32 593, i32 11, metadata !1439, null}
!1444 = metadata !{i32 594, i32 3, metadata !1439, null}
!1445 = metadata !{i32 595, i32 2, metadata !1439, null}
!1446 = metadata !{i32 596, i32 11, metadata !1447, null}
!1447 = metadata !{i32 786443, metadata !2, metadata !1437, i32 595, i32 9, i32 0, i32 41} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1448 = metadata !{i32 597, i32 12, metadata !1447, null}
!1449 = metadata !{i32 599, i32 2, metadata !455, null}
!1450 = metadata !{i32 786688, metadata !1451, metadata !"_len", metadata !70, i32 599, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [_len] [line 599]
!1451 = metadata !{i32 786443, metadata !2, metadata !455, i32 599, i32 2, i32 0, i32 42} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1452 = metadata !{i32 599, i32 2, metadata !1451, null}
!1453 = metadata !{i32 599, i32 2, metadata !1454, null}
!1454 = metadata !{i32 786443, metadata !2, metadata !1451, i32 599, i32 2, i32 1, i32 477} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1455 = metadata !{i32 599, i32 2, metadata !1456, null}
!1456 = metadata !{i32 786443, metadata !2, metadata !1451, i32 599, i32 2, i32 0, i32 43} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1457 = metadata !{i32 599, i32 2, metadata !1458, null}
!1458 = metadata !{i32 786443, metadata !2, metadata !1459, i32 599, i32 2, i32 2, i32 478} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1459 = metadata !{i32 786443, metadata !2, metadata !1456, i32 599, i32 2, i32 0, i32 44} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1460 = metadata !{i32 599, i32 2, metadata !1461, null}
!1461 = metadata !{i32 786443, metadata !2, metadata !1451, i32 599, i32 2, i32 3, i32 479} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1462 = metadata !{i32 601, i32 2, metadata !455, null}
!1463 = metadata !{i32 603, i32 16, metadata !1464, null}
!1464 = metadata !{i32 786443, metadata !2, metadata !455, i32 603, i32 6, i32 0, i32 45} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1465 = metadata !{i32 604, i32 3, metadata !1466, null}
!1466 = metadata !{i32 786443, metadata !2, metadata !1464, i32 603, i32 58, i32 0, i32 46} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1467 = metadata !{i32 605, i32 3, metadata !1466, null}
!1468 = metadata !{i32 607, i32 13, metadata !1469, null}
!1469 = metadata !{i32 786443, metadata !2, metadata !455, i32 607, i32 6, i32 0, i32 47} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1470 = metadata !{i32 608, i32 3, metadata !1471, null}
!1471 = metadata !{i32 786443, metadata !2, metadata !1469, i32 607, i32 51, i32 0, i32 48} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1472 = metadata !{i32 609, i32 3, metadata !1471, null}
!1473 = metadata !{i32 611, i32 6, metadata !1474, null}
!1474 = metadata !{i32 786443, metadata !2, metadata !455, i32 611, i32 6, i32 0, i32 49} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1475 = metadata !{i32 612, i32 3, metadata !1476, null}
!1476 = metadata !{i32 786443, metadata !2, metadata !1474, i32 611, i32 27, i32 0, i32 50} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1477 = metadata !{i32 615, i32 3, metadata !1476, null}
!1478 = metadata !{i32 617, i32 12, metadata !1479, null}
!1479 = metadata !{i32 786443, metadata !2, metadata !455, i32 617, i32 6, i32 0, i32 51} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1480 = metadata !{i32 619, i32 3, metadata !1479, null}
!1481 = metadata !{i32 620, i32 2, metadata !455, null}
!1482 = metadata !{i32 621, i32 2, metadata !455, null}
!1483 = metadata !{i32 628, i32 2, metadata !1484, null}
!1484 = metadata !{i32 786443, metadata !2, metadata !455, i32 628, i32 2, i32 0, i32 52} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1485 = metadata !{i32 628, i32 2, metadata !1486, null}
!1486 = metadata !{i32 786443, metadata !2, metadata !1487, i32 628, i32 2, i32 2, i32 481} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1487 = metadata !{i32 786443, metadata !2, metadata !1484, i32 628, i32 2, i32 1, i32 480} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1488 = metadata !{i32 629, i32 7, metadata !1489, null}
!1489 = metadata !{i32 786443, metadata !2, metadata !1490, i32 629, i32 7, i32 0, i32 54} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1490 = metadata !{i32 786443, metadata !2, metadata !1484, i32 628, i32 59, i32 0, i32 53} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1491 = metadata !{i32 630, i32 11, metadata !1492, null}
!1492 = metadata !{i32 786443, metadata !2, metadata !1489, i32 629, i32 32, i32 0, i32 55} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1493 = metadata !{i32 631, i32 4, metadata !1492, null}
!1494 = metadata !{i32 633, i32 2, metadata !1490, null}
!1495 = metadata !{i32 633, i32 2, metadata !1484, null}
!1496 = metadata !{i32 635, i32 6, metadata !1497, null}
!1497 = metadata !{i32 786443, metadata !2, metadata !455, i32 635, i32 6, i32 0, i32 56} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1498 = metadata !{i32 636, i32 3, metadata !1497, null}
!1499 = metadata !{i32 637, i32 2, metadata !455, null}
!1500 = metadata !{i32 638, i32 2, metadata !455, null}
!1501 = metadata !{i32 641, i32 6, metadata !1502, null}
!1502 = metadata !{i32 786443, metadata !2, metadata !455, i32 641, i32 6, i32 0, i32 57} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1503 = metadata !{i32 642, i32 3, metadata !1502, null}
!1504 = metadata !{i32 643, i32 2, metadata !455, null}
!1505 = metadata !{i32 786689, metadata !458, metadata !"type", metadata !70, i32 16778148, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 932]
!1506 = metadata !{i32 932, i32 37, metadata !458, null}
!1507 = metadata !{i32 786689, metadata !458, metadata !"seqnr", metadata !70, i32 33555364, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seqnr] [line 932]
!1508 = metadata !{i32 932, i32 53, metadata !458, null}
!1509 = metadata !{i32 786689, metadata !458, metadata !"ctxt", metadata !70, i32 50332580, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 932]
!1510 = metadata !{i32 932, i32 66, metadata !458, null}
!1511 = metadata !{i32 786688, metadata !458, metadata !"authctxt", metadata !70, i32 934, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 934]
!1512 = metadata !{i32 934, i32 12, metadata !458, null}
!1513 = metadata !{i32 934, i32 2, metadata !458, null}
!1514 = metadata !{i32 786688, metadata !458, metadata !"info", metadata !70, i32 935, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [info] [line 935]
!1515 = metadata !{i32 935, i32 8, metadata !458, null}
!1516 = metadata !{i32 786688, metadata !458, metadata !"lang", metadata !70, i32 935, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [lang] [line 935]
!1517 = metadata !{i32 935, i32 15, metadata !458, null}
!1518 = metadata !{i32 786688, metadata !458, metadata !"password", metadata !70, i32 935, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [password] [line 935]
!1519 = metadata !{i32 935, i32 22, metadata !458, null}
!1520 = metadata !{i32 935, i32 2, metadata !458, null}
!1521 = metadata !{i32 786688, metadata !458, metadata !"retype", metadata !70, i32 935, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [retype] [line 935]
!1522 = metadata !{i32 935, i32 40, metadata !458, null}
!1523 = metadata !{i32 786688, metadata !458, metadata !"prompt", metadata !70, i32 936, metadata !1096, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [prompt] [line 936]
!1524 = metadata !{i32 936, i32 7, metadata !458, null}
!1525 = metadata !{i32 786688, metadata !458, metadata !"host", metadata !70, i32 937, metadata !94, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [host] [line 937]
!1526 = metadata !{i32 937, i32 14, metadata !458, null}
!1527 = metadata !{i32 937, i32 2, metadata !458, null}
!1528 = metadata !{i32 937, i32 2, metadata !1529, null}
!1529 = metadata !{i32 786443, metadata !2, metadata !458, i32 937, i32 2, i32 1, i32 495} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1530 = metadata !{i32 937, i32 2, metadata !1531, null}
!1531 = metadata !{i32 786443, metadata !2, metadata !458, i32 937, i32 2, i32 2, i32 496} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1532 = metadata !{i32 937, i32 2, metadata !1533, null}
!1533 = metadata !{i32 786443, metadata !2, metadata !1534, i32 937, i32 2, i32 4, i32 498} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1534 = metadata !{i32 786443, metadata !2, metadata !458, i32 937, i32 2, i32 3, i32 497} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1535 = metadata !{i32 940, i32 2, metadata !458, null}
!1536 = metadata !{i32 942, i32 6, metadata !1537, null}
!1537 = metadata !{i32 786443, metadata !2, metadata !458, i32 942, i32 6, i32 0, i32 60} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1538 = metadata !{i32 943, i32 3, metadata !1537, null}
!1539 = metadata !{i32 946, i32 9, metadata !458, null}
!1540 = metadata !{i32 947, i32 9, metadata !458, null}
!1541 = metadata !{i32 948, i32 6, metadata !1542, null}
!1542 = metadata !{i32 786443, metadata !2, metadata !458, i32 948, i32 6, i32 0, i32 61} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1543 = metadata !{i32 949, i32 3, metadata !1542, null}
!1544 = metadata !{i32 950, i32 2, metadata !458, null}
!1545 = metadata !{i32 951, i32 2, metadata !458, null}
!1546 = metadata !{i32 952, i32 2, metadata !458, null}
!1547 = metadata !{i32 953, i32 2, metadata !458, null}
!1548 = metadata !{i32 954, i32 2, metadata !458, null}
!1549 = metadata !{i32 955, i32 2, metadata !458, null}
!1550 = metadata !{i32 956, i32 2, metadata !458, null}
!1551 = metadata !{i32 957, i32 2, metadata !458, null}
!1552 = metadata !{i32 960, i32 13, metadata !458, null}
!1553 = metadata !{i32 961, i32 2, metadata !458, null}
!1554 = metadata !{i32 962, i32 2, metadata !458, null}
!1555 = metadata !{i32 962, i32 27, metadata !458, null}
!1556 = metadata !{i32 963, i32 2, metadata !458, null}
!1557 = metadata !{i32 964, i32 2, metadata !458, null}
!1558 = metadata !{i32 965, i32 2, metadata !458, null}
!1559 = metadata !{i32 965, i32 2, metadata !1560, null}
!1560 = metadata !{i32 786443, metadata !2, metadata !458, i32 965, i32 2, i32 1, i32 499} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1561 = metadata !{i32 966, i32 3, metadata !1562, null}
!1562 = metadata !{i32 786443, metadata !2, metadata !458, i32 965, i32 27, i32 0, i32 62} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1563 = metadata !{i32 969, i32 14, metadata !1562, null}
!1564 = metadata !{i32 970, i32 7, metadata !1565, null}
!1565 = metadata !{i32 786443, metadata !2, metadata !1562, i32 970, i32 7, i32 0, i32 63} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1566 = metadata !{i32 972, i32 4, metadata !1567, null}
!1567 = metadata !{i32 786443, metadata !2, metadata !1565, i32 970, i32 25, i32 0, i32 64} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1568 = metadata !{i32 974, i32 3, metadata !1562, null}
!1569 = metadata !{i32 977, i32 12, metadata !1562, null}
!1570 = metadata !{i32 978, i32 7, metadata !1571, null}
!1571 = metadata !{i32 786443, metadata !2, metadata !1562, i32 978, i32 7, i32 0, i32 65} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1572 = metadata !{i32 979, i32 4, metadata !1573, null}
!1573 = metadata !{i32 786443, metadata !2, metadata !1571, i32 978, i32 38, i32 0, i32 66} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1574 = metadata !{i32 979, i32 29, metadata !1573, null}
!1575 = metadata !{i32 980, i32 4, metadata !1573, null}
!1576 = metadata !{i32 981, i32 4, metadata !1573, null}
!1577 = metadata !{i32 982, i32 4, metadata !1573, null}
!1578 = metadata !{i32 983, i32 3, metadata !1573, null}
!1579 = metadata !{i32 984, i32 3, metadata !1562, null}
!1580 = metadata !{i32 984, i32 26, metadata !1562, null}
!1581 = metadata !{i32 985, i32 3, metadata !1562, null}
!1582 = metadata !{i32 986, i32 2, metadata !1562, null}
!1583 = metadata !{i32 987, i32 2, metadata !458, null}
!1584 = metadata !{i32 988, i32 2, metadata !458, null}
!1585 = metadata !{i32 988, i32 27, metadata !458, null}
!1586 = metadata !{i32 989, i32 2, metadata !458, null}
!1587 = metadata !{i32 990, i32 2, metadata !458, null}
!1588 = metadata !{i32 991, i32 2, metadata !458, null}
!1589 = metadata !{i32 993, i32 2, metadata !458, null}
!1590 = metadata !{i32 995, i32 2, metadata !458, null}
!1591 = metadata !{i32 996, i32 1, metadata !458, null}
!1592 = metadata !{i32 786689, metadata !461, metadata !"type", metadata !70, i32 16778735, metadata !109, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [type] [line 1519]
!1593 = metadata !{i32 1519, i32 29, metadata !461, null}
!1594 = metadata !{i32 786689, metadata !461, metadata !"seq", metadata !70, i32 33555951, metadata !388, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [seq] [line 1519]
!1595 = metadata !{i32 1519, i32 45, metadata !461, null}
!1596 = metadata !{i32 786689, metadata !461, metadata !"ctxt", metadata !70, i32 50333167, metadata !206, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ctxt] [line 1519]
!1597 = metadata !{i32 1519, i32 56, metadata !461, null}
!1598 = metadata !{i32 786688, metadata !461, metadata !"authctxt", metadata !70, i32 1521, metadata !393, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [authctxt] [line 1521]
!1599 = metadata !{i32 1521, i32 12, metadata !461, null}
!1600 = metadata !{i32 1521, i32 2, metadata !461, null}
!1601 = metadata !{i32 786688, metadata !461, metadata !"name", metadata !70, i32 1522, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [name] [line 1522]
!1602 = metadata !{i32 1522, i32 8, metadata !461, null}
!1603 = metadata !{i32 786688, metadata !461, metadata !"inst", metadata !70, i32 1522, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [inst] [line 1522]
!1604 = metadata !{i32 1522, i32 15, metadata !461, null}
!1605 = metadata !{i32 786688, metadata !461, metadata !"lang", metadata !70, i32 1522, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [lang] [line 1522]
!1606 = metadata !{i32 1522, i32 22, metadata !461, null}
!1607 = metadata !{i32 786688, metadata !461, metadata !"prompt", metadata !70, i32 1522, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [prompt] [line 1522]
!1608 = metadata !{i32 1522, i32 29, metadata !461, null}
!1609 = metadata !{i32 786688, metadata !461, metadata !"response", metadata !70, i32 1522, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [response] [line 1522]
!1610 = metadata !{i32 1522, i32 38, metadata !461, null}
!1611 = metadata !{i32 786688, metadata !461, metadata !"num_prompts", metadata !70, i32 1523, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [num_prompts] [line 1523]
!1612 = metadata !{i32 1523, i32 8, metadata !461, null}
!1613 = metadata !{i32 786688, metadata !461, metadata !"i", metadata !70, i32 1523, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 1523]
!1614 = metadata !{i32 1523, i32 21, metadata !461, null}
!1615 = metadata !{i32 786688, metadata !461, metadata !"echo", metadata !70, i32 1524, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [echo] [line 1524]
!1616 = metadata !{i32 1524, i32 6, metadata !461, null}
!1617 = metadata !{i32 1524, i32 2, metadata !461, null}
!1618 = metadata !{i32 1526, i32 2, metadata !461, null}
!1619 = metadata !{i32 1528, i32 6, metadata !1620, null}
!1620 = metadata !{i32 786443, metadata !2, metadata !461, i32 1528, i32 6, i32 0, i32 85} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1621 = metadata !{i32 1529, i32 3, metadata !1620, null}
!1622 = metadata !{i32 1531, i32 2, metadata !461, null}
!1623 = metadata !{i32 1533, i32 9, metadata !461, null}
!1624 = metadata !{i32 1534, i32 9, metadata !461, null}
!1625 = metadata !{i32 1535, i32 9, metadata !461, null}
!1626 = metadata !{i32 1536, i32 6, metadata !1627, null}
!1627 = metadata !{i32 786443, metadata !2, metadata !461, i32 1536, i32 6, i32 0, i32 86} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1628 = metadata !{i32 1537, i32 3, metadata !1627, null}
!1629 = metadata !{i32 1538, i32 6, metadata !1630, null}
!1630 = metadata !{i32 786443, metadata !2, metadata !461, i32 1538, i32 6, i32 0, i32 87} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1631 = metadata !{i32 1539, i32 3, metadata !1630, null}
!1632 = metadata !{i32 1540, i32 2, metadata !461, null}
!1633 = metadata !{i32 1541, i32 2, metadata !461, null}
!1634 = metadata !{i32 1542, i32 2, metadata !461, null}
!1635 = metadata !{i32 1544, i32 16, metadata !461, null}
!1636 = metadata !{i32 1551, i32 2, metadata !461, null}
!1637 = metadata !{i32 1552, i32 2, metadata !461, null}
!1638 = metadata !{i32 1554, i32 2, metadata !461, null}
!1639 = metadata !{i32 1555, i32 7, metadata !1640, null}
!1640 = metadata !{i32 786443, metadata !2, metadata !461, i32 1555, i32 2, i32 0, i32 88} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1641 = metadata !{i32 1555, i32 7, metadata !1642, null}
!1642 = metadata !{i32 786443, metadata !2, metadata !1643, i32 1555, i32 7, i32 2, i32 514} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1643 = metadata !{i32 786443, metadata !2, metadata !1640, i32 1555, i32 7, i32 1, i32 513} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1644 = metadata !{i32 1556, i32 12, metadata !1645, null}
!1645 = metadata !{i32 786443, metadata !2, metadata !1640, i32 1555, i32 36, i32 0, i32 89} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1646 = metadata !{i32 1557, i32 10, metadata !1645, null}
!1647 = metadata !{i32 1559, i32 14, metadata !1645, null}
!1648 = metadata !{i32 1561, i32 3, metadata !1645, null}
!1649 = metadata !{i32 1562, i32 3, metadata !1645, null}
!1650 = metadata !{i32 1562, i32 28, metadata !1645, null}
!1651 = metadata !{i32 1563, i32 3, metadata !1645, null}
!1652 = metadata !{i32 1564, i32 3, metadata !1645, null}
!1653 = metadata !{i32 1565, i32 2, metadata !1645, null}
!1654 = metadata !{i32 1555, i32 31, metadata !1640, null}
!1655 = metadata !{i32 1566, i32 2, metadata !461, null}
!1656 = metadata !{i32 786688, metadata !1657, metadata !"_len", metadata !70, i32 1566, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [_len] [line 1566]
!1657 = metadata !{i32 786443, metadata !2, metadata !461, i32 1566, i32 2, i32 0, i32 90} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1658 = metadata !{i32 1566, i32 2, metadata !1657, null}
!1659 = metadata !{i32 1566, i32 2, metadata !1660, null}
!1660 = metadata !{i32 786443, metadata !2, metadata !1657, i32 1566, i32 2, i32 1, i32 515} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1661 = metadata !{i32 1566, i32 2, metadata !1662, null}
!1662 = metadata !{i32 786443, metadata !2, metadata !1657, i32 1566, i32 2, i32 0, i32 91} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1663 = metadata !{i32 1566, i32 2, metadata !1664, null}
!1664 = metadata !{i32 786443, metadata !2, metadata !1665, i32 1566, i32 2, i32 2, i32 516} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1665 = metadata !{i32 786443, metadata !2, metadata !1662, i32 1566, i32 2, i32 0, i32 92} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1666 = metadata !{i32 1566, i32 2, metadata !1667, null}
!1667 = metadata !{i32 786443, metadata !2, metadata !1657, i32 1566, i32 2, i32 3, i32 517} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1668 = metadata !{i32 1568, i32 2, metadata !461, null}
!1669 = metadata !{i32 1569, i32 2, metadata !461, null}
!1670 = metadata !{i32 1570, i32 2, metadata !461, null}
!1671 = metadata !{i32 786689, metadata !704, metadata !"host", metadata !70, i32 16777320, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [host] [line 104]
!1672 = metadata !{i32 104, i32 25, metadata !704, null}
!1673 = metadata !{i32 786689, metadata !704, metadata !"hostaddr", metadata !70, i32 33554536, metadata !75, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [hostaddr] [line 104]
!1674 = metadata !{i32 104, i32 48, metadata !704, null}
!1675 = metadata !{i32 786689, metadata !704, metadata !"port", metadata !70, i32 50331752, metadata !87, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [port] [line 104]
!1676 = metadata !{i32 104, i32 66, metadata !704, null}
!1677 = metadata !{i32 786688, metadata !704, metadata !"oavail", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [oavail] [line 106]
!1678 = metadata !{i32 106, i32 8, metadata !704, null}
!1679 = metadata !{i32 786688, metadata !704, metadata !"avail", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [avail] [line 106]
!1680 = metadata !{i32 106, i32 17, metadata !704, null}
!1681 = metadata !{i32 786688, metadata !704, metadata !"first", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [first] [line 106]
!1682 = metadata !{i32 106, i32 25, metadata !704, null}
!1683 = metadata !{i32 786688, metadata !704, metadata !"last", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [last] [line 106]
!1684 = metadata !{i32 106, i32 33, metadata !704, null}
!1685 = metadata !{i32 786688, metadata !704, metadata !"alg", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [alg] [line 106]
!1686 = metadata !{i32 106, i32 40, metadata !704, null}
!1687 = metadata !{i32 786688, metadata !704, metadata !"hostname", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [hostname] [line 106]
!1688 = metadata !{i32 106, i32 46, metadata !704, null}
!1689 = metadata !{i32 786688, metadata !704, metadata !"ret", metadata !70, i32 106, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ret] [line 106]
!1690 = metadata !{i32 106, i32 57, metadata !704, null}
!1691 = metadata !{i32 786688, metadata !704, metadata !"maxlen", metadata !70, i32 107, metadata !360, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [maxlen] [line 107]
!1692 = metadata !{i32 107, i32 9, metadata !704, null}
!1693 = metadata !{i32 786688, metadata !704, metadata !"hostkeys", metadata !70, i32 108, metadata !1694, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [hostkeys] [line 108]
!1694 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1695} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from hostkeys]
!1695 = metadata !{i32 786451, metadata !1696, null, metadata !"hostkeys", i32 32, i64 0, i64 0, i32 0, i32 4, null, null, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [hostkeys] [line 32, size 0, align 0, offset 0] [decl] [from ]
!1696 = metadata !{metadata !"./hostfile.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!1697 = metadata !{i32 108, i32 19, metadata !704, null}
!1698 = metadata !{i32 786688, metadata !704, metadata !"ktype", metadata !70, i32 109, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ktype] [line 109]
!1699 = metadata !{i32 109, i32 6, metadata !704, null}
!1700 = metadata !{i32 786688, metadata !704, metadata !"i", metadata !70, i32 110, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 110]
!1701 = metadata !{i32 110, i32 8, metadata !704, null}
!1702 = metadata !{i32 113, i32 2, metadata !704, null}
!1703 = metadata !{i32 114, i32 13, metadata !704, null}
!1704 = metadata !{i32 115, i32 7, metadata !1705, null}
!1705 = metadata !{i32 786443, metadata !2, metadata !704, i32 115, i32 2, i32 0, i32 303} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1706 = metadata !{i32 115, i32 7, metadata !1707, null}
!1707 = metadata !{i32 786443, metadata !2, metadata !1708, i32 115, i32 7, i32 2, i32 315} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1708 = metadata !{i32 786443, metadata !2, metadata !1705, i32 115, i32 7, i32 1, i32 314} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1709 = metadata !{i32 116, i32 3, metadata !1705, null}
!1710 = metadata !{i32 115, i32 46, metadata !1705, null}
!1711 = metadata !{i32 117, i32 7, metadata !1712, null}
!1712 = metadata !{i32 786443, metadata !2, metadata !704, i32 117, i32 2, i32 0, i32 304} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1713 = metadata !{i32 117, i32 7, metadata !1714, null}
!1714 = metadata !{i32 786443, metadata !2, metadata !1715, i32 117, i32 7, i32 2, i32 317} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1715 = metadata !{i32 786443, metadata !2, metadata !1712, i32 117, i32 7, i32 1, i32 316} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1716 = metadata !{i32 118, i32 3, metadata !1712, null}
!1717 = metadata !{i32 117, i32 48, metadata !1712, null}
!1718 = metadata !{i32 120, i32 19, metadata !704, null}
!1719 = metadata !{i32 121, i32 11, metadata !704, null}
!1720 = metadata !{i32 122, i32 10, metadata !704, null}
!1721 = metadata !{i32 123, i32 9, metadata !704, null}
!1722 = metadata !{i32 124, i32 2, metadata !704, null}
!1723 = metadata !{i32 133, i32 2, metadata !704, null}
!1724 = metadata !{i32 133, i32 16, metadata !1725, null}
!1725 = metadata !{i32 786443, metadata !2, metadata !704, i32 133, i32 16, i32 1, i32 318} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1726 = metadata !{i32 133, i32 16, metadata !1727, null}
!1727 = metadata !{i32 786443, metadata !2, metadata !704, i32 133, i32 16, i32 2, i32 319} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1728 = metadata !{i32 133, i32 16, metadata !1729, null}
!1729 = metadata !{i32 786443, metadata !2, metadata !704, i32 133, i32 16, i32 3, i32 320} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1730 = metadata !{i32 134, i32 16, metadata !1731, null}
!1731 = metadata !{i32 786443, metadata !2, metadata !1732, i32 134, i32 7, i32 0, i32 306} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1732 = metadata !{i32 786443, metadata !2, metadata !704, i32 133, i32 54, i32 0, i32 305} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1733 = metadata !{i32 135, i32 4, metadata !1731, null}
!1734 = metadata !{i32 136, i32 7, metadata !1735, null}
!1735 = metadata !{i32 786443, metadata !2, metadata !1732, i32 136, i32 7, i32 0, i32 307} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1736 = metadata !{i32 137, i32 7, metadata !1735, null}
!1737 = metadata !{i32 138, i32 4, metadata !1735, null}
!1738 = metadata !{i32 138, i32 4, metadata !1739, null}
!1739 = metadata !{i32 786443, metadata !2, metadata !1740, i32 138, i32 4, i32 1, i32 321} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1740 = metadata !{i32 786443, metadata !2, metadata !1741, i32 138, i32 4, i32 0, i32 309} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1741 = metadata !{i32 786443, metadata !2, metadata !1735, i32 138, i32 4, i32 0, i32 308} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1742 = metadata !{i32 138, i32 4, metadata !1743, null}
!1743 = metadata !{i32 786443, metadata !2, metadata !1740, i32 138, i32 4, i32 2, i32 322} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1744 = metadata !{i32 138, i32 4, metadata !1745, null}
!1745 = metadata !{i32 786443, metadata !2, metadata !1746, i32 138, i32 4, i32 4, i32 324} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1746 = metadata !{i32 786443, metadata !2, metadata !1741, i32 138, i32 4, i32 3, i32 323} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1747 = metadata !{i32 138, i32 4, metadata !1748, null}
!1748 = metadata !{i32 786443, metadata !2, metadata !1741, i32 138, i32 4, i32 5, i32 325} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1749 = metadata !{i32 140, i32 4, metadata !1735, null}
!1750 = metadata !{i32 140, i32 4, metadata !1751, null}
!1751 = metadata !{i32 786443, metadata !2, metadata !1752, i32 140, i32 4, i32 1, i32 326} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1752 = metadata !{i32 786443, metadata !2, metadata !1753, i32 140, i32 4, i32 0, i32 311} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1753 = metadata !{i32 786443, metadata !2, metadata !1735, i32 140, i32 4, i32 0, i32 310} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1754 = metadata !{i32 140, i32 4, metadata !1755, null}
!1755 = metadata !{i32 786443, metadata !2, metadata !1752, i32 140, i32 4, i32 2, i32 327} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1756 = metadata !{i32 140, i32 4, metadata !1757, null}
!1757 = metadata !{i32 786443, metadata !2, metadata !1758, i32 140, i32 4, i32 4, i32 329} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1758 = metadata !{i32 786443, metadata !2, metadata !1753, i32 140, i32 4, i32 3, i32 328} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1759 = metadata !{i32 141, i32 2, metadata !1732, null}
!1760 = metadata !{i32 143, i32 2, metadata !704, null}
!1761 = metadata !{i32 143, i32 2, metadata !1762, null}
!1762 = metadata !{i32 786443, metadata !2, metadata !704, i32 143, i32 2, i32 2, i32 331} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1763 = metadata !{i32 143, i32 2, metadata !1764, null}
!1764 = metadata !{i32 786443, metadata !2, metadata !1765, i32 143, i32 2, i32 3, i32 332} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1765 = metadata !{i32 786443, metadata !2, metadata !704, i32 143, i32 2, i32 1, i32 330} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1766 = metadata !{i32 145, i32 6, metadata !1767, null}
!1767 = metadata !{i32 786443, metadata !2, metadata !704, i32 145, i32 6, i32 0, i32 312} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1768 = metadata !{i32 146, i32 3, metadata !1767, null}
!1769 = metadata !{i32 148, i32 2, metadata !704, null}
!1770 = metadata !{i32 149, i32 2, metadata !704, null}
!1771 = metadata !{i32 150, i32 2, metadata !704, null}
!1772 = metadata !{i32 151, i32 2, metadata !704, null}
!1773 = metadata !{i32 152, i32 2, metadata !704, null}
!1774 = metadata !{i32 154, i32 2, metadata !704, null}
!1775 = metadata !{i32 786689, metadata !503, metadata !"hostkey", metadata !70, i32 16777312, metadata !103, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [hostkey] [line 96]
!1776 = metadata !{i32 96, i32 31, metadata !503, null}
!1777 = metadata !{i32 786689, metadata !503, metadata !"ssh", metadata !70, i32 33554528, metadata !506, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [ssh] [line 96]
!1778 = metadata !{i32 96, i32 52, metadata !503, null}
!1779 = metadata !{i32 98, i32 6, metadata !1780, null}
!1780 = metadata !{i32 786443, metadata !2, metadata !503, i32 98, i32 6, i32 0, i32 302} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1781 = metadata !{i32 98, i32 6, metadata !1782, null}
!1782 = metadata !{i32 786443, metadata !2, metadata !1780, i32 98, i32 6, i32 2, i32 334} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1783 = metadata !{i32 98, i32 6, metadata !1784, null}
!1784 = metadata !{i32 786443, metadata !2, metadata !1780, i32 98, i32 6, i32 1, i32 333} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1785 = metadata !{i32 99, i32 3, metadata !1780, null}
!1786 = metadata !{i32 100, i32 2, metadata !503, null}
!1787 = metadata !{i32 786689, metadata !477, metadata !"key", metadata !70, i32 16778790, metadata !382, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [key] [line 1574]
!1788 = metadata !{i32 1574, i32 28, metadata !477, null}
!1789 = metadata !{i32 786689, metadata !477, metadata !"sigp", metadata !70, i32 33556006, metadata !480, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [sigp] [line 1574]
!1790 = metadata !{i32 1574, i32 42, metadata !477, null}
!1791 = metadata !{i32 786689, metadata !477, metadata !"lenp", metadata !70, i32 50333222, metadata !481, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [lenp] [line 1574]
!1792 = metadata !{i32 1574, i32 56, metadata !477, null}
!1793 = metadata !{i32 786689, metadata !477, metadata !"data", metadata !70, i32 67110439, metadata !357, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [data] [line 1575]
!1794 = metadata !{i32 1575, i32 19, metadata !477, null}
!1795 = metadata !{i32 786689, metadata !477, metadata !"datalen", metadata !70, i32 83887655, metadata !360, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [datalen] [line 1575]
!1796 = metadata !{i32 1575, i32 32, metadata !477, null}
!1797 = metadata !{i32 786688, metadata !477, metadata !"b", metadata !70, i32 1577, metadata !351, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 1577]
!1798 = metadata !{i32 1577, i32 17, metadata !477, null}
!1799 = metadata !{i32 786688, metadata !477, metadata !"st", metadata !70, i32 1578, metadata !1800, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [st] [line 1578]
!1800 = metadata !{i32 786451, metadata !1801, null, metadata !"stat", i32 46, i64 1152, i64 64, i32 0, i32 0, null, metadata !1802, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [stat] [line 46, size 1152, align 64, offset 0] [def] [from ]
!1801 = metadata !{metadata !"/usr/include/x86_64-linux-gnu/bits/stat.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!1802 = metadata !{metadata !1803, metadata !1805, metadata !1807, metadata !1809, metadata !1811, metadata !1813, metadata !1815, metadata !1816, metadata !1817, metadata !1819, metadata !1821, metadata !1823, metadata !1830, metadata !1831, metadata !1832}
!1803 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_dev", i32 48, i64 64, i64 64, i64 0, i32 0, metadata !1804} ; [ DW_TAG_member ] [st_dev] [line 48, size 64, align 64, offset 0] [from __dev_t]
!1804 = metadata !{i32 786454, metadata !90, null, metadata !"__dev_t", i32 124, i64 0, i64 0, i64 0, i32 0, metadata !150} ; [ DW_TAG_typedef ] [__dev_t] [line 124, size 0, align 0, offset 0] [from long unsigned int]
!1805 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_ino", i32 53, i64 64, i64 64, i64 64, i32 0, metadata !1806} ; [ DW_TAG_member ] [st_ino] [line 53, size 64, align 64, offset 64] [from __ino_t]
!1806 = metadata !{i32 786454, metadata !90, null, metadata !"__ino_t", i32 127, i64 0, i64 0, i64 0, i32 0, metadata !150} ; [ DW_TAG_typedef ] [__ino_t] [line 127, size 0, align 0, offset 0] [from long unsigned int]
!1807 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_nlink", i32 61, i64 64, i64 64, i64 128, i32 0, metadata !1808} ; [ DW_TAG_member ] [st_nlink] [line 61, size 64, align 64, offset 128] [from __nlink_t]
!1808 = metadata !{i32 786454, metadata !90, null, metadata !"__nlink_t", i32 130, i64 0, i64 0, i64 0, i32 0, metadata !150} ; [ DW_TAG_typedef ] [__nlink_t] [line 130, size 0, align 0, offset 0] [from long unsigned int]
!1809 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_mode", i32 62, i64 32, i64 32, i64 192, i32 0, metadata !1810} ; [ DW_TAG_member ] [st_mode] [line 62, size 32, align 32, offset 192] [from __mode_t]
!1810 = metadata !{i32 786454, metadata !90, null, metadata !"__mode_t", i32 129, i64 0, i64 0, i64 0, i32 0, metadata !188} ; [ DW_TAG_typedef ] [__mode_t] [line 129, size 0, align 0, offset 0] [from unsigned int]
!1811 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_uid", i32 64, i64 32, i64 32, i64 224, i32 0, metadata !1812} ; [ DW_TAG_member ] [st_uid] [line 64, size 32, align 32, offset 224] [from __uid_t]
!1812 = metadata !{i32 786454, metadata !90, null, metadata !"__uid_t", i32 125, i64 0, i64 0, i64 0, i32 0, metadata !188} ; [ DW_TAG_typedef ] [__uid_t] [line 125, size 0, align 0, offset 0] [from unsigned int]
!1813 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_gid", i32 65, i64 32, i64 32, i64 256, i32 0, metadata !1814} ; [ DW_TAG_member ] [st_gid] [line 65, size 32, align 32, offset 256] [from __gid_t]
!1814 = metadata !{i32 786454, metadata !90, null, metadata !"__gid_t", i32 126, i64 0, i64 0, i64 0, i32 0, metadata !188} ; [ DW_TAG_typedef ] [__gid_t] [line 126, size 0, align 0, offset 0] [from unsigned int]
!1815 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"__pad0", i32 67, i64 32, i64 32, i64 288, i32 0, metadata !109} ; [ DW_TAG_member ] [__pad0] [line 67, size 32, align 32, offset 288] [from int]
!1816 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_rdev", i32 69, i64 64, i64 64, i64 320, i32 0, metadata !1804} ; [ DW_TAG_member ] [st_rdev] [line 69, size 64, align 64, offset 320] [from __dev_t]
!1817 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_size", i32 74, i64 64, i64 64, i64 384, i32 0, metadata !1818} ; [ DW_TAG_member ] [st_size] [line 74, size 64, align 64, offset 384] [from __off_t]
!1818 = metadata !{i32 786454, metadata !90, null, metadata !"__off_t", i32 131, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__off_t] [line 131, size 0, align 0, offset 0] [from long int]
!1819 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_blksize", i32 78, i64 64, i64 64, i64 448, i32 0, metadata !1820} ; [ DW_TAG_member ] [st_blksize] [line 78, size 64, align 64, offset 448] [from __blksize_t]
!1820 = metadata !{i32 786454, metadata !90, null, metadata !"__blksize_t", i32 153, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__blksize_t] [line 153, size 0, align 0, offset 0] [from long int]
!1821 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_blocks", i32 80, i64 64, i64 64, i64 512, i32 0, metadata !1822} ; [ DW_TAG_member ] [st_blocks] [line 80, size 64, align 64, offset 512] [from __blkcnt_t]
!1822 = metadata !{i32 786454, metadata !90, null, metadata !"__blkcnt_t", i32 158, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__blkcnt_t] [line 158, size 0, align 0, offset 0] [from long int]
!1823 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_atim", i32 91, i64 128, i64 64, i64 576, i32 0, metadata !1824} ; [ DW_TAG_member ] [st_atim] [line 91, size 128, align 64, offset 576] [from timespec]
!1824 = metadata !{i32 786451, metadata !719, null, metadata !"timespec", i32 120, i64 128, i64 64, i32 0, i32 0, null, metadata !1825, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [timespec] [line 120, size 128, align 64, offset 0] [def] [from ]
!1825 = metadata !{metadata !1826, metadata !1828}
!1826 = metadata !{i32 786445, metadata !719, metadata !1824, metadata !"tv_sec", i32 122, i64 64, i64 64, i64 0, i32 0, metadata !1827} ; [ DW_TAG_member ] [tv_sec] [line 122, size 64, align 64, offset 0] [from __time_t]
!1827 = metadata !{i32 786454, metadata !90, null, metadata !"__time_t", i32 139, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__time_t] [line 139, size 0, align 0, offset 0] [from long int]
!1828 = metadata !{i32 786445, metadata !719, metadata !1824, metadata !"tv_nsec", i32 123, i64 64, i64 64, i64 64, i32 0, metadata !1829} ; [ DW_TAG_member ] [tv_nsec] [line 123, size 64, align 64, offset 64] [from __syscall_slong_t]
!1829 = metadata !{i32 786454, metadata !90, null, metadata !"__syscall_slong_t", i32 175, i64 0, i64 0, i64 0, i32 0, metadata !120} ; [ DW_TAG_typedef ] [__syscall_slong_t] [line 175, size 0, align 0, offset 0] [from long int]
!1830 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_mtim", i32 92, i64 128, i64 64, i64 704, i32 0, metadata !1824} ; [ DW_TAG_member ] [st_mtim] [line 92, size 128, align 64, offset 704] [from timespec]
!1831 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"st_ctim", i32 93, i64 128, i64 64, i64 832, i32 0, metadata !1824} ; [ DW_TAG_member ] [st_ctim] [line 93, size 128, align 64, offset 832] [from timespec]
!1832 = metadata !{i32 786445, metadata !1801, metadata !1800, metadata !"__glibc_reserved", i32 106, i64 192, i64 64, i64 960, i32 0, metadata !1833} ; [ DW_TAG_member ] [__glibc_reserved] [line 106, size 192, align 64, offset 960] [from ]
!1833 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 192, i64 64, i32 0, i32 0, metadata !1829, metadata !1834, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 192, align 64, offset 0] [from __syscall_slong_t]
!1834 = metadata !{metadata !1835}
!1835 = metadata !{i32 786465, i64 0, i64 3}      ; [ DW_TAG_subrange_type ] [0, 2]
!1836 = metadata !{i32 1578, i32 14, metadata !477, null}
!1837 = metadata !{i32 786688, metadata !477, metadata !"pid", metadata !70, i32 1579, metadata !1838, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [pid] [line 1579]
!1838 = metadata !{i32 786454, metadata !88, null, metadata !"pid_t", i32 98, i64 0, i64 0, i64 0, i32 0, metadata !1839} ; [ DW_TAG_typedef ] [pid_t] [line 98, size 0, align 0, offset 0] [from __pid_t]
!1839 = metadata !{i32 786454, metadata !90, null, metadata !"__pid_t", i32 133, i64 0, i64 0, i64 0, i32 0, metadata !109} ; [ DW_TAG_typedef ] [__pid_t] [line 133, size 0, align 0, offset 0] [from int]
!1840 = metadata !{i32 1579, i32 8, metadata !477, null}
!1841 = metadata !{i32 786688, metadata !477, metadata !"i", metadata !70, i32 1580, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 1580]
!1842 = metadata !{i32 1580, i32 6, metadata !477, null}
!1843 = metadata !{i32 786688, metadata !477, metadata !"r", metadata !70, i32 1580, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 1580]
!1844 = metadata !{i32 1580, i32 9, metadata !477, null}
!1845 = metadata !{i32 786688, metadata !477, metadata !"to", metadata !70, i32 1580, metadata !1846, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [to] [line 1580]
!1846 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 64, i64 32, i32 0, i32 0, metadata !109, metadata !174, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 64, align 32, offset 0] [from int]
!1847 = metadata !{i32 1580, i32 12, metadata !477, null}
!1848 = metadata !{i32 786688, metadata !477, metadata !"from", metadata !70, i32 1580, metadata !1846, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [from] [line 1580]
!1849 = metadata !{i32 1580, i32 19, metadata !477, null}
!1850 = metadata !{i32 786688, metadata !477, metadata !"status", metadata !70, i32 1580, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [status] [line 1580]
!1851 = metadata !{i32 1580, i32 28, metadata !477, null}
!1852 = metadata !{i32 786688, metadata !477, metadata !"sock", metadata !70, i32 1580, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [sock] [line 1580]
!1853 = metadata !{i32 1580, i32 36, metadata !477, null}
!1854 = metadata !{i32 1580, i32 43, metadata !477, null}
!1855 = metadata !{i32 786688, metadata !477, metadata !"rversion", metadata !70, i32 1581, metadata !343, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [rversion] [line 1581]
!1856 = metadata !{i32 1581, i32 9, metadata !477, null}
!1857 = metadata !{i32 1581, i32 2, metadata !477, null}
!1858 = metadata !{i32 786688, metadata !477, metadata !"version", metadata !70, i32 1581, metadata !343, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [version] [line 1581]
!1859 = metadata !{i32 1581, i32 23, metadata !477, null}
!1860 = metadata !{i32 786688, metadata !477, metadata !"osigchld", metadata !70, i32 1582, metadata !1861, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [osigchld] [line 1582]
!1861 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1862} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!1862 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1863, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!1863 = metadata !{null, metadata !109}
!1864 = metadata !{i32 1582, i32 9, metadata !477, null}
!1865 = metadata !{i32 1584, i32 2, metadata !477, null}
!1866 = metadata !{i32 1585, i32 2, metadata !477, null}
!1867 = metadata !{i32 1587, i32 6, metadata !1868, null}
!1868 = metadata !{i32 786443, metadata !2, metadata !477, i32 1587, i32 6, i32 0, i32 146} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1869 = metadata !{i32 1588, i32 53, metadata !1870, null}
!1870 = metadata !{i32 786443, metadata !2, metadata !1868, i32 1587, i32 41, i32 0, i32 147} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1871 = metadata !{i32 1588, i32 44, metadata !1870, null}
!1872 = metadata !{i32 1588, i32 3, metadata !1870, null}
!1873 = metadata !{i32 1589, i32 3, metadata !1870, null}
!1874 = metadata !{i32 1589, i32 3, metadata !1875, null}
!1875 = metadata !{i32 786443, metadata !2, metadata !1870, i32 1589, i32 3, i32 2, i32 519} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1876 = metadata !{i32 1589, i32 3, metadata !1877, null}
!1877 = metadata !{i32 786443, metadata !2, metadata !1870, i32 1589, i32 3, i32 1, i32 518} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1878 = metadata !{i32 1591, i32 6, metadata !1879, null}
!1879 = metadata !{i32 786443, metadata !2, metadata !477, i32 1591, i32 6, i32 0, i32 148} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1880 = metadata !{i32 1592, i32 46, metadata !1881, null}
!1881 = metadata !{i32 786443, metadata !2, metadata !1879, i32 1591, i32 27, i32 0, i32 149} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1882 = metadata !{i32 1592, i32 37, metadata !1881, null}
!1883 = metadata !{i32 1592, i32 3, metadata !1881, null}
!1884 = metadata !{i32 1593, i32 3, metadata !1881, null}
!1885 = metadata !{i32 1593, i32 3, metadata !1886, null}
!1886 = metadata !{i32 786443, metadata !2, metadata !1881, i32 1593, i32 3, i32 2, i32 521} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1887 = metadata !{i32 1593, i32 3, metadata !1888, null}
!1888 = metadata !{i32 786443, metadata !2, metadata !1881, i32 1593, i32 3, i32 1, i32 520} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1889 = metadata !{i32 1595, i32 6, metadata !1890, null}
!1890 = metadata !{i32 786443, metadata !2, metadata !477, i32 1595, i32 6, i32 0, i32 150} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1891 = metadata !{i32 1596, i32 44, metadata !1892, null}
!1892 = metadata !{i32 786443, metadata !2, metadata !1890, i32 1595, i32 20, i32 0, i32 151} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1893 = metadata !{i32 1596, i32 35, metadata !1892, null}
!1894 = metadata !{i32 1596, i32 3, metadata !1892, null}
!1895 = metadata !{i32 1597, i32 3, metadata !1892, null}
!1896 = metadata !{i32 1597, i32 3, metadata !1897, null}
!1897 = metadata !{i32 786443, metadata !2, metadata !1892, i32 1597, i32 3, i32 2, i32 523} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1898 = metadata !{i32 1597, i32 3, metadata !1899, null}
!1899 = metadata !{i32 786443, metadata !2, metadata !1892, i32 1597, i32 3, i32 1, i32 522} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1900 = metadata !{i32 1599, i32 6, metadata !1901, null}
!1901 = metadata !{i32 786443, metadata !2, metadata !477, i32 1599, i32 6, i32 0, i32 152} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1902 = metadata !{i32 1600, i32 44, metadata !1903, null}
!1903 = metadata !{i32 786443, metadata !2, metadata !1901, i32 1599, i32 22, i32 0, i32 153} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1904 = metadata !{i32 1600, i32 35, metadata !1903, null}
!1905 = metadata !{i32 1600, i32 3, metadata !1903, null}
!1906 = metadata !{i32 1601, i32 3, metadata !1903, null}
!1907 = metadata !{i32 1601, i32 3, metadata !1908, null}
!1908 = metadata !{i32 786443, metadata !2, metadata !1903, i32 1601, i32 3, i32 2, i32 525} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1909 = metadata !{i32 1601, i32 3, metadata !1910, null}
!1910 = metadata !{i32 786443, metadata !2, metadata !1903, i32 1601, i32 3, i32 1, i32 524} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1911 = metadata !{i32 1603, i32 13, metadata !1912, null}
!1912 = metadata !{i32 786443, metadata !2, metadata !477, i32 1603, i32 6, i32 0, i32 154} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1913 = metadata !{i32 1604, i32 44, metadata !1914, null}
!1914 = metadata !{i32 786443, metadata !2, metadata !1912, i32 1603, i32 26, i32 0, i32 155} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1915 = metadata !{i32 1604, i32 35, metadata !1914, null}
!1916 = metadata !{i32 1604, i32 3, metadata !1914, null}
!1917 = metadata !{i32 1605, i32 3, metadata !1914, null}
!1918 = metadata !{i32 1605, i32 3, metadata !1919, null}
!1919 = metadata !{i32 786443, metadata !2, metadata !1914, i32 1605, i32 3, i32 2, i32 527} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1920 = metadata !{i32 1605, i32 3, metadata !1921, null}
!1921 = metadata !{i32 786443, metadata !2, metadata !1914, i32 1605, i32 3, i32 1, i32 526} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1922 = metadata !{i32 1607, i32 13, metadata !477, null}
!1923 = metadata !{i32 1608, i32 6, metadata !1924, null}
!1924 = metadata !{i32 786443, metadata !2, metadata !477, i32 1608, i32 6, i32 0, i32 156} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1925 = metadata !{i32 1610, i32 3, metadata !1926, null}
!1926 = metadata !{i32 786443, metadata !2, metadata !1924, i32 1608, i32 16, i32 0, i32 157} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1927 = metadata !{i32 1611, i32 25, metadata !1926, null}
!1928 = metadata !{i32 1611, i32 3, metadata !1926, null}
!1929 = metadata !{i32 1612, i32 3, metadata !1926, null}
!1930 = metadata !{i32 1613, i32 7, metadata !1931, null}
!1931 = metadata !{i32 786443, metadata !2, metadata !1926, i32 1613, i32 7, i32 0, i32 158} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1932 = metadata !{i32 1614, i32 45, metadata !1931, null}
!1933 = metadata !{i32 1614, i32 36, metadata !1931, null}
!1934 = metadata !{i32 1614, i32 4, metadata !1931, null}
!1935 = metadata !{i32 1615, i32 3, metadata !1926, null}
!1936 = metadata !{i32 1616, i32 7, metadata !1937, null}
!1937 = metadata !{i32 786443, metadata !2, metadata !1926, i32 1616, i32 7, i32 0, i32 159} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1938 = metadata !{i32 1617, i32 45, metadata !1937, null}
!1939 = metadata !{i32 1617, i32 36, metadata !1937, null}
!1940 = metadata !{i32 1617, i32 4, metadata !1937, null}
!1941 = metadata !{i32 1618, i32 3, metadata !1926, null}
!1942 = metadata !{i32 1619, i32 3, metadata !1926, null}
!1943 = metadata !{i32 1621, i32 8, metadata !1944, null}
!1944 = metadata !{i32 786443, metadata !2, metadata !1926, i32 1621, i32 3, i32 0, i32 160} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1945 = metadata !{i32 1621, i32 8, metadata !1946, null}
!1946 = metadata !{i32 786443, metadata !2, metadata !1944, i32 1621, i32 8, i32 2, i32 529} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1947 = metadata !{i32 1621, i32 8, metadata !1948, null}
!1948 = metadata !{i32 786443, metadata !2, metadata !1944, i32 1621, i32 8, i32 1, i32 528} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1949 = metadata !{i32 1621, i32 8, metadata !1950, null}
!1950 = metadata !{i32 786443, metadata !2, metadata !1951, i32 1621, i32 8, i32 6, i32 533} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1951 = metadata !{i32 786443, metadata !2, metadata !1944, i32 1621, i32 8, i32 3, i32 530} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1952 = metadata !{i32 1622, i32 4, metadata !1944, null}
!1953 = metadata !{i32 1621, i32 41, metadata !1944, null}
!1954 = metadata !{i32 1621, i32 41, metadata !1955, null}
!1955 = metadata !{i32 786443, metadata !2, metadata !1944, i32 1621, i32 41, i32 5, i32 532} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1956 = metadata !{i32 1621, i32 41, metadata !1957, null}
!1957 = metadata !{i32 786443, metadata !2, metadata !1944, i32 1621, i32 41, i32 4, i32 531} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1958 = metadata !{i32 1623, i32 3, metadata !1926, null}
!1959 = metadata !{i32 1623, i32 3, metadata !1960, null}
!1960 = metadata !{i32 786443, metadata !2, metadata !1926, i32 1623, i32 3, i32 2, i32 535} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1961 = metadata !{i32 1623, i32 3, metadata !1962, null}
!1962 = metadata !{i32 786443, metadata !2, metadata !1926, i32 1623, i32 3, i32 1, i32 534} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1963 = metadata !{i32 1625, i32 23, metadata !1926, null}
!1964 = metadata !{i32 1624, i32 3, metadata !1926, null}
!1965 = metadata !{i32 1626, i32 3, metadata !1926, null}
!1966 = metadata !{i32 1628, i32 16, metadata !1926, null}
!1967 = metadata !{i32 1628, i32 7, metadata !1926, null}
!1968 = metadata !{i32 1627, i32 3, metadata !1926, null}
!1969 = metadata !{i32 1630, i32 2, metadata !477, null}
!1970 = metadata !{i32 1631, i32 2, metadata !477, null}
!1971 = metadata !{i32 1633, i32 11, metadata !1972, null}
!1972 = metadata !{i32 786443, metadata !2, metadata !477, i32 1633, i32 6, i32 0, i32 161} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1973 = metadata !{i32 1634, i32 3, metadata !1972, null}
!1974 = metadata !{i32 1636, i32 11, metadata !1975, null}
!1975 = metadata !{i32 786443, metadata !2, metadata !477, i32 1636, i32 6, i32 0, i32 162} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1976 = metadata !{i32 1637, i32 11, metadata !1975, null}
!1977 = metadata !{i32 1638, i32 43, metadata !1975, null}
!1978 = metadata !{i32 1638, i32 3, metadata !1975, null}
!1979 = metadata !{i32 1639, i32 6, metadata !1980, null}
!1980 = metadata !{i32 786443, metadata !2, metadata !477, i32 1639, i32 6, i32 0, i32 163} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1981 = metadata !{i32 1639, i32 6, metadata !1982, null}
!1982 = metadata !{i32 786443, metadata !2, metadata !1980, i32 1639, i32 6, i32 2, i32 537} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1983 = metadata !{i32 1639, i32 6, metadata !1984, null}
!1984 = metadata !{i32 786443, metadata !2, metadata !1980, i32 1639, i32 6, i32 1, i32 536} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1985 = metadata !{i32 1640, i32 3, metadata !1980, null}
!1986 = metadata !{i32 1641, i32 2, metadata !477, null}
!1987 = metadata !{i32 1642, i32 6, metadata !477, null}
!1988 = metadata !{i32 1643, i32 2, metadata !477, null}
!1989 = metadata !{i32 1644, i32 2, metadata !477, null}
!1990 = metadata !{i32 1645, i32 6, metadata !1991, null}
!1991 = metadata !{i32 786443, metadata !2, metadata !477, i32 1645, i32 6, i32 0, i32 164} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1992 = metadata !{i32 1646, i32 3, metadata !1993, null}
!1993 = metadata !{i32 786443, metadata !2, metadata !1991, i32 1645, i32 13, i32 0, i32 165} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1994 = metadata !{i32 1647, i32 3, metadata !1993, null}
!1995 = metadata !{i32 1650, i32 2, metadata !477, null}
!1996 = metadata !{i32 1651, i32 2, metadata !477, null}
!1997 = metadata !{i32 1651, i32 9, metadata !1998, null}
!1998 = metadata !{i32 786443, metadata !2, metadata !477, i32 1651, i32 9, i32 1, i32 538} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!1999 = metadata !{i32 1652, i32 7, metadata !2000, null}
!2000 = metadata !{i32 786443, metadata !2, metadata !2001, i32 1652, i32 7, i32 0, i32 167} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2001 = metadata !{i32 786443, metadata !2, metadata !477, i32 1651, i32 39, i32 0, i32 166} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2002 = metadata !{i32 1653, i32 4, metadata !2003, null}
!2003 = metadata !{i32 786443, metadata !2, metadata !2000, i32 1652, i32 23, i32 0, i32 168} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2004 = metadata !{i32 1654, i32 38, metadata !2003, null}
!2005 = metadata !{i32 1654, i32 29, metadata !2003, null}
!2006 = metadata !{i32 1655, i32 4, metadata !2003, null}
!2007 = metadata !{i32 1657, i32 2, metadata !2001, null}
!2008 = metadata !{i32 1658, i32 6, metadata !2009, null}
!2009 = metadata !{i32 786443, metadata !2, metadata !477, i32 1658, i32 6, i32 0, i32 169} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2010 = metadata !{i32 1659, i32 3, metadata !2011, null}
!2011 = metadata !{i32 786443, metadata !2, metadata !2009, i32 1658, i32 26, i32 0, i32 170} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2012 = metadata !{i32 1660, i32 3, metadata !2011, null}
!2013 = metadata !{i32 1662, i32 6, metadata !2014, null}
!2014 = metadata !{i32 786443, metadata !2, metadata !477, i32 1662, i32 6, i32 0, i32 171} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2015 = metadata !{i32 1663, i32 3, metadata !2016, null}
!2016 = metadata !{i32 786443, metadata !2, metadata !2014, i32 1662, i32 32, i32 0, i32 172} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2017 = metadata !{i32 1665, i32 3, metadata !2016, null}
!2018 = metadata !{i32 1667, i32 11, metadata !2019, null}
!2019 = metadata !{i32 786443, metadata !2, metadata !477, i32 1667, i32 6, i32 0, i32 173} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2020 = metadata !{i32 1668, i32 43, metadata !2021, null}
!2021 = metadata !{i32 786443, metadata !2, metadata !2019, i32 1667, i32 46, i32 0, i32 174} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2022 = metadata !{i32 1668, i32 3, metadata !2021, null}
!2023 = metadata !{i32 1669, i32 3, metadata !2021, null}
!2024 = metadata !{i32 1671, i32 6, metadata !2025, null}
!2025 = metadata !{i32 786443, metadata !2, metadata !477, i32 1671, i32 6, i32 0, i32 175} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2026 = metadata !{i32 1672, i32 3, metadata !2027, null}
!2027 = metadata !{i32 786443, metadata !2, metadata !2025, i32 1671, i32 27, i32 0, i32 176} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2028 = metadata !{i32 1673, i32 3, metadata !2027, null}
!2029 = metadata !{i32 1675, i32 11, metadata !2030, null}
!2030 = metadata !{i32 786443, metadata !2, metadata !477, i32 1675, i32 6, i32 0, i32 177} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2031 = metadata !{i32 1676, i32 43, metadata !2032, null}
!2032 = metadata !{i32 786443, metadata !2, metadata !2030, i32 1675, i32 51, i32 0, i32 178} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2033 = metadata !{i32 1676, i32 3, metadata !2032, null}
!2034 = metadata !{i32 1678, i32 3, metadata !2032, null}
!2035 = metadata !{i32 1679, i32 3, metadata !2032, null}
!2036 = metadata !{i32 1680, i32 3, metadata !2032, null}
!2037 = metadata !{i32 1680, i32 3, metadata !2038, null}
!2038 = metadata !{i32 786443, metadata !2, metadata !2032, i32 1680, i32 3, i32 2, i32 540} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2039 = metadata !{i32 1680, i32 3, metadata !2040, null}
!2040 = metadata !{i32 786443, metadata !2, metadata !2032, i32 1680, i32 3, i32 1, i32 539} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2041 = metadata !{i32 1682, i32 2, metadata !477, null}
!2042 = metadata !{i32 1683, i32 2, metadata !477, null}
!2043 = metadata !{i32 1685, i32 2, metadata !477, null}
!2044 = metadata !{i32 1686, i32 1, metadata !477, null}
!2045 = metadata !{i32 786689, metadata !493, metadata !"id", metadata !70, i32 16778644, metadata !485, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [id] [line 1428]
!2046 = metadata !{i32 1428, i32 24, metadata !493, null}
!2047 = metadata !{i32 1430, i32 6, metadata !2048, null}
!2048 = metadata !{i32 786443, metadata !2, metadata !493, i32 1430, i32 6, i32 0, i32 203} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2049 = metadata !{i32 1431, i32 3, metadata !2048, null}
!2050 = metadata !{i32 1432, i32 6, metadata !2051, null}
!2051 = metadata !{i32 786443, metadata !2, metadata !493, i32 1432, i32 6, i32 0, i32 204} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2052 = metadata !{i32 1432, i32 6, metadata !2053, null}
!2053 = metadata !{i32 786443, metadata !2, metadata !2051, i32 1432, i32 6, i32 1, i32 500} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2054 = metadata !{i32 1435, i32 7, metadata !2055, null}
!2055 = metadata !{i32 786443, metadata !2, metadata !2051, i32 1433, i32 46, i32 0, i32 205} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2056 = metadata !{i32 1434, i32 3, metadata !2055, null}
!2057 = metadata !{i32 1436, i32 3, metadata !2055, null}
!2058 = metadata !{i32 1438, i32 2, metadata !493, null}
!2059 = metadata !{i32 1439, i32 1, metadata !493, null}
!2060 = metadata !{i32 786689, metadata !487, metadata !"authctxt", metadata !70, i32 16778379, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1163]
!2061 = metadata !{i32 1163, i32 28, metadata !487, null}
!2062 = metadata !{i32 786689, metadata !487, metadata !"id", metadata !70, i32 33555595, metadata !485, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [id] [line 1163]
!2063 = metadata !{i32 1163, i32 48, metadata !487, null}
!2064 = metadata !{i32 786688, metadata !487, metadata !"blob", metadata !70, i32 1165, metadata !342, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [blob] [line 1165]
!2065 = metadata !{i32 1165, i32 10, metadata !487, null}
!2066 = metadata !{i32 786688, metadata !487, metadata !"bloblen", metadata !70, i32 1166, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [bloblen] [line 1166]
!2067 = metadata !{i32 1166, i32 8, metadata !487, null}
!2068 = metadata !{i32 786688, metadata !487, metadata !"have_sig", metadata !70, i32 1166, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [have_sig] [line 1166]
!2069 = metadata !{i32 1166, i32 17, metadata !487, null}
!2070 = metadata !{i32 1166, i32 2, metadata !487, null}
!2071 = metadata !{i32 1168, i32 2, metadata !487, null}
!2072 = metadata !{i32 1170, i32 6, metadata !2073, null}
!2073 = metadata !{i32 786443, metadata !2, metadata !487, i32 1170, i32 6, i32 0, i32 197} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2074 = metadata !{i32 1172, i32 3, metadata !2075, null}
!2075 = metadata !{i32 786443, metadata !2, metadata !2073, i32 1170, i32 50, i32 0, i32 198} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2076 = metadata !{i32 1173, i32 3, metadata !2075, null}
!2077 = metadata !{i32 1176, i32 2, metadata !487, null}
!2078 = metadata !{i32 1178, i32 2, metadata !487, null}
!2079 = metadata !{i32 1179, i32 2, metadata !487, null}
!2080 = metadata !{i32 1180, i32 2, metadata !487, null}
!2081 = metadata !{i32 1181, i32 2, metadata !487, null}
!2082 = metadata !{i32 1182, i32 2, metadata !487, null}
!2083 = metadata !{i32 1183, i32 6, metadata !2084, null}
!2084 = metadata !{i32 786443, metadata !2, metadata !487, i32 1183, i32 6, i32 0, i32 199} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2085 = metadata !{i32 1184, i32 3, metadata !2084, null}
!2086 = metadata !{i32 1185, i32 2, metadata !487, null}
!2087 = metadata !{i32 1186, i32 2, metadata !487, null}
!2088 = metadata !{i32 1187, i32 2, metadata !487, null}
!2089 = metadata !{i32 1188, i32 2, metadata !487, null}
!2090 = metadata !{i32 1189, i32 1, metadata !487, null}
!2091 = metadata !{i32 786689, metadata !482, metadata !"id", metadata !70, i32 16778408, metadata !485, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [id] [line 1192]
!2092 = metadata !{i32 1192, i32 30, metadata !482, null}
!2093 = metadata !{i32 786688, metadata !482, metadata !"private", metadata !70, i32 1194, metadata !103, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [private] [line 1194]
!2094 = metadata !{i32 1194, i32 46, metadata !482, null}
!2095 = metadata !{i32 1194, i32 2, metadata !482, null}
!2096 = metadata !{i32 786688, metadata !482, metadata !"prompt", metadata !70, i32 1195, metadata !2097, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [prompt] [line 1195]
!2097 = metadata !{i32 786433, null, null, metadata !"", i32 0, i64 2400, i64 8, i32 0, i32 0, metadata !74, metadata !2098, i32 0, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 2400, align 8, offset 0] [from char]
!2098 = metadata !{metadata !2099}
!2099 = metadata !{i32 786465, i64 0, i64 300}    ; [ DW_TAG_subrange_type ] [0, 299]
!2100 = metadata !{i32 1195, i32 7, metadata !482, null}
!2101 = metadata !{i32 786688, metadata !482, metadata !"passphrase", metadata !70, i32 1195, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [passphrase] [line 1195]
!2102 = metadata !{i32 1195, i32 21, metadata !482, null}
!2103 = metadata !{i32 786688, metadata !482, metadata !"comment", metadata !70, i32 1195, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [comment] [line 1195]
!2104 = metadata !{i32 1195, i32 34, metadata !482, null}
!2105 = metadata !{i32 786688, metadata !482, metadata !"r", metadata !70, i32 1196, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 1196]
!2106 = metadata !{i32 1196, i32 6, metadata !482, null}
!2107 = metadata !{i32 786688, metadata !482, metadata !"perm_ok", metadata !70, i32 1197, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [perm_ok] [line 1197]
!2108 = metadata !{i32 1197, i32 6, metadata !482, null}
!2109 = metadata !{i32 1197, i32 2, metadata !482, null}
!2110 = metadata !{i32 786688, metadata !482, metadata !"quit", metadata !70, i32 1197, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [quit] [line 1197]
!2111 = metadata !{i32 1197, i32 19, metadata !482, null}
!2112 = metadata !{i32 786688, metadata !482, metadata !"i", metadata !70, i32 1197, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 1197]
!2113 = metadata !{i32 1197, i32 29, metadata !482, null}
!2114 = metadata !{i32 786688, metadata !482, metadata !"st", metadata !70, i32 1198, metadata !1800, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [st] [line 1198]
!2115 = metadata !{i32 1198, i32 14, metadata !482, null}
!2116 = metadata !{i32 1200, i32 6, metadata !2117, null}
!2117 = metadata !{i32 786443, metadata !2, metadata !482, i32 1200, i32 6, i32 0, i32 179} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2118 = metadata !{i32 1201, i32 3, metadata !2119, null}
!2119 = metadata !{i32 786443, metadata !2, metadata !2117, i32 1200, i32 35, i32 0, i32 180} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2120 = metadata !{i32 1202, i32 30, metadata !2119, null}
!2121 = metadata !{i32 1202, i32 21, metadata !2119, null}
!2122 = metadata !{i32 1203, i32 3, metadata !2119, null}
!2123 = metadata !{i32 1205, i32 2, metadata !482, null}
!2124 = metadata !{i32 1207, i32 7, metadata !2125, null}
!2125 = metadata !{i32 786443, metadata !2, metadata !482, i32 1207, i32 2, i32 0, i32 181} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2126 = metadata !{i32 1207, i32 7, metadata !2127, null}
!2127 = metadata !{i32 786443, metadata !2, metadata !2128, i32 1207, i32 7, i32 4, i32 512} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2128 = metadata !{i32 786443, metadata !2, metadata !2125, i32 1207, i32 7, i32 1, i32 501} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2129 = metadata !{i32 1208, i32 7, metadata !2130, null}
!2130 = metadata !{i32 786443, metadata !2, metadata !2131, i32 1208, i32 7, i32 0, i32 183} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2131 = metadata !{i32 786443, metadata !2, metadata !2125, i32 1207, i32 60, i32 0, i32 182} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2132 = metadata !{i32 1209, i32 4, metadata !2130, null}
!2133 = metadata !{i32 1211, i32 17, metadata !2134, null}
!2134 = metadata !{i32 786443, metadata !2, metadata !2130, i32 1210, i32 8, i32 0, i32 184} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2135 = metadata !{i32 1212, i32 8, metadata !2136, null}
!2136 = metadata !{i32 786443, metadata !2, metadata !2134, i32 1212, i32 8, i32 0, i32 185} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2137 = metadata !{i32 1213, i32 5, metadata !2138, null}
!2138 = metadata !{i32 786443, metadata !2, metadata !2136, i32 1212, i32 29, i32 0, i32 186} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2139 = metadata !{i32 1214, i32 5, metadata !2138, null}
!2140 = metadata !{i32 1215, i32 5, metadata !2138, null}
!2141 = metadata !{i32 1218, i32 16, metadata !2131, null}
!2142 = metadata !{i32 1221, i32 4, metadata !2143, null}
!2143 = metadata !{i32 786443, metadata !2, metadata !2131, i32 1219, i32 51, i32 0, i32 187} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2144 = metadata !{i32 1223, i32 8, metadata !2145, null}
!2145 = metadata !{i32 786443, metadata !2, metadata !2143, i32 1223, i32 8, i32 0, i32 188} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2146 = metadata !{i32 1224, i32 5, metadata !2147, null}
!2147 = metadata !{i32 786443, metadata !2, metadata !2145, i32 1223, i32 28, i32 0, i32 189} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2148 = metadata !{i32 1225, i32 5, metadata !2147, null}
!2149 = metadata !{i32 1227, i32 8, metadata !2150, null}
!2150 = metadata !{i32 786443, metadata !2, metadata !2143, i32 1227, i32 8, i32 0, i32 190} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2151 = metadata !{i32 1228, i32 5, metadata !2150, null}
!2152 = metadata !{i32 1229, i32 4, metadata !2143, null}
!2153 = metadata !{i32 1231, i32 8, metadata !2154, null}
!2154 = metadata !{i32 786443, metadata !2, metadata !2143, i32 1231, i32 8, i32 0, i32 191} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2155 = metadata !{i32 1232, i32 5, metadata !2156, null}
!2156 = metadata !{i32 786443, metadata !2, metadata !2154, i32 1231, i32 25, i32 0, i32 192} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2157 = metadata !{i32 1233, i32 23, metadata !2156, null}
!2158 = metadata !{i32 1234, i32 5, metadata !2156, null}
!2159 = metadata !{i32 1235, i32 5, metadata !2156, null}
!2160 = metadata !{i32 1231, i32 17, metadata !2161, null}
!2161 = metadata !{i32 786443, metadata !2, metadata !2154, i32 1231, i32 17, i32 1, i32 502} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2162 = metadata !{i32 1239, i32 4, metadata !2143, null}
!2163 = metadata !{i32 1239, i32 47, metadata !2143, null}
!2164 = metadata !{i32 1240, i32 4, metadata !2143, null}
!2165 = metadata !{i32 1241, i32 4, metadata !2143, null}
!2166 = metadata !{i32 1243, i32 7, metadata !2167, null}
!2167 = metadata !{i32 786443, metadata !2, metadata !2131, i32 1243, i32 7, i32 0, i32 193} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2168 = metadata !{i32 1243, i32 7, metadata !2169, null}
!2169 = metadata !{i32 786443, metadata !2, metadata !2167, i32 1243, i32 7, i32 1, i32 503} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2170 = metadata !{i32 1243, i32 7, metadata !2171, null}
!2171 = metadata !{i32 786443, metadata !2, metadata !2167, i32 1243, i32 7, i32 2, i32 504} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2172 = metadata !{i32 1243, i32 7, metadata !2173, null}
!2173 = metadata !{i32 786443, metadata !2, metadata !2167, i32 1243, i32 7, i32 4, i32 506} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2174 = metadata !{i32 1243, i32 7, metadata !2175, null}
!2175 = metadata !{i32 786443, metadata !2, metadata !2167, i32 1243, i32 7, i32 3, i32 505} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2176 = metadata !{i32 1243, i32 7, metadata !2177, null}
!2177 = metadata !{i32 786443, metadata !2, metadata !2167, i32 1243, i32 7, i32 5, i32 507} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2178 = metadata !{i32 1243, i32 7, metadata !2179, null}
!2179 = metadata !{i32 786443, metadata !2, metadata !2167, i32 1243, i32 7, i32 6, i32 508} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2180 = metadata !{i32 1245, i32 4, metadata !2167, null}
!2181 = metadata !{i32 1247, i32 7, metadata !2182, null}
!2182 = metadata !{i32 786443, metadata !2, metadata !2131, i32 1247, i32 7, i32 0, i32 194} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2183 = metadata !{i32 1248, i32 4, metadata !2184, null}
!2184 = metadata !{i32 786443, metadata !2, metadata !2182, i32 1247, i32 14, i32 0, i32 195} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2185 = metadata !{i32 1248, i32 31, metadata !2184, null}
!2186 = metadata !{i32 1249, i32 4, metadata !2184, null}
!2187 = metadata !{i32 1250, i32 3, metadata !2184, null}
!2188 = metadata !{i32 1251, i32 3, metadata !2131, null}
!2189 = metadata !{i32 1252, i32 7, metadata !2190, null}
!2190 = metadata !{i32 786443, metadata !2, metadata !2131, i32 1252, i32 7, i32 0, i32 196} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2191 = metadata !{i32 1252, i32 7, metadata !2192, null}
!2192 = metadata !{i32 786443, metadata !2, metadata !2190, i32 1252, i32 7, i32 1, i32 509} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2193 = metadata !{i32 1253, i32 4, metadata !2190, null}
!2194 = metadata !{i32 1254, i32 2, metadata !2131, null}
!2195 = metadata !{i32 1207, i32 55, metadata !2125, null}
!2196 = metadata !{i32 1207, i32 55, metadata !2197, null}
!2197 = metadata !{i32 786443, metadata !2, metadata !2125, i32 1207, i32 55, i32 3, i32 511} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2198 = metadata !{i32 1207, i32 55, metadata !2199, null}
!2199 = metadata !{i32 786443, metadata !2, metadata !2125, i32 1207, i32 55, i32 2, i32 510} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2200 = metadata !{i32 1255, i32 2, metadata !482, null}
!2201 = metadata !{i32 1256, i32 1, metadata !482, null}
!2202 = metadata !{i32 786689, metadata !499, metadata !"authctxt", metadata !70, i32 16778261, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1045]
!2203 = metadata !{i32 1045, i32 32, metadata !499, null}
!2204 = metadata !{i32 786689, metadata !499, metadata !"id", metadata !70, i32 33555477, metadata !485, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [id] [line 1045]
!2205 = metadata !{i32 1045, i32 52, metadata !499, null}
!2206 = metadata !{i32 786688, metadata !499, metadata !"b", metadata !70, i32 1047, metadata !1415, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 1047]
!2207 = metadata !{i32 1047, i32 9, metadata !499, null}
!2208 = metadata !{i32 786688, metadata !499, metadata !"private_id", metadata !70, i32 1048, metadata !485, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [private_id] [line 1048]
!2209 = metadata !{i32 1048, i32 12, metadata !499, null}
!2210 = metadata !{i32 786688, metadata !499, metadata !"blob", metadata !70, i32 1049, metadata !342, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [blob] [line 1049]
!2211 = metadata !{i32 1049, i32 10, metadata !499, null}
!2212 = metadata !{i32 786688, metadata !499, metadata !"signature", metadata !70, i32 1049, metadata !342, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [signature] [line 1049]
!2213 = metadata !{i32 1049, i32 17, metadata !499, null}
!2214 = metadata !{i32 786688, metadata !499, metadata !"slen", metadata !70, i32 1050, metadata !360, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [slen] [line 1050]
!2215 = metadata !{i32 1050, i32 9, metadata !499, null}
!2216 = metadata !{i32 786688, metadata !499, metadata !"bloblen", metadata !70, i32 1051, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [bloblen] [line 1051]
!2217 = metadata !{i32 1051, i32 8, metadata !499, null}
!2218 = metadata !{i32 786688, metadata !499, metadata !"skip", metadata !70, i32 1051, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [skip] [line 1051]
!2219 = metadata !{i32 1051, i32 17, metadata !499, null}
!2220 = metadata !{i32 1051, i32 2, metadata !499, null}
!2221 = metadata !{i32 786688, metadata !499, metadata !"matched", metadata !70, i32 1052, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [matched] [line 1052]
!2222 = metadata !{i32 1052, i32 6, metadata !499, null}
!2223 = metadata !{i32 786688, metadata !499, metadata !"ret", metadata !70, i32 1052, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ret] [line 1052]
!2224 = metadata !{i32 1052, i32 15, metadata !499, null}
!2225 = metadata !{i32 1052, i32 2, metadata !499, null}
!2226 = metadata !{i32 1052, i32 2, metadata !2227, null}
!2227 = metadata !{i32 786443, metadata !2, metadata !499, i32 1052, i32 2, i32 2, i32 483} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2228 = metadata !{i32 1052, i32 2, metadata !2229, null}
!2229 = metadata !{i32 786443, metadata !2, metadata !499, i32 1052, i32 2, i32 1, i32 482} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2230 = metadata !{i32 786688, metadata !499, metadata !"have_sig", metadata !70, i32 1052, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [have_sig] [line 1052]
!2231 = metadata !{i32 1052, i32 25, metadata !499, null}
!2232 = metadata !{i32 786688, metadata !499, metadata !"fp", metadata !70, i32 1053, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [fp] [line 1053]
!2233 = metadata !{i32 1053, i32 8, metadata !499, null}
!2234 = metadata !{i32 1055, i32 12, metadata !2235, null}
!2235 = metadata !{i32 786443, metadata !2, metadata !499, i32 1055, i32 6, i32 0, i32 274} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2236 = metadata !{i32 1057, i32 3, metadata !2235, null}
!2237 = metadata !{i32 1058, i32 32, metadata !499, null}
!2238 = metadata !{i32 1058, i32 2, metadata !499, null}
!2239 = metadata !{i32 1059, i32 2, metadata !499, null}
!2240 = metadata !{i32 1061, i32 6, metadata !2241, null}
!2241 = metadata !{i32 786443, metadata !2, metadata !499, i32 1061, i32 6, i32 0, i32 275} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2242 = metadata !{i32 1063, i32 3, metadata !2243, null}
!2243 = metadata !{i32 786443, metadata !2, metadata !2241, i32 1061, i32 50, i32 0, i32 276} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2244 = metadata !{i32 1064, i32 3, metadata !2243, null}
!2245 = metadata !{i32 1067, i32 2, metadata !499, null}
!2246 = metadata !{i32 1068, i32 6, metadata !2247, null}
!2247 = metadata !{i32 786443, metadata !2, metadata !499, i32 1068, i32 6, i32 0, i32 277} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2248 = metadata !{i32 1069, i32 3, metadata !2249, null}
!2249 = metadata !{i32 786443, metadata !2, metadata !2247, i32 1068, i32 39, i32 0, i32 278} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2250 = metadata !{i32 1070, i32 3, metadata !2249, null}
!2251 = metadata !{i32 1071, i32 2, metadata !2249, null}
!2252 = metadata !{i32 1072, i32 3, metadata !2253, null}
!2253 = metadata !{i32 786443, metadata !2, metadata !2247, i32 1071, i32 9, i32 0, i32 279} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2254 = metadata !{i32 1073, i32 10, metadata !2253, null}
!2255 = metadata !{i32 1075, i32 2, metadata !499, null}
!2256 = metadata !{i32 1076, i32 2, metadata !499, null}
!2257 = metadata !{i32 1077, i32 2, metadata !499, null}
!2258 = metadata !{i32 1077, i32 2, metadata !2259, null}
!2259 = metadata !{i32 786443, metadata !2, metadata !499, i32 1077, i32 2, i32 1, i32 484} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2260 = metadata !{i32 1077, i32 2, metadata !2261, null}
!2261 = metadata !{i32 786443, metadata !2, metadata !499, i32 1077, i32 2, i32 2, i32 485} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2262 = metadata !{i32 1077, i32 2, metadata !2263, null}
!2263 = metadata !{i32 786443, metadata !2, metadata !2264, i32 1077, i32 2, i32 4, i32 487} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2264 = metadata !{i32 786443, metadata !2, metadata !499, i32 1077, i32 2, i32 3, i32 486} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2265 = metadata !{i32 1081, i32 6, metadata !2266, null}
!2266 = metadata !{i32 786443, metadata !2, metadata !499, i32 1081, i32 6, i32 0, i32 280} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2267 = metadata !{i32 1082, i32 3, metadata !2268, null}
!2268 = metadata !{i32 786443, metadata !2, metadata !2266, i32 1081, i32 36, i32 0, i32 281} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2269 = metadata !{i32 1083, i32 2, metadata !2268, null}
!2270 = metadata !{i32 1084, i32 3, metadata !2271, null}
!2271 = metadata !{i32 786443, metadata !2, metadata !2266, i32 1083, i32 9, i32 0, i32 282} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2272 = metadata !{i32 1085, i32 3, metadata !2271, null}
!2273 = metadata !{i32 1086, i32 26, metadata !2271, null}
!2274 = metadata !{i32 1086, i32 3, metadata !2271, null}
!2275 = metadata !{i32 1088, i32 2, metadata !499, null}
!2276 = metadata !{i32 1096, i32 6, metadata !2277, null}
!2277 = metadata !{i32 786443, metadata !2, metadata !499, i32 1096, i32 6, i32 0, i32 283} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2278 = metadata !{i32 1097, i32 3, metadata !2279, null}
!2279 = metadata !{i32 786443, metadata !2, metadata !2277, i32 1096, i32 28, i32 0, i32 284} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2280 = metadata !{i32 1098, i32 3, metadata !2281, null}
!2281 = metadata !{i32 786443, metadata !2, metadata !2279, i32 1098, i32 3, i32 0, i32 285} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2282 = metadata !{i32 1098, i32 3, metadata !2283, null}
!2283 = metadata !{i32 786443, metadata !2, metadata !2284, i32 1098, i32 3, i32 2, i32 490} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2284 = metadata !{i32 786443, metadata !2, metadata !2281, i32 1098, i32 3, i32 1, i32 488} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2285 = metadata !{i32 1099, i32 8, metadata !2286, null}
!2286 = metadata !{i32 786443, metadata !2, metadata !2287, i32 1099, i32 8, i32 0, i32 287} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2287 = metadata !{i32 786443, metadata !2, metadata !2281, i32 1098, i32 52, i32 0, i32 286} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2288 = metadata !{i32 1099, i32 8, metadata !2289, null}
!2289 = metadata !{i32 786443, metadata !2, metadata !2286, i32 1099, i32 8, i32 1, i32 489} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2290 = metadata !{i32 1101, i32 5, metadata !2291, null}
!2291 = metadata !{i32 786443, metadata !2, metadata !2286, i32 1100, i32 48, i32 0, i32 288} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2292 = metadata !{i32 1102, i32 5, metadata !2291, null}
!2293 = metadata !{i32 1103, i32 5, metadata !2291, null}
!2294 = metadata !{i32 1105, i32 3, metadata !2287, null}
!2295 = metadata !{i32 1106, i32 7, metadata !2296, null}
!2296 = metadata !{i32 786443, metadata !2, metadata !2279, i32 1106, i32 7, i32 0, i32 289} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2297 = metadata !{i32 1107, i32 4, metadata !2298, null}
!2298 = metadata !{i32 786443, metadata !2, metadata !2296, i32 1106, i32 16, i32 0, i32 290} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2299 = metadata !{i32 1107, i32 4, metadata !2300, null}
!2300 = metadata !{i32 786443, metadata !2, metadata !2298, i32 1107, i32 4, i32 2, i32 492} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2301 = metadata !{i32 1107, i32 4, metadata !2302, null}
!2302 = metadata !{i32 786443, metadata !2, metadata !2298, i32 1107, i32 4, i32 1, i32 491} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2303 = metadata !{i32 1110, i32 3, metadata !2298, null}
!2304 = metadata !{i32 1111, i32 4, metadata !2305, null}
!2305 = metadata !{i32 786443, metadata !2, metadata !2296, i32 1110, i32 10, i32 0, i32 291} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2306 = metadata !{i32 1114, i32 2, metadata !2279, null}
!2307 = metadata !{i32 1117, i32 8, metadata !499, null}
!2308 = metadata !{i32 1118, i32 6, metadata !499, null}
!2309 = metadata !{i32 1118, i32 22, metadata !499, null}
!2310 = metadata !{i32 1119, i32 6, metadata !2311, null}
!2311 = metadata !{i32 786443, metadata !2, metadata !499, i32 1119, i32 6, i32 0, i32 292} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2312 = metadata !{i32 1120, i32 7, metadata !2313, null}
!2313 = metadata !{i32 786443, metadata !2, metadata !2314, i32 1120, i32 7, i32 0, i32 294} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2314 = metadata !{i32 786443, metadata !2, metadata !2311, i32 1119, i32 16, i32 0, i32 293} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2315 = metadata !{i32 1120, i32 7, metadata !2316, null}
!2316 = metadata !{i32 786443, metadata !2, metadata !2313, i32 1120, i32 7, i32 2, i32 494} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2317 = metadata !{i32 1120, i32 7, metadata !2318, null}
!2318 = metadata !{i32 786443, metadata !2, metadata !2313, i32 1120, i32 7, i32 1, i32 493} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2319 = metadata !{i32 1121, i32 46, metadata !2313, null}
!2320 = metadata !{i32 1121, i32 4, metadata !2313, null}
!2321 = metadata !{i32 1122, i32 3, metadata !2314, null}
!2322 = metadata !{i32 1123, i32 3, metadata !2314, null}
!2323 = metadata !{i32 1124, i32 3, metadata !2314, null}
!2324 = metadata !{i32 1129, i32 6, metadata !2325, null}
!2325 = metadata !{i32 786443, metadata !2, metadata !499, i32 1129, i32 6, i32 0, i32 295} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2326 = metadata !{i32 1130, i32 3, metadata !2327, null}
!2327 = metadata !{i32 786443, metadata !2, metadata !2325, i32 1129, i32 39, i32 0, i32 296} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2328 = metadata !{i32 1131, i32 3, metadata !2327, null}
!2329 = metadata !{i32 1132, i32 3, metadata !2327, null}
!2330 = metadata !{i32 1133, i32 3, metadata !2327, null}
!2331 = metadata !{i32 1134, i32 3, metadata !2327, null}
!2332 = metadata !{i32 1135, i32 3, metadata !2327, null}
!2333 = metadata !{i32 1136, i32 3, metadata !2327, null}
!2334 = metadata !{i32 1137, i32 3, metadata !2327, null}
!2335 = metadata !{i32 1138, i32 7, metadata !2336, null}
!2336 = metadata !{i32 786443, metadata !2, metadata !2327, i32 1138, i32 7, i32 0, i32 297} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2337 = metadata !{i32 1139, i32 27, metadata !2336, null}
!2338 = metadata !{i32 1139, i32 4, metadata !2336, null}
!2339 = metadata !{i32 1140, i32 3, metadata !2327, null}
!2340 = metadata !{i32 1141, i32 2, metadata !2327, null}
!2341 = metadata !{i32 1142, i32 2, metadata !499, null}
!2342 = metadata !{i32 1145, i32 2, metadata !499, null}
!2343 = metadata !{i32 1146, i32 2, metadata !499, null}
!2344 = metadata !{i32 1149, i32 6, metadata !2345, null}
!2345 = metadata !{i32 786443, metadata !2, metadata !499, i32 1149, i32 6, i32 0, i32 298} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2346 = metadata !{i32 1150, i32 3, metadata !2345, null}
!2347 = metadata !{i32 1151, i32 2, metadata !499, null}
!2348 = metadata !{i32 1154, i32 2, metadata !499, null}
!2349 = metadata !{i32 1155, i32 2, metadata !499, null}
!2350 = metadata !{i32 1156, i32 2, metadata !499, null}
!2351 = metadata !{i32 1157, i32 2, metadata !499, null}
!2352 = metadata !{i32 1159, i32 2, metadata !499, null}
!2353 = metadata !{i32 1160, i32 1, metadata !499, null}
!2354 = metadata !{i32 786688, metadata !463, metadata !"method", metadata !70, i32 1920, metadata !469, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [method] [line 1920]
!2355 = metadata !{i32 1920, i32 14, metadata !463, null}
!2356 = metadata !{i32 1920, i32 2, metadata !463, null}
!2357 = metadata !{i32 786688, metadata !463, metadata !"b", metadata !70, i32 1921, metadata !1415, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 1921]
!2358 = metadata !{i32 1921, i32 9, metadata !463, null}
!2359 = metadata !{i32 786688, metadata !463, metadata !"list", metadata !70, i32 1922, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [list] [line 1922]
!2360 = metadata !{i32 1922, i32 8, metadata !463, null}
!2361 = metadata !{i32 1924, i32 2, metadata !463, null}
!2362 = metadata !{i32 1925, i32 7, metadata !2363, null}
!2363 = metadata !{i32 786443, metadata !2, metadata !463, i32 1925, i32 2, i32 0, i32 124} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2364 = metadata !{i32 1925, i32 7, metadata !2365, null}
!2365 = metadata !{i32 786443, metadata !2, metadata !2366, i32 1925, i32 7, i32 2, i32 370} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2366 = metadata !{i32 786443, metadata !2, metadata !2363, i32 1925, i32 7, i32 1, i32 369} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2367 = metadata !{i32 1926, i32 7, metadata !2368, null}
!2368 = metadata !{i32 786443, metadata !2, metadata !2369, i32 1926, i32 7, i32 0, i32 126} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2369 = metadata !{i32 786443, metadata !2, metadata !2363, i32 1925, i32 61, i32 0, i32 125} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2370 = metadata !{i32 1927, i32 8, metadata !2371, null}
!2371 = metadata !{i32 786443, metadata !2, metadata !2372, i32 1927, i32 8, i32 0, i32 128} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2372 = metadata !{i32 786443, metadata !2, metadata !2368, i32 1926, i32 38, i32 0, i32 127} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2373 = metadata !{i32 1928, i32 5, metadata !2371, null}
!2374 = metadata !{i32 1929, i32 4, metadata !2372, null}
!2375 = metadata !{i32 1929, i32 36, metadata !2372, null}
!2376 = metadata !{i32 1930, i32 3, metadata !2372, null}
!2377 = metadata !{i32 1931, i32 2, metadata !2369, null}
!2378 = metadata !{i32 1925, i32 51, metadata !2363, null}
!2379 = metadata !{i32 1932, i32 14, metadata !2380, null}
!2380 = metadata !{i32 786443, metadata !2, metadata !463, i32 1932, i32 6, i32 0, i32 129} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2381 = metadata !{i32 1933, i32 3, metadata !2380, null}
!2382 = metadata !{i32 1934, i32 2, metadata !463, null}
!2383 = metadata !{i32 1935, i32 2, metadata !463, null}
!2384 = metadata !{i32 786689, metadata !498, metadata !"authctxt", metadata !70, i32 16778483, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1267]
!2385 = metadata !{i32 1267, i32 26, metadata !498, null}
!2386 = metadata !{i32 786688, metadata !498, metadata !"id", metadata !70, i32 1269, metadata !427, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [id] [line 1269]
!2387 = metadata !{i32 1269, i32 19, metadata !498, null}
!2388 = metadata !{i32 786688, metadata !498, metadata !"id2", metadata !70, i32 1269, metadata !427, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [id2] [line 1269]
!2389 = metadata !{i32 1269, i32 24, metadata !498, null}
!2390 = metadata !{i32 786688, metadata !498, metadata !"tmp", metadata !70, i32 1269, metadata !427, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmp] [line 1269]
!2391 = metadata !{i32 1269, i32 30, metadata !498, null}
!2392 = metadata !{i32 786688, metadata !498, metadata !"agent", metadata !70, i32 1270, metadata !424, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [agent] [line 1270]
!2393 = metadata !{i32 1270, i32 16, metadata !498, null}
!2394 = metadata !{i32 786688, metadata !498, metadata !"files", metadata !70, i32 1270, metadata !424, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [files] [line 1270]
!2395 = metadata !{i32 1270, i32 23, metadata !498, null}
!2396 = metadata !{i32 786688, metadata !498, metadata !"preferred", metadata !70, i32 1270, metadata !2397, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [preferred] [line 1270]
!2397 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !424} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from idlist]
!2398 = metadata !{i32 1270, i32 31, metadata !498, null}
!2399 = metadata !{i32 786688, metadata !498, metadata !"key", metadata !70, i32 1271, metadata !382, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [key] [line 1271]
!2400 = metadata !{i32 1271, i32 17, metadata !498, null}
!2401 = metadata !{i32 786688, metadata !498, metadata !"agent_fd", metadata !70, i32 1272, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [agent_fd] [line 1272]
!2402 = metadata !{i32 1272, i32 6, metadata !498, null}
!2403 = metadata !{i32 1272, i32 2, metadata !498, null}
!2404 = metadata !{i32 1272, i32 2, metadata !2405, null}
!2405 = metadata !{i32 786443, metadata !2, metadata !498, i32 1272, i32 2, i32 2, i32 372} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2406 = metadata !{i32 1272, i32 2, metadata !2407, null}
!2407 = metadata !{i32 786443, metadata !2, metadata !498, i32 1272, i32 2, i32 1, i32 371} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2408 = metadata !{i32 786688, metadata !498, metadata !"i", metadata !70, i32 1272, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 1272]
!2409 = metadata !{i32 1272, i32 21, metadata !498, null}
!2410 = metadata !{i32 786688, metadata !498, metadata !"r", metadata !70, i32 1272, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [r] [line 1272]
!2411 = metadata !{i32 1272, i32 24, metadata !498, null}
!2412 = metadata !{i32 786688, metadata !498, metadata !"found", metadata !70, i32 1272, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [found] [line 1272]
!2413 = metadata !{i32 1272, i32 27, metadata !498, null}
!2414 = metadata !{i32 786688, metadata !498, metadata !"j", metadata !70, i32 1273, metadata !360, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [j] [line 1273]
!2415 = metadata !{i32 1273, i32 9, metadata !498, null}
!2416 = metadata !{i32 786688, metadata !498, metadata !"idlist", metadata !70, i32 1274, metadata !2417, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [idlist] [line 1274]
!2417 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2418} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ssh_identitylist]
!2418 = metadata !{i32 786451, metadata !2419, null, metadata !"ssh_identitylist", i32 20, i64 192, i64 64, i32 0, i32 0, null, metadata !2420, i32 0, null, null, null} ; [ DW_TAG_structure_type ] [ssh_identitylist] [line 20, size 192, align 64, offset 0] [def] [from ]
!2419 = metadata !{metadata !"./authfd.h", metadata !"/home/sxl463/working/security-programs/openssh-new"}
!2420 = metadata !{metadata !2421, metadata !2422, metadata !2424}
!2421 = metadata !{i32 786445, metadata !2419, metadata !2418, metadata !"nkeys", i32 21, i64 64, i64 64, i64 0, i32 0, metadata !360} ; [ DW_TAG_member ] [nkeys] [line 21, size 64, align 64, offset 0] [from size_t]
!2422 = metadata !{i32 786445, metadata !2419, metadata !2418, metadata !"keys", i32 22, i64 64, i64 64, i64 64, i32 0, metadata !2423} ; [ DW_TAG_member ] [keys] [line 22, size 64, align 64, offset 64] [from ]
!2423 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !382} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!2424 = metadata !{i32 786445, metadata !2419, metadata !2418, metadata !"comments", i32 23, i64 64, i64 64, i64 128, i32 0, metadata !246} ; [ DW_TAG_member ] [comments] [line 23, size 64, align 64, offset 128] [from ]
!2425 = metadata !{i32 1274, i32 27, metadata !498, null}
!2426 = metadata !{i32 1276, i32 2, metadata !498, null}
!2427 = metadata !{i32 1276, i32 2, metadata !2428, null}
!2428 = metadata !{i32 786443, metadata !2, metadata !2429, i32 1276, i32 2, i32 1, i32 373} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2429 = metadata !{i32 786443, metadata !2, metadata !498, i32 1276, i32 2, i32 0, i32 212} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2430 = metadata !{i32 1277, i32 2, metadata !498, null}
!2431 = metadata !{i32 1277, i32 2, metadata !2432, null}
!2432 = metadata !{i32 786443, metadata !2, metadata !2433, i32 1277, i32 2, i32 1, i32 374} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2433 = metadata !{i32 786443, metadata !2, metadata !498, i32 1277, i32 2, i32 0, i32 213} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2434 = metadata !{i32 1278, i32 2, metadata !498, null}
!2435 = metadata !{i32 1279, i32 2, metadata !498, null}
!2436 = metadata !{i32 1279, i32 2, metadata !2437, null}
!2437 = metadata !{i32 786443, metadata !2, metadata !2438, i32 1279, i32 2, i32 1, i32 375} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2438 = metadata !{i32 786443, metadata !2, metadata !498, i32 1279, i32 2, i32 0, i32 214} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2439 = metadata !{i32 1282, i32 7, metadata !2440, null}
!2440 = metadata !{i32 786443, metadata !2, metadata !498, i32 1282, i32 2, i32 0, i32 215} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2441 = metadata !{i32 1282, i32 7, metadata !2442, null}
!2442 = metadata !{i32 786443, metadata !2, metadata !2443, i32 1282, i32 7, i32 4, i32 385} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2443 = metadata !{i32 786443, metadata !2, metadata !2440, i32 1282, i32 7, i32 1, i32 376} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2444 = metadata !{i32 1283, i32 3, metadata !2445, null}
!2445 = metadata !{i32 786443, metadata !2, metadata !2440, i32 1282, i32 51, i32 0, i32 216} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2446 = metadata !{i32 1284, i32 7, metadata !2447, null}
!2447 = metadata !{i32 786443, metadata !2, metadata !2445, i32 1284, i32 7, i32 0, i32 217} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2448 = metadata !{i32 1284, i32 7, metadata !2449, null}
!2449 = metadata !{i32 786443, metadata !2, metadata !2447, i32 1284, i32 7, i32 1, i32 377} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2450 = metadata !{i32 1285, i32 4, metadata !2447, null}
!2451 = metadata !{i32 1286, i32 7, metadata !2452, null}
!2452 = metadata !{i32 786443, metadata !2, metadata !2445, i32 1286, i32 7, i32 0, i32 218} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2453 = metadata !{i32 1286, i32 7, metadata !2454, null}
!2454 = metadata !{i32 786443, metadata !2, metadata !2452, i32 1286, i32 7, i32 1, i32 378} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2455 = metadata !{i32 1286, i32 7, metadata !2456, null}
!2456 = metadata !{i32 786443, metadata !2, metadata !2452, i32 1286, i32 7, i32 2, i32 379} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2457 = metadata !{i32 1287, i32 4, metadata !2452, null}
!2458 = metadata !{i32 1288, i32 3, metadata !2445, null}
!2459 = metadata !{i32 1289, i32 8, metadata !2445, null}
!2460 = metadata !{i32 1290, i32 3, metadata !2445, null}
!2461 = metadata !{i32 1290, i32 3, metadata !2462, null}
!2462 = metadata !{i32 786443, metadata !2, metadata !2445, i32 1290, i32 3, i32 2, i32 381} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2463 = metadata !{i32 1290, i32 3, metadata !2464, null}
!2464 = metadata !{i32 786443, metadata !2, metadata !2445, i32 1290, i32 3, i32 1, i32 380} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2465 = metadata !{i32 1291, i32 3, metadata !2445, null}
!2466 = metadata !{i32 1292, i32 18, metadata !2445, null}
!2467 = metadata !{i32 1293, i32 3, metadata !2445, null}
!2468 = metadata !{i32 1294, i32 3, metadata !2445, null}
!2469 = metadata !{i32 1294, i32 3, metadata !2470, null}
!2470 = metadata !{i32 786443, metadata !2, metadata !2471, i32 1294, i32 3, i32 1, i32 382} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2471 = metadata !{i32 786443, metadata !2, metadata !2445, i32 1294, i32 3, i32 0, i32 219} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2472 = metadata !{i32 1295, i32 2, metadata !2445, null}
!2473 = metadata !{i32 1282, i32 46, metadata !2440, null}
!2474 = metadata !{i32 1282, i32 46, metadata !2475, null}
!2475 = metadata !{i32 786443, metadata !2, metadata !2440, i32 1282, i32 46, i32 3, i32 384} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2476 = metadata !{i32 1282, i32 46, metadata !2477, null}
!2477 = metadata !{i32 786443, metadata !2, metadata !2440, i32 1282, i32 46, i32 2, i32 383} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2478 = metadata !{i32 1297, i32 7, metadata !2479, null}
!2479 = metadata !{i32 786443, metadata !2, metadata !498, i32 1297, i32 2, i32 0, i32 220} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2480 = metadata !{i32 1297, i32 7, metadata !2481, null}
!2481 = metadata !{i32 786443, metadata !2, metadata !2482, i32 1297, i32 7, i32 4, i32 394} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2482 = metadata !{i32 786443, metadata !2, metadata !2479, i32 1297, i32 7, i32 1, i32 386} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2483 = metadata !{i32 1298, i32 3, metadata !2484, null}
!2484 = metadata !{i32 786443, metadata !2, metadata !2479, i32 1297, i32 54, i32 0, i32 221} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2485 = metadata !{i32 1299, i32 8, metadata !2486, null}
!2486 = metadata !{i32 786443, metadata !2, metadata !2484, i32 1299, i32 7, i32 0, i32 222} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2487 = metadata !{i32 1299, i32 8, metadata !2488, null}
!2488 = metadata !{i32 786443, metadata !2, metadata !2486, i32 1299, i32 8, i32 1, i32 387} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2489 = metadata !{i32 1299, i32 8, metadata !2490, null}
!2490 = metadata !{i32 786443, metadata !2, metadata !2486, i32 1299, i32 8, i32 2, i32 388} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2491 = metadata !{i32 1301, i32 4, metadata !2486, null}
!2492 = metadata !{i32 1302, i32 8, metadata !2484, null}
!2493 = metadata !{i32 1303, i32 3, metadata !2484, null}
!2494 = metadata !{i32 1303, i32 3, metadata !2495, null}
!2495 = metadata !{i32 786443, metadata !2, metadata !2484, i32 1303, i32 3, i32 2, i32 390} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2496 = metadata !{i32 1303, i32 3, metadata !2497, null}
!2497 = metadata !{i32 786443, metadata !2, metadata !2484, i32 1303, i32 3, i32 1, i32 389} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2498 = metadata !{i32 1304, i32 3, metadata !2484, null}
!2499 = metadata !{i32 1305, i32 18, metadata !2484, null}
!2500 = metadata !{i32 1306, i32 3, metadata !2484, null}
!2501 = metadata !{i32 1307, i32 3, metadata !2484, null}
!2502 = metadata !{i32 1307, i32 3, metadata !2503, null}
!2503 = metadata !{i32 786443, metadata !2, metadata !2504, i32 1307, i32 3, i32 1, i32 391} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2504 = metadata !{i32 786443, metadata !2, metadata !2484, i32 1307, i32 3, i32 0, i32 223} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2505 = metadata !{i32 1308, i32 2, metadata !2484, null}
!2506 = metadata !{i32 1297, i32 49, metadata !2479, null}
!2507 = metadata !{i32 1297, i32 49, metadata !2508, null}
!2508 = metadata !{i32 786443, metadata !2, metadata !2479, i32 1297, i32 49, i32 3, i32 393} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2509 = metadata !{i32 1297, i32 49, metadata !2510, null}
!2510 = metadata !{i32 786443, metadata !2, metadata !2479, i32 1297, i32 49, i32 2, i32 392} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2511 = metadata !{i32 1310, i32 11, metadata !2512, null}
!2512 = metadata !{i32 786443, metadata !2, metadata !498, i32 1310, i32 6, i32 0, i32 224} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2513 = metadata !{i32 1311, i32 7, metadata !2514, null}
!2514 = metadata !{i32 786443, metadata !2, metadata !2515, i32 1311, i32 7, i32 0, i32 226} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2515 = metadata !{i32 786443, metadata !2, metadata !2512, i32 1310, i32 59, i32 0, i32 225} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2516 = metadata !{i32 1311, i32 7, metadata !2517, null}
!2517 = metadata !{i32 786443, metadata !2, metadata !2514, i32 1311, i32 7, i32 2, i32 396} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2518 = metadata !{i32 1311, i32 7, metadata !2519, null}
!2519 = metadata !{i32 786443, metadata !2, metadata !2514, i32 1311, i32 7, i32 1, i32 395} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2520 = metadata !{i32 1313, i32 18, metadata !2514, null}
!2521 = metadata !{i32 1312, i32 4, metadata !2514, null}
!2522 = metadata !{i32 1314, i32 2, metadata !2515, null}
!2523 = metadata !{i32 1314, i32 18, metadata !2524, null}
!2524 = metadata !{i32 786443, metadata !2, metadata !2512, i32 1314, i32 13, i32 0, i32 227} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2525 = metadata !{i32 1315, i32 7, metadata !2526, null}
!2526 = metadata !{i32 786443, metadata !2, metadata !2527, i32 1315, i32 7, i32 0, i32 229} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2527 = metadata !{i32 786443, metadata !2, metadata !2524, i32 1314, i32 70, i32 0, i32 228} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2528 = metadata !{i32 1315, i32 7, metadata !2529, null}
!2529 = metadata !{i32 786443, metadata !2, metadata !2526, i32 1315, i32 7, i32 2, i32 398} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2530 = metadata !{i32 1315, i32 7, metadata !2531, null}
!2531 = metadata !{i32 786443, metadata !2, metadata !2526, i32 1315, i32 7, i32 1, i32 397} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2532 = metadata !{i32 1317, i32 18, metadata !2526, null}
!2533 = metadata !{i32 1316, i32 4, metadata !2526, null}
!2534 = metadata !{i32 1318, i32 3, metadata !2527, null}
!2535 = metadata !{i32 1319, i32 2, metadata !2527, null}
!2536 = metadata !{i32 1320, i32 8, metadata !2537, null}
!2537 = metadata !{i32 786443, metadata !2, metadata !2538, i32 1320, i32 3, i32 0, i32 231} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2538 = metadata !{i32 786443, metadata !2, metadata !2524, i32 1319, i32 9, i32 0, i32 230} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2539 = metadata !{i32 1320, i32 8, metadata !2540, null}
!2540 = metadata !{i32 786443, metadata !2, metadata !2541, i32 1320, i32 8, i32 2, i32 409} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2541 = metadata !{i32 786443, metadata !2, metadata !2537, i32 1320, i32 8, i32 1, i32 399} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2542 = metadata !{i32 1321, i32 4, metadata !2543, null}
!2543 = metadata !{i32 786443, metadata !2, metadata !2537, i32 1320, i32 39, i32 0, i32 232} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2544 = metadata !{i32 1322, i32 4, metadata !2545, null}
!2545 = metadata !{i32 786443, metadata !2, metadata !2543, i32 1322, i32 4, i32 0, i32 233} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2546 = metadata !{i32 1322, i32 4, metadata !2547, null}
!2547 = metadata !{i32 786443, metadata !2, metadata !2548, i32 1322, i32 4, i32 2, i32 406} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2548 = metadata !{i32 786443, metadata !2, metadata !2545, i32 1322, i32 4, i32 1, i32 400} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2549 = metadata !{i32 1327, i32 9, metadata !2550, null}
!2550 = metadata !{i32 786443, metadata !2, metadata !2551, i32 1327, i32 9, i32 0, i32 235} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2551 = metadata !{i32 786443, metadata !2, metadata !2545, i32 1322, i32 36, i32 0, i32 234} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2552 = metadata !{i32 1328, i32 6, metadata !2553, null}
!2553 = metadata !{i32 786443, metadata !2, metadata !2550, i32 1327, i32 49, i32 0, i32 236} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2554 = metadata !{i32 1328, i32 6, metadata !2555, null}
!2555 = metadata !{i32 786443, metadata !2, metadata !2556, i32 1328, i32 6, i32 1, i32 401} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2556 = metadata !{i32 786443, metadata !2, metadata !2557, i32 1328, i32 6, i32 0, i32 238} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2557 = metadata !{i32 786443, metadata !2, metadata !2553, i32 1328, i32 6, i32 0, i32 237} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2558 = metadata !{i32 1328, i32 6, metadata !2559, null}
!2559 = metadata !{i32 786443, metadata !2, metadata !2556, i32 1328, i32 6, i32 2, i32 402} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2560 = metadata !{i32 1328, i32 6, metadata !2561, null}
!2561 = metadata !{i32 786443, metadata !2, metadata !2556, i32 1328, i32 6, i32 3, i32 403} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2562 = metadata !{i32 1328, i32 6, metadata !2563, null}
!2563 = metadata !{i32 786443, metadata !2, metadata !2557, i32 1328, i32 6, i32 4, i32 404} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2564 = metadata !{i32 1329, i32 6, metadata !2553, null}
!2565 = metadata !{i32 1329, i32 6, metadata !2566, null}
!2566 = metadata !{i32 786443, metadata !2, metadata !2567, i32 1329, i32 6, i32 1, i32 405} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2567 = metadata !{i32 786443, metadata !2, metadata !2553, i32 1329, i32 6, i32 0, i32 239} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2568 = metadata !{i32 1330, i32 6, metadata !2553, null}
!2569 = metadata !{i32 1331, i32 6, metadata !2553, null}
!2570 = metadata !{i32 1332, i32 6, metadata !2553, null}
!2571 = metadata !{i32 1334, i32 4, metadata !2551, null}
!2572 = metadata !{i32 1335, i32 8, metadata !2573, null}
!2573 = metadata !{i32 786443, metadata !2, metadata !2543, i32 1335, i32 8, i32 0, i32 240} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2574 = metadata !{i32 1335, i32 8, metadata !2575, null}
!2575 = metadata !{i32 786443, metadata !2, metadata !2573, i32 1335, i32 8, i32 1, i32 407} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2576 = metadata !{i32 1336, i32 10, metadata !2577, null}
!2577 = metadata !{i32 786443, metadata !2, metadata !2573, i32 1335, i32 44, i32 0, i32 241} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2578 = metadata !{i32 1338, i32 5, metadata !2577, null}
!2579 = metadata !{i32 1339, i32 5, metadata !2577, null}
!2580 = metadata !{i32 1340, i32 5, metadata !2577, null}
!2581 = metadata !{i32 1341, i32 5, metadata !2577, null}
!2582 = metadata !{i32 1342, i32 5, metadata !2577, null}
!2583 = metadata !{i32 1343, i32 5, metadata !2577, null}
!2584 = metadata !{i32 1343, i32 5, metadata !2585, null}
!2585 = metadata !{i32 786443, metadata !2, metadata !2586, i32 1343, i32 5, i32 1, i32 408} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2586 = metadata !{i32 786443, metadata !2, metadata !2577, i32 1343, i32 5, i32 0, i32 242} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2587 = metadata !{i32 1344, i32 4, metadata !2577, null}
!2588 = metadata !{i32 1345, i32 3, metadata !2543, null}
!2589 = metadata !{i32 1320, i32 34, metadata !2537, null}
!2590 = metadata !{i32 1346, i32 3, metadata !2538, null}
!2591 = metadata !{i32 1348, i32 8, metadata !2592, null}
!2592 = metadata !{i32 786443, metadata !2, metadata !2538, i32 1348, i32 3, i32 0, i32 243} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2593 = metadata !{i32 1348, i32 8, metadata !2594, null}
!2594 = metadata !{i32 786443, metadata !2, metadata !2595, i32 1348, i32 8, i32 2, i32 416} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2595 = metadata !{i32 786443, metadata !2, metadata !2592, i32 1348, i32 8, i32 1, i32 410} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2596 = metadata !{i32 1349, i32 4, metadata !2597, null}
!2597 = metadata !{i32 786443, metadata !2, metadata !2592, i32 1348, i32 64, i32 0, i32 244} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2598 = metadata !{i32 1349, i32 4, metadata !2599, null}
!2599 = metadata !{i32 786443, metadata !2, metadata !2600, i32 1349, i32 4, i32 1, i32 411} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2600 = metadata !{i32 786443, metadata !2, metadata !2601, i32 1349, i32 4, i32 0, i32 246} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2601 = metadata !{i32 786443, metadata !2, metadata !2597, i32 1349, i32 4, i32 0, i32 245} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2602 = metadata !{i32 1349, i32 4, metadata !2603, null}
!2603 = metadata !{i32 786443, metadata !2, metadata !2600, i32 1349, i32 4, i32 2, i32 412} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2604 = metadata !{i32 1349, i32 4, metadata !2605, null}
!2605 = metadata !{i32 786443, metadata !2, metadata !2600, i32 1349, i32 4, i32 3, i32 413} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2606 = metadata !{i32 1349, i32 4, metadata !2607, null}
!2607 = metadata !{i32 786443, metadata !2, metadata !2601, i32 1349, i32 4, i32 4, i32 414} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2608 = metadata !{i32 1350, i32 4, metadata !2597, null}
!2609 = metadata !{i32 1350, i32 4, metadata !2610, null}
!2610 = metadata !{i32 786443, metadata !2, metadata !2611, i32 1350, i32 4, i32 1, i32 415} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2611 = metadata !{i32 786443, metadata !2, metadata !2597, i32 1350, i32 4, i32 0, i32 247} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2612 = metadata !{i32 1351, i32 3, metadata !2597, null}
!2613 = metadata !{i32 1348, i32 38, metadata !2592, null}
!2614 = metadata !{i32 1352, i32 3, metadata !2538, null}
!2615 = metadata !{i32 1355, i32 2, metadata !2616, null}
!2616 = metadata !{i32 786443, metadata !2, metadata !498, i32 1355, i32 2, i32 0, i32 248} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2617 = metadata !{i32 1355, i32 2, metadata !2618, null}
!2618 = metadata !{i32 786443, metadata !2, metadata !2619, i32 1355, i32 2, i32 4, i32 434} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2619 = metadata !{i32 786443, metadata !2, metadata !2616, i32 1355, i32 2, i32 1, i32 417} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2620 = metadata !{i32 1355, i32 2, metadata !2621, null}
!2621 = metadata !{i32 786443, metadata !2, metadata !2616, i32 1355, i32 2, i32 2, i32 418} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2622 = metadata !{i32 1355, i32 2, metadata !2623, null}
!2623 = metadata !{i32 786443, metadata !2, metadata !2616, i32 1355, i32 2, i32 3, i32 419} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2624 = metadata !{i32 1356, i32 7, metadata !2625, null}
!2625 = metadata !{i32 786443, metadata !2, metadata !2626, i32 1356, i32 7, i32 0, i32 250} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2626 = metadata !{i32 786443, metadata !2, metadata !2616, i32 1355, i32 44, i32 0, i32 249} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2627 = metadata !{i32 1356, i32 7, metadata !2628, null}
!2628 = metadata !{i32 786443, metadata !2, metadata !2625, i32 1356, i32 7, i32 1, i32 420} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2629 = metadata !{i32 1357, i32 4, metadata !2625, null}
!2630 = metadata !{i32 1358, i32 3, metadata !2626, null}
!2631 = metadata !{i32 1359, i32 3, metadata !2632, null}
!2632 = metadata !{i32 786443, metadata !2, metadata !2626, i32 1359, i32 3, i32 0, i32 251} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2633 = metadata !{i32 1359, i32 3, metadata !2634, null}
!2634 = metadata !{i32 786443, metadata !2, metadata !2635, i32 1359, i32 3, i32 2, i32 428} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2635 = metadata !{i32 786443, metadata !2, metadata !2632, i32 1359, i32 3, i32 1, i32 421} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2636 = metadata !{i32 1360, i32 8, metadata !2637, null}
!2637 = metadata !{i32 786443, metadata !2, metadata !2638, i32 1360, i32 8, i32 0, i32 253} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2638 = metadata !{i32 786443, metadata !2, metadata !2632, i32 1359, i32 36, i32 0, i32 252} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2639 = metadata !{i32 1360, i32 8, metadata !2640, null}
!2640 = metadata !{i32 786443, metadata !2, metadata !2637, i32 1360, i32 8, i32 1, i32 422} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2641 = metadata !{i32 1362, i32 5, metadata !2637, null}
!2642 = metadata !{i32 1363, i32 8, metadata !2643, null}
!2643 = metadata !{i32 786443, metadata !2, metadata !2638, i32 1363, i32 8, i32 0, i32 254} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2644 = metadata !{i32 1364, i32 5, metadata !2645, null}
!2645 = metadata !{i32 786443, metadata !2, metadata !2643, i32 1363, i32 41, i32 0, i32 255} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2646 = metadata !{i32 1364, i32 5, metadata !2647, null}
!2647 = metadata !{i32 786443, metadata !2, metadata !2648, i32 1364, i32 5, i32 1, i32 423} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2648 = metadata !{i32 786443, metadata !2, metadata !2649, i32 1364, i32 5, i32 0, i32 257} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2649 = metadata !{i32 786443, metadata !2, metadata !2645, i32 1364, i32 5, i32 0, i32 256} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2650 = metadata !{i32 1364, i32 5, metadata !2651, null}
!2651 = metadata !{i32 786443, metadata !2, metadata !2648, i32 1364, i32 5, i32 2, i32 424} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2652 = metadata !{i32 1364, i32 5, metadata !2653, null}
!2653 = metadata !{i32 786443, metadata !2, metadata !2648, i32 1364, i32 5, i32 3, i32 425} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2654 = metadata !{i32 1364, i32 5, metadata !2655, null}
!2655 = metadata !{i32 786443, metadata !2, metadata !2649, i32 1364, i32 5, i32 4, i32 426} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2656 = metadata !{i32 1365, i32 5, metadata !2645, null}
!2657 = metadata !{i32 1365, i32 5, metadata !2658, null}
!2658 = metadata !{i32 786443, metadata !2, metadata !2659, i32 1365, i32 5, i32 1, i32 427} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2659 = metadata !{i32 786443, metadata !2, metadata !2645, i32 1365, i32 5, i32 0, i32 258} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2660 = metadata !{i32 1366, i32 5, metadata !2645, null}
!2661 = metadata !{i32 1367, i32 5, metadata !2645, null}
!2662 = metadata !{i32 1369, i32 3, metadata !2638, null}
!2663 = metadata !{i32 1371, i32 7, metadata !2664, null}
!2664 = metadata !{i32 786443, metadata !2, metadata !2626, i32 1371, i32 7, i32 0, i32 259} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2665 = metadata !{i32 1371, i32 7, metadata !2666, null}
!2666 = metadata !{i32 786443, metadata !2, metadata !2664, i32 1371, i32 7, i32 1, i32 429} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2667 = metadata !{i32 1372, i32 4, metadata !2668, null}
!2668 = metadata !{i32 786443, metadata !2, metadata !2664, i32 1371, i32 42, i32 0, i32 260} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2669 = metadata !{i32 1372, i32 4, metadata !2670, null}
!2670 = metadata !{i32 786443, metadata !2, metadata !2671, i32 1372, i32 4, i32 1, i32 430} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2671 = metadata !{i32 786443, metadata !2, metadata !2672, i32 1372, i32 4, i32 0, i32 262} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2672 = metadata !{i32 786443, metadata !2, metadata !2668, i32 1372, i32 4, i32 0, i32 261} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2673 = metadata !{i32 1372, i32 4, metadata !2674, null}
!2674 = metadata !{i32 786443, metadata !2, metadata !2671, i32 1372, i32 4, i32 2, i32 431} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2675 = metadata !{i32 1372, i32 4, metadata !2676, null}
!2676 = metadata !{i32 786443, metadata !2, metadata !2671, i32 1372, i32 4, i32 3, i32 432} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2677 = metadata !{i32 1372, i32 4, metadata !2678, null}
!2678 = metadata !{i32 786443, metadata !2, metadata !2672, i32 1372, i32 4, i32 4, i32 433} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2679 = metadata !{i32 1373, i32 4, metadata !2668, null}
!2680 = metadata !{i32 1374, i32 4, metadata !2668, null}
!2681 = metadata !{i32 1375, i32 3, metadata !2668, null}
!2682 = metadata !{i32 1376, i32 2, metadata !2626, null}
!2683 = metadata !{i32 1378, i32 7, metadata !2684, null}
!2684 = metadata !{i32 786443, metadata !2, metadata !498, i32 1378, i32 2, i32 0, i32 263} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2685 = metadata !{i32 1378, i32 7, metadata !2686, null}
!2686 = metadata !{i32 786443, metadata !2, metadata !2687, i32 1378, i32 7, i32 2, i32 441} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2687 = metadata !{i32 786443, metadata !2, metadata !2684, i32 1378, i32 7, i32 1, i32 435} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2688 = metadata !{i32 1379, i32 3, metadata !2689, null}
!2689 = metadata !{i32 786443, metadata !2, metadata !2684, i32 1378, i32 63, i32 0, i32 264} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2690 = metadata !{i32 1379, i32 3, metadata !2691, null}
!2691 = metadata !{i32 786443, metadata !2, metadata !2692, i32 1379, i32 3, i32 1, i32 436} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2692 = metadata !{i32 786443, metadata !2, metadata !2693, i32 1379, i32 3, i32 0, i32 266} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2693 = metadata !{i32 786443, metadata !2, metadata !2689, i32 1379, i32 3, i32 0, i32 265} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2694 = metadata !{i32 1379, i32 3, metadata !2695, null}
!2695 = metadata !{i32 786443, metadata !2, metadata !2692, i32 1379, i32 3, i32 2, i32 437} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2696 = metadata !{i32 1379, i32 3, metadata !2697, null}
!2697 = metadata !{i32 786443, metadata !2, metadata !2692, i32 1379, i32 3, i32 3, i32 438} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2698 = metadata !{i32 1379, i32 3, metadata !2699, null}
!2699 = metadata !{i32 786443, metadata !2, metadata !2693, i32 1379, i32 3, i32 4, i32 439} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2700 = metadata !{i32 1380, i32 3, metadata !2689, null}
!2701 = metadata !{i32 1380, i32 3, metadata !2702, null}
!2702 = metadata !{i32 786443, metadata !2, metadata !2703, i32 1380, i32 3, i32 1, i32 440} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2703 = metadata !{i32 786443, metadata !2, metadata !2689, i32 1380, i32 3, i32 0, i32 267} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2704 = metadata !{i32 1381, i32 2, metadata !2689, null}
!2705 = metadata !{i32 1378, i32 37, metadata !2684, null}
!2706 = metadata !{i32 1383, i32 2, metadata !2707, null}
!2707 = metadata !{i32 786443, metadata !2, metadata !498, i32 1383, i32 2, i32 0, i32 268} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2708 = metadata !{i32 1383, i32 2, metadata !2709, null}
!2709 = metadata !{i32 786443, metadata !2, metadata !2710, i32 1383, i32 2, i32 4, i32 451} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2710 = metadata !{i32 786443, metadata !2, metadata !2707, i32 1383, i32 2, i32 1, i32 442} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2711 = metadata !{i32 1383, i32 2, metadata !2712, null}
!2712 = metadata !{i32 786443, metadata !2, metadata !2707, i32 1383, i32 2, i32 2, i32 443} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2713 = metadata !{i32 1383, i32 2, metadata !2714, null}
!2714 = metadata !{i32 786443, metadata !2, metadata !2707, i32 1383, i32 2, i32 3, i32 444} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2715 = metadata !{i32 1384, i32 7, metadata !2716, null}
!2716 = metadata !{i32 786443, metadata !2, metadata !2717, i32 1384, i32 7, i32 0, i32 270} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2717 = metadata !{i32 786443, metadata !2, metadata !2707, i32 1383, i32 47, i32 0, i32 269} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2718 = metadata !{i32 1385, i32 26, metadata !2716, null}
!2719 = metadata !{i32 1385, i32 7, metadata !2716, null}
!2720 = metadata !{i32 1389, i32 8, metadata !2721, null}
!2721 = metadata !{i32 786443, metadata !2, metadata !2716, i32 1386, i32 42, i32 0, i32 271} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2722 = metadata !{i32 1387, i32 4, metadata !2721, null}
!2723 = metadata !{i32 1390, i32 4, metadata !2721, null}
!2724 = metadata !{i32 1390, i32 4, metadata !2725, null}
!2725 = metadata !{i32 786443, metadata !2, metadata !2726, i32 1390, i32 4, i32 1, i32 445} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2726 = metadata !{i32 786443, metadata !2, metadata !2727, i32 1390, i32 4, i32 0, i32 273} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2727 = metadata !{i32 786443, metadata !2, metadata !2721, i32 1390, i32 4, i32 0, i32 272} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2728 = metadata !{i32 1390, i32 4, metadata !2729, null}
!2729 = metadata !{i32 786443, metadata !2, metadata !2726, i32 1390, i32 4, i32 2, i32 446} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2730 = metadata !{i32 1390, i32 4, metadata !2731, null}
!2731 = metadata !{i32 786443, metadata !2, metadata !2726, i32 1390, i32 4, i32 3, i32 447} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2732 = metadata !{i32 1390, i32 4, metadata !2733, null}
!2733 = metadata !{i32 786443, metadata !2, metadata !2727, i32 1390, i32 4, i32 4, i32 448} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2734 = metadata !{i32 1391, i32 4, metadata !2721, null}
!2735 = metadata !{i32 1392, i32 4, metadata !2721, null}
!2736 = metadata !{i32 1393, i32 4, metadata !2721, null}
!2737 = metadata !{i32 1394, i32 4, metadata !2721, null}
!2738 = metadata !{i32 1396, i32 3, metadata !2717, null}
!2739 = metadata !{i32 1396, i32 3, metadata !2740, null}
!2740 = metadata !{i32 786443, metadata !2, metadata !2717, i32 1396, i32 3, i32 2, i32 450} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2741 = metadata !{i32 1396, i32 3, metadata !2742, null}
!2742 = metadata !{i32 786443, metadata !2, metadata !2717, i32 1396, i32 3, i32 1, i32 449} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2743 = metadata !{i32 1399, i32 2, metadata !2717, null}
!2744 = metadata !{i32 1400, i32 1, metadata !498, null}
!2745 = metadata !{i32 786689, metadata !474, metadata !"name", metadata !70, i32 16779072, metadata !94, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [name] [line 1856]
!2746 = metadata !{i32 1856, i32 31, metadata !474, null}
!2747 = metadata !{i32 786688, metadata !474, metadata !"method", metadata !70, i32 1858, metadata !469, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [method] [line 1858]
!2748 = metadata !{i32 1858, i32 14, metadata !474, null}
!2749 = metadata !{i32 1858, i32 2, metadata !474, null}
!2750 = metadata !{i32 1859, i32 6, metadata !2751, null}
!2751 = metadata !{i32 786443, metadata !2, metadata !474, i32 1859, i32 6, i32 0, i32 143} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2752 = metadata !{i32 1860, i32 8, metadata !2753, null}
!2753 = metadata !{i32 786443, metadata !2, metadata !2751, i32 1860, i32 3, i32 0, i32 144} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2754 = metadata !{i32 1860, i32 8, metadata !2755, null}
!2755 = metadata !{i32 786443, metadata !2, metadata !2756, i32 1860, i32 8, i32 2, i32 454} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2756 = metadata !{i32 786443, metadata !2, metadata !2753, i32 1860, i32 8, i32 1, i32 452} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2757 = metadata !{i32 1861, i32 8, metadata !2758, null}
!2758 = metadata !{i32 786443, metadata !2, metadata !2753, i32 1861, i32 8, i32 0, i32 145} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2759 = metadata !{i32 1862, i32 5, metadata !2758, null}
!2760 = metadata !{i32 1861, i32 38, metadata !2761, null}
!2761 = metadata !{i32 786443, metadata !2, metadata !2758, i32 1861, i32 38, i32 1, i32 453} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2762 = metadata !{i32 1860, i32 52, metadata !2753, null}
!2763 = metadata !{i32 1862, i32 12, metadata !2753, null}
!2764 = metadata !{i32 1863, i32 2, metadata !474, null}
!2765 = metadata !{i32 1863, i32 2, metadata !2766, null}
!2766 = metadata !{i32 786443, metadata !2, metadata !474, i32 1863, i32 2, i32 1, i32 455} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2767 = metadata !{i32 1863, i32 2, metadata !2768, null}
!2768 = metadata !{i32 786443, metadata !2, metadata !474, i32 1863, i32 2, i32 2, i32 456} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2769 = metadata !{i32 1863, i32 2, metadata !2770, null}
!2770 = metadata !{i32 786443, metadata !2, metadata !2771, i32 1863, i32 2, i32 4, i32 458} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2771 = metadata !{i32 786443, metadata !2, metadata !474, i32 1863, i32 2, i32 3, i32 457} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2772 = metadata !{i32 1864, i32 2, metadata !474, null}
!2773 = metadata !{i32 1865, i32 1, metadata !474, null}
!2774 = metadata !{i32 786689, metadata !497, metadata !"authctxt", metadata !70, i32 16778619, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1403]
!2775 = metadata !{i32 1403, i32 26, metadata !497, null}
!2776 = metadata !{i32 786688, metadata !497, metadata !"id", metadata !70, i32 1405, metadata !485, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [id] [line 1405]
!2777 = metadata !{i32 1405, i32 12, metadata !497, null}
!2778 = metadata !{i32 1407, i32 6, metadata !2779, null}
!2779 = metadata !{i32 786443, metadata !2, metadata !497, i32 1407, i32 6, i32 0, i32 207} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2780 = metadata !{i32 1407, i32 6, metadata !2781, null}
!2781 = metadata !{i32 786443, metadata !2, metadata !2779, i32 1407, i32 6, i32 2, i32 460} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2782 = metadata !{i32 1407, i32 6, metadata !2783, null}
!2783 = metadata !{i32 786443, metadata !2, metadata !2779, i32 1407, i32 6, i32 1, i32 459} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2784 = metadata !{i32 1408, i32 3, metadata !2779, null}
!2785 = metadata !{i32 1409, i32 7, metadata !2786, null}
!2786 = metadata !{i32 786443, metadata !2, metadata !497, i32 1409, i32 2, i32 0, i32 208} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2787 = metadata !{i32 1409, i32 7, metadata !2788, null}
!2788 = metadata !{i32 786443, metadata !2, metadata !2786, i32 1409, i32 7, i32 1, i32 461} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2789 = metadata !{i32 1411, i32 3, metadata !2790, null}
!2790 = metadata !{i32 786443, metadata !2, metadata !2786, i32 1410, i32 41, i32 0, i32 209} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2791 = metadata !{i32 1411, i32 3, metadata !2792, null}
!2792 = metadata !{i32 786443, metadata !2, metadata !2793, i32 1411, i32 3, i32 1, i32 462} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2793 = metadata !{i32 786443, metadata !2, metadata !2794, i32 1411, i32 3, i32 0, i32 211} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2794 = metadata !{i32 786443, metadata !2, metadata !2790, i32 1411, i32 3, i32 0, i32 210} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2795 = metadata !{i32 1411, i32 3, metadata !2796, null}
!2796 = metadata !{i32 786443, metadata !2, metadata !2793, i32 1411, i32 3, i32 2, i32 463} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2797 = metadata !{i32 1411, i32 3, metadata !2798, null}
!2798 = metadata !{i32 786443, metadata !2, metadata !2793, i32 1411, i32 3, i32 3, i32 464} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2799 = metadata !{i32 1411, i32 3, metadata !2800, null}
!2800 = metadata !{i32 786443, metadata !2, metadata !2794, i32 1411, i32 3, i32 4, i32 465} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2801 = metadata !{i32 1412, i32 3, metadata !2790, null}
!2802 = metadata !{i32 1413, i32 3, metadata !2790, null}
!2803 = metadata !{i32 1414, i32 3, metadata !2790, null}
!2804 = metadata !{i32 1415, i32 2, metadata !2790, null}
!2805 = metadata !{i32 1410, i32 6, metadata !2786, null}
!2806 = metadata !{i32 1416, i32 1, metadata !497, null}
!2807 = metadata !{i32 786689, metadata !496, metadata !"authctxt", metadata !70, i32 16778635, metadata !393, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authctxt] [line 1419]
!2808 = metadata !{i32 1419, i32 24, metadata !496, null}
!2809 = metadata !{i32 786688, metadata !496, metadata !"id", metadata !70, i32 1421, metadata !485, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [id] [line 1421]
!2810 = metadata !{i32 1421, i32 12, metadata !496, null}
!2811 = metadata !{i32 1423, i32 2, metadata !2812, null}
!2812 = metadata !{i32 786443, metadata !2, metadata !496, i32 1423, i32 2, i32 0, i32 206} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2813 = metadata !{i32 1423, i32 2, metadata !2814, null}
!2814 = metadata !{i32 786443, metadata !2, metadata !2815, i32 1423, i32 2, i32 2, i32 476} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2815 = metadata !{i32 786443, metadata !2, metadata !2812, i32 1423, i32 2, i32 1, i32 475} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2816 = metadata !{i32 1424, i32 3, metadata !2812, null}
!2817 = metadata !{i32 1425, i32 1, metadata !496, null}
!2818 = metadata !{i32 786689, metadata !471, metadata !"authlist", metadata !70, i32 16779094, metadata !73, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [authlist] [line 1878]
!2819 = metadata !{i32 1878, i32 22, metadata !471, null}
!2820 = metadata !{i32 786688, metadata !471, metadata !"name", metadata !70, i32 1880, metadata !73, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [name] [line 1880]
!2821 = metadata !{i32 1880, i32 8, metadata !471, null}
!2822 = metadata !{i32 1880, i32 2, metadata !471, null}
!2823 = metadata !{i32 786688, metadata !471, metadata !"next", metadata !70, i32 1881, metadata !368, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [next] [line 1881]
!2824 = metadata !{i32 1881, i32 8, metadata !471, null}
!2825 = metadata !{i32 1884, i32 6, metadata !2826, null}
!2826 = metadata !{i32 786443, metadata !2, metadata !471, i32 1884, i32 6, i32 0, i32 133} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2827 = metadata !{i32 1884, i32 26, metadata !2828, null}
!2828 = metadata !{i32 786443, metadata !2, metadata !2826, i32 1884, i32 26, i32 1, i32 472} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2829 = metadata !{i32 1885, i32 3, metadata !2826, null}
!2830 = metadata !{i32 1887, i32 6, metadata !2831, null}
!2831 = metadata !{i32 786443, metadata !2, metadata !471, i32 1887, i32 6, i32 0, i32 134} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2832 = metadata !{i32 1887, i32 27, metadata !2833, null}
!2833 = metadata !{i32 786443, metadata !2, metadata !2831, i32 1887, i32 27, i32 1, i32 473} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2834 = metadata !{i32 1888, i32 3, metadata !2835, null}
!2835 = metadata !{i32 786443, metadata !2, metadata !2831, i32 1887, i32 61, i32 0, i32 135} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2836 = metadata !{i32 1889, i32 3, metadata !2835, null}
!2837 = metadata !{i32 1890, i32 15, metadata !2835, null}
!2838 = metadata !{i32 1891, i32 3, metadata !2835, null}
!2839 = metadata !{i32 1892, i32 3, metadata !2835, null}
!2840 = metadata !{i32 1893, i32 3, metadata !2835, null}
!2841 = metadata !{i32 1894, i32 2, metadata !2835, null}
!2842 = metadata !{i32 1894, i32 13, metadata !2843, null}
!2843 = metadata !{i32 786443, metadata !2, metadata !2831, i32 1894, i32 13, i32 0, i32 136} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2844 = metadata !{i32 1894, i32 32, metadata !2845, null}
!2845 = metadata !{i32 786443, metadata !2, metadata !2843, i32 1894, i32 32, i32 1, i32 474} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2846 = metadata !{i32 1895, i32 3, metadata !2843, null}
!2847 = metadata !{i32 1897, i32 2, metadata !2848, null}
!2848 = metadata !{i32 786443, metadata !2, metadata !471, i32 1897, i32 2, i32 0, i32 137} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2849 = metadata !{i32 1898, i32 15, metadata !2850, null}
!2850 = metadata !{i32 786443, metadata !2, metadata !2851, i32 1898, i32 7, i32 0, i32 139} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2851 = metadata !{i32 786443, metadata !2, metadata !2848, i32 1897, i32 11, i32 0, i32 138} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2852 = metadata !{i32 1899, i32 4, metadata !2853, null}
!2853 = metadata !{i32 786443, metadata !2, metadata !2850, i32 1898, i32 65, i32 0, i32 140} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2854 = metadata !{i32 1900, i32 4, metadata !2853, null}
!2855 = metadata !{i32 1901, i32 4, metadata !2853, null}
!2856 = metadata !{i32 1903, i32 3, metadata !2851, null}
!2857 = metadata !{i32 1904, i32 3, metadata !2851, null}
!2858 = metadata !{i32 1905, i32 3, metadata !2851, null}
!2859 = metadata !{i32 1906, i32 18, metadata !2860, null}
!2860 = metadata !{i32 786443, metadata !2, metadata !2851, i32 1906, i32 7, i32 0, i32 141} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2861 = metadata !{i32 1907, i32 7, metadata !2860, null}
!2862 = metadata !{i32 1908, i32 4, metadata !2863, null}
!2863 = metadata !{i32 786443, metadata !2, metadata !2860, i32 1907, i32 39, i32 0, i32 142} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2864 = metadata !{i32 1909, i32 4, metadata !2863, null}
!2865 = metadata !{i32 1910, i32 4, metadata !2863, null}
!2866 = metadata !{i32 1911, i32 4, metadata !2863, null}
!2867 = metadata !{i32 1913, i32 3, metadata !2851, null}
!2868 = metadata !{i32 1914, i32 2, metadata !2851, null}
!2869 = metadata !{i32 1915, i32 1, metadata !471, null}
!2870 = metadata !{i32 786689, metadata !466, metadata !"method", metadata !70, i32 16779058, metadata !469, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [method] [line 1842]
!2871 = metadata !{i32 1842, i32 35, metadata !466, null}
!2872 = metadata !{i32 1844, i32 6, metadata !2873, null}
!2873 = metadata !{i32 786443, metadata !2, metadata !466, i32 1844, i32 6, i32 0, i32 130} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2874 = metadata !{i32 1845, i32 3, metadata !2873, null}
!2875 = metadata !{i32 1847, i32 7, metadata !2876, null}
!2876 = metadata !{i32 786443, metadata !2, metadata !466, i32 1847, i32 7, i32 0, i32 131} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2877 = metadata !{i32 1847, i32 7, metadata !2878, null}
!2878 = metadata !{i32 786443, metadata !2, metadata !2876, i32 1847, i32 7, i32 1, i32 541} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2879 = metadata !{i32 1848, i32 3, metadata !2876, null}
!2880 = metadata !{i32 1850, i32 7, metadata !2881, null}
!2881 = metadata !{i32 786443, metadata !2, metadata !466, i32 1850, i32 7, i32 0, i32 132} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2882 = metadata !{i32 1850, i32 7, metadata !2883, null}
!2883 = metadata !{i32 786443, metadata !2, metadata !2881, i32 1850, i32 7, i32 1, i32 542} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2884 = metadata !{i32 1851, i32 3, metadata !2881, null}
!2885 = metadata !{i32 1852, i32 2, metadata !466, null}
!2886 = metadata !{i32 1853, i32 1, metadata !466, null}
!2887 = metadata !{i32 786689, metadata !490, metadata !"id", metadata !70, i32 16778215, metadata !427, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [id] [line 999]
!2888 = metadata !{i32 999, i32 39, metadata !490, null}
!2889 = metadata !{i32 786688, metadata !490, metadata !"ssh", metadata !70, i32 1001, metadata !506, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ssh] [line 1001]
!2890 = metadata !{i32 1001, i32 14, metadata !490, null}
!2891 = metadata !{i32 1001, i32 2, metadata !490, null}
!2892 = metadata !{i32 1003, i32 6, metadata !2893, null}
!2893 = metadata !{i32 786443, metadata !2, metadata !490, i32 1003, i32 6, i32 0, i32 200} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2894 = metadata !{i32 1004, i32 3, metadata !2895, null}
!2895 = metadata !{i32 786443, metadata !2, metadata !2893, i32 1003, i32 32, i32 0, i32 201} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2896 = metadata !{i32 1006, i32 4, metadata !2897, null}
!2897 = metadata !{i32 786443, metadata !2, metadata !2895, i32 1004, i32 31, i32 0, i32 202} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2898 = metadata !{i32 1008, i32 4, metadata !2897, null}
!2899 = metadata !{i32 1010, i32 2, metadata !2895, null}
!2900 = metadata !{i32 1011, i32 9, metadata !490, null}
!2901 = metadata !{i32 1012, i32 1, metadata !490, null}
!2902 = metadata !{i32 786689, metadata !500, metadata !"id", metadata !70, i32 16778231, metadata !427, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [id] [line 1015]
!2903 = metadata !{i32 1015, i32 32, metadata !500, null}
!2904 = metadata !{i32 786689, metadata !500, metadata !"sigp", metadata !70, i32 33555447, metadata !480, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [sigp] [line 1015]
!2905 = metadata !{i32 1015, i32 45, metadata !500, null}
!2906 = metadata !{i32 786689, metadata !500, metadata !"lenp", metadata !70, i32 50332663, metadata !481, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [lenp] [line 1015]
!2907 = metadata !{i32 1015, i32 59, metadata !500, null}
!2908 = metadata !{i32 786689, metadata !500, metadata !"data", metadata !70, i32 67109880, metadata !357, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [data] [line 1016]
!2909 = metadata !{i32 1016, i32 19, metadata !500, null}
!2910 = metadata !{i32 786689, metadata !500, metadata !"datalen", metadata !70, i32 83887096, metadata !360, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [datalen] [line 1016]
!2911 = metadata !{i32 1016, i32 32, metadata !500, null}
!2912 = metadata !{i32 786689, metadata !500, metadata !"compat", metadata !70, i32 100664312, metadata !368, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [compat] [line 1016]
!2913 = metadata !{i32 1016, i32 47, metadata !500, null}
!2914 = metadata !{i32 786688, metadata !500, metadata !"prv", metadata !70, i32 1018, metadata !103, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [prv] [line 1018]
!2915 = metadata !{i32 1018, i32 7, metadata !500, null}
!2916 = metadata !{i32 786688, metadata !500, metadata !"ret", metadata !70, i32 1019, metadata !109, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [ret] [line 1019]
!2917 = metadata !{i32 1019, i32 6, metadata !500, null}
!2918 = metadata !{i32 786688, metadata !500, metadata !"alg", metadata !70, i32 1020, metadata !94, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [alg] [line 1020]
!2919 = metadata !{i32 1020, i32 14, metadata !500, null}
!2920 = metadata !{i32 1022, i32 8, metadata !500, null}
!2921 = metadata !{i32 1025, i32 6, metadata !2922, null}
!2922 = metadata !{i32 786443, metadata !2, metadata !500, i32 1025, i32 6, i32 0, i32 299} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2923 = metadata !{i32 1025, i32 6, metadata !2924, null}
!2924 = metadata !{i32 786443, metadata !2, metadata !2922, i32 1025, i32 6, i32 2, i32 544} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2925 = metadata !{i32 1025, i32 6, metadata !2926, null}
!2926 = metadata !{i32 786443, metadata !2, metadata !2922, i32 1025, i32 6, i32 1, i32 543} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2927 = metadata !{i32 1026, i32 10, metadata !2922, null}
!2928 = metadata !{i32 1033, i32 6, metadata !2929, null}
!2929 = metadata !{i32 786443, metadata !2, metadata !500, i32 1033, i32 6, i32 0, i32 300} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2930 = metadata !{i32 1033, i32 6, metadata !2931, null}
!2931 = metadata !{i32 786443, metadata !2, metadata !2929, i32 1033, i32 6, i32 1, i32 545} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2932 = metadata !{i32 1034, i32 11, metadata !2929, null}
!2933 = metadata !{i32 1037, i32 13, metadata !2934, null}
!2934 = metadata !{i32 786443, metadata !2, metadata !500, i32 1037, i32 6, i32 0, i32 301} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2935 = metadata !{i32 1038, i32 3, metadata !2934, null}
!2936 = metadata !{i32 1038, i32 3, metadata !2937, null}
!2937 = metadata !{i32 786443, metadata !2, metadata !2934, i32 1038, i32 3, i32 2, i32 547} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2938 = metadata !{i32 1038, i32 3, metadata !2939, null}
!2939 = metadata !{i32 786443, metadata !2, metadata !2934, i32 1038, i32 3, i32 1, i32 546} ; [ DW_TAG_lexical_block ] [/home/sxl463/working/security-programs/openssh-new/sshconnect2.c]
!2940 = metadata !{i32 1039, i32 8, metadata !500, null}
!2941 = metadata !{i32 1040, i32 2, metadata !500, null}
!2942 = metadata !{i32 1041, i32 2, metadata !500, null}
!2943 = metadata !{i32 1042, i32 1, metadata !500, null}
